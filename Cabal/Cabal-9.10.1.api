
module Distribution.Backpack where
  type DefUnitId :: *
  newtype DefUnitId = Distribution.Types.UnitId.DefUnitId {unDefUnitId :: Distribution.Types.UnitId.UnitId}
  type OpenModule :: *
  data OpenModule = OpenModule OpenUnitId Distribution.ModuleName.ModuleName | OpenModuleVar Distribution.ModuleName.ModuleName
  type OpenModuleSubst :: *
  type OpenModuleSubst = Data.Map.Internal.Map Distribution.ModuleName.ModuleName OpenModule
  type OpenUnitId :: *
  data OpenUnitId = IndefFullUnitId Distribution.Types.ComponentId.ComponentId OpenModuleSubst | DefiniteUnitId DefUnitId
  abstractUnitId :: OpenUnitId -> Distribution.Types.UnitId.UnitId
  dispOpenModuleSubst :: OpenModuleSubst -> Text.PrettyPrint.HughesPJ.Doc
  dispOpenModuleSubstEntry :: (Distribution.ModuleName.ModuleName, OpenModule) -> Text.PrettyPrint.HughesPJ.Doc
  hashModuleSubst :: Data.Map.Internal.Map Distribution.ModuleName.ModuleName Distribution.Types.Module.Module -> GHC.Internal.Maybe.Maybe GHC.Internal.Base.String
  mkDefUnitId :: Distribution.Types.ComponentId.ComponentId -> Data.Map.Internal.Map Distribution.ModuleName.ModuleName Distribution.Types.Module.Module -> DefUnitId
  mkOpenUnitId :: Distribution.Types.UnitId.UnitId -> Distribution.Types.ComponentId.ComponentId -> OpenModuleSubst -> OpenUnitId
  openModuleFreeHoles :: OpenModule -> Data.Set.Internal.Set Distribution.ModuleName.ModuleName
  openModuleSubstFreeHoles :: OpenModuleSubst -> Data.Set.Internal.Set Distribution.ModuleName.ModuleName
  openUnitIdFreeHoles :: OpenUnitId -> Data.Set.Internal.Set Distribution.ModuleName.ModuleName
  parsecOpenModuleSubst :: forall (m :: * -> *). Distribution.Parsec.CabalParsing m => m OpenModuleSubst
  parsecOpenModuleSubstEntry :: forall (m :: * -> *). Distribution.Parsec.CabalParsing m => m (Distribution.ModuleName.ModuleName, OpenModule)

module Distribution.Backpack.ComponentsGraph where
  type ComponentsGraph :: *
  type ComponentsGraph = Distribution.Compat.Graph.Graph (Distribution.Compat.Graph.Node Distribution.Types.ComponentName.ComponentName Distribution.Types.Component.Component)
  type ComponentsWithDeps :: *
  type ComponentsWithDeps = [(Distribution.Types.Component.Component, [Distribution.Types.ComponentName.ComponentName])]
  componentCycleMsg :: Distribution.Types.PackageId.PackageIdentifier -> [Distribution.Types.ComponentName.ComponentName] -> Text.PrettyPrint.HughesPJ.Doc
  componentsGraphToList :: ComponentsGraph -> ComponentsWithDeps
  dispComponentsWithDeps :: ComponentsWithDeps -> Text.PrettyPrint.HughesPJ.Doc
  mkComponentsGraph :: Distribution.Types.ComponentRequestedSpec.ComponentRequestedSpec -> Distribution.Types.PackageDescription.PackageDescription -> GHC.Internal.Data.Either.Either [Distribution.Types.ComponentName.ComponentName] ComponentsGraph

module Distribution.Backpack.Configure where
  configureComponentLocalBuildInfos ::
    Distribution.Verbosity.Verbosity
    -> GHC.Types.Bool
    -> Distribution.Types.ComponentRequestedSpec.ComponentRequestedSpec
    -> GHC.Types.Bool
    -> Distribution.Simple.Flag.Flag GHC.Internal.Base.String
    -> Distribution.Simple.Flag.Flag Distribution.Types.ComponentId.ComponentId
    -> Distribution.Types.PackageDescription.PackageDescription
    -> ([Cabal-3.15.0.0:Distribution.Backpack.PreExistingComponent.PreExistingComponent], [Cabal-3.15.0.0:Distribution.Backpack.PreExistingComponent.ConfiguredPromisedComponent])
    -> Distribution.Types.Flag.FlagAssignment
    -> [(Distribution.ModuleName.ModuleName, Distribution.Types.Module.Module)]
    -> Distribution.Simple.PackageIndex.InstalledPackageIndex
    -> Distribution.Simple.Compiler.Compiler
    -> Distribution.Utils.LogProgress.LogProgress ([Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo], Distribution.Simple.PackageIndex.InstalledPackageIndex)

module Distribution.Backpack.ConfiguredComponent where
  type ConfiguredComponent :: *
  data ConfiguredComponent = ConfiguredComponent {cc_ann_id :: Distribution.Types.AnnotatedId.AnnotatedId Distribution.Types.ComponentId.ComponentId, cc_component :: Distribution.Types.Component.Component, cc_public :: GHC.Types.Bool, cc_exe_deps :: [Distribution.Types.AnnotatedId.AnnotatedId Distribution.Types.ComponentId.ComponentId], cc_includes :: [Distribution.Types.ComponentInclude.ComponentInclude Distribution.Types.ComponentId.ComponentId Distribution.Types.IncludeRenaming.IncludeRenaming]}
  type ConfiguredComponentMap :: *
  type ConfiguredComponentMap = Data.Map.Internal.Map Distribution.Types.PackageName.PackageName (Data.Map.Internal.Map Distribution.Types.ComponentName.ComponentName (Distribution.Types.AnnotatedId.AnnotatedId Distribution.Types.ComponentId.ComponentId))
  cc_cid :: ConfiguredComponent -> Distribution.Types.ComponentId.ComponentId
  cc_name :: ConfiguredComponent -> Distribution.Types.ComponentName.ComponentName
  cc_pkgid :: ConfiguredComponent -> Distribution.Types.PackageId.PackageId
  dispConfiguredComponent :: ConfiguredComponent -> Text.PrettyPrint.HughesPJ.Doc
  extendConfiguredComponentMap :: ConfiguredComponent -> ConfiguredComponentMap -> ConfiguredComponentMap
  newPackageDepsBehaviour :: Distribution.Types.PackageDescription.PackageDescription -> GHC.Types.Bool
  toConfiguredComponent :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.ComponentId.ComponentId -> ConfiguredComponentMap -> ConfiguredComponentMap -> Distribution.Types.Component.Component -> Distribution.Utils.LogProgress.LogProgress ConfiguredComponent
  toConfiguredComponents :: GHC.Types.Bool -> Distribution.Types.Flag.FlagAssignment -> GHC.Types.Bool -> Distribution.Simple.Flag.Flag GHC.Internal.Base.String -> Distribution.Simple.Flag.Flag Distribution.Types.ComponentId.ComponentId -> Distribution.Types.PackageDescription.PackageDescription -> ConfiguredComponentMap -> [Distribution.Types.Component.Component] -> Distribution.Utils.LogProgress.LogProgress [ConfiguredComponent]

module Distribution.Backpack.DescribeUnitId where
  setupMessage' :: forall a. Distribution.Pretty.Pretty a => Distribution.Verbosity.Verbosity -> GHC.Internal.Base.String -> Distribution.Types.PackageId.PackageIdentifier -> Distribution.Types.ComponentName.ComponentName -> GHC.Internal.Maybe.Maybe [(Distribution.ModuleName.ModuleName, a)] -> GHC.Types.IO ()

module Distribution.Backpack.FullUnitId where
  type FullDb :: *
  type FullDb = Distribution.Types.UnitId.DefUnitId -> FullUnitId
  type FullUnitId :: *
  data FullUnitId = FullUnitId Distribution.Types.ComponentId.ComponentId Distribution.Backpack.OpenModuleSubst
  expandOpenUnitId :: FullDb -> Distribution.Backpack.OpenUnitId -> FullUnitId
  expandUnitId :: FullDb -> Distribution.Types.UnitId.DefUnitId -> FullUnitId

module Distribution.Backpack.LinkedComponent where
  type LinkedComponent :: *
  data LinkedComponent
    = LinkedComponent {lc_ann_id :: Distribution.Types.AnnotatedId.AnnotatedId Distribution.Types.ComponentId.ComponentId, lc_component :: Distribution.Types.Component.Component, lc_exe_deps :: [Distribution.Types.AnnotatedId.AnnotatedId Distribution.Backpack.OpenUnitId], lc_public :: GHC.Types.Bool, lc_includes :: [Distribution.Types.ComponentInclude.ComponentInclude Distribution.Backpack.OpenUnitId Distribution.Types.ModuleRenaming.ModuleRenaming], lc_sig_includes :: [Distribution.Types.ComponentInclude.ComponentInclude Distribution.Backpack.OpenUnitId Distribution.Types.ModuleRenaming.ModuleRenaming], lc_shape :: Distribution.Backpack.ModuleShape.ModuleShape}
  type LinkedComponentMap :: *
  type LinkedComponentMap = Data.Map.Internal.Map Distribution.Types.ComponentId.ComponentId (Distribution.Backpack.OpenUnitId, Distribution.Backpack.ModuleShape.ModuleShape)
  dispLinkedComponent :: LinkedComponent -> Text.PrettyPrint.HughesPJ.Doc
  extendLinkedComponentMap :: LinkedComponent -> LinkedComponentMap -> LinkedComponentMap
  lc_cid :: LinkedComponent -> Distribution.Types.ComponentId.ComponentId
  lc_insts :: LinkedComponent -> [(Distribution.ModuleName.ModuleName, Distribution.Backpack.OpenModule)]
  lc_pkgid :: LinkedComponent -> Distribution.Types.PackageId.PackageId
  lc_uid :: LinkedComponent -> Distribution.Backpack.OpenUnitId
  toLinkedComponent :: Distribution.Verbosity.Verbosity -> GHC.Types.Bool -> Distribution.Backpack.FullUnitId.FullDb -> Distribution.Types.PackageId.PackageId -> LinkedComponentMap -> Distribution.Backpack.ConfiguredComponent.ConfiguredComponent -> Distribution.Utils.LogProgress.LogProgress LinkedComponent
  toLinkedComponents :: Distribution.Verbosity.Verbosity -> GHC.Types.Bool -> Distribution.Backpack.FullUnitId.FullDb -> Distribution.Types.PackageId.PackageId -> LinkedComponentMap -> [Distribution.Backpack.ConfiguredComponent.ConfiguredComponent] -> Distribution.Utils.LogProgress.LogProgress [LinkedComponent]

module Distribution.Backpack.ModSubst where
  type ModSubst :: * -> Constraint
  class ModSubst a where
    modSubst :: Distribution.Backpack.OpenModuleSubst -> a -> a
    {-# MINIMAL modSubst #-}

module Distribution.Backpack.ModuleShape where
  type ModuleShape :: *
  data ModuleShape = ModuleShape {modShapeProvides :: Distribution.Backpack.OpenModuleSubst, modShapeRequires :: Data.Set.Internal.Set Distribution.ModuleName.ModuleName}
  emptyModuleShape :: ModuleShape
  shapeInstalledPackage :: Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -> ModuleShape

module Distribution.Backpack.PreModuleShape where
  type PreModuleShape :: *
  data PreModuleShape = PreModuleShape {preModShapeProvides :: Data.Set.Internal.Set Distribution.ModuleName.ModuleName, preModShapeRequires :: Data.Set.Internal.Set Distribution.ModuleName.ModuleName}
  mixLinkPreModuleShape :: [PreModuleShape] -> PreModuleShape
  renamePreModuleShape :: PreModuleShape -> Distribution.Types.IncludeRenaming.IncludeRenaming -> PreModuleShape
  toPreModuleShape :: Distribution.Backpack.ModuleShape.ModuleShape -> PreModuleShape

module Distribution.CabalSpecVersion where
  type CabalSpecVersion :: *
  data CabalSpecVersion = CabalSpecV1_0 | CabalSpecV1_2 | CabalSpecV1_4 | CabalSpecV1_6 | CabalSpecV1_8 | CabalSpecV1_10 | CabalSpecV1_12 | CabalSpecV1_18 | CabalSpecV1_20 | CabalSpecV1_22 | CabalSpecV1_24 | CabalSpecV2_0 | CabalSpecV2_2 | CabalSpecV2_4 | CabalSpecV3_0 | CabalSpecV3_4 | CabalSpecV3_6 | CabalSpecV3_8 | CabalSpecV3_12 | CabalSpecV3_14
  type HasCommonStanzas :: *
  data HasCommonStanzas = HasCommonStanzas | NoCommonStanzas
  type HasElif :: *
  data HasElif = HasElif | NoElif
  type HasGlobstar :: *
  data HasGlobstar = HasGlobstar | NoGlobstar
  cabalSpecFromVersionDigits :: [GHC.Types.Int] -> GHC.Internal.Maybe.Maybe CabalSpecVersion
  cabalSpecLatest :: CabalSpecVersion
  cabalSpecMinimumLibraryVersion :: CabalSpecVersion -> [GHC.Types.Int]
  cabalSpecToVersionDigits :: CabalSpecVersion -> [GHC.Types.Int]
  showCabalSpecVersion :: CabalSpecVersion -> GHC.Internal.Base.String
  specHasCommonStanzas :: CabalSpecVersion -> HasCommonStanzas
  specHasElif :: CabalSpecVersion -> HasElif

module Distribution.Compat.Binary where
  type Binary :: * -> Constraint
  class Binary t where
    put :: t -> Put
    default put :: (GHC.Internal.Generics.Generic t, GBinaryPut (GHC.Internal.Generics.Rep t)) => t -> Put
    get :: Get t
    default get :: (GHC.Internal.Generics.Generic t, GBinaryGet (GHC.Internal.Generics.Rep t)) => Get t
    putList :: [t] -> Put
    {-# MINIMAL #-}
  type GBinaryGet :: forall {k}. (k -> *) -> Constraint
  class GBinaryGet f where
    gget :: forall (t :: k). Get (f t)
    {-# MINIMAL gget #-}
  type GBinaryPut :: forall {k}. (k -> *) -> Constraint
  class GBinaryPut f where
    gput :: forall (t :: k). f t -> Put
    {-# MINIMAL gput #-}
  type Get :: * -> *
  newtype Get a = ...
  type Put :: *
  type Put = Data.Binary.Put.PutM ()
  type Word :: *
  data Word = ...
  type Word16 :: *
  data Word16 = ...
  type Word32 :: *
  data Word32 = ...
  type Word64 :: *
  data Word64 = ...
  type Word8 :: *
  data Word8 = ...
  bitReverse16 :: Word16 -> Word16
  bitReverse32 :: Word32 -> Word32
  bitReverse64 :: Word64 -> Word64
  bitReverse8 :: Word8 -> Word8
  byteSwap16 :: Word16 -> Word16
  byteSwap32 :: Word32 -> Word32
  byteSwap64 :: Word64 -> Word64
  decode :: forall a. Binary a => Data.ByteString.Lazy.Internal.ByteString -> a
  decodeFile :: forall a. Binary a => GHC.Internal.IO.FilePath -> GHC.Types.IO a
  decodeFileOrFail :: forall a. Binary a => GHC.Internal.IO.FilePath -> GHC.Types.IO (GHC.Internal.Data.Either.Either (Data.Binary.Get.ByteOffset, GHC.Internal.Base.String) a)
  decodeFileOrFail' :: forall a. Binary a => GHC.Internal.IO.FilePath -> GHC.Types.IO (GHC.Internal.Data.Either.Either GHC.Internal.Base.String a)
  decodeOrFail :: forall a. Binary a => Data.ByteString.Lazy.Internal.ByteString -> GHC.Internal.Data.Either.Either (Data.ByteString.Lazy.Internal.ByteString, Data.Binary.Get.ByteOffset, GHC.Internal.Base.String) (Data.ByteString.Lazy.Internal.ByteString, Data.Binary.Get.ByteOffset, a)
  decodeOrFailIO :: forall a. Binary a => Data.ByteString.Lazy.Internal.ByteString -> GHC.Types.IO (GHC.Internal.Data.Either.Either GHC.Internal.Base.String a)
  encode :: forall a. Binary a => a -> Data.ByteString.Lazy.Internal.ByteString
  encodeFile :: forall a. Binary a => GHC.Internal.IO.FilePath -> a -> GHC.Types.IO ()
  getWord8 :: Get Word8
  putWord8 :: Word8 -> Put

module Distribution.Compat.CharParsing where
  type CharParsing :: (* -> *) -> Constraint
  class Parsing m => CharParsing m where
    satisfy :: (GHC.Types.Char -> GHC.Types.Bool) -> m GHC.Types.Char
    char :: GHC.Types.Char -> m GHC.Types.Char
    notChar :: GHC.Types.Char -> m GHC.Types.Char
    anyChar :: m GHC.Types.Char
    string :: GHC.Internal.Base.String -> m GHC.Internal.Base.String
    text :: Data.Text.Internal.Text -> m Data.Text.Internal.Text
    {-# MINIMAL satisfy #-}
  type Parsing :: (* -> *) -> Constraint
  class GHC.Internal.Base.Alternative m => Parsing m where
    try :: forall a. m a -> m a
    (<?>) :: forall a. m a -> GHC.Internal.Base.String -> m a
    skipMany :: forall a. m a -> m ()
    skipSome :: forall a. m a -> m ()
    unexpected :: forall a. GHC.Internal.Base.String -> m a
    eof :: m ()
    notFollowedBy :: forall a. GHC.Internal.Show.Show a => m a -> m ()
    {-# MINIMAL try, (<?>), unexpected, eof, notFollowedBy #-}
  alphaNum :: forall (m :: * -> *). CharParsing m => m GHC.Types.Char
  between :: forall (m :: * -> *) bra ket a. GHC.Internal.Base.Applicative m => m bra -> m ket -> m a -> m a
  chainl :: forall (m :: * -> *) a. GHC.Internal.Base.Alternative m => m a -> m (a -> a -> a) -> a -> m a
  chainl1 :: forall (m :: * -> *) a. GHC.Internal.Base.Alternative m => m a -> m (a -> a -> a) -> m a
  chainr :: forall (m :: * -> *) a. GHC.Internal.Base.Alternative m => m a -> m (a -> a -> a) -> a -> m a
  chainr1 :: forall (m :: * -> *) a. GHC.Internal.Base.Alternative m => m a -> m (a -> a -> a) -> m a
  choice :: forall (m :: * -> *) a. GHC.Internal.Base.Alternative m => [m a] -> m a
  count :: forall (m :: * -> *) a. GHC.Internal.Base.Applicative m => GHC.Types.Int -> m a -> m [a]
  digit :: forall (m :: * -> *). CharParsing m => m GHC.Types.Char
  endBy :: forall (m :: * -> *) a sep. GHC.Internal.Base.Alternative m => m a -> m sep -> m [a]
  endByNonEmpty :: forall (m :: * -> *) a sep. GHC.Internal.Base.Alternative m => m a -> m sep -> m (GHC.Internal.Base.NonEmpty a)
  hexDigit :: forall (m :: * -> *). CharParsing m => m GHC.Types.Char
  integral :: forall (m :: * -> *) a. (CharParsing m, GHC.Internal.Real.Integral a) => m a
  letter :: forall (m :: * -> *). CharParsing m => m GHC.Types.Char
  lower :: forall (m :: * -> *). CharParsing m => m GHC.Types.Char
  many :: forall (f :: * -> *) a. GHC.Internal.Base.Alternative f => f a -> f [a]
  manyTill :: forall (m :: * -> *) a end. GHC.Internal.Base.Alternative m => m a -> m end -> m [a]
  munch :: forall (m :: * -> *). CharParsing m => (GHC.Types.Char -> GHC.Types.Bool) -> m GHC.Internal.Base.String
  munch1 :: forall (m :: * -> *). CharParsing m => (GHC.Types.Char -> GHC.Types.Bool) -> m GHC.Internal.Base.String
  newline :: forall (m :: * -> *). CharParsing m => m GHC.Types.Char
  noneOf :: forall (m :: * -> *). CharParsing m => [GHC.Types.Char] -> m GHC.Types.Char
  octDigit :: forall (m :: * -> *). CharParsing m => m GHC.Types.Char
  oneOf :: forall (m :: * -> *). CharParsing m => [GHC.Types.Char] -> m GHC.Types.Char
  option :: forall (m :: * -> *) a. GHC.Internal.Base.Alternative m => a -> m a -> m a
  optional :: forall (f :: * -> *) a. GHC.Internal.Base.Alternative f => f a -> f (GHC.Internal.Maybe.Maybe a)
  satisfyRange :: forall (m :: * -> *). CharParsing m => GHC.Types.Char -> GHC.Types.Char -> m GHC.Types.Char
  sepBy :: forall (m :: * -> *) a sep. GHC.Internal.Base.Alternative m => m a -> m sep -> m [a]
  sepByNonEmpty :: forall (m :: * -> *) a sep. GHC.Internal.Base.Alternative m => m a -> m sep -> m (GHC.Internal.Base.NonEmpty a)
  sepEndBy :: forall (m :: * -> *) a sep. GHC.Internal.Base.Alternative m => m a -> m sep -> m [a]
  sepEndByNonEmpty :: forall (m :: * -> *) a sep. GHC.Internal.Base.Alternative m => m a -> m sep -> m (GHC.Internal.Base.NonEmpty a)
  signedIntegral :: forall (m :: * -> *) a. (CharParsing m, GHC.Internal.Real.Integral a) => m a
  skipOptional :: forall (m :: * -> *) a. GHC.Internal.Base.Alternative m => m a -> m ()
  skipSpaces1 :: forall (m :: * -> *). CharParsing m => m ()
  some :: forall (f :: * -> *) a. GHC.Internal.Base.Alternative f => f a -> f [a]
  space :: forall (m :: * -> *). CharParsing m => m GHC.Types.Char
  spaces :: forall (m :: * -> *). CharParsing m => m ()
  tab :: forall (m :: * -> *). CharParsing m => m GHC.Types.Char
  upper :: forall (m :: * -> *). CharParsing m => m GHC.Types.Char

module Distribution.Compat.CreatePipe where
  createPipe :: GHC.Types.IO (GHC.Internal.IO.Handle.Types.Handle, GHC.Internal.IO.Handle.Types.Handle)

module Distribution.Compat.DList where
  type DList :: * -> *
  newtype DList a = ...
  empty :: forall a. DList a
  fromList :: forall a. [a] -> DList a
  runDList :: forall a. DList a -> [a]
  singleton :: forall a. a -> DList a
  snoc :: forall a. DList a -> a -> DList a
  toList :: forall a. DList a -> [a]

module Distribution.Compat.Directory where
  doesPathExist :: GHC.Internal.IO.FilePath -> GHC.Types.IO GHC.Types.Bool
  listDirectory :: GHC.Internal.IO.FilePath -> GHC.Types.IO [GHC.Internal.IO.FilePath]
  makeAbsolute :: GHC.Internal.IO.FilePath -> GHC.Types.IO GHC.Internal.IO.FilePath

module Distribution.Compat.Environment where
  getEnvironment :: GHC.Types.IO [(GHC.Internal.Base.String, GHC.Internal.Base.String)]
  lookupEnv :: GHC.Internal.Base.String -> GHC.Types.IO (GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)
  setEnv :: GHC.Internal.Base.String -> GHC.Internal.Base.String -> GHC.Types.IO ()
  unsetEnv :: GHC.Internal.Base.String -> GHC.Types.IO ()

module Distribution.Compat.Exception where
  catchExit :: forall a. GHC.Types.IO a -> (GHC.Internal.IO.Exception.ExitCode -> GHC.Types.IO a) -> GHC.Types.IO a
  catchIO :: forall a. GHC.Types.IO a -> (GHC.Internal.IO.Exception.IOException -> GHC.Types.IO a) -> GHC.Types.IO a
  displayException :: forall e. GHC.Internal.Exception.Type.Exception e => e -> GHC.Internal.Base.String
  tryIO :: forall a. GHC.Types.IO a -> GHC.Types.IO (GHC.Internal.Data.Either.Either GHC.Internal.IO.Exception.IOException a)

module Distribution.Compat.FilePath where
  isExtensionOf :: GHC.Internal.Base.String -> GHC.Internal.IO.FilePath -> GHC.Types.Bool
  stripExtension :: GHC.Internal.Base.String -> GHC.Internal.IO.FilePath -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath

module Distribution.Compat.Graph where
  pattern CyclicSCC :: forall vertex. [vertex] -> SCC vertex
  type role Graph nominal
  type Graph :: * -> *
  data Graph a = ...
  type IsNode :: * -> Constraint
  class GHC.Classes.Ord (Key a) => IsNode a where
    type Key :: * -> *
    type family Key a
    nodeKey :: a -> Key a
    nodeNeighbors :: a -> [Key a]
    {-# MINIMAL nodeKey, nodeNeighbors #-}
  type Node :: * -> * -> *
  data Node k a = N a k [k]
  type SCC :: * -> *
  data SCC vertex = AcyclicSCC vertex | NECyclicSCC {-# UNPACK #-}(GHC.Internal.Base.NonEmpty vertex)
  broken :: forall a. Graph a -> [(a, [Key a])]
  closure :: forall a. Graph a -> [Key a] -> GHC.Internal.Maybe.Maybe [a]
  cycles :: forall a. Graph a -> [[a]]
  deleteKey :: forall a. IsNode a => Key a -> Graph a -> Graph a
  deleteLookup :: forall a. IsNode a => Key a -> Graph a -> (GHC.Internal.Maybe.Maybe a, Graph a)
  empty :: forall a. IsNode a => Graph a
  fromDistinctList :: forall a. (IsNode a, GHC.Internal.Show.Show (Key a)) => [a] -> Graph a
  insert :: forall a. IsNode a => a -> Graph a -> Graph a
  keys :: forall a. Graph a -> [Key a]
  keysSet :: forall a. Graph a -> Data.Set.Internal.Set (Key a)
  lookup :: forall a. IsNode a => Key a -> Graph a -> GHC.Internal.Maybe.Maybe a
  member :: forall a. IsNode a => Key a -> Graph a -> GHC.Types.Bool
  neighbors :: forall a. Graph a -> Key a -> GHC.Internal.Maybe.Maybe [a]
  nodeValue :: forall k a. Node k a -> a
  null :: forall a. Graph a -> GHC.Types.Bool
  revClosure :: forall a. Graph a -> [Key a] -> GHC.Internal.Maybe.Maybe [a]
  revNeighbors :: forall a. Graph a -> Key a -> GHC.Internal.Maybe.Maybe [a]
  revTopSort :: forall a. Graph a -> [a]
  size :: forall a. Graph a -> GHC.Types.Int
  stronglyConnComp :: forall a. Graph a -> [SCC a]
  toGraph :: forall a. Graph a -> (Data.Graph.Graph, Data.Graph.Vertex -> a, Key a -> GHC.Internal.Maybe.Maybe Data.Graph.Vertex)
  toList :: forall a. Graph a -> [a]
  toMap :: forall a. Graph a -> Data.Map.Internal.Map (Key a) a
  topSort :: forall a. Graph a -> [a]
  unionLeft :: forall a. IsNode a => Graph a -> Graph a -> Graph a
  unionRight :: forall a. IsNode a => Graph a -> Graph a -> Graph a

module Distribution.Compat.Internal.TempFile where
  createTempDirectory :: GHC.Internal.IO.FilePath -> GHC.Internal.Base.String -> GHC.Types.IO GHC.Internal.IO.FilePath
  openBinaryTempFile :: GHC.Internal.IO.FilePath -> GHC.Internal.Base.String -> GHC.Types.IO (GHC.Internal.IO.FilePath, GHC.Internal.IO.Handle.Types.Handle)
  openNewBinaryFile :: GHC.Internal.IO.FilePath -> GHC.Internal.Base.String -> GHC.Types.IO (GHC.Internal.IO.FilePath, GHC.Internal.IO.Handle.Types.Handle)
  openTempFile :: GHC.Internal.IO.FilePath -> GHC.Internal.Base.String -> GHC.Types.IO (GHC.Internal.IO.FilePath, GHC.Internal.IO.Handle.Types.Handle)

module Distribution.Compat.Lens where
  (#%~) :: forall s t a b. ALens s t a b -> (a -> b) -> s -> t
  (#~) :: forall s t a b. ALens s t a b -> b -> s -> t
  (%=) :: forall s (m :: * -> *) a b. Control.Monad.State.Class.MonadState s m => ASetter s s a b -> (a -> b) -> m ()
  (%~) :: forall s t a b. ASetter s t a b -> (a -> b) -> s -> t
  (&) :: forall a b. a -> (a -> b) -> b
  (.=) :: forall s (m :: * -> *) a b. Control.Monad.State.Class.MonadState s m => ASetter s s a b -> b -> m ()
  (.~) :: forall s t a b. ASetter s t a b -> b -> s -> t
  (?=) :: forall s (m :: * -> *) a b. Control.Monad.State.Class.MonadState s m => ASetter s s a (GHC.Internal.Maybe.Maybe b) -> b -> m ()
  (?~) :: forall s t a b. ASetter s t a (GHC.Internal.Maybe.Maybe b) -> b -> s -> t
  type AGetter :: * -> * -> *
  type AGetter s a = LensLike (GHC.Internal.Data.Functor.Const.Const a) s s a a
  type ALens :: * -> * -> * -> * -> *
  type ALens s t a b = LensLike (Pretext a b) s t a b
  type ALens' :: * -> * -> *
  type ALens' s a = ALens s s a a
  type ASetter :: * -> * -> * -> * -> *
  type ASetter s t a b = LensLike GHC.Internal.Data.Functor.Identity.Identity s t a b
  type Getting :: * -> * -> * -> *
  type Getting r s a = LensLike (GHC.Internal.Data.Functor.Const.Const r) s s a a
  type Lens :: * -> * -> * -> * -> *
  type Lens s t a b = forall (f :: * -> *). GHC.Internal.Base.Functor f => LensLike f s t a b
  type Lens' :: * -> * -> *
  type Lens' s a = Lens s s a a
  type LensLike :: (* -> *) -> * -> * -> * -> * -> *
  type LensLike f s t a b = (a -> f b) -> s -> f t
  type LensLike' :: (* -> *) -> * -> * -> *
  type LensLike' f s a = (a -> f a) -> s -> f s
  type role Pretext representational nominal nominal
  type Pretext :: * -> * -> * -> *
  data Pretext a b t = Pretext {runPretext :: forall (f :: * -> *). GHC.Internal.Base.Functor f => (a -> f b) -> f t}
  type Traversal :: * -> * -> * -> * -> *
  type Traversal s t a b = forall (f :: * -> *). GHC.Internal.Base.Applicative f => LensLike f s t a b
  type Traversal' :: * -> * -> *
  type Traversal' s a = Traversal s s a a
  (^#) :: forall s t a b. s -> ALens s t a b -> a
  (^.) :: forall s a. s -> Getting a s a -> a
  _1 :: forall a c b (f :: * -> *). GHC.Internal.Base.Functor f => LensLike f (a, c) (b, c) a b
  _2 :: forall c a b (f :: * -> *). GHC.Internal.Base.Functor f => LensLike f (c, a) (c, b) a b
  aview :: forall s t a b. ALens s t a b -> s -> a
  cloneLens :: forall (f :: * -> *) s t a b. GHC.Internal.Base.Functor f => ALens s t a b -> LensLike f s t a b
  getting :: forall s a r. (s -> a) -> Getting r s a
  over :: forall s t a b. ASetter s t a b -> (a -> b) -> s -> t
  set :: forall s t a b. ASetter s t a b -> b -> s -> t
  toDListOf :: forall a s. Getting (Distribution.Compat.DList.DList a) s a -> s -> Distribution.Compat.DList.DList a
  toListOf :: forall a s. Getting (Distribution.Compat.DList.DList a) s a -> s -> [a]
  toSetOf :: forall a s. Getting (Data.Set.Internal.Set a) s a -> s -> Data.Set.Internal.Set a
  use :: forall s (m :: * -> *) a. Control.Monad.State.Class.MonadState s m => Getting a s a -> m a
  view :: forall a s. Getting a s a -> s -> a

module Distribution.Compat.MonadFail where
  type MonadFail :: (* -> *) -> Constraint
  class GHC.Internal.Base.Monad m => MonadFail m where
    fail :: forall a. GHC.Internal.Base.String -> m a
    {-# MINIMAL fail #-}

module Distribution.Compat.Newtype where
  type Newtype :: * -> * -> Constraint
  class Newtype o n | n -> o where
    pack :: o -> n
    default pack :: Coercible o n => o -> n
    unpack :: n -> o
    default unpack :: Coercible n o => n -> o
    {-# MINIMAL #-}
  ala :: forall o n o' n' b. (Newtype o n, Newtype o' n') => (o -> n) -> ((o -> n) -> b -> n') -> b -> o'
  alaf :: forall o n o' n' a b. (Newtype o n, Newtype o' n') => (o -> n) -> ((a -> n) -> b -> n') -> (a -> o) -> b -> o'
  pack' :: forall o n. Newtype o n => (o -> n) -> o -> n
  unpack' :: forall o n. Newtype o n => (o -> n) -> n -> o

module Distribution.Compat.NonEmptySet where
  type role NonEmptySet nominal
  type NonEmptySet :: * -> *
  newtype NonEmptySet a = ...
  delete :: forall a. GHC.Classes.Ord a => a -> NonEmptySet a -> GHC.Internal.Maybe.Maybe (NonEmptySet a)
  filter :: forall a. (a -> GHC.Types.Bool) -> NonEmptySet a -> Data.Set.Internal.Set a
  fromNonEmpty :: forall a. GHC.Classes.Ord a => GHC.Internal.Base.NonEmpty a -> NonEmptySet a
  insert :: forall a. GHC.Classes.Ord a => a -> NonEmptySet a -> NonEmptySet a
  map :: forall b a. GHC.Classes.Ord b => (a -> b) -> NonEmptySet a -> NonEmptySet b
  member :: forall a. GHC.Classes.Ord a => a -> NonEmptySet a -> GHC.Types.Bool
  singleton :: forall a. a -> NonEmptySet a
  toList :: forall a. NonEmptySet a -> [a]
  toNonEmpty :: forall a. NonEmptySet a -> GHC.Internal.Base.NonEmpty a
  toSet :: forall a. NonEmptySet a -> Data.Set.Internal.Set a

module Distribution.Compat.Parsing where
  type Parsing :: (* -> *) -> Constraint
  class GHC.Internal.Base.Alternative m => Parsing m where
    try :: forall a. m a -> m a
    (<?>) :: forall a. m a -> GHC.Internal.Base.String -> m a
    skipMany :: forall a. m a -> m ()
    skipSome :: forall a. m a -> m ()
    unexpected :: forall a. GHC.Internal.Base.String -> m a
    eof :: m ()
    notFollowedBy :: forall a. GHC.Internal.Show.Show a => m a -> m ()
    {-# MINIMAL try, (<?>), unexpected, eof, notFollowedBy #-}
  between :: forall (m :: * -> *) bra ket a. GHC.Internal.Base.Applicative m => m bra -> m ket -> m a -> m a
  chainl :: forall (m :: * -> *) a. GHC.Internal.Base.Alternative m => m a -> m (a -> a -> a) -> a -> m a
  chainl1 :: forall (m :: * -> *) a. GHC.Internal.Base.Alternative m => m a -> m (a -> a -> a) -> m a
  chainr :: forall (m :: * -> *) a. GHC.Internal.Base.Alternative m => m a -> m (a -> a -> a) -> a -> m a
  chainr1 :: forall (m :: * -> *) a. GHC.Internal.Base.Alternative m => m a -> m (a -> a -> a) -> m a
  choice :: forall (m :: * -> *) a. GHC.Internal.Base.Alternative m => [m a] -> m a
  count :: forall (m :: * -> *) a. GHC.Internal.Base.Applicative m => GHC.Types.Int -> m a -> m [a]
  endBy :: forall (m :: * -> *) a sep. GHC.Internal.Base.Alternative m => m a -> m sep -> m [a]
  endByNonEmpty :: forall (m :: * -> *) a sep. GHC.Internal.Base.Alternative m => m a -> m sep -> m (GHC.Internal.Base.NonEmpty a)
  many :: forall (f :: * -> *) a. GHC.Internal.Base.Alternative f => f a -> f [a]
  manyTill :: forall (m :: * -> *) a end. GHC.Internal.Base.Alternative m => m a -> m end -> m [a]
  option :: forall (m :: * -> *) a. GHC.Internal.Base.Alternative m => a -> m a -> m a
  optional :: forall (f :: * -> *) a. GHC.Internal.Base.Alternative f => f a -> f (GHC.Internal.Maybe.Maybe a)
  sepBy :: forall (m :: * -> *) a sep. GHC.Internal.Base.Alternative m => m a -> m sep -> m [a]
  sepByNonEmpty :: forall (m :: * -> *) a sep. GHC.Internal.Base.Alternative m => m a -> m sep -> m (GHC.Internal.Base.NonEmpty a)
  sepEndBy :: forall (m :: * -> *) a sep. GHC.Internal.Base.Alternative m => m a -> m sep -> m [a]
  sepEndByNonEmpty :: forall (m :: * -> *) a sep. GHC.Internal.Base.Alternative m => m a -> m sep -> m (GHC.Internal.Base.NonEmpty a)
  skipOptional :: forall (m :: * -> *) a. GHC.Internal.Base.Alternative m => m a -> m ()
  some :: forall (f :: * -> *) a. GHC.Internal.Base.Alternative f => f a -> f [a]

module Distribution.Compat.Prelude where
  (!!) :: forall a. GHC.Internal.Stack.Types.HasCallStack => [a] -> Int -> a
  ($) :: forall (repa :: GHC.Types.RuntimeRep) (repb :: GHC.Types.RuntimeRep) (a :: TYPE repa) (b :: TYPE repb). (a -> b) -> a -> b
  ($!) :: forall (r :: GHC.Types.RuntimeRep) a (b :: TYPE r). (a -> b) -> a -> b
  (&&) :: Bool -> Bool -> Bool
  (++) :: forall a. [a] -> [a] -> [a]
  (.) :: forall b c a. (b -> c) -> (a -> b) -> a -> c
  (<$>) :: forall (f :: * -> *) a b. Functor f => (a -> b) -> f a -> f b
  (<+>) :: Text.PrettyPrint.HughesPJ.Doc -> Text.PrettyPrint.HughesPJ.Doc -> Text.PrettyPrint.HughesPJ.Doc
  (<<>>) :: Text.PrettyPrint.HughesPJ.Doc -> Text.PrettyPrint.HughesPJ.Doc -> Text.PrettyPrint.HughesPJ.Doc
  (=<<) :: forall (m :: * -> *) a b. Monad m => (a -> m b) -> m a -> m b
  type Alternative :: (* -> *) -> Constraint
  class Applicative f => Alternative f where
    empty :: forall a. f a
    (<|>) :: forall a. f a -> f a -> f a
    some :: forall a. f a -> f [a]
    many :: forall a. f a -> f [a]
    {-# MINIMAL empty, (<|>) #-}
  type Applicative :: (* -> *) -> Constraint
  class Functor f => Applicative f where
    pure :: forall a. a -> f a
    (<*>) :: forall a b. f (a -> b) -> f a -> f b
    liftA2 :: forall a b c. (a -> b -> c) -> f a -> f b -> f c
    (*>) :: forall a b. f a -> f b -> f b
    (<*) :: forall a b. f a -> f b -> f a
    {-# MINIMAL pure, ((<*>) | liftA2) #-}
  type Binary :: * -> Constraint
  class Binary t where
    put :: t -> Data.Binary.Put.Put
    default put :: (Generic t, binary-0.8.9.2:Data.Binary.Class.GBinaryPut (GHC.Internal.Generics.Rep t)) => t -> Data.Binary.Put.Put
    get :: Data.Binary.Get.Internal.Get t
    default get :: (Generic t, binary-0.8.9.2:Data.Binary.Class.GBinaryGet (GHC.Internal.Generics.Rep t)) => Data.Binary.Get.Internal.Get t
    putList :: [t] -> Data.Binary.Put.Put
    {-# MINIMAL #-}
  type Bool :: *
  data Bool = False | True
  type Bounded :: * -> Constraint
  class Bounded a where
    minBound :: a
    maxBound :: a
    {-# MINIMAL minBound, maxBound #-}
  type Char :: *
  data Char = ...
  type role Const representational phantom
  type Const :: forall {k}. * -> k -> *
  newtype Const a b = Const {getConst :: a}
  type Data :: * -> Constraint
  class Typeable a => Data a where
    ...
    {-# MINIMAL GHC.Internal.Data.Data.gunfold, GHC.Internal.Data.Data.toConstr, GHC.Internal.Data.Data.dataTypeOf #-}
  type Double :: *
  data Double = ...
  type Either :: * -> * -> *
  data Either a b = Left a | Right b
  type Enum :: * -> Constraint
  class Enum a where
    succ :: a -> a
    pred :: a -> a
    toEnum :: Int -> a
    fromEnum :: a -> Int
    enumFrom :: a -> [a]
    enumFromThen :: a -> a -> [a]
    enumFromTo :: a -> a -> [a]
    enumFromThenTo :: a -> a -> a -> [a]
    {-# MINIMAL toEnum, fromEnum #-}
  type Eq :: * -> Constraint
  class Eq a where
    (==) :: a -> a -> Bool
    (/=) :: a -> a -> Bool
    {-# MINIMAL (==) | (/=) #-}
  type Exception :: * -> Constraint
  class (Typeable e, Show e) => Exception e where
    toException :: e -> SomeException
    fromException :: SomeException -> Maybe e
    displayException :: e -> String
    backtraceDesired :: e -> Bool
    {-# MINIMAL #-}
  type ExitCode :: *
  data ExitCode = ExitSuccess | ExitFailure Int
  type FilePath :: *
  type FilePath = String
  type Float :: *
  data Float = ...
  type Floating :: * -> Constraint
  class Fractional a => Floating a where
    pi :: a
    exp :: a -> a
    log :: a -> a
    sqrt :: a -> a
    (**) :: a -> a -> a
    logBase :: a -> a -> a
    sin :: a -> a
    cos :: a -> a
    tan :: a -> a
    asin :: a -> a
    acos :: a -> a
    atan :: a -> a
    sinh :: a -> a
    cosh :: a -> a
    tanh :: a -> a
    asinh :: a -> a
    acosh :: a -> a
    atanh :: a -> a
    ...
    {-# MINIMAL pi, exp, log, sin, cos, asin, acos, atan, sinh, cosh, asinh, acosh, atanh #-}
  type Foldable :: (* -> *) -> Constraint
  class Foldable t where
    ...
    foldMap :: forall m a. Monoid m => (a -> m) -> t a -> m
    ...
    foldr :: forall a b. (a -> b -> b) -> b -> t a -> b
    ...
    foldl :: forall b a. (b -> a -> b) -> b -> t a -> b
    foldl' :: forall b a. (b -> a -> b) -> b -> t a -> b
    GHC.Internal.Data.Foldable.foldr1 :: forall a. (a -> a -> a) -> t a -> a
    GHC.Internal.Data.Foldable.foldl1 :: forall a. (a -> a -> a) -> t a -> a
    toList :: forall a. t a -> [a]
    null :: forall a. t a -> Bool
    length :: forall a. t a -> Int
    elem :: forall a. Eq a => a -> t a -> Bool
    maximum :: forall a. Ord a => t a -> a
    minimum :: forall a. Ord a => t a -> a
    sum :: forall a. Num a => t a -> a
    product :: forall a. Num a => t a -> a
    {-# MINIMAL foldMap | foldr #-}
  type Fractional :: * -> Constraint
  class Num a => Fractional a where
    (/) :: a -> a -> a
    recip :: a -> a
    fromRational :: Rational -> a
    {-# MINIMAL fromRational, (recip | (/)) #-}
  type Functor :: (* -> *) -> Constraint
  class Functor f where
    fmap :: forall a b. (a -> b) -> f a -> f b
    (<$) :: forall a b. a -> f b -> f a
    {-# MINIMAL fmap #-}
  type Generic :: * -> Constraint
  class Generic a where
    ...
    ...
    {-# MINIMAL GHC.Internal.Generics.from, GHC.Internal.Generics.to #-}
  type IO :: * -> *
  newtype IO a = ...
  type IOError :: *
  type IOError = IOException
  type IOException :: *
  data IOException = ...
  type Identity :: * -> *
  newtype Identity a = Identity {runIdentity :: a}
  type Int :: *
  data Int = ...
  type Int16 :: *
  data Int16 = ...
  type Int32 :: *
  data Int32 = ...
  type Int64 :: *
  data Int64 = ...
  type Int8 :: *
  data Int8 = ...
  type Integer :: *
  data Integer = ...
  type Integral :: * -> Constraint
  class (Real a, Enum a) => Integral a where
    quot :: a -> a -> a
    rem :: a -> a -> a
    div :: a -> a -> a
    mod :: a -> a -> a
    quotRem :: a -> a -> (a, a)
    divMod :: a -> a -> (a, a)
    toInteger :: a -> Integer
    {-# MINIMAL quotRem, toInteger #-}
  type IsString :: * -> Constraint
  class IsString a where
    fromString :: String -> a
    {-# MINIMAL fromString #-}
  type role Map nominal representational
  type Map :: * -> * -> *
  data Map k a = ...
  type Maybe :: * -> *
  data Maybe a = Nothing | Just a
  type Monad :: (* -> *) -> Constraint
  class Applicative m => Monad m where
    (>>=) :: forall a b. m a -> (a -> m b) -> m b
    (>>) :: forall a b. m a -> m b -> m b
    return :: forall a. a -> m a
    {-# MINIMAL (>>=) #-}
  type MonadFail :: (* -> *) -> Constraint
  class Monad m => MonadFail m where
    fail :: forall a. String -> m a
    {-# MINIMAL fail #-}
  type MonadPlus :: (* -> *) -> Constraint
  class (Alternative m, Monad m) => MonadPlus m where
    mzero :: forall a. m a
    mplus :: forall a. m a -> m a -> m a
    {-# MINIMAL #-}
  type Monoid :: * -> Constraint
  class Semigroup a => Monoid a where
    mempty :: a
    mappend :: a -> a -> a
    mconcat :: [a] -> a
    {-# MINIMAL mempty | mconcat #-}
  type NFData :: * -> Constraint
  class NFData a where
    rnf :: a -> ()
    default rnf :: (Generic a, Control.DeepSeq.GNFData Control.DeepSeq.Zero (GHC.Internal.Generics.Rep a)) => a -> ()
    {-# MINIMAL #-}
  type NonEmpty :: * -> *
  data NonEmpty a = a :| [a]
  type role NonEmptySet nominal
  type NonEmptySet :: * -> *
  newtype NonEmptySet a = ...
  type Num :: * -> Constraint
  class Num a where
    (+) :: a -> a -> a
    (-) :: a -> a -> a
    (*) :: a -> a -> a
    negate :: a -> a
    abs :: a -> a
    signum :: a -> a
    fromInteger :: Integer -> a
    {-# MINIMAL (+), (*), abs, signum, fromInteger, (negate | (-)) #-}
  type Ord :: * -> Constraint
  class Eq a => Ord a where
    compare :: a -> a -> Ordering
    (<) :: a -> a -> Bool
    (<=) :: a -> a -> Bool
    (>) :: a -> a -> Bool
    (>=) :: a -> a -> Bool
    max :: a -> a -> a
    min :: a -> a -> a
    {-# MINIMAL compare | (<=) #-}
  type Ordering :: *
  data Ordering = LT | EQ | GT
  type role Proxy phantom
  type Proxy :: forall {k}. k -> *
  data Proxy t = Proxy
  type Rational :: *
  type Rational = GHC.Internal.Real.Ratio Integer
  type Read :: * -> Constraint
  class Read a where
    readsPrec :: Int -> ReadS a
    readList :: ReadS [a]
    ...
    {-# MINIMAL readsPrec | GHC.Internal.Read.readPrec #-}
  type ReadS :: * -> *
  type ReadS a = String -> [(a, String)]
  type Real :: * -> Constraint
  class (Num a, Ord a) => Real a where
    toRational :: a -> Rational
    {-# MINIMAL toRational #-}
  type RealFloat :: * -> Constraint
  class (RealFrac a, Floating a) => RealFloat a where
    floatRadix :: a -> Integer
    floatDigits :: a -> Int
    floatRange :: a -> (Int, Int)
    decodeFloat :: a -> (Integer, Int)
    encodeFloat :: Integer -> Int -> a
    exponent :: a -> Int
    significand :: a -> a
    scaleFloat :: Int -> a -> a
    isNaN :: a -> Bool
    isInfinite :: a -> Bool
    isDenormalized :: a -> Bool
    isNegativeZero :: a -> Bool
    isIEEE :: a -> Bool
    atan2 :: a -> a -> a
    {-# MINIMAL floatRadix, floatDigits, floatRange, decodeFloat, encodeFloat, isNaN, isInfinite, isDenormalized, isNegativeZero, isIEEE #-}
  type RealFrac :: * -> Constraint
  class (Real a, Fractional a) => RealFrac a where
    properFraction :: forall b. Integral b => a -> (b, a)
    truncate :: forall b. Integral b => a -> b
    round :: forall b. Integral b => a -> b
    ceiling :: forall b. Integral b => a -> b
    floor :: forall b. Integral b => a -> b
    {-# MINIMAL properFraction #-}
  type Semigroup :: * -> Constraint
  class Semigroup a where
    (<>) :: a -> a -> a
    ...
    {-# MINIMAL (<>) | GHC.Internal.Base.sconcat #-}
  type role Set nominal
  type Set :: * -> *
  data Set a = ...
  type Show :: * -> Constraint
  class Show a where
    showsPrec :: Int -> a -> ShowS
    show :: a -> String
    showList :: [a] -> ShowS
    {-# MINIMAL showsPrec | show #-}
  type ShowS :: *
  type ShowS = String -> String
  type SomeException :: *
  data SomeException = forall e. (Exception e, GHC.Internal.Exception.Type.HasExceptionContext) => SomeException e
  type String :: *
  type String = [Char]
  type Structured :: * -> Constraint
  class Typeable a => Structured a where
    ...
    {-# MINIMAL #-}
  type Traversable :: (* -> *) -> Constraint
  class (Functor t, Foldable t) => Traversable t where
    traverse :: forall (f :: * -> *) a b. Applicative f => (a -> f b) -> t a -> f (t b)
    sequenceA :: forall (f :: * -> *) a. Applicative f => t (f a) -> f (t a)
    ...
    {-# MINIMAL traverse | sequenceA #-}
  type TypeRep :: *
  type TypeRep = ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.SomeTypeRep
  type Typeable :: forall k. k -> Constraint
  class Typeable a where
    ...
    {-# MINIMAL ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.typeRep# #-}
  type Void :: *
  data Void
  type Word :: *
  data Word = ...
  type Word16 :: *
  data Word16 = ...
  type Word32 :: *
  data Word32 = ...
  type Word64 :: *
  data Word64 = ...
  type Word8 :: *
  data Word8 = ...
  (^) :: forall a b. (Num a, Integral b) => a -> b -> a
  (^^) :: forall a b. (Fractional a, Integral b) => a -> b -> a
  absurd :: forall a. Void -> a
  all :: forall (t :: * -> *) a. Foldable t => (a -> Bool) -> t a -> Bool
  and :: forall (t :: * -> *). Foldable t => t Bool -> Bool
  any :: forall (t :: * -> *) a. Foldable t => (a -> Bool) -> t a -> Bool
  ap :: forall (m :: * -> *) a b. Monad m => m (a -> b) -> m a -> m b
  appendFile :: FilePath -> String -> IO ()
  asTypeOf :: forall a. a -> a -> a
  break :: forall a. (a -> Bool) -> [a] -> ([a], [a])
  catMaybes :: forall a. [Maybe a] -> [a]
  catch :: forall e a. Exception e => IO a -> (e -> IO a) -> IO a
  catchExit :: forall a. IO a -> (ExitCode -> IO a) -> IO a
  catchIO :: forall a. IO a -> (IOException -> IO a) -> IO a
  chr :: Int -> Char
  comparing :: forall a b. Ord a => (b -> a) -> b -> b -> Ordering
  concat :: forall (t :: * -> *) a. Foldable t => t [a] -> [a]
  concatMap :: forall (t :: * -> *) a b. Foldable t => (a -> [b]) -> t a -> [b]
  const :: forall a b. a -> b -> a
  curry :: forall a b c. ((a, b) -> c) -> a -> b -> c
  cycle :: forall a. GHC.Internal.Stack.Types.HasCallStack => [a] -> [a]
  deepseq :: forall a b. NFData a => a -> b -> b
  drop :: forall a. Int -> [a] -> [a]
  dropWhile :: forall a. (a -> Bool) -> [a] -> [a]
  dropWhileEnd :: forall a. (a -> Bool) -> [a] -> [a]
  either :: forall a c b. (a -> c) -> (b -> c) -> Either a b -> c
  error :: forall (r :: GHC.Types.RuntimeRep) (a :: TYPE r). GHC.Internal.Stack.Types.HasCallStack => [Char] -> a
  errorWithoutStackTrace :: forall (r :: GHC.Types.RuntimeRep) (a :: TYPE r). [Char] -> a
  evaluate :: forall a. a -> IO a
  even :: forall a. Integral a => a -> Bool
  exitFailure :: forall a. IO a
  exitSuccess :: forall a. IO a
  exitWith :: forall a. ExitCode -> IO a
  filter :: forall a. (a -> Bool) -> [a] -> [a]
  filterM :: forall (m :: * -> *) a. Applicative m => (a -> m Bool) -> [a] -> m [a]
  find :: forall (t :: * -> *) a. Foldable t => (a -> Bool) -> t a -> Maybe a
  first :: forall (a :: * -> * -> *) b c d. GHC.Internal.Control.Arrow.Arrow a => a b c -> a (b, d) (c, d)
  flip :: forall a b c. (a -> b -> c) -> b -> a -> c
  foldM :: forall (t :: * -> *) (m :: * -> *) b a. (Foldable t, Monad m) => (b -> a -> m b) -> b -> t a -> m b
  foldl1 :: forall a. (a -> a -> a) -> NonEmpty a -> a
  foldr1 :: forall a. (a -> a -> a) -> NonEmpty a -> a
  for :: forall (t :: * -> *) (f :: * -> *) a b. (Traversable t, Applicative f) => t a -> (a -> f b) -> f (t b)
  for_ :: forall (t :: * -> *) (f :: * -> *) a b. (Foldable t, Applicative f) => t a -> (a -> f b) -> f ()
  force :: forall a. NFData a => a -> a
  fromIntegral :: forall a b. (Integral a, Num b) => a -> b
  fromMaybe :: forall a. a -> Maybe a -> a
  fst :: forall a b. (a, b) -> a
  gcd :: forall a. Integral a => a -> a -> a
  genericRnf :: forall a. (Generic a, Distribution.Compat.Prelude.GNFData (GHC.Internal.Generics.Rep a)) => a -> ()
  getChar :: IO Char
  getContents :: IO String
  getLine :: IO String
  gmappend :: forall a. (Generic a, Distribution.Compat.Semigroup.GSemigroup (GHC.Internal.Generics.Rep a)) => a -> a -> a
  gmempty :: forall a. (Generic a, Distribution.Compat.Semigroup.GMonoid (GHC.Internal.Generics.Rep a)) => a
  guard :: forall (f :: * -> *). Alternative f => Bool -> f ()
  head :: forall a. NonEmpty a -> a
  id :: forall a. a -> a
  init :: forall a. NonEmpty a -> [a]
  interact :: (String -> String) -> IO ()
  intercalate :: forall a. [a] -> [[a]] -> [a]
  intersperse :: forall a. a -> [a] -> [a]
  ioError :: forall a. IOError -> IO a
  isAlpha :: Char -> Bool
  isAlphaNum :: Char -> Bool
  isDigit :: Char -> Bool
  isJust :: forall a. Maybe a -> Bool
  isNothing :: forall a. Maybe a -> Bool
  isPrefixOf :: forall a. Eq a => [a] -> [a] -> Bool
  isSpace :: Char -> Bool
  isSuffixOf :: forall a. Eq a => [a] -> [a] -> Bool
  isUpper :: Char -> Bool
  iterate :: forall a. (a -> a) -> a -> [a]
  join :: forall (m :: * -> *) a. Monad m => m (m a) -> m a
  last :: forall a. NonEmpty a -> a
  lcm :: forall a. Integral a => a -> a -> a
  lex :: ReadS String
  liftM :: forall (m :: * -> *) a1 r. Monad m => (a1 -> r) -> m a1 -> m r
  liftM2 :: forall (m :: * -> *) a1 a2 r. Monad m => (a1 -> a2 -> r) -> m a1 -> m a2 -> m r
  lines :: String -> [String]
  listToMaybe :: forall a. [a] -> Maybe a
  lookup :: forall a b. Eq a => a -> [(a, b)] -> Maybe b
  map :: forall a b. (a -> b) -> [a] -> [b]
  mapMaybe :: forall a b. (a -> Maybe b) -> [a] -> [b]
  maybe :: forall b a. b -> (a -> b) -> Maybe a -> b
  maybeToList :: forall a. Maybe a -> [a]
  nonEmpty :: forall a. [a] -> Maybe (NonEmpty a)
  not :: Bool -> Bool
  notElem :: forall (t :: * -> *) a. (Foldable t, Eq a) => a -> t a -> Bool
  nub :: forall a. Eq a => [a] -> [a]
  nubBy :: forall a. (a -> a -> Bool) -> [a] -> [a]
  odd :: forall a. Integral a => a -> Bool
  on :: forall b c a. (b -> b -> c) -> (a -> b) -> a -> a -> c
  or :: forall (t :: * -> *). Foldable t => t Bool -> Bool
  ord :: Char -> Int
  otherwise :: Bool
  partition :: forall a. (a -> Bool) -> [a] -> ([a], [a])
  partitionEithers :: forall a b. [Either a b] -> ([a], [b])
  print :: forall a. Show a => a -> IO ()
  putChar :: Char -> IO ()
  putStr :: String -> IO ()
  putStrLn :: String -> IO ()
  readFile :: FilePath -> IO String
  readIO :: forall a. Read a => String -> IO a
  readLn :: forall a. Read a => IO a
  readMaybe :: forall a. Read a => String -> Maybe a
  readParen :: forall a. Bool -> ReadS a -> ReadS a
  reads :: forall a. Read a => ReadS a
  realToFrac :: forall a b. (Real a, Fractional b) => a -> b
  repeat :: forall a. a -> [a]
  replicate :: forall a. Int -> a -> [a]
  reverse :: forall a. [a] -> [a]
  scanl :: forall b a. (b -> a -> b) -> b -> [a] -> [b]
  scanl1 :: forall a. (a -> a -> a) -> [a] -> [a]
  scanr :: forall a b. (a -> b -> b) -> b -> [a] -> [b]
  scanr1 :: forall a. (a -> a -> a) -> [a] -> [a]
  seq :: forall {r :: GHC.Types.RuntimeRep} a (b :: TYPE r). a -> b -> b
  sequence_ :: forall (t :: * -> *) (m :: * -> *) a. (Foldable t, Monad m) => t (m a) -> m ()
  showChar :: Char -> ShowS
  showParen :: Bool -> ShowS -> ShowS
  showString :: String -> ShowS
  shows :: forall a. Show a => a -> ShowS
  snd :: forall a b. (a, b) -> b
  sort :: forall a. Ord a => [a] -> [a]
  sortBy :: forall a. (a -> a -> Ordering) -> [a] -> [a]
  span :: forall a. (a -> Bool) -> [a] -> ([a], [a])
  splitAt :: forall a. Int -> [a] -> ([a], [a])
  subtract :: forall a. Num a => a -> a -> a
  tail :: forall a. NonEmpty a -> [a]
  take :: forall a. Int -> [a] -> [a]
  takeWhile :: forall a. (a -> Bool) -> [a] -> [a]
  throwIO :: forall e a. (GHC.Internal.Stack.Types.HasCallStack, Exception e) => e -> IO a
  toLower :: Char -> Char
  toUpper :: Char -> Char
  trace :: forall a. String -> a -> a
  traceM :: forall (f :: * -> *). Applicative f => String -> f ()
  traceShow :: forall a b. Show a => a -> b -> b
  traceShowId :: forall a. Show a => a -> a
  traceShowM :: forall a (f :: * -> *). (Show a, Applicative f) => a -> f ()
  traverse_ :: forall (t :: * -> *) (f :: * -> *) a b. (Foldable t, Applicative f) => (a -> f b) -> t a -> f ()
  tryIO :: forall a. IO a -> IO (Either IOException a)
  typeRep :: forall {k} (proxy :: k -> *) (a :: k). Typeable a => proxy a -> TypeRep
  uncurry :: forall a b c. (a -> b -> c) -> (a, b) -> c
  undefined :: forall (r :: GHC.Types.RuntimeRep) (a :: TYPE r). GHC.Internal.Stack.Types.HasCallStack => a
  unfoldr :: forall b a. (b -> Maybe (a, b)) -> b -> [a]
  unless :: forall (f :: * -> *). Applicative f => Bool -> f () -> f ()
  unlines :: [String] -> String
  until :: forall a. (a -> Bool) -> (a -> a) -> a -> a
  unwords :: [String] -> String
  unzip :: forall a b. [(a, b)] -> ([a], [b])
  unzip3 :: forall a b c. [(a, b, c)] -> ([a], [b], [c])
  userError :: String -> IOError
  vacuous :: forall (f :: * -> *) a. Functor f => f Void -> f a
  void :: forall (f :: * -> *) a. Functor f => f a -> f ()
  when :: forall (f :: * -> *). Applicative f => Bool -> f () -> f ()
  words :: String -> [String]
  writeFile :: FilePath -> String -> IO ()
  zip :: forall a b. [a] -> [b] -> [(a, b)]
  zip3 :: forall a b c. [a] -> [b] -> [c] -> [(a, b, c)]
  zipWith :: forall a b c. (a -> b -> c) -> [a] -> [b] -> [c]
  zipWith3 :: forall a b c d. (a -> b -> c -> d) -> [a] -> [b] -> [c] -> [d]
  (||) :: Bool -> Bool -> Bool
  type (~) :: forall k. k -> k -> Constraint
  class (a ~ b) => (~) a b
    {-# MINIMAL #-}

module Distribution.Compat.Prelude.Internal where
  (!!) :: forall a. GHC.Internal.Stack.Types.HasCallStack => [a] -> Int -> a
  ($) :: forall (repa :: GHC.Types.RuntimeRep) (repb :: GHC.Types.RuntimeRep) (a :: TYPE repa) (b :: TYPE repb). (a -> b) -> a -> b
  ($!) :: forall (r :: GHC.Types.RuntimeRep) a (b :: TYPE r). (a -> b) -> a -> b
  (&&) :: Bool -> Bool -> Bool
  (++) :: forall a. [a] -> [a] -> [a]
  (.) :: forall b c a. (b -> c) -> (a -> b) -> a -> c
  (<$>) :: forall (f :: * -> *) a b. Functor f => (a -> b) -> f a -> f b
  (<+>) :: Text.PrettyPrint.HughesPJ.Doc -> Text.PrettyPrint.HughesPJ.Doc -> Text.PrettyPrint.HughesPJ.Doc
  (<<>>) :: Text.PrettyPrint.HughesPJ.Doc -> Text.PrettyPrint.HughesPJ.Doc -> Text.PrettyPrint.HughesPJ.Doc
  (=<<) :: forall (m :: * -> *) a b. Monad m => (a -> m b) -> m a -> m b
  type Alternative :: (* -> *) -> Constraint
  class Applicative f => Alternative f where
    empty :: forall a. f a
    (<|>) :: forall a. f a -> f a -> f a
    some :: forall a. f a -> f [a]
    many :: forall a. f a -> f [a]
    {-# MINIMAL empty, (<|>) #-}
  type Applicative :: (* -> *) -> Constraint
  class Functor f => Applicative f where
    pure :: forall a. a -> f a
    (<*>) :: forall a b. f (a -> b) -> f a -> f b
    liftA2 :: forall a b c. (a -> b -> c) -> f a -> f b -> f c
    (*>) :: forall a b. f a -> f b -> f b
    (<*) :: forall a b. f a -> f b -> f a
    {-# MINIMAL pure, ((<*>) | liftA2) #-}
  type Binary :: * -> Constraint
  class Binary t where
    put :: t -> Data.Binary.Put.Put
    default put :: (Generic t, binary-0.8.9.2:Data.Binary.Class.GBinaryPut (GHC.Internal.Generics.Rep t)) => t -> Data.Binary.Put.Put
    get :: Data.Binary.Get.Internal.Get t
    default get :: (Generic t, binary-0.8.9.2:Data.Binary.Class.GBinaryGet (GHC.Internal.Generics.Rep t)) => Data.Binary.Get.Internal.Get t
    putList :: [t] -> Data.Binary.Put.Put
    {-# MINIMAL #-}
  type Bool :: *
  data Bool = False | True
  type Bounded :: * -> Constraint
  class Bounded a where
    minBound :: a
    maxBound :: a
    {-# MINIMAL minBound, maxBound #-}
  type Char :: *
  data Char = ...
  type role Const representational phantom
  type Const :: forall {k}. * -> k -> *
  newtype Const a b = Const {getConst :: a}
  type Data :: * -> Constraint
  class Typeable a => Data a where
    ...
    {-# MINIMAL GHC.Internal.Data.Data.gunfold, GHC.Internal.Data.Data.toConstr, GHC.Internal.Data.Data.dataTypeOf #-}
  type Double :: *
  data Double = ...
  type Either :: * -> * -> *
  data Either a b = Left a | Right b
  type Enum :: * -> Constraint
  class Enum a where
    succ :: a -> a
    pred :: a -> a
    toEnum :: Int -> a
    fromEnum :: a -> Int
    enumFrom :: a -> [a]
    enumFromThen :: a -> a -> [a]
    enumFromTo :: a -> a -> [a]
    enumFromThenTo :: a -> a -> a -> [a]
    {-# MINIMAL toEnum, fromEnum #-}
  type Eq :: * -> Constraint
  class Eq a where
    (==) :: a -> a -> Bool
    (/=) :: a -> a -> Bool
    {-# MINIMAL (==) | (/=) #-}
  type Exception :: * -> Constraint
  class (Typeable e, Show e) => Exception e where
    toException :: e -> SomeException
    fromException :: SomeException -> Maybe e
    displayException :: e -> String
    backtraceDesired :: e -> Bool
    {-# MINIMAL #-}
  type ExitCode :: *
  data ExitCode = ExitSuccess | ExitFailure Int
  type FilePath :: *
  type FilePath = String
  type Float :: *
  data Float = ...
  type Floating :: * -> Constraint
  class Fractional a => Floating a where
    pi :: a
    exp :: a -> a
    log :: a -> a
    sqrt :: a -> a
    (**) :: a -> a -> a
    logBase :: a -> a -> a
    sin :: a -> a
    cos :: a -> a
    tan :: a -> a
    asin :: a -> a
    acos :: a -> a
    atan :: a -> a
    sinh :: a -> a
    cosh :: a -> a
    tanh :: a -> a
    asinh :: a -> a
    acosh :: a -> a
    atanh :: a -> a
    ...
    {-# MINIMAL pi, exp, log, sin, cos, asin, acos, atan, sinh, cosh, asinh, acosh, atanh #-}
  type Foldable :: (* -> *) -> Constraint
  class Foldable t where
    ...
    foldMap :: forall m a. Monoid m => (a -> m) -> t a -> m
    ...
    foldr :: forall a b. (a -> b -> b) -> b -> t a -> b
    ...
    foldl :: forall b a. (b -> a -> b) -> b -> t a -> b
    foldl' :: forall b a. (b -> a -> b) -> b -> t a -> b
    GHC.Internal.Data.Foldable.foldr1 :: forall a. (a -> a -> a) -> t a -> a
    GHC.Internal.Data.Foldable.foldl1 :: forall a. (a -> a -> a) -> t a -> a
    toList :: forall a. t a -> [a]
    null :: forall a. t a -> Bool
    length :: forall a. t a -> Int
    elem :: forall a. Eq a => a -> t a -> Bool
    maximum :: forall a. Ord a => t a -> a
    minimum :: forall a. Ord a => t a -> a
    sum :: forall a. Num a => t a -> a
    product :: forall a. Num a => t a -> a
    {-# MINIMAL foldMap | foldr #-}
  type Fractional :: * -> Constraint
  class Num a => Fractional a where
    (/) :: a -> a -> a
    recip :: a -> a
    fromRational :: Rational -> a
    {-# MINIMAL fromRational, (recip | (/)) #-}
  type Functor :: (* -> *) -> Constraint
  class Functor f where
    fmap :: forall a b. (a -> b) -> f a -> f b
    (<$) :: forall a b. a -> f b -> f a
    {-# MINIMAL fmap #-}
  type Generic :: * -> Constraint
  class Generic a where
    ...
    ...
    {-# MINIMAL GHC.Internal.Generics.from, GHC.Internal.Generics.to #-}
  type IO :: * -> *
  newtype IO a = ...
  type IOError :: *
  type IOError = IOException
  type IOException :: *
  data IOException = ...
  type Identity :: * -> *
  newtype Identity a = Identity {runIdentity :: a}
  type Int :: *
  data Int = ...
  type Int16 :: *
  data Int16 = ...
  type Int32 :: *
  data Int32 = ...
  type Int64 :: *
  data Int64 = ...
  type Int8 :: *
  data Int8 = ...
  type Integer :: *
  data Integer = ...
  type Integral :: * -> Constraint
  class (Real a, Enum a) => Integral a where
    quot :: a -> a -> a
    rem :: a -> a -> a
    div :: a -> a -> a
    mod :: a -> a -> a
    quotRem :: a -> a -> (a, a)
    divMod :: a -> a -> (a, a)
    toInteger :: a -> Integer
    {-# MINIMAL quotRem, toInteger #-}
  type IsString :: * -> Constraint
  class IsString a where
    fromString :: String -> a
    {-# MINIMAL fromString #-}
  type role Map nominal representational
  type Map :: * -> * -> *
  data Map k a = ...
  type Maybe :: * -> *
  data Maybe a = Nothing | Just a
  type Monad :: (* -> *) -> Constraint
  class Applicative m => Monad m where
    (>>=) :: forall a b. m a -> (a -> m b) -> m b
    (>>) :: forall a b. m a -> m b -> m b
    return :: forall a. a -> m a
    {-# MINIMAL (>>=) #-}
  type MonadFail :: (* -> *) -> Constraint
  class Monad m => MonadFail m where
    fail :: forall a. String -> m a
    {-# MINIMAL fail #-}
  type MonadPlus :: (* -> *) -> Constraint
  class (Alternative m, Monad m) => MonadPlus m where
    mzero :: forall a. m a
    mplus :: forall a. m a -> m a -> m a
    {-# MINIMAL #-}
  type Monoid :: * -> Constraint
  class Semigroup a => Monoid a where
    mempty :: a
    mappend :: a -> a -> a
    mconcat :: [a] -> a
    {-# MINIMAL mempty | mconcat #-}
  type NFData :: * -> Constraint
  class NFData a where
    rnf :: a -> ()
    default rnf :: (Generic a, Control.DeepSeq.GNFData Control.DeepSeq.Zero (GHC.Internal.Generics.Rep a)) => a -> ()
    {-# MINIMAL #-}
  type NonEmpty :: * -> *
  data NonEmpty a = a :| [a]
  type role NonEmptySet nominal
  type NonEmptySet :: * -> *
  newtype NonEmptySet a = ...
  type Num :: * -> Constraint
  class Num a where
    (+) :: a -> a -> a
    (-) :: a -> a -> a
    (*) :: a -> a -> a
    negate :: a -> a
    abs :: a -> a
    signum :: a -> a
    fromInteger :: Integer -> a
    {-# MINIMAL (+), (*), abs, signum, fromInteger, (negate | (-)) #-}
  type Ord :: * -> Constraint
  class Eq a => Ord a where
    compare :: a -> a -> Ordering
    (<) :: a -> a -> Bool
    (<=) :: a -> a -> Bool
    (>) :: a -> a -> Bool
    (>=) :: a -> a -> Bool
    max :: a -> a -> a
    min :: a -> a -> a
    {-# MINIMAL compare | (<=) #-}
  type Ordering :: *
  data Ordering = LT | EQ | GT
  type role Proxy phantom
  type Proxy :: forall {k}. k -> *
  data Proxy t = Proxy
  type Rational :: *
  type Rational = GHC.Internal.Real.Ratio Integer
  type Read :: * -> Constraint
  class Read a where
    readsPrec :: Int -> ReadS a
    readList :: ReadS [a]
    ...
    {-# MINIMAL readsPrec | GHC.Internal.Read.readPrec #-}
  type ReadS :: * -> *
  type ReadS a = String -> [(a, String)]
  type Real :: * -> Constraint
  class (Num a, Ord a) => Real a where
    toRational :: a -> Rational
    {-# MINIMAL toRational #-}
  type RealFloat :: * -> Constraint
  class (RealFrac a, Floating a) => RealFloat a where
    floatRadix :: a -> Integer
    floatDigits :: a -> Int
    floatRange :: a -> (Int, Int)
    decodeFloat :: a -> (Integer, Int)
    encodeFloat :: Integer -> Int -> a
    exponent :: a -> Int
    significand :: a -> a
    scaleFloat :: Int -> a -> a
    isNaN :: a -> Bool
    isInfinite :: a -> Bool
    isDenormalized :: a -> Bool
    isNegativeZero :: a -> Bool
    isIEEE :: a -> Bool
    atan2 :: a -> a -> a
    {-# MINIMAL floatRadix, floatDigits, floatRange, decodeFloat, encodeFloat, isNaN, isInfinite, isDenormalized, isNegativeZero, isIEEE #-}
  type RealFrac :: * -> Constraint
  class (Real a, Fractional a) => RealFrac a where
    properFraction :: forall b. Integral b => a -> (b, a)
    truncate :: forall b. Integral b => a -> b
    round :: forall b. Integral b => a -> b
    ceiling :: forall b. Integral b => a -> b
    floor :: forall b. Integral b => a -> b
    {-# MINIMAL properFraction #-}
  type Semigroup :: * -> Constraint
  class Semigroup a where
    (<>) :: a -> a -> a
    ...
    {-# MINIMAL (<>) | GHC.Internal.Base.sconcat #-}
  type role Set nominal
  type Set :: * -> *
  data Set a = ...
  type Show :: * -> Constraint
  class Show a where
    showsPrec :: Int -> a -> ShowS
    show :: a -> String
    showList :: [a] -> ShowS
    {-# MINIMAL showsPrec | show #-}
  type ShowS :: *
  type ShowS = String -> String
  type SomeException :: *
  data SomeException = forall e. (Exception e, GHC.Internal.Exception.Type.HasExceptionContext) => SomeException e
  type String :: *
  type String = [Char]
  type Structured :: * -> Constraint
  class Typeable a => Structured a where
    ...
    {-# MINIMAL #-}
  type Traversable :: (* -> *) -> Constraint
  class (Functor t, Foldable t) => Traversable t where
    traverse :: forall (f :: * -> *) a b. Applicative f => (a -> f b) -> t a -> f (t b)
    sequenceA :: forall (f :: * -> *) a. Applicative f => t (f a) -> f (t a)
    ...
    {-# MINIMAL traverse | sequenceA #-}
  type TypeRep :: *
  type TypeRep = ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.SomeTypeRep
  type Typeable :: forall k. k -> Constraint
  class Typeable a where
    ...
    {-# MINIMAL ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.typeRep# #-}
  type Void :: *
  data Void
  type Word :: *
  data Word = ...
  type Word16 :: *
  data Word16 = ...
  type Word32 :: *
  data Word32 = ...
  type Word64 :: *
  data Word64 = ...
  type Word8 :: *
  data Word8 = ...
  (^) :: forall a b. (Num a, Integral b) => a -> b -> a
  (^^) :: forall a b. (Fractional a, Integral b) => a -> b -> a
  absurd :: forall a. Void -> a
  all :: forall (t :: * -> *) a. Foldable t => (a -> Bool) -> t a -> Bool
  and :: forall (t :: * -> *). Foldable t => t Bool -> Bool
  any :: forall (t :: * -> *) a. Foldable t => (a -> Bool) -> t a -> Bool
  ap :: forall (m :: * -> *) a b. Monad m => m (a -> b) -> m a -> m b
  appendFile :: FilePath -> String -> IO ()
  asTypeOf :: forall a. a -> a -> a
  break :: forall a. (a -> Bool) -> [a] -> ([a], [a])
  catMaybes :: forall a. [Maybe a] -> [a]
  catch :: forall e a. Exception e => IO a -> (e -> IO a) -> IO a
  catchExit :: forall a. IO a -> (ExitCode -> IO a) -> IO a
  catchIO :: forall a. IO a -> (IOException -> IO a) -> IO a
  chr :: Int -> Char
  comparing :: forall a b. Ord a => (b -> a) -> b -> b -> Ordering
  concat :: forall (t :: * -> *) a. Foldable t => t [a] -> [a]
  concatMap :: forall (t :: * -> *) a b. Foldable t => (a -> [b]) -> t a -> [b]
  const :: forall a b. a -> b -> a
  curry :: forall a b c. ((a, b) -> c) -> a -> b -> c
  cycle :: forall a. GHC.Internal.Stack.Types.HasCallStack => [a] -> [a]
  deepseq :: forall a b. NFData a => a -> b -> b
  drop :: forall a. Int -> [a] -> [a]
  dropWhile :: forall a. (a -> Bool) -> [a] -> [a]
  dropWhileEnd :: forall a. (a -> Bool) -> [a] -> [a]
  either :: forall a c b. (a -> c) -> (b -> c) -> Either a b -> c
  error :: forall (r :: GHC.Types.RuntimeRep) (a :: TYPE r). GHC.Internal.Stack.Types.HasCallStack => [Char] -> a
  errorWithoutStackTrace :: forall (r :: GHC.Types.RuntimeRep) (a :: TYPE r). [Char] -> a
  evaluate :: forall a. a -> IO a
  even :: forall a. Integral a => a -> Bool
  exitFailure :: forall a. IO a
  exitSuccess :: forall a. IO a
  exitWith :: forall a. ExitCode -> IO a
  filter :: forall a. (a -> Bool) -> [a] -> [a]
  filterM :: forall (m :: * -> *) a. Applicative m => (a -> m Bool) -> [a] -> m [a]
  find :: forall (t :: * -> *) a. Foldable t => (a -> Bool) -> t a -> Maybe a
  first :: forall (a :: * -> * -> *) b c d. GHC.Internal.Control.Arrow.Arrow a => a b c -> a (b, d) (c, d)
  flip :: forall a b c. (a -> b -> c) -> b -> a -> c
  foldM :: forall (t :: * -> *) (m :: * -> *) b a. (Foldable t, Monad m) => (b -> a -> m b) -> b -> t a -> m b
  foldl1 :: forall a. (a -> a -> a) -> NonEmpty a -> a
  foldr1 :: forall a. (a -> a -> a) -> NonEmpty a -> a
  for :: forall (t :: * -> *) (f :: * -> *) a b. (Traversable t, Applicative f) => t a -> (a -> f b) -> f (t b)
  for_ :: forall (t :: * -> *) (f :: * -> *) a b. (Foldable t, Applicative f) => t a -> (a -> f b) -> f ()
  force :: forall a. NFData a => a -> a
  fromIntegral :: forall a b. (Integral a, Num b) => a -> b
  fromMaybe :: forall a. a -> Maybe a -> a
  fst :: forall a b. (a, b) -> a
  gcd :: forall a. Integral a => a -> a -> a
  genericRnf :: forall a. (Generic a, Distribution.Compat.Prelude.GNFData (GHC.Internal.Generics.Rep a)) => a -> ()
  getChar :: IO Char
  getContents :: IO String
  getLine :: IO String
  gmappend :: forall a. (Generic a, Distribution.Compat.Semigroup.GSemigroup (GHC.Internal.Generics.Rep a)) => a -> a -> a
  gmempty :: forall a. (Generic a, Distribution.Compat.Semigroup.GMonoid (GHC.Internal.Generics.Rep a)) => a
  guard :: forall (f :: * -> *). Alternative f => Bool -> f ()
  head :: forall a. NonEmpty a -> a
  id :: forall a. a -> a
  init :: forall a. NonEmpty a -> [a]
  interact :: (String -> String) -> IO ()
  intercalate :: forall a. [a] -> [[a]] -> [a]
  intersperse :: forall a. a -> [a] -> [a]
  ioError :: forall a. IOError -> IO a
  isAlpha :: Char -> Bool
  isAlphaNum :: Char -> Bool
  isDigit :: Char -> Bool
  isJust :: forall a. Maybe a -> Bool
  isNothing :: forall a. Maybe a -> Bool
  isPrefixOf :: forall a. Eq a => [a] -> [a] -> Bool
  isSpace :: Char -> Bool
  isSuffixOf :: forall a. Eq a => [a] -> [a] -> Bool
  isUpper :: Char -> Bool
  iterate :: forall a. (a -> a) -> a -> [a]
  join :: forall (m :: * -> *) a. Monad m => m (m a) -> m a
  last :: forall a. NonEmpty a -> a
  lcm :: forall a. Integral a => a -> a -> a
  lex :: ReadS String
  liftM :: forall (m :: * -> *) a1 r. Monad m => (a1 -> r) -> m a1 -> m r
  liftM2 :: forall (m :: * -> *) a1 a2 r. Monad m => (a1 -> a2 -> r) -> m a1 -> m a2 -> m r
  lines :: String -> [String]
  listToMaybe :: forall a. [a] -> Maybe a
  lookup :: forall a b. Eq a => a -> [(a, b)] -> Maybe b
  map :: forall a b. (a -> b) -> [a] -> [b]
  mapMaybe :: forall a b. (a -> Maybe b) -> [a] -> [b]
  maybe :: forall b a. b -> (a -> b) -> Maybe a -> b
  maybeToList :: forall a. Maybe a -> [a]
  nonEmpty :: forall a. [a] -> Maybe (NonEmpty a)
  not :: Bool -> Bool
  notElem :: forall (t :: * -> *) a. (Foldable t, Eq a) => a -> t a -> Bool
  nub :: forall a. Eq a => [a] -> [a]
  nubBy :: forall a. (a -> a -> Bool) -> [a] -> [a]
  odd :: forall a. Integral a => a -> Bool
  on :: forall b c a. (b -> b -> c) -> (a -> b) -> a -> a -> c
  or :: forall (t :: * -> *). Foldable t => t Bool -> Bool
  ord :: Char -> Int
  otherwise :: Bool
  partition :: forall a. (a -> Bool) -> [a] -> ([a], [a])
  partitionEithers :: forall a b. [Either a b] -> ([a], [b])
  print :: forall a. Show a => a -> IO ()
  putChar :: Char -> IO ()
  putStr :: String -> IO ()
  putStrLn :: String -> IO ()
  readFile :: FilePath -> IO String
  readIO :: forall a. Read a => String -> IO a
  readLn :: forall a. Read a => IO a
  readMaybe :: forall a. Read a => String -> Maybe a
  readParen :: forall a. Bool -> ReadS a -> ReadS a
  reads :: forall a. Read a => ReadS a
  realToFrac :: forall a b. (Real a, Fractional b) => a -> b
  repeat :: forall a. a -> [a]
  replicate :: forall a. Int -> a -> [a]
  reverse :: forall a. [a] -> [a]
  scanl :: forall b a. (b -> a -> b) -> b -> [a] -> [b]
  scanl1 :: forall a. (a -> a -> a) -> [a] -> [a]
  scanr :: forall a b. (a -> b -> b) -> b -> [a] -> [b]
  scanr1 :: forall a. (a -> a -> a) -> [a] -> [a]
  seq :: forall {r :: GHC.Types.RuntimeRep} a (b :: TYPE r). a -> b -> b
  sequence_ :: forall (t :: * -> *) (m :: * -> *) a. (Foldable t, Monad m) => t (m a) -> m ()
  showChar :: Char -> ShowS
  showParen :: Bool -> ShowS -> ShowS
  showString :: String -> ShowS
  shows :: forall a. Show a => a -> ShowS
  snd :: forall a b. (a, b) -> b
  sort :: forall a. Ord a => [a] -> [a]
  sortBy :: forall a. (a -> a -> Ordering) -> [a] -> [a]
  span :: forall a. (a -> Bool) -> [a] -> ([a], [a])
  splitAt :: forall a. Int -> [a] -> ([a], [a])
  subtract :: forall a. Num a => a -> a -> a
  tail :: forall a. NonEmpty a -> [a]
  take :: forall a. Int -> [a] -> [a]
  takeWhile :: forall a. (a -> Bool) -> [a] -> [a]
  throwIO :: forall e a. (GHC.Internal.Stack.Types.HasCallStack, Exception e) => e -> IO a
  toLower :: Char -> Char
  toUpper :: Char -> Char
  trace :: forall a. String -> a -> a
  traceM :: forall (f :: * -> *). Applicative f => String -> f ()
  traceShow :: forall a b. Show a => a -> b -> b
  traceShowId :: forall a. Show a => a -> a
  traceShowM :: forall a (f :: * -> *). (Show a, Applicative f) => a -> f ()
  traverse_ :: forall (t :: * -> *) (f :: * -> *) a b. (Foldable t, Applicative f) => (a -> f b) -> t a -> f ()
  tryIO :: forall a. IO a -> IO (Either IOException a)
  typeRep :: forall {k} (proxy :: k -> *) (a :: k). Typeable a => proxy a -> TypeRep
  uncurry :: forall a b c. (a -> b -> c) -> (a, b) -> c
  undefined :: forall (r :: GHC.Types.RuntimeRep) (a :: TYPE r). GHC.Internal.Stack.Types.HasCallStack => a
  unfoldr :: forall b a. (b -> Maybe (a, b)) -> b -> [a]
  unless :: forall (f :: * -> *). Applicative f => Bool -> f () -> f ()
  unlines :: [String] -> String
  until :: forall a. (a -> Bool) -> (a -> a) -> a -> a
  unwords :: [String] -> String
  unzip :: forall a b. [(a, b)] -> ([a], [b])
  unzip3 :: forall a b c. [(a, b, c)] -> ([a], [b], [c])
  userError :: String -> IOError
  vacuous :: forall (f :: * -> *) a. Functor f => f Void -> f a
  void :: forall (f :: * -> *) a. Functor f => f a -> f ()
  when :: forall (f :: * -> *). Applicative f => Bool -> f () -> f ()
  words :: String -> [String]
  writeFile :: FilePath -> String -> IO ()
  zip :: forall a b. [a] -> [b] -> [(a, b)]
  zip3 :: forall a b c. [a] -> [b] -> [c] -> [(a, b, c)]
  zipWith :: forall a b c. (a -> b -> c) -> [a] -> [b] -> [c]
  zipWith3 :: forall a b c d. (a -> b -> c -> d) -> [a] -> [b] -> [c] -> [d]
  (||) :: Bool -> Bool -> Bool
  type (~) :: forall k. k -> k -> Constraint
  class (a ~ b) => (~) a b
    {-# MINIMAL #-}

module Distribution.Compat.Process where
  enableProcessJobs :: process-1.6.19.0:System.Process.Common.CreateProcess -> process-1.6.19.0:System.Process.Common.CreateProcess
  proc :: GHC.Internal.IO.FilePath -> [GHC.Internal.Base.String] -> process-1.6.19.0:System.Process.Common.CreateProcess

module Distribution.Compat.ResponseFile where
  escapeArgs :: [GHC.Internal.Base.String] -> GHC.Internal.Base.String
  expandResponse :: [GHC.Internal.Base.String] -> GHC.Types.IO [GHC.Internal.Base.String]

module Distribution.Compat.Semigroup where
  type All :: *
  newtype All = All {getAll :: GHC.Types.Bool}
  type Any :: *
  newtype Any = Any {getAny :: GHC.Types.Bool}
  type First' :: * -> *
  newtype First' a = First' {getFirst' :: a}
  type Last' :: * -> *
  newtype Last' a = Last' {getLast' :: a}
  type Monoid :: * -> Constraint
  class Semigroup a => Monoid a where
    mempty :: a
    mappend :: a -> a -> a
    mconcat :: [a] -> a
    {-# MINIMAL mempty | mconcat #-}
  type Option' :: * -> *
  newtype Option' a = Option' {getOption' :: GHC.Internal.Maybe.Maybe a}
  type Semigroup :: * -> Constraint
  class Semigroup a where
    (<>) :: a -> a -> a
    ...
    {-# MINIMAL (<>) | GHC.Internal.Base.sconcat #-}
  gmappend :: forall a. (GHC.Internal.Generics.Generic a, Distribution.Compat.Semigroup.GSemigroup (GHC.Internal.Generics.Rep a)) => a -> a -> a
  gmempty :: forall a. (GHC.Internal.Generics.Generic a, Distribution.Compat.Semigroup.GMonoid (GHC.Internal.Generics.Rep a)) => a

module Distribution.Compat.Stack where
  type CallStack :: *
  data CallStack = ...
  type WithCallStack :: * -> *
  type WithCallStack a = GHC.Internal.Stack.Types.HasCallStack => a
  annotateCallStackIO :: forall a. WithCallStack (GHC.Types.IO a -> GHC.Types.IO a)
  callStack :: GHC.Internal.Stack.Types.HasCallStack => CallStack
  parentSrcLocPrefix :: WithCallStack GHC.Internal.Base.String
  prettyCallStack :: CallStack -> GHC.Internal.Base.String
  withFrozenCallStack :: forall a. GHC.Internal.Stack.Types.HasCallStack => (GHC.Internal.Stack.Types.HasCallStack => a) -> a
  withLexicalCallStack :: forall a b. (a -> WithCallStack (GHC.Types.IO b)) -> WithCallStack (a -> GHC.Types.IO b)

module Distribution.Compat.Time where
  type ModTime :: *
  newtype ModTime = ModTime GHC.Internal.Word.Word64
  calibrateMtimeChangeDelay :: GHC.Types.IO (GHC.Types.Int, GHC.Types.Int)
  getCurTime :: GHC.Types.IO ModTime
  getFileAge :: GHC.Internal.IO.FilePath -> GHC.Types.IO GHC.Types.Double
  getModTime :: GHC.Internal.IO.FilePath -> GHC.Types.IO ModTime
  posixSecondsToModTime :: GHC.Internal.Int.Int64 -> ModTime

module Distribution.Compiler where
  type AbiTag :: *
  data AbiTag = NoAbiTag | AbiTag GHC.Internal.Base.String
  type CompilerFlavor :: *
  data CompilerFlavor = GHC | GHCJS | NHC | YHC | Hugs | HBC | Helium | JHC | LHC | UHC | Eta | MHS | HaskellSuite GHC.Internal.Base.String | OtherCompiler GHC.Internal.Base.String
  type CompilerId :: *
  data CompilerId = CompilerId CompilerFlavor Distribution.Types.Version.Version
  type CompilerInfo :: *
  data CompilerInfo = CompilerInfo {compilerInfoId :: CompilerId, compilerInfoAbiTag :: AbiTag, compilerInfoCompat :: GHC.Internal.Maybe.Maybe [CompilerId], compilerInfoLanguages :: GHC.Internal.Maybe.Maybe [Language.Haskell.Extension.Language], compilerInfoExtensions :: GHC.Internal.Maybe.Maybe [Language.Haskell.Extension.Extension]}
  type PerCompilerFlavor :: * -> *
  data PerCompilerFlavor v = PerCompilerFlavor v v
  abiTagString :: AbiTag -> GHC.Internal.Base.String
  buildCompilerFlavor :: CompilerFlavor
  buildCompilerId :: CompilerId
  classifyCompilerFlavor :: GHC.Internal.Base.String -> CompilerFlavor
  defaultCompilerFlavor :: GHC.Internal.Maybe.Maybe CompilerFlavor
  knownCompilerFlavors :: [CompilerFlavor]
  perCompilerFlavorToList :: forall v. PerCompilerFlavor v -> [(CompilerFlavor, v)]
  unknownCompilerInfo :: CompilerId -> AbiTag -> CompilerInfo

module Distribution.FieldGrammar where
  type CommaFSep :: *
  data CommaFSep = CommaFSep
  type CommaVCat :: *
  data CommaVCat = CommaVCat
  type FSep :: *
  data FSep = FSep
  type FieldGrammar :: (* -> Constraint) -> (* -> * -> *) -> Constraint
  class (c SpecVersion, c TestedWith, c SpecLicense, c Token, c Token', c FilePathNT) => FieldGrammar c g | g -> c where
    blurFieldGrammar :: forall a b d. Distribution.Compat.Lens.ALens' a b -> g b d -> g a d
    uniqueFieldAla :: forall b a s. (c b, Distribution.Compat.Newtype.Newtype a b) => Distribution.Fields.Field.FieldName -> (a -> b) -> Distribution.Compat.Lens.ALens' s a -> g s a
    booleanFieldDef :: forall s. Distribution.Fields.Field.FieldName -> Distribution.Compat.Lens.ALens' s GHC.Types.Bool -> GHC.Types.Bool -> g s GHC.Types.Bool
    optionalFieldAla :: forall b a s. (c b, Distribution.Compat.Newtype.Newtype a b) => Distribution.Fields.Field.FieldName -> (a -> b) -> Distribution.Compat.Lens.ALens' s (GHC.Internal.Maybe.Maybe a) -> g s (GHC.Internal.Maybe.Maybe a)
    optionalFieldDefAla :: forall b a s. (c b, Distribution.Compat.Newtype.Newtype a b, GHC.Classes.Eq a) => Distribution.Fields.Field.FieldName -> (a -> b) -> Distribution.Compat.Lens.ALens' s a -> a -> g s a
    freeTextField :: forall s. Distribution.Fields.Field.FieldName -> Distribution.Compat.Lens.ALens' s (GHC.Internal.Maybe.Maybe GHC.Internal.Base.String) -> g s (GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)
    freeTextFieldDef :: forall s. Distribution.Fields.Field.FieldName -> Distribution.Compat.Lens.ALens' s GHC.Internal.Base.String -> g s GHC.Internal.Base.String
    freeTextFieldDefST :: forall s. Distribution.Fields.Field.FieldName -> Distribution.Compat.Lens.ALens' s Distribution.Utils.ShortText.ShortText -> g s Distribution.Utils.ShortText.ShortText
    monoidalFieldAla :: forall b a s. (c b, GHC.Internal.Base.Monoid a, Distribution.Compat.Newtype.Newtype a b) => Distribution.Fields.Field.FieldName -> (a -> b) -> Distribution.Compat.Lens.ALens' s a -> g s a
    prefixedFields :: forall s. Distribution.Fields.Field.FieldName -> Distribution.Compat.Lens.ALens' s [(GHC.Internal.Base.String, GHC.Internal.Base.String)] -> g s [(GHC.Internal.Base.String, GHC.Internal.Base.String)]
    knownField :: forall s. Distribution.Fields.Field.FieldName -> g s ()
    hiddenField :: forall s a. g s a -> g s a
    deprecatedSince :: forall s a. Distribution.CabalSpecVersion.CabalSpecVersion -> GHC.Internal.Base.String -> g s a -> g s a
    removedIn :: forall s a. Distribution.CabalSpecVersion.CabalSpecVersion -> GHC.Internal.Base.String -> g s a -> g s a
    availableSince :: forall a s. Distribution.CabalSpecVersion.CabalSpecVersion -> a -> g s a -> g s a
    availableSinceWarn :: forall s a. Distribution.CabalSpecVersion.CabalSpecVersion -> g s a -> g s a
    {-# MINIMAL blurFieldGrammar, uniqueFieldAla, booleanFieldDef, optionalFieldAla, optionalFieldDefAla, freeTextField, freeTextFieldDef, freeTextFieldDefST, monoidalFieldAla, prefixedFields, knownField, hiddenField, deprecatedSince, removedIn, availableSince #-}
  type Fields :: * -> *
  type Fields ann = Data.Map.Internal.Map Distribution.Fields.Field.FieldName [Distribution.FieldGrammar.Parsec.NamelessField ann]
  type FilePathNT :: *
  newtype FilePathNT = FilePathNT {getFilePathNT :: GHC.Internal.Base.String}
  type role List phantom phantom representational
  type List :: * -> * -> * -> *
  newtype List sep b a = ...
  type MQuoted :: * -> *
  newtype MQuoted a = MQuoted {getMQuoted :: a}
  type NoCommaFSep :: *
  data NoCommaFSep = NoCommaFSep
  type role NonEmpty' phantom phantom representational
  type NonEmpty' :: * -> * -> * -> *
  newtype NonEmpty' sep b a = ...
  type role ParsecFieldGrammar phantom representational
  type ParsecFieldGrammar :: * -> * -> *
  data ParsecFieldGrammar s a = ...
  type ParsecFieldGrammar' :: * -> *
  type ParsecFieldGrammar' a = ParsecFieldGrammar a a
  type role PrettyFieldGrammar representational phantom
  type PrettyFieldGrammar :: * -> * -> *
  newtype PrettyFieldGrammar s a = ...
  type PrettyFieldGrammar' :: * -> *
  type PrettyFieldGrammar' a = PrettyFieldGrammar a a
  type role RelativePathNT nominal nominal
  type RelativePathNT :: * -> Distribution.Utils.Path.FileOrDir -> *
  newtype RelativePathNT from to = RelativePathNT {getRelativePathNT :: Distribution.Utils.Path.RelativePath from to}
  type Section :: * -> *
  data Section ann = MkSection !(Distribution.Fields.Field.Name ann) [Distribution.Fields.Field.SectionArg ann] [Distribution.Fields.Field.Field ann]
  type Sep :: * -> Constraint
  class Sep sep where
    prettySep :: GHC.Internal.Data.Proxy.Proxy sep -> [Text.PrettyPrint.HughesPJ.Doc] -> Text.PrettyPrint.HughesPJ.Doc
    parseSep :: forall (m :: * -> *) a. Distribution.Parsec.CabalParsing m => GHC.Internal.Data.Proxy.Proxy sep -> m a -> m [a]
    parseSepNE :: forall (m :: * -> *) a. Distribution.Parsec.CabalParsing m => GHC.Internal.Data.Proxy.Proxy sep -> m a -> m (GHC.Internal.Base.NonEmpty a)
    {-# MINIMAL prettySep, parseSep, parseSepNE #-}
  type role Set' phantom phantom nominal
  type Set' :: * -> * -> * -> *
  newtype Set' sep b a = ...
  type SpecLicense :: *
  newtype SpecLicense = SpecLicense {getSpecLicense :: GHC.Internal.Data.Either.Either Distribution.SPDX.License.License Distribution.License.License}
  type SpecVersion :: *
  newtype SpecVersion = SpecVersion {getSpecVersion :: Distribution.CabalSpecVersion.CabalSpecVersion}
  type role SymbolicPathNT nominal nominal
  type SymbolicPathNT :: * -> Distribution.Utils.Path.FileOrDir -> *
  newtype SymbolicPathNT from to = SymbolicPathNT {getSymbolicPathNT :: Distribution.Utils.Path.SymbolicPath from to}
  type TestedWith :: *
  newtype TestedWith = TestedWith {getTestedWith :: (Distribution.Compiler.CompilerFlavor, Distribution.Types.VersionRange.Internal.VersionRange)}
  type Token :: *
  newtype Token = Token {getToken :: GHC.Internal.Base.String}
  type Token' :: *
  newtype Token' = Token' {getToken' :: GHC.Internal.Base.String}
  type VCat :: *
  data VCat = VCat
  (^^^) :: forall a b. a -> (a -> b) -> b
  alaList :: forall sep a. sep -> [a] -> List sep (GHC.Internal.Data.Functor.Identity.Identity a) a
  alaList' :: forall sep a b. sep -> (a -> b) -> [a] -> List sep b a
  alaNonEmpty :: forall sep a. sep -> GHC.Internal.Base.NonEmpty a -> NonEmpty' sep (GHC.Internal.Data.Functor.Identity.Identity a) a
  alaNonEmpty' :: forall sep a b. sep -> (a -> b) -> GHC.Internal.Base.NonEmpty a -> NonEmpty' sep b a
  alaSet :: forall sep a. sep -> Data.Set.Internal.Set a -> Set' sep (GHC.Internal.Data.Functor.Identity.Identity a) a
  alaSet' :: forall sep a b. sep -> (a -> b) -> Data.Set.Internal.Set a -> Set' sep b a
  defaultFreeTextFieldDefST :: forall (g :: * -> * -> *) s (c :: * -> Constraint). (GHC.Internal.Base.Functor (g s), FieldGrammar c g) => Distribution.Fields.Field.FieldName -> Distribution.Compat.Lens.ALens' s Distribution.Utils.ShortText.ShortText -> g s Distribution.Utils.ShortText.ShortText
  fieldGrammarKnownFieldList :: forall s a. ParsecFieldGrammar s a -> [Distribution.Fields.Field.FieldName]
  monoidalField :: forall (c :: * -> Constraint) (g :: * -> * -> *) a s. (FieldGrammar c g, c (GHC.Internal.Data.Functor.Identity.Identity a), GHC.Internal.Base.Monoid a) => Distribution.Fields.Field.FieldName -> Distribution.Compat.Lens.ALens' s a -> g s a
  optionalField :: forall (c :: * -> Constraint) (g :: * -> * -> *) a s. (FieldGrammar c g, c (GHC.Internal.Data.Functor.Identity.Identity a)) => Distribution.Fields.Field.FieldName -> Distribution.Compat.Lens.ALens' s (GHC.Internal.Maybe.Maybe a) -> g s (GHC.Internal.Maybe.Maybe a)
  optionalFieldDef :: forall (c :: * -> Constraint) (g :: * -> * -> *) s a. (FieldGrammar c g, GHC.Internal.Base.Functor (g s), c (GHC.Internal.Data.Functor.Identity.Identity a), GHC.Classes.Eq a) => Distribution.Fields.Field.FieldName -> Distribution.Compat.Lens.ALens' s a -> a -> g s a
  parseFieldGrammar :: forall s a. Distribution.CabalSpecVersion.CabalSpecVersion -> Fields Distribution.Parsec.Position.Position -> ParsecFieldGrammar s a -> Distribution.Fields.ParseResult.ParseResult a
  partitionFields :: forall ann. [Distribution.Fields.Field.Field ann] -> (Fields ann, [[Section ann]])
  prettyFieldGrammar :: forall s a. Distribution.CabalSpecVersion.CabalSpecVersion -> PrettyFieldGrammar s a -> s -> [Distribution.Fields.Pretty.PrettyField ()]
  runFieldParser :: forall a. Distribution.Parsec.Position.Position -> Distribution.Parsec.ParsecParser a -> Distribution.CabalSpecVersion.CabalSpecVersion -> [Distribution.Fields.Field.FieldLine Distribution.Parsec.Position.Position] -> Distribution.Fields.ParseResult.ParseResult a
  runFieldParser' :: forall a. [Distribution.Parsec.Position.Position] -> Distribution.Parsec.ParsecParser a -> Distribution.CabalSpecVersion.CabalSpecVersion -> Distribution.Parsec.FieldLineStream.FieldLineStream -> Distribution.Fields.ParseResult.ParseResult a
  takeFields :: forall ann. [Distribution.Fields.Field.Field ann] -> (Fields ann, [Distribution.Fields.Field.Field ann])
  uniqueField :: forall (c :: * -> Constraint) (g :: * -> * -> *) a s. (FieldGrammar c g, c (GHC.Internal.Data.Functor.Identity.Identity a)) => Distribution.Fields.Field.FieldName -> Distribution.Compat.Lens.ALens' s a -> g s a

module Distribution.FieldGrammar.Class where
  type FieldGrammar :: (* -> Constraint) -> (* -> * -> *) -> Constraint
  class (c Distribution.FieldGrammar.Newtypes.SpecVersion, c Distribution.FieldGrammar.Newtypes.TestedWith, c Distribution.FieldGrammar.Newtypes.SpecLicense, c Distribution.FieldGrammar.Newtypes.Token, c Distribution.FieldGrammar.Newtypes.Token', c Distribution.FieldGrammar.Newtypes.FilePathNT) => FieldGrammar c g | g -> c where
    blurFieldGrammar :: forall a b d. Distribution.Compat.Lens.ALens' a b -> g b d -> g a d
    uniqueFieldAla :: forall b a s. (c b, Distribution.Compat.Newtype.Newtype a b) => Distribution.Fields.Field.FieldName -> (a -> b) -> Distribution.Compat.Lens.ALens' s a -> g s a
    booleanFieldDef :: forall s. Distribution.Fields.Field.FieldName -> Distribution.Compat.Lens.ALens' s GHC.Types.Bool -> GHC.Types.Bool -> g s GHC.Types.Bool
    optionalFieldAla :: forall b a s. (c b, Distribution.Compat.Newtype.Newtype a b) => Distribution.Fields.Field.FieldName -> (a -> b) -> Distribution.Compat.Lens.ALens' s (GHC.Internal.Maybe.Maybe a) -> g s (GHC.Internal.Maybe.Maybe a)
    optionalFieldDefAla :: forall b a s. (c b, Distribution.Compat.Newtype.Newtype a b, GHC.Classes.Eq a) => Distribution.Fields.Field.FieldName -> (a -> b) -> Distribution.Compat.Lens.ALens' s a -> a -> g s a
    freeTextField :: forall s. Distribution.Fields.Field.FieldName -> Distribution.Compat.Lens.ALens' s (GHC.Internal.Maybe.Maybe GHC.Internal.Base.String) -> g s (GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)
    freeTextFieldDef :: forall s. Distribution.Fields.Field.FieldName -> Distribution.Compat.Lens.ALens' s GHC.Internal.Base.String -> g s GHC.Internal.Base.String
    freeTextFieldDefST :: forall s. Distribution.Fields.Field.FieldName -> Distribution.Compat.Lens.ALens' s Distribution.Utils.ShortText.ShortText -> g s Distribution.Utils.ShortText.ShortText
    monoidalFieldAla :: forall b a s. (c b, GHC.Internal.Base.Monoid a, Distribution.Compat.Newtype.Newtype a b) => Distribution.Fields.Field.FieldName -> (a -> b) -> Distribution.Compat.Lens.ALens' s a -> g s a
    prefixedFields :: forall s. Distribution.Fields.Field.FieldName -> Distribution.Compat.Lens.ALens' s [(GHC.Internal.Base.String, GHC.Internal.Base.String)] -> g s [(GHC.Internal.Base.String, GHC.Internal.Base.String)]
    knownField :: forall s. Distribution.Fields.Field.FieldName -> g s ()
    hiddenField :: forall s a. g s a -> g s a
    deprecatedSince :: forall s a. Distribution.CabalSpecVersion.CabalSpecVersion -> GHC.Internal.Base.String -> g s a -> g s a
    removedIn :: forall s a. Distribution.CabalSpecVersion.CabalSpecVersion -> GHC.Internal.Base.String -> g s a -> g s a
    availableSince :: forall a s. Distribution.CabalSpecVersion.CabalSpecVersion -> a -> g s a -> g s a
    availableSinceWarn :: forall s a. Distribution.CabalSpecVersion.CabalSpecVersion -> g s a -> g s a
    {-# MINIMAL blurFieldGrammar, uniqueFieldAla, booleanFieldDef, optionalFieldAla, optionalFieldDefAla, freeTextField, freeTextFieldDef, freeTextFieldDefST, monoidalFieldAla, prefixedFields, knownField, hiddenField, deprecatedSince, removedIn, availableSince #-}
  defaultFreeTextFieldDefST :: forall (g :: * -> * -> *) s (c :: * -> Constraint). (GHC.Internal.Base.Functor (g s), FieldGrammar c g) => Distribution.Fields.Field.FieldName -> Distribution.Compat.Lens.ALens' s Distribution.Utils.ShortText.ShortText -> g s Distribution.Utils.ShortText.ShortText
  monoidalField :: forall (c :: * -> Constraint) (g :: * -> * -> *) a s. (FieldGrammar c g, c (GHC.Internal.Data.Functor.Identity.Identity a), GHC.Internal.Base.Monoid a) => Distribution.Fields.Field.FieldName -> Distribution.Compat.Lens.ALens' s a -> g s a
  optionalField :: forall (c :: * -> Constraint) (g :: * -> * -> *) a s. (FieldGrammar c g, c (GHC.Internal.Data.Functor.Identity.Identity a)) => Distribution.Fields.Field.FieldName -> Distribution.Compat.Lens.ALens' s (GHC.Internal.Maybe.Maybe a) -> g s (GHC.Internal.Maybe.Maybe a)
  optionalFieldDef :: forall (c :: * -> Constraint) (g :: * -> * -> *) s a. (FieldGrammar c g, GHC.Internal.Base.Functor (g s), c (GHC.Internal.Data.Functor.Identity.Identity a), GHC.Classes.Eq a) => Distribution.Fields.Field.FieldName -> Distribution.Compat.Lens.ALens' s a -> a -> g s a
  uniqueField :: forall (c :: * -> Constraint) (g :: * -> * -> *) a s. (FieldGrammar c g, c (GHC.Internal.Data.Functor.Identity.Identity a)) => Distribution.Fields.Field.FieldName -> Distribution.Compat.Lens.ALens' s a -> g s a

module Distribution.FieldGrammar.FieldDescrs where
  type role FieldDescrs nominal phantom
  type FieldDescrs :: * -> * -> *
  newtype FieldDescrs s a = ...
  fieldDescrParse :: forall (m :: * -> *) s a. Distribution.Parsec.CabalParsing m => FieldDescrs s a -> Distribution.Fields.Field.FieldName -> GHC.Internal.Maybe.Maybe (s -> m s)
  fieldDescrPretty :: forall s a. FieldDescrs s a -> Distribution.Fields.Field.FieldName -> GHC.Internal.Maybe.Maybe (s -> Text.PrettyPrint.HughesPJ.Doc)
  fieldDescrsToList :: forall (m :: * -> *) s a. Distribution.Parsec.CabalParsing m => FieldDescrs s a -> [(Distribution.Fields.Field.FieldName, s -> Text.PrettyPrint.HughesPJ.Doc, s -> m s)]

module Distribution.FieldGrammar.Newtypes where
  type CommaFSep :: *
  data CommaFSep = CommaFSep
  type CommaVCat :: *
  data CommaVCat = CommaVCat
  type FSep :: *
  data FSep = FSep
  type FilePathNT :: *
  newtype FilePathNT = FilePathNT {getFilePathNT :: GHC.Internal.Base.String}
  type role List phantom phantom representational
  type List :: * -> * -> * -> *
  newtype List sep b a = ...
  type MQuoted :: * -> *
  newtype MQuoted a = MQuoted {getMQuoted :: a}
  type NoCommaFSep :: *
  data NoCommaFSep = NoCommaFSep
  type role NonEmpty' phantom phantom representational
  type NonEmpty' :: * -> * -> * -> *
  newtype NonEmpty' sep b a = ...
  type role RelativePathNT nominal nominal
  type RelativePathNT :: * -> Distribution.Utils.Path.FileOrDir -> *
  newtype RelativePathNT from to = RelativePathNT {getRelativePathNT :: Distribution.Utils.Path.RelativePath from to}
  type Sep :: * -> Constraint
  class Sep sep where
    prettySep :: GHC.Internal.Data.Proxy.Proxy sep -> [Text.PrettyPrint.HughesPJ.Doc] -> Text.PrettyPrint.HughesPJ.Doc
    parseSep :: forall (m :: * -> *) a. Distribution.Parsec.CabalParsing m => GHC.Internal.Data.Proxy.Proxy sep -> m a -> m [a]
    parseSepNE :: forall (m :: * -> *) a. Distribution.Parsec.CabalParsing m => GHC.Internal.Data.Proxy.Proxy sep -> m a -> m (GHC.Internal.Base.NonEmpty a)
    {-# MINIMAL prettySep, parseSep, parseSepNE #-}
  type role Set' phantom phantom nominal
  type Set' :: * -> * -> * -> *
  newtype Set' sep b a = ...
  type SpecLicense :: *
  newtype SpecLicense = SpecLicense {getSpecLicense :: GHC.Internal.Data.Either.Either Distribution.SPDX.License.License Distribution.License.License}
  type SpecVersion :: *
  newtype SpecVersion = SpecVersion {getSpecVersion :: Distribution.CabalSpecVersion.CabalSpecVersion}
  type role SymbolicPathNT nominal nominal
  type SymbolicPathNT :: * -> Distribution.Utils.Path.FileOrDir -> *
  newtype SymbolicPathNT from to = SymbolicPathNT {getSymbolicPathNT :: Distribution.Utils.Path.SymbolicPath from to}
  type TestedWith :: *
  newtype TestedWith = TestedWith {getTestedWith :: (Distribution.Compiler.CompilerFlavor, Distribution.Types.VersionRange.Internal.VersionRange)}
  type Token :: *
  newtype Token = Token {getToken :: GHC.Internal.Base.String}
  type Token' :: *
  newtype Token' = Token' {getToken' :: GHC.Internal.Base.String}
  type VCat :: *
  data VCat = VCat
  alaList :: forall sep a. sep -> [a] -> List sep (GHC.Internal.Data.Functor.Identity.Identity a) a
  alaList' :: forall sep a b. sep -> (a -> b) -> [a] -> List sep b a
  alaNonEmpty :: forall sep a. sep -> GHC.Internal.Base.NonEmpty a -> NonEmpty' sep (GHC.Internal.Data.Functor.Identity.Identity a) a
  alaNonEmpty' :: forall sep a b. sep -> (a -> b) -> GHC.Internal.Base.NonEmpty a -> NonEmpty' sep b a
  alaSet :: forall sep a. sep -> Data.Set.Internal.Set a -> Set' sep (GHC.Internal.Data.Functor.Identity.Identity a) a
  alaSet' :: forall sep a b. sep -> (a -> b) -> Data.Set.Internal.Set a -> Set' sep b a

module Distribution.FieldGrammar.Parsec where
  type Fields :: * -> *
  type Fields ann = Data.Map.Internal.Map Distribution.Fields.Field.FieldName [NamelessField ann]
  type NamelessField :: * -> *
  data NamelessField ann = MkNamelessField !ann [Distribution.Fields.Field.FieldLine ann]
  type role ParsecFieldGrammar phantom representational
  type ParsecFieldGrammar :: * -> * -> *
  data ParsecFieldGrammar s a = ...
  type Section :: * -> *
  data Section ann = MkSection !(Distribution.Fields.Field.Name ann) [Distribution.Fields.Field.SectionArg ann] [Distribution.Fields.Field.Field ann]
  fieldGrammarKnownFieldList :: forall s a. ParsecFieldGrammar s a -> [Distribution.Fields.Field.FieldName]
  fieldLinesToStream :: forall ann. [Distribution.Fields.Field.FieldLine ann] -> Distribution.Parsec.FieldLineStream.FieldLineStream
  namelessFieldAnn :: forall ann. NamelessField ann -> ann
  parseFieldGrammar :: forall s a. Distribution.CabalSpecVersion.CabalSpecVersion -> Fields Distribution.Parsec.Position.Position -> ParsecFieldGrammar s a -> Distribution.Fields.ParseResult.ParseResult a
  runFieldParser :: forall a. Distribution.Parsec.Position.Position -> Distribution.Parsec.ParsecParser a -> Distribution.CabalSpecVersion.CabalSpecVersion -> [Distribution.Fields.Field.FieldLine Distribution.Parsec.Position.Position] -> Distribution.Fields.ParseResult.ParseResult a
  runFieldParser' :: forall a. [Distribution.Parsec.Position.Position] -> Distribution.Parsec.ParsecParser a -> Distribution.CabalSpecVersion.CabalSpecVersion -> Distribution.Parsec.FieldLineStream.FieldLineStream -> Distribution.Fields.ParseResult.ParseResult a

module Distribution.FieldGrammar.Pretty where
  type role PrettyFieldGrammar representational phantom
  type PrettyFieldGrammar :: * -> * -> *
  newtype PrettyFieldGrammar s a = ...
  prettyFieldGrammar :: forall s a. Distribution.CabalSpecVersion.CabalSpecVersion -> PrettyFieldGrammar s a -> s -> [Distribution.Fields.Pretty.PrettyField ()]

module Distribution.Fields where
  type CommentPosition :: *
  data CommentPosition = CommentBefore [GHC.Internal.Base.String] | CommentAfter [GHC.Internal.Base.String] | NoComment
  type Field :: * -> *
  data Field ann = Field !(Name ann) [FieldLine ann] | Section !(Name ann) [SectionArg ann] [Field ann]
  type FieldLine :: * -> *
  data FieldLine ann = FieldLine !ann !bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString
  type FieldName :: *
  type FieldName = bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString
  type Name :: * -> *
  data Name ann = Name !ann !FieldName
  type PError :: *
  data PError = PError Distribution.Parsec.Position.Position GHC.Internal.Base.String
  type PWarnType :: *
  data PWarnType = PWTOther | PWTUTF | PWTBoolCase | PWTVersionTag | PWTNewSyntax | PWTOldSyntax | PWTDeprecatedField | PWTInvalidSubsection | PWTUnknownField | PWTUnknownSection | PWTTrailingFields | PWTExtraMainIs | PWTExtraTestModule | PWTExtraBenchmarkModule | PWTLexNBSP | PWTLexBOM | PWTLexTab | PWTQuirkyCabalFile | PWTDoubleDash | PWTMultipleSingularField | PWTBuildTypeDefault | PWTVersionOperator | PWTVersionWildcard | PWTSpecVersion | PWTEmptyFilePath | PWTInconsistentIndentation | PWTExperimental
  type PWarning :: *
  data PWarning = PWarning !PWarnType !Distribution.Parsec.Position.Position GHC.Internal.Base.String
  type ParseResult :: * -> *
  newtype ParseResult a = ...
  type PrettyField :: * -> *
  data PrettyField ann = PrettyField ann FieldName Text.PrettyPrint.HughesPJ.Doc | PrettySection ann FieldName [Text.PrettyPrint.HughesPJ.Doc] [PrettyField ann] | PrettyEmpty
  type SectionArg :: * -> *
  data SectionArg ann = SecArgName !ann !bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString | SecArgStr !ann !bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString | SecArgOther !ann !bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString
  fromParsecFields :: forall ann. [Field ann] -> [PrettyField ann]
  genericFromParsecFields :: forall (f :: * -> *) ann. GHC.Internal.Base.Applicative f => (FieldName -> [FieldLine ann] -> f Text.PrettyPrint.HughesPJ.Doc) -> (FieldName -> [SectionArg ann] -> f [Text.PrettyPrint.HughesPJ.Doc]) -> [Field ann] -> f [PrettyField ann]
  parseFailure :: Distribution.Parsec.Position.Position -> GHC.Internal.Base.String -> ParseResult ()
  parseFatalFailure :: forall a. Distribution.Parsec.Position.Position -> GHC.Internal.Base.String -> ParseResult a
  parseWarning :: Distribution.Parsec.Position.Position -> PWarnType -> GHC.Internal.Base.String -> ParseResult ()
  parseWarnings :: [PWarning] -> ParseResult ()
  readFields :: bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> GHC.Internal.Data.Either.Either Text.Parsec.Error.ParseError [Field Distribution.Parsec.Position.Position]
  readFields' :: bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> GHC.Internal.Data.Either.Either Text.Parsec.Error.ParseError ([Field Distribution.Parsec.Position.Position], [Distribution.Fields.LexerMonad.LexWarning])
  runParseResult :: forall a. ParseResult a -> ([PWarning], GHC.Internal.Data.Either.Either (GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version, GHC.Internal.Base.NonEmpty PError) a)
  showFields :: forall ann. (ann -> CommentPosition) -> [PrettyField ann] -> GHC.Internal.Base.String
  showPError :: GHC.Internal.IO.FilePath -> PError -> GHC.Internal.Base.String
  showPWarning :: GHC.Internal.IO.FilePath -> PWarning -> GHC.Internal.Base.String

module Distribution.Fields.ConfVar where
  parseConditionConfVar :: [Distribution.Fields.Field.SectionArg Distribution.Parsec.Position.Position] -> Distribution.Fields.ParseResult.ParseResult (Distribution.Types.Condition.Condition Distribution.Types.ConfVar.ConfVar)
  parseConditionConfVarFromClause :: bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> GHC.Internal.Data.Either.Either Text.Parsec.Error.ParseError (Distribution.Types.Condition.Condition Distribution.Types.ConfVar.ConfVar)

module Distribution.Fields.Field where
  type Field :: * -> *
  data Field ann = Field !(Name ann) [FieldLine ann] | Section !(Name ann) [SectionArg ann] [Field ann]
  type FieldLine :: * -> *
  data FieldLine ann = FieldLine !ann !bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString
  type FieldName :: *
  type FieldName = bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString
  type Name :: * -> *
  data Name ann = Name !ann !FieldName
  type SectionArg :: * -> *
  data SectionArg ann = SecArgName !ann !bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString | SecArgStr !ann !bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString | SecArgOther !ann !bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString
  fieldAnn :: forall ann. Field ann -> ann
  fieldLineAnn :: forall ann. FieldLine ann -> ann
  fieldLineBS :: forall ann. FieldLine ann -> bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString
  fieldLinesToString :: forall ann. [FieldLine ann] -> GHC.Internal.Base.String
  fieldName :: forall ann. Field ann -> Name ann
  fieldUniverse :: forall ann. Field ann -> [Field ann]
  getName :: forall ann. Name ann -> FieldName
  mkName :: forall ann. ann -> FieldName -> Name ann
  nameAnn :: forall ann. Name ann -> ann
  sectionArgAnn :: forall ann. SectionArg ann -> ann
  sectionArgsToString :: forall ann. [SectionArg ann] -> GHC.Internal.Base.String

module Distribution.Fields.Lexer where
  type LToken :: *
  data LToken = L !Distribution.Parsec.Position.Position !Token
  type Token :: *
  data Token = TokSym !bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString | TokStr !bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString | TokOther !bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString | Indent {-# UNPACK #-}GHC.Types.Int | TokFieldLine !bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString | Colon | OpenBrace | CloseBrace | EOF | LexicalError Distribution.Fields.LexerMonad.InputStream
  bol_section :: GHC.Types.Int
  in_field_braces :: GHC.Types.Int
  in_field_layout :: GHC.Types.Int
  in_section :: GHC.Types.Int
  lexToken :: Distribution.Fields.LexerMonad.Lex LToken
  ltest :: GHC.Types.Int -> GHC.Internal.Base.String -> GHC.Types.IO ()
  mkLexState :: bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> Distribution.Fields.LexerMonad.LexState

module Distribution.Fields.LexerMonad where
  type InputStream :: *
  type InputStream = bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString
  type Lex :: * -> *
  newtype Lex a = Lex {unLex :: LexState -> LexResult a}
  type LexResult :: * -> *
  data LexResult a = LexResult {-# UNPACK #-}LexState a
  type LexState :: *
  data LexState = LexState {curPos :: {-# UNPACK #-}Distribution.Parsec.Position.Position, curInput :: {-# UNPACK #-}InputStream, curCode :: {-# UNPACK #-}Distribution.Fields.LexerMonad.StartCode, warnings :: [LexWarning]}
  type LexWarning :: *
  data LexWarning = LexWarning !LexWarningType {-# UNPACK #-}Distribution.Parsec.Position.Position
  type LexWarningType :: *
  data LexWarningType = LexWarningNBSP | LexWarningBOM | LexWarningTab | LexInconsistentIndentation | LexBraces
  addWarning :: LexWarningType -> Lex ()
  addWarningAt :: Distribution.Parsec.Position.Position -> LexWarningType -> Lex ()
  adjustPos :: (Distribution.Parsec.Position.Position -> Distribution.Parsec.Position.Position) -> Lex ()
  execLexer :: forall a. Lex a -> InputStream -> ([LexWarning], a)
  getInput :: Lex InputStream
  getPos :: Lex Distribution.Parsec.Position.Position
  getStartCode :: Lex GHC.Types.Int
  setInput :: InputStream -> Lex ()
  setPos :: Distribution.Parsec.Position.Position -> Lex ()
  setStartCode :: GHC.Types.Int -> Lex ()
  toPWarnings :: [LexWarning] -> [Distribution.Parsec.Warning.PWarning]

module Distribution.Fields.ParseResult where
  type ParseResult :: * -> *
  newtype ParseResult a = ...
  getCabalSpecVersion :: ParseResult (GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version)
  parseFailure :: Distribution.Parsec.Position.Position -> GHC.Internal.Base.String -> ParseResult ()
  parseFatalFailure :: forall a. Distribution.Parsec.Position.Position -> GHC.Internal.Base.String -> ParseResult a
  parseFatalFailure' :: forall a. ParseResult a
  parseWarning :: Distribution.Parsec.Position.Position -> Distribution.Parsec.Warning.PWarnType -> GHC.Internal.Base.String -> ParseResult ()
  parseWarnings :: [Distribution.Parsec.Warning.PWarning] -> ParseResult ()
  recoverWith :: forall a. ParseResult a -> a -> ParseResult a
  runParseResult :: forall a. ParseResult a -> ([Distribution.Parsec.Warning.PWarning], GHC.Internal.Data.Either.Either (GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version, GHC.Internal.Base.NonEmpty Distribution.Parsec.Error.PError) a)
  setCabalSpecVersion :: GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version -> ParseResult ()
  withoutWarnings :: forall a. ParseResult a -> ParseResult a

module Distribution.Fields.Parser where
  type Field :: * -> *
  data Field ann = Field !(Name ann) [FieldLine ann] | Section !(Name ann) [SectionArg ann] [Field ann]
  type FieldLine :: * -> *
  data FieldLine ann = FieldLine !ann !bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString
  type Name :: * -> *
  data Name ann = Name !ann !Distribution.Fields.Field.FieldName
  type SectionArg :: * -> *
  data SectionArg ann = SecArgName !ann !bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString | SecArgStr !ann !bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString | SecArgOther !ann !bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString
  readFields :: bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> GHC.Internal.Data.Either.Either Text.Parsec.Error.ParseError [Field Distribution.Parsec.Position.Position]
  readFields' :: bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> GHC.Internal.Data.Either.Either Text.Parsec.Error.ParseError ([Field Distribution.Parsec.Position.Position], [Distribution.Fields.LexerMonad.LexWarning])

module Distribution.Fields.Pretty where
  type CommentPosition :: *
  data CommentPosition = CommentBefore [GHC.Internal.Base.String] | CommentAfter [GHC.Internal.Base.String] | NoComment
  type PrettyField :: * -> *
  data PrettyField ann = PrettyField ann Distribution.Fields.Field.FieldName Text.PrettyPrint.HughesPJ.Doc | PrettySection ann Distribution.Fields.Field.FieldName [Text.PrettyPrint.HughesPJ.Doc] [PrettyField ann] | PrettyEmpty
  fromParsecFields :: forall ann. [Distribution.Fields.Field.Field ann] -> [PrettyField ann]
  genericFromParsecFields :: forall (f :: * -> *) ann. GHC.Internal.Base.Applicative f => (Distribution.Fields.Field.FieldName -> [Distribution.Fields.Field.FieldLine ann] -> f Text.PrettyPrint.HughesPJ.Doc) -> (Distribution.Fields.Field.FieldName -> [Distribution.Fields.Field.SectionArg ann] -> f [Text.PrettyPrint.HughesPJ.Doc]) -> [Distribution.Fields.Field.Field ann] -> f [PrettyField ann]
  prettyFieldLines :: forall ann. Distribution.Fields.Field.FieldName -> [Distribution.Fields.Field.FieldLine ann] -> Text.PrettyPrint.HughesPJ.Doc
  prettySectionArgs :: forall ann. Distribution.Fields.Field.FieldName -> [Distribution.Fields.Field.SectionArg ann] -> [Text.PrettyPrint.HughesPJ.Doc]
  showFields :: forall ann. (ann -> CommentPosition) -> [PrettyField ann] -> GHC.Internal.Base.String
  showFields' :: forall ann. (ann -> CommentPosition) -> (ann -> [GHC.Internal.Base.String] -> [GHC.Internal.Base.String]) -> GHC.Types.Int -> [PrettyField ann] -> GHC.Internal.Base.String

module Distribution.InstalledPackageInfo where
  type AbiDependency :: *
  data AbiDependency = AbiDependency {depUnitId :: Distribution.Types.UnitId.UnitId, depAbiHash :: Distribution.Types.AbiHash.AbiHash}
  type ExposedModule :: *
  data ExposedModule = ExposedModule {exposedName :: Distribution.ModuleName.ModuleName, exposedReexport :: GHC.Internal.Maybe.Maybe Distribution.Backpack.OpenModule}
  type InstalledPackageInfo :: *
  data InstalledPackageInfo
    = InstalledPackageInfo {sourcePackageId :: Distribution.Types.PackageId.PackageId,
                            sourceLibName :: Distribution.Types.LibraryName.LibraryName,
                            installedComponentId_ :: Distribution.Types.ComponentId.ComponentId,
                            libVisibility :: Distribution.Types.LibraryVisibility.LibraryVisibility,
                            installedUnitId :: Distribution.Types.UnitId.UnitId,
                            instantiatedWith :: [(Distribution.ModuleName.ModuleName, Distribution.Backpack.OpenModule)],
                            compatPackageKey :: GHC.Internal.Base.String,
                            license :: GHC.Internal.Data.Either.Either Distribution.SPDX.License.License Distribution.License.License,
                            copyright :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                          ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                            maintainer :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                           ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                            author :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                       ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                            stability :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                          ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                            homepage :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                         ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                            pkgUrl :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                       ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                            synopsis :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                         ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                            description :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                            ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                            category :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                         ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                            abiHash :: Distribution.Types.AbiHash.AbiHash,
                            indefinite :: GHC.Types.Bool,
                            exposed :: GHC.Types.Bool,
                            exposedModules :: [ExposedModule],
                            hiddenModules :: [Distribution.ModuleName.ModuleName],
                            trusted :: GHC.Types.Bool,
                            importDirs :: [GHC.Internal.IO.FilePath],
                            libraryDirs :: [GHC.Internal.IO.FilePath],
                            libraryDirsStatic :: [GHC.Internal.IO.FilePath],
                            libraryDynDirs :: [GHC.Internal.IO.FilePath],
                            dataDir :: GHC.Internal.IO.FilePath,
                            hsLibraries :: [GHC.Internal.Base.String],
                            extraLibraries :: [GHC.Internal.Base.String],
                            extraLibrariesStatic :: [GHC.Internal.Base.String],
                            extraGHCiLibraries :: [GHC.Internal.Base.String],
                            includeDirs :: [GHC.Internal.IO.FilePath],
                            includes :: [GHC.Internal.Base.String],
                            depends :: [Distribution.Types.UnitId.UnitId],
                            abiDepends :: [AbiDependency],
                            ccOptions :: [GHC.Internal.Base.String],
                            cxxOptions :: [GHC.Internal.Base.String],
                            ldOptions :: [GHC.Internal.Base.String],
                            frameworkDirs :: [GHC.Internal.IO.FilePath],
                            frameworks :: [GHC.Internal.Base.String],
                            haddockInterfaces :: [GHC.Internal.IO.FilePath],
                            haddockHTMLs :: [GHC.Internal.IO.FilePath],
                            pkgRoot :: GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath}
  emptyInstalledPackageInfo :: InstalledPackageInfo
  installedComponentId :: InstalledPackageInfo -> Distribution.Types.ComponentId.ComponentId
  installedOpenUnitId :: InstalledPackageInfo -> Distribution.Backpack.OpenUnitId
  parseInstalledPackageInfo :: bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> GHC.Internal.Data.Either.Either (GHC.Internal.Base.NonEmpty GHC.Internal.Base.String) ([GHC.Internal.Base.String], InstalledPackageInfo)
  requiredSignatures :: InstalledPackageInfo -> Data.Set.Internal.Set Distribution.ModuleName.ModuleName
  showFullInstalledPackageInfo :: InstalledPackageInfo -> GHC.Internal.Base.String
  showInstalledPackageInfo :: InstalledPackageInfo -> GHC.Internal.Base.String
  showInstalledPackageInfoField :: GHC.Internal.Base.String -> GHC.Internal.Maybe.Maybe (InstalledPackageInfo -> GHC.Internal.Base.String)
  showSimpleInstalledPackageInfoField :: GHC.Internal.Base.String -> GHC.Internal.Maybe.Maybe (InstalledPackageInfo -> GHC.Internal.Base.String)
  sourceComponentName :: InstalledPackageInfo -> Distribution.Types.ComponentName.ComponentName

module Distribution.License where
  type License :: *
  data License = GPL (GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version) | AGPL (GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version) | LGPL (GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version) | BSD2 | BSD3 | BSD4 | MIT | ISC | MPL Distribution.Types.Version.Version | Apache (GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version) | PublicDomain | AllRightsReserved | UnspecifiedLicense | OtherLicense | UnknownLicense GHC.Internal.Base.String
  knownLicenses :: [License]
  licenseFromSPDX :: Distribution.SPDX.License.License -> License
  licenseToSPDX :: License -> Distribution.SPDX.License.License

module Distribution.Make where
  type AbiHash :: *
  newtype AbiHash = ...
  type ComponentId :: *
  newtype ComponentId = ...
  type DefUnitId :: *
  newtype DefUnitId = Distribution.Types.UnitId.DefUnitId {unDefUnitId :: UnitId}
  type Dependency :: *
  data Dependency = Dependency PackageName Distribution.Types.VersionRange.Internal.VersionRange (Distribution.Compat.NonEmptySet.NonEmptySet Distribution.Types.LibraryName.LibraryName)
  type HasMungedPackageId :: * -> Constraint
  class HasMungedPackageId pkg where
    mungedId :: pkg -> Distribution.Types.MungedPackageId.MungedPackageId
    {-# MINIMAL mungedId #-}
  type HasUnitId :: * -> Constraint
  class Package pkg => HasUnitId pkg where
    installedUnitId :: pkg -> UnitId
    {-# MINIMAL installedUnitId #-}
  type License :: *
  data License = GPL (GHC.Internal.Maybe.Maybe Version) | AGPL (GHC.Internal.Maybe.Maybe Version) | LGPL (GHC.Internal.Maybe.Maybe Version) | BSD2 | BSD3 | BSD4 | MIT | ISC | MPL Version | Apache (GHC.Internal.Maybe.Maybe Version) | PublicDomain | AllRightsReserved | UnspecifiedLicense | OtherLicense | UnknownLicense GHC.Internal.Base.String
  type Module :: *
  data Module = Module DefUnitId Distribution.ModuleName.ModuleName
  type Package :: * -> Constraint
  class Package pkg where
    packageId :: pkg -> PackageIdentifier
    {-# MINIMAL packageId #-}
  type PackageId :: *
  type PackageId = PackageIdentifier
  type PackageIdentifier :: *
  data PackageIdentifier = PackageIdentifier {pkgName :: PackageName, pkgVersion :: Version}
  type PackageInstalled :: * -> Constraint
  class HasUnitId pkg => PackageInstalled pkg where
    installedDepends :: pkg -> [UnitId]
    {-# MINIMAL installedDepends #-}
  type PackageName :: *
  newtype PackageName = ...
  type PkgconfigName :: *
  newtype PkgconfigName = ...
  type UnitId :: *
  newtype UnitId = ...
  type Version :: *
  data Version = ...
  defaultMain :: GHC.Types.IO ()
  defaultMainArgs :: [GHC.Internal.Base.String] -> GHC.Types.IO ()
  depLibraries :: Dependency -> Distribution.Compat.NonEmptySet.NonEmptySet Distribution.Types.LibraryName.LibraryName
  depPkgName :: Dependency -> PackageName
  depVerRange :: Dependency -> Distribution.Types.VersionRange.Internal.VersionRange
  getHSLibraryName :: UnitId -> GHC.Internal.Base.String
  mainLibSet :: Distribution.Compat.NonEmptySet.NonEmptySet Distribution.Types.LibraryName.LibraryName
  mkAbiHash :: GHC.Internal.Base.String -> AbiHash
  mkComponentId :: GHC.Internal.Base.String -> ComponentId
  mkDependency :: PackageName -> Distribution.Types.VersionRange.Internal.VersionRange -> Distribution.Compat.NonEmptySet.NonEmptySet Distribution.Types.LibraryName.LibraryName -> Dependency
  mkLegacyUnitId :: PackageId -> UnitId
  mkPackageName :: GHC.Internal.Base.String -> PackageName
  mkPackageNameST :: Distribution.Utils.ShortText.ShortText -> PackageName
  mkPkgconfigName :: GHC.Internal.Base.String -> PkgconfigName
  mkUnitId :: GHC.Internal.Base.String -> UnitId
  mungedName' :: forall pkg. HasMungedPackageId pkg => pkg -> Distribution.Types.MungedPackageName.MungedPackageName
  mungedVersion' :: forall munged. HasMungedPackageId munged => munged -> Version
  newSimpleUnitId :: ComponentId -> UnitId
  packageName :: forall pkg. Package pkg => pkg -> PackageName
  packageVersion :: forall pkg. Package pkg => pkg -> Version
  simplifyDependency :: Dependency -> Dependency
  unAbiHash :: AbiHash -> GHC.Internal.Base.String
  unComponentId :: ComponentId -> GHC.Internal.Base.String
  unPackageName :: PackageName -> GHC.Internal.Base.String
  unPackageNameST :: PackageName -> Distribution.Utils.ShortText.ShortText
  unPkgconfigName :: PkgconfigName -> GHC.Internal.Base.String
  unUnitId :: UnitId -> GHC.Internal.Base.String
  unsafeMkDefUnitId :: UnitId -> DefUnitId

module Distribution.ModuleName where
  type ModuleName :: *
  newtype ModuleName = ...
  components :: ModuleName -> [GHC.Internal.Base.String]
  fromComponents :: [GHC.Internal.Base.String] -> ModuleName
  fromString :: forall a. GHC.Internal.Data.String.IsString a => GHC.Internal.Base.String -> a
  main :: ModuleName
  toFilePath :: ModuleName -> GHC.Internal.IO.FilePath
  validModuleComponent :: GHC.Internal.Base.String -> GHC.Types.Bool

module Distribution.Package where
  type AbiHash :: *
  newtype AbiHash = ...
  type ComponentId :: *
  newtype ComponentId = ...
  type DefUnitId :: *
  newtype DefUnitId = Distribution.Types.UnitId.DefUnitId {unDefUnitId :: UnitId}
  type Dependency :: *
  data Dependency = Dependency PackageName Distribution.Types.VersionRange.Internal.VersionRange (Distribution.Compat.NonEmptySet.NonEmptySet Distribution.Types.LibraryName.LibraryName)
  type HasMungedPackageId :: * -> Constraint
  class HasMungedPackageId pkg where
    mungedId :: pkg -> Distribution.Types.MungedPackageId.MungedPackageId
    {-# MINIMAL mungedId #-}
  type HasUnitId :: * -> Constraint
  class Package pkg => HasUnitId pkg where
    installedUnitId :: pkg -> UnitId
    {-# MINIMAL installedUnitId #-}
  type Module :: *
  data Module = Module DefUnitId Distribution.ModuleName.ModuleName
  type Package :: * -> Constraint
  class Package pkg where
    packageId :: pkg -> PackageIdentifier
    {-# MINIMAL packageId #-}
  type PackageId :: *
  type PackageId = PackageIdentifier
  type PackageIdentifier :: *
  data PackageIdentifier = PackageIdentifier {pkgName :: PackageName, pkgVersion :: Distribution.Types.Version.Version}
  type PackageInstalled :: * -> Constraint
  class HasUnitId pkg => PackageInstalled pkg where
    installedDepends :: pkg -> [UnitId]
    {-# MINIMAL installedDepends #-}
  type PackageName :: *
  newtype PackageName = ...
  type PkgconfigName :: *
  newtype PkgconfigName = ...
  type UnitId :: *
  newtype UnitId = ...
  depLibraries :: Dependency -> Distribution.Compat.NonEmptySet.NonEmptySet Distribution.Types.LibraryName.LibraryName
  depPkgName :: Dependency -> PackageName
  depVerRange :: Dependency -> Distribution.Types.VersionRange.Internal.VersionRange
  getHSLibraryName :: UnitId -> GHC.Internal.Base.String
  mainLibSet :: Distribution.Compat.NonEmptySet.NonEmptySet Distribution.Types.LibraryName.LibraryName
  mkAbiHash :: GHC.Internal.Base.String -> AbiHash
  mkComponentId :: GHC.Internal.Base.String -> ComponentId
  mkDependency :: PackageName -> Distribution.Types.VersionRange.Internal.VersionRange -> Distribution.Compat.NonEmptySet.NonEmptySet Distribution.Types.LibraryName.LibraryName -> Dependency
  mkLegacyUnitId :: PackageId -> UnitId
  mkPackageName :: GHC.Internal.Base.String -> PackageName
  mkPackageNameST :: Distribution.Utils.ShortText.ShortText -> PackageName
  mkPkgconfigName :: GHC.Internal.Base.String -> PkgconfigName
  mkUnitId :: GHC.Internal.Base.String -> UnitId
  mungedName' :: forall pkg. HasMungedPackageId pkg => pkg -> Distribution.Types.MungedPackageName.MungedPackageName
  mungedVersion' :: forall munged. HasMungedPackageId munged => munged -> Distribution.Types.Version.Version
  newSimpleUnitId :: ComponentId -> UnitId
  packageName :: forall pkg. Package pkg => pkg -> PackageName
  packageVersion :: forall pkg. Package pkg => pkg -> Distribution.Types.Version.Version
  simplifyDependency :: Dependency -> Dependency
  unAbiHash :: AbiHash -> GHC.Internal.Base.String
  unComponentId :: ComponentId -> GHC.Internal.Base.String
  unPackageName :: PackageName -> GHC.Internal.Base.String
  unPackageNameST :: PackageName -> Distribution.Utils.ShortText.ShortText
  unPkgconfigName :: PkgconfigName -> GHC.Internal.Base.String
  unUnitId :: UnitId -> GHC.Internal.Base.String
  unsafeMkDefUnitId :: UnitId -> DefUnitId

module Distribution.PackageDescription where
  type Benchmark :: *
  data Benchmark = Benchmark {benchmarkName :: UnqualComponentName, benchmarkInterface :: BenchmarkInterface, benchmarkBuildInfo :: BuildInfo}
  type BenchmarkInterface :: *
  data BenchmarkInterface = BenchmarkExeV10 Distribution.Types.Version.Version (Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Source Distribution.Utils.Path.File) | BenchmarkUnsupported BenchmarkType
  type BenchmarkType :: *
  data BenchmarkType = BenchmarkTypeExe Distribution.Types.Version.Version | BenchmarkTypeUnknown GHC.Internal.Base.String Distribution.Types.Version.Version
  type BuildInfo :: *
  data BuildInfo
    = BuildInfo {buildable :: GHC.Types.Bool,
                 buildTools :: [LegacyExeDependency],
                 buildToolDepends :: [ExeDependency],
                 cppOptions :: [GHC.Internal.Base.String],
                 asmOptions :: [GHC.Internal.Base.String],
                 cmmOptions :: [GHC.Internal.Base.String],
                 ccOptions :: [GHC.Internal.Base.String],
                 cxxOptions :: [GHC.Internal.Base.String],
                 ldOptions :: [GHC.Internal.Base.String],
                 hsc2hsOptions :: [GHC.Internal.Base.String],
                 pkgconfigDepends :: [PkgconfigDependency],
                 frameworks :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Framework Distribution.Utils.Path.File],
                 extraFrameworkDirs :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Framework)],
                 asmSources :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File],
                 cmmSources :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File],
                 cSources :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File],
                 cxxSources :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File],
                 jsSources :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File],
                 hsSourceDirs :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Source)],
                 otherModules :: [Distribution.ModuleName.ModuleName],
                 virtualModules :: [Distribution.ModuleName.ModuleName],
                 autogenModules :: [Distribution.ModuleName.ModuleName],
                 defaultLanguage :: GHC.Internal.Maybe.Maybe Language.Haskell.Extension.Language,
                 otherLanguages :: [Language.Haskell.Extension.Language],
                 defaultExtensions :: [Language.Haskell.Extension.Extension],
                 otherExtensions :: [Language.Haskell.Extension.Extension],
                 oldExtensions :: [Language.Haskell.Extension.Extension],
                 extraLibs :: [GHC.Internal.Base.String],
                 extraLibsStatic :: [GHC.Internal.Base.String],
                 extraGHCiLibs :: [GHC.Internal.Base.String],
                 extraBundledLibs :: [GHC.Internal.Base.String],
                 extraLibFlavours :: [GHC.Internal.Base.String],
                 extraDynLibFlavours :: [GHC.Internal.Base.String],
                 extraLibDirs :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Lib)],
                 extraLibDirsStatic :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Lib)],
                 includeDirs :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Include)],
                 includes :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Include Distribution.Utils.Path.File],
                 autogenIncludes :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Include Distribution.Utils.Path.File],
                 installIncludes :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Include Distribution.Utils.Path.File],
                 options :: Distribution.Compiler.PerCompilerFlavor [GHC.Internal.Base.String],
                 profOptions :: Distribution.Compiler.PerCompilerFlavor [GHC.Internal.Base.String],
                 sharedOptions :: Distribution.Compiler.PerCompilerFlavor [GHC.Internal.Base.String],
                 profSharedOptions :: Distribution.Compiler.PerCompilerFlavor [GHC.Internal.Base.String],
                 staticOptions :: Distribution.Compiler.PerCompilerFlavor [GHC.Internal.Base.String],
                 customFieldsBI :: [(GHC.Internal.Base.String, GHC.Internal.Base.String)],
                 targetBuildDepends :: [Dependency],
                 mixins :: [Mixin]}
  type BuildType :: *
  data BuildType = Simple | Configure | Make | Custom | Hooks
  pattern CBenchName :: UnqualComponentName -> ComponentName
  pattern CExeName :: UnqualComponentName -> ComponentName
  pattern CFLibName :: UnqualComponentName -> ComponentName
  pattern CTestName :: UnqualComponentName -> ComponentName
  type ComponentName :: *
  data ComponentName = CLibName LibraryName | CNotLibName Distribution.Types.ComponentName.NotLibComponentName
  type CondBranch :: * -> * -> * -> *
  data CondBranch v c a = CondBranch {condBranchCondition :: Condition v, condBranchIfTrue :: CondTree v c a, condBranchIfFalse :: GHC.Internal.Maybe.Maybe (CondTree v c a)}
  type CondTree :: * -> * -> * -> *
  data CondTree v c a = CondNode {condTreeData :: a, condTreeConstraints :: c, condTreeComponents :: [CondBranch v c a]}
  type Condition :: * -> *
  data Condition c = Var c | Lit GHC.Types.Bool | CNot (Condition c) | COr (Condition c) (Condition c) | CAnd (Condition c) (Condition c)
  type ConfVar :: *
  data ConfVar = OS Distribution.System.OS | Arch Distribution.System.Arch | PackageFlag FlagName | Impl Distribution.Compiler.CompilerFlavor Distribution.Types.VersionRange.Internal.VersionRange
  type Dependency :: *
  data Dependency = Dependency PackageName Distribution.Types.VersionRange.Internal.VersionRange (Distribution.Compat.NonEmptySet.NonEmptySet LibraryName)
  type ExeDependency :: *
  data ExeDependency = ExeDependency PackageName UnqualComponentName Distribution.Types.VersionRange.Internal.VersionRange
  type Executable :: *
  data Executable = Executable {exeName :: UnqualComponentName, modulePath :: Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Source Distribution.Utils.Path.File, exeScope :: ExecutableScope, buildInfo :: BuildInfo}
  type ExecutableScope :: *
  data ExecutableScope = ExecutablePublic | ExecutablePrivate
  type FlagAssignment :: *
  newtype FlagAssignment = ...
  type FlagName :: *
  newtype FlagName = ...
  type ForeignLib :: *
  data ForeignLib = ForeignLib {foreignLibName :: UnqualComponentName, foreignLibType :: ForeignLibType, foreignLibOptions :: [ForeignLibOption], foreignLibBuildInfo :: BuildInfo, foreignLibVersionInfo :: GHC.Internal.Maybe.Maybe LibVersionInfo, foreignLibVersionLinux :: GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version, foreignLibModDefFile :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Source Distribution.Utils.Path.File]}
  type ForeignLibOption :: *
  data ForeignLibOption = ForeignLibStandalone
  type ForeignLibType :: *
  data ForeignLibType = ForeignLibNativeShared | ForeignLibNativeStatic | ForeignLibTypeUnknown
  type GenericPackageDescription :: *
  data GenericPackageDescription
    = GenericPackageDescription {packageDescription :: PackageDescription,
                                 gpdScannedVersion :: GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version,
                                 genPackageFlags :: [PackageFlag],
                                 condLibrary :: GHC.Internal.Maybe.Maybe (CondTree ConfVar [Dependency] Library),
                                 condSubLibraries :: [(UnqualComponentName, CondTree ConfVar [Dependency] Library)],
                                 condForeignLibs :: [(UnqualComponentName, CondTree ConfVar [Dependency] ForeignLib)],
                                 condExecutables :: [(UnqualComponentName, CondTree ConfVar [Dependency] Executable)],
                                 condTestSuites :: [(UnqualComponentName, CondTree ConfVar [Dependency] TestSuite)],
                                 condBenchmarks :: [(UnqualComponentName, CondTree ConfVar [Dependency] Benchmark)]}
  type HookedBuildInfo :: *
  type HookedBuildInfo = (GHC.Internal.Maybe.Maybe BuildInfo, [(UnqualComponentName, BuildInfo)])
  type IncludeRenaming :: *
  data IncludeRenaming = IncludeRenaming {includeProvidesRn :: ModuleRenaming, includeRequiresRn :: ModuleRenaming}
  type KnownRepoType :: *
  data KnownRepoType = Darcs | Git | SVN | CVS | Mercurial | GnuArch | Bazaar | Monotone | Pijul
  type LegacyExeDependency :: *
  data LegacyExeDependency = LegacyExeDependency GHC.Internal.Base.String Distribution.Types.VersionRange.Internal.VersionRange
  type LibVersionInfo :: *
  data LibVersionInfo = ...
  type Library :: *
  data Library = Library {libName :: LibraryName, exposedModules :: [Distribution.ModuleName.ModuleName], reexportedModules :: [ModuleReexport], signatures :: [Distribution.ModuleName.ModuleName], libExposed :: GHC.Types.Bool, libVisibility :: LibraryVisibility, libBuildInfo :: BuildInfo}
  type LibraryName :: *
  data LibraryName = LMainLibName | LSubLibName UnqualComponentName
  type LibraryVisibility :: *
  data LibraryVisibility = LibraryVisibilityPublic | LibraryVisibilityPrivate
  type Mixin :: *
  data Mixin = Mixin {mixinPackageName :: PackageName, mixinLibraryName :: LibraryName, mixinIncludeRenaming :: IncludeRenaming}
  type ModuleReexport :: *
  data ModuleReexport = ModuleReexport {moduleReexportOriginalPackage :: GHC.Internal.Maybe.Maybe PackageName, moduleReexportOriginalName :: Distribution.ModuleName.ModuleName, moduleReexportName :: Distribution.ModuleName.ModuleName}
  type ModuleRenaming :: *
  data ModuleRenaming = ModuleRenaming [(Distribution.ModuleName.ModuleName, Distribution.ModuleName.ModuleName)] | DefaultRenaming | HidingRenaming [Distribution.ModuleName.ModuleName]
  type PackageDescription :: *
  data PackageDescription
    = PackageDescription {specVersion :: Distribution.CabalSpecVersion.CabalSpecVersion,
                          package :: PackageIdentifier,
                          licenseRaw :: GHC.Internal.Data.Either.Either Distribution.SPDX.License.License Distribution.License.License,
                          licenseFiles :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File],
                          copyright :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                        ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                          maintainer :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                         ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                          author :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                     ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                          stability :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                        ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                          testedWith :: [(Distribution.Compiler.CompilerFlavor, Distribution.Types.VersionRange.Internal.VersionRange)],
                          homepage :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                       ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                          pkgUrl :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                     ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                          bugReports :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                         ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                          sourceRepos :: [SourceRepo],
                          synopsis :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                       ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                          description :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                          ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                          category :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                       ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                          customFieldsPD :: [(GHC.Internal.Base.String, GHC.Internal.Base.String)],
                          buildTypeRaw :: GHC.Internal.Maybe.Maybe BuildType,
                          setupBuildInfo :: GHC.Internal.Maybe.Maybe SetupBuildInfo,
                          library :: GHC.Internal.Maybe.Maybe Library,
                          subLibraries :: [Library],
                          executables :: [Executable],
                          foreignLibs :: [ForeignLib],
                          testSuites :: [TestSuite],
                          benchmarks :: [Benchmark],
                          dataFiles :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.DataDir Distribution.Utils.Path.File],
                          dataDir :: Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.DataDir),
                          extraSrcFiles :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File],
                          extraTmpFiles :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File],
                          extraDocFiles :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File],
                          extraFiles :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]}
  type PackageFlag :: *
  data PackageFlag = MkPackageFlag {flagName :: FlagName, flagDescription :: GHC.Internal.Base.String, flagDefault :: GHC.Types.Bool, flagManual :: GHC.Types.Bool}
  type PackageId :: *
  type PackageId = PackageIdentifier
  type PackageIdentifier :: *
  data PackageIdentifier = PackageIdentifier {pkgName :: PackageName, pkgVersion :: Distribution.Types.Version.Version}
  type PackageName :: *
  newtype PackageName = ...
  type PkgconfigDependency :: *
  data PkgconfigDependency = PkgconfigDependency PkgconfigName PkgconfigVersionRange
  type PkgconfigName :: *
  newtype PkgconfigName = ...
  type PkgconfigVersion :: *
  newtype PkgconfigVersion = PkgconfigVersion bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString
  type PkgconfigVersionRange :: *
  data PkgconfigVersionRange = PcAnyVersion | PcThisVersion PkgconfigVersion | PcLaterVersion PkgconfigVersion | PcEarlierVersion PkgconfigVersion | PcOrLaterVersion PkgconfigVersion | PcOrEarlierVersion PkgconfigVersion | PcUnionVersionRanges PkgconfigVersionRange PkgconfigVersionRange | PcIntersectVersionRanges PkgconfigVersionRange PkgconfigVersionRange
  type RepoKind :: *
  data RepoKind = RepoHead | RepoThis | RepoKindUnknown GHC.Internal.Base.String
  type RepoType :: *
  data RepoType = KnownRepoType KnownRepoType | OtherRepoType GHC.Internal.Base.String
  type SetupBuildInfo :: *
  data SetupBuildInfo = SetupBuildInfo {setupDepends :: [Dependency], defaultSetupDepends :: GHC.Types.Bool}
  type SourceRepo :: *
  data SourceRepo = SourceRepo {repoKind :: RepoKind, repoType :: GHC.Internal.Maybe.Maybe RepoType, repoLocation :: GHC.Internal.Maybe.Maybe GHC.Internal.Base.String, repoModule :: GHC.Internal.Maybe.Maybe GHC.Internal.Base.String, repoBranch :: GHC.Internal.Maybe.Maybe GHC.Internal.Base.String, repoTag :: GHC.Internal.Maybe.Maybe GHC.Internal.Base.String, repoSubdir :: GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath}
  type TestSuite :: *
  data TestSuite = TestSuite {testName :: UnqualComponentName, testInterface :: TestSuiteInterface, testBuildInfo :: BuildInfo, testCodeGenerators :: [GHC.Internal.Base.String]}
  type TestSuiteInterface :: *
  data TestSuiteInterface = TestSuiteExeV10 Distribution.Types.Version.Version (Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Source Distribution.Utils.Path.File) | TestSuiteLibV09 Distribution.Types.Version.Version Distribution.ModuleName.ModuleName | TestSuiteUnsupported TestType
  type TestType :: *
  data TestType = TestTypeExe Distribution.Types.Version.Version | TestTypeLib Distribution.Types.Version.Version | TestTypeUnknown GHC.Internal.Base.String Distribution.Types.Version.Version
  type UnqualComponentName :: *
  newtype UnqualComponentName = ...
  allBuildDepends :: PackageDescription -> [Dependency]
  allBuildInfo :: PackageDescription -> [BuildInfo]
  allExtensions :: BuildInfo -> [Language.Haskell.Extension.Extension]
  allLanguages :: BuildInfo -> [Language.Haskell.Extension.Language]
  allLibraries :: PackageDescription -> [Library]
  anyPkgconfigVersion :: PkgconfigVersionRange
  benchmarkModules :: Benchmark -> [Distribution.ModuleName.ModuleName]
  benchmarkModulesAutogen :: Benchmark -> [Distribution.ModuleName.ModuleName]
  benchmarkType :: Benchmark -> BenchmarkType
  benchmarkTypeExe :: BenchmarkType
  buildType :: PackageDescription -> BuildType
  cAnd :: forall a. Condition a -> Condition a -> Condition a
  cNot :: forall a. Condition a -> Condition a
  cOr :: forall v. GHC.Classes.Eq v => Condition v -> Condition v -> Condition v
  classifyRepoKind :: GHC.Internal.Base.String -> RepoKind
  classifyRepoType :: GHC.Internal.Base.String -> RepoType
  combineNames :: forall b a. (GHC.Internal.Base.Monoid b, GHC.Classes.Eq b, GHC.Internal.Show.Show b) => a -> a -> (a -> b) -> GHC.Internal.Base.String -> b
  componentNameRaw :: ComponentName -> GHC.Internal.Base.String
  componentNameStanza :: ComponentName -> GHC.Internal.Base.String
  componentNameString :: ComponentName -> GHC.Internal.Maybe.Maybe UnqualComponentName
  condIfThen :: forall v c a. Condition v -> CondTree v c a -> CondBranch v c a
  condIfThenElse :: forall v c a. Condition v -> CondTree v c a -> CondTree v c a -> CondBranch v c a
  defaultIncludeRenaming :: IncludeRenaming
  defaultLibName :: LibraryName
  defaultRenaming :: ModuleRenaming
  depLibraries :: Dependency -> Distribution.Compat.NonEmptySet.NonEmptySet LibraryName
  depPkgName :: Dependency -> PackageName
  depVerRange :: Dependency -> Distribution.Types.VersionRange.Internal.VersionRange
  diffFlagAssignment :: FlagAssignment -> FlagAssignment -> FlagAssignment
  dispFlagAssignment :: FlagAssignment -> Text.PrettyPrint.HughesPJ.Doc
  emptyBenchmark :: Benchmark
  emptyBuildInfo :: BuildInfo
  emptyExecutable :: Executable
  emptyFlag :: FlagName -> PackageFlag
  emptyForeignLib :: ForeignLib
  emptyGenericPackageDescription :: GenericPackageDescription
  emptyHookedBuildInfo :: HookedBuildInfo
  emptyLibrary :: Library
  emptyPackageDescription :: PackageDescription
  emptySourceRepo :: RepoKind -> SourceRepo
  emptyTestSuite :: TestSuite
  enabledBuildDepends :: PackageDescription -> Distribution.Types.ComponentRequestedSpec.ComponentRequestedSpec -> [Dependency]
  enabledBuildInfos :: PackageDescription -> Distribution.Types.ComponentRequestedSpec.ComponentRequestedSpec -> [BuildInfo]
  enabledComponents :: PackageDescription -> Distribution.Types.ComponentRequestedSpec.ComponentRequestedSpec -> [Distribution.Types.Component.Component]
  exeModules :: Executable -> [Distribution.ModuleName.ModuleName]
  exeModulesAutogen :: Executable -> [Distribution.ModuleName.ModuleName]
  explicitLibModules :: Library -> [Distribution.ModuleName.ModuleName]
  extractCondition :: forall v a c. GHC.Classes.Eq v => (a -> GHC.Types.Bool) -> CondTree v c a -> Condition v
  findDuplicateFlagAssignments :: FlagAssignment -> [FlagName]
  foldCondTree :: forall b c a v. b -> ((c, a) -> b) -> (b -> b -> b) -> (b -> b -> b) -> CondTree v c a -> b
  foreignLibIsShared :: ForeignLib -> GHC.Types.Bool
  foreignLibModules :: ForeignLib -> [Distribution.ModuleName.ModuleName]
  foreignLibTypeIsShared :: ForeignLibType -> GHC.Types.Bool
  foreignLibVersion :: ForeignLib -> Distribution.System.OS -> [GHC.Types.Int]
  getComponent :: PackageDescription -> ComponentName -> Distribution.Types.Component.Component
  hasBenchmarks :: PackageDescription -> GHC.Types.Bool
  hasExes :: PackageDescription -> GHC.Types.Bool
  hasForeignLibs :: PackageDescription -> GHC.Types.Bool
  hasLibs :: PackageDescription -> GHC.Types.Bool
  hasPublicLib :: PackageDescription -> GHC.Types.Bool
  hasTests :: PackageDescription -> GHC.Types.Bool
  hcOptions :: Distribution.Compiler.CompilerFlavor -> BuildInfo -> [GHC.Internal.Base.String]
  hcProfOptions :: Distribution.Compiler.CompilerFlavor -> BuildInfo -> [GHC.Internal.Base.String]
  hcProfSharedOptions :: Distribution.Compiler.CompilerFlavor -> BuildInfo -> [GHC.Internal.Base.String]
  hcSharedOptions :: Distribution.Compiler.CompilerFlavor -> BuildInfo -> [GHC.Internal.Base.String]
  hcStaticOptions :: Distribution.Compiler.CompilerFlavor -> BuildInfo -> [GHC.Internal.Base.String]
  ignoreConditions :: forall a c v. (GHC.Internal.Base.Semigroup a, GHC.Internal.Base.Semigroup c) => CondTree v c a -> (a, c)
  insertFlagAssignment :: FlagName -> GHC.Types.Bool -> FlagAssignment -> FlagAssignment
  interpModuleRenaming :: ModuleRenaming -> Distribution.ModuleName.ModuleName -> GHC.Internal.Maybe.Maybe Distribution.ModuleName.ModuleName
  isAnyPkgconfigVersion :: PkgconfigVersionRange -> GHC.Types.Bool
  isDefaultIncludeRenaming :: IncludeRenaming -> GHC.Types.Bool
  isDefaultRenaming :: ModuleRenaming -> GHC.Types.Bool
  knownBenchmarkTypes :: [BenchmarkType]
  knownBuildTypes :: [BuildType]
  knownForeignLibTypes :: [ForeignLibType]
  knownRepoTypes :: [KnownRepoType]
  knownTestTypes :: [TestType]
  legacyParsecFlagAssignment :: forall (m :: * -> *). Distribution.Parsec.CabalParsing m => m FlagAssignment
  legacyShowFlagAssignment :: FlagAssignment -> GHC.Internal.Base.String
  legacyShowFlagAssignment' :: FlagAssignment -> [GHC.Internal.Base.String]
  libModulesAutogen :: Library -> [Distribution.ModuleName.ModuleName]
  libVersionInfoCRA :: LibVersionInfo -> (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  libVersionMajor :: LibVersionInfo -> GHC.Types.Int
  libVersionNumber :: LibVersionInfo -> (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  libVersionNumberShow :: LibVersionInfo -> GHC.Internal.Base.String
  libraryNameStanza :: LibraryName -> GHC.Internal.Base.String
  libraryNameString :: LibraryName -> GHC.Internal.Maybe.Maybe UnqualComponentName
  license :: PackageDescription -> Distribution.SPDX.License.License
  license' :: GHC.Internal.Data.Either.Either Distribution.SPDX.License.License Distribution.License.License -> Distribution.SPDX.License.License
  lookupComponent :: PackageDescription -> ComponentName -> GHC.Internal.Maybe.Maybe Distribution.Types.Component.Component
  lookupFlagAssignment :: FlagName -> FlagAssignment -> GHC.Internal.Maybe.Maybe GHC.Types.Bool
  mainLibSet :: Distribution.Compat.NonEmptySet.NonEmptySet LibraryName
  mapCondTree :: forall a b c d v w. (a -> b) -> (c -> d) -> (Condition v -> Condition w) -> CondTree v c a -> CondTree w d b
  mapTreeConds :: forall v w c a. (Condition v -> Condition w) -> CondTree v c a -> CondTree w c a
  mapTreeConstrs :: forall c d v a. (c -> d) -> CondTree v c a -> CondTree v d a
  mapTreeData :: forall a b v c. (a -> b) -> CondTree v c a -> CondTree v c b
  maybeToLibraryName :: GHC.Internal.Maybe.Maybe UnqualComponentName -> LibraryName
  mkDependency :: PackageName -> Distribution.Types.VersionRange.Internal.VersionRange -> Distribution.Compat.NonEmptySet.NonEmptySet LibraryName -> Dependency
  mkFlagAssignment :: [(FlagName, GHC.Types.Bool)] -> FlagAssignment
  mkFlagName :: GHC.Internal.Base.String -> FlagName
  mkLibVersionInfo :: (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int) -> LibVersionInfo
  mkMixin :: PackageName -> LibraryName -> IncludeRenaming -> Mixin
  mkPackageName :: GHC.Internal.Base.String -> PackageName
  mkPackageNameST :: Distribution.Utils.ShortText.ShortText -> PackageName
  mkPkgconfigName :: GHC.Internal.Base.String -> PkgconfigName
  mkUnqualComponentName :: GHC.Internal.Base.String -> UnqualComponentName
  normaliseMixin :: Mixin -> Mixin
  nullFlagAssignment :: FlagAssignment -> GHC.Types.Bool
  packageNameToUnqualComponentName :: PackageName -> UnqualComponentName
  parsecFlagAssignment :: forall (m :: * -> *). Distribution.Parsec.CabalParsing m => m FlagAssignment
  parsecFlagAssignmentNonEmpty :: forall (m :: * -> *). Distribution.Parsec.CabalParsing m => m FlagAssignment
  parsecLibraryNameComponent :: forall (m :: * -> *). Distribution.Parsec.CabalParsing m => m LibraryName
  pkgBuildableComponents :: PackageDescription -> [Distribution.Types.Component.Component]
  pkgComponents :: PackageDescription -> [Distribution.Types.Component.Component]
  prettyLibraryNameComponent :: LibraryName -> Text.PrettyPrint.HughesPJ.Doc
  prettyLibraryNames :: forall a. Distribution.Pretty.Pretty a => a -> GHC.Internal.Base.NonEmpty LibraryName -> Text.PrettyPrint.HughesPJ.Doc
  qualifiedExeName :: ExeDependency -> ComponentName
  rpmvercmp :: bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> GHC.Types.Ordering
  showComponentName :: ComponentName -> GHC.Internal.Base.String
  showFlagAssignment :: FlagAssignment -> GHC.Internal.Base.String
  showFlagValue :: (FlagName, GHC.Types.Bool) -> GHC.Internal.Base.String
  showLibraryName :: LibraryName -> GHC.Internal.Base.String
  simplifyCondBranch :: forall a d v. (GHC.Internal.Base.Semigroup a, GHC.Internal.Base.Semigroup d) => (v -> GHC.Internal.Data.Either.Either v GHC.Types.Bool) -> CondBranch v d a -> GHC.Internal.Maybe.Maybe (d, a)
  simplifyCondTree :: forall a d v. (GHC.Internal.Base.Semigroup a, GHC.Internal.Base.Semigroup d) => (v -> GHC.Internal.Data.Either.Either v GHC.Types.Bool) -> CondTree v d a -> (d, a)
  simplifyCondition :: forall c d. Condition c -> (c -> GHC.Internal.Data.Either.Either d GHC.Types.Bool) -> (Condition d, [d])
  simplifyDependency :: Dependency -> Dependency
  testModules :: TestSuite -> [Distribution.ModuleName.ModuleName]
  testModulesAutogen :: TestSuite -> [Distribution.ModuleName.ModuleName]
  testType :: TestSuite -> TestType
  testTypeExe :: TestType
  testTypeLib :: TestType
  traverseCondBranchC :: forall v c a d (f :: * -> *). GHC.Internal.Base.Applicative f => Distribution.Compat.Lens.LensLike f (CondBranch v c a) (CondBranch v d a) c d
  traverseCondBranchV :: forall v c a w (f :: * -> *). GHC.Internal.Base.Applicative f => Distribution.Compat.Lens.LensLike f (CondBranch v c a) (CondBranch w c a) v w
  traverseCondTreeC :: forall v c a d (f :: * -> *). GHC.Internal.Base.Applicative f => Distribution.Compat.Lens.LensLike f (CondTree v c a) (CondTree v d a) c d
  traverseCondTreeV :: forall v c a w (f :: * -> *). GHC.Internal.Base.Applicative f => Distribution.Compat.Lens.LensLike f (CondTree v c a) (CondTree w c a) v w
  unFlagAssignment :: FlagAssignment -> [(FlagName, GHC.Types.Bool)]
  unFlagName :: FlagName -> GHC.Internal.Base.String
  unPackageName :: PackageName -> GHC.Internal.Base.String
  unPackageNameST :: PackageName -> Distribution.Utils.ShortText.ShortText
  unPkgconfigName :: PkgconfigName -> GHC.Internal.Base.String
  unUnqualComponentName :: UnqualComponentName -> GHC.Internal.Base.String
  unUnqualComponentNameST :: UnqualComponentName -> Distribution.Utils.ShortText.ShortText
  unqualComponentNameToPackageName :: UnqualComponentName -> PackageName
  updatePackageDescription :: HookedBuildInfo -> PackageDescription -> PackageDescription
  usedExtensions :: BuildInfo -> [Language.Haskell.Extension.Extension]
  usesTemplateHaskellOrQQ :: BuildInfo -> GHC.Types.Bool
  versionRangeToPkgconfigVersionRange :: Distribution.Types.VersionRange.Internal.VersionRange -> PkgconfigVersionRange
  versionToPkgconfigVersion :: Distribution.Types.Version.Version -> PkgconfigVersion
  withBenchmark :: PackageDescription -> (Benchmark -> GHC.Types.IO ()) -> GHC.Types.IO ()
  withExe :: PackageDescription -> (Executable -> GHC.Types.IO ()) -> GHC.Types.IO ()
  withForeignLib :: PackageDescription -> (ForeignLib -> GHC.Types.IO ()) -> GHC.Types.IO ()
  withLib :: PackageDescription -> (Library -> GHC.Types.IO ()) -> GHC.Types.IO ()
  withTest :: PackageDescription -> (TestSuite -> GHC.Types.IO ()) -> GHC.Types.IO ()
  withinPkgconfigVersionRange :: PkgconfigVersion -> PkgconfigVersionRange -> GHC.Types.Bool

module Distribution.PackageDescription.Check where
  type CheckExplanation :: *
  data CheckExplanation
    = ParseWarning GHC.Internal.IO.FilePath Distribution.Parsec.Warning.PWarning
    | NoNameField
    | NoVersionField
    | NoTarget
    | UnnamedInternal
    | DuplicateSections [Distribution.Types.UnqualComponentName.UnqualComponentName]
    | IllegalLibraryName Distribution.Types.PackageName.PackageName
    | NoModulesExposed Distribution.Types.LibraryName.LibraryName
    | SignaturesCabal2
    | AutogenNotExposed
    | AutogenIncludesNotIncluded
    | NoMainIs Distribution.Types.UnqualComponentName.UnqualComponentName
    | NoHsLhsMain
    | MainCCabal1_18
    | AutogenNoOther Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning.CEType
    | AutogenIncludesNotIncludedExe
    | TestsuiteTypeNotKnown Distribution.Types.TestType.TestType
    | TestsuiteNotSupported Distribution.Types.TestType.TestType
    | BenchmarkTypeNotKnown Distribution.Types.BenchmarkType.BenchmarkType
    | BenchmarkNotSupported Distribution.Types.BenchmarkType.BenchmarkType
    | NoHsLhsMainBench
    | InvalidNameWin Distribution.Types.PackageName.PackageName
    | ZPrefix
    | NoBuildType
    | NoCustomSetup
    | UnknownCompilers [GHC.Internal.Base.String]
    | UnknownLanguages [GHC.Internal.Base.String]
    | UnknownExtensions [GHC.Internal.Base.String]
    | LanguagesAsExtension [GHC.Internal.Base.String]
    | DeprecatedExtensions [(Language.Haskell.Extension.Extension, GHC.Internal.Maybe.Maybe Language.Haskell.Extension.Extension)]
    | MissingFieldCategory
    | MissingFieldMaintainer
    | MissingFieldSynopsis
    | MissingFieldDescription
    | MissingFieldSynOrDesc
    | SynopsisTooLong
    | ShortDesc
    | InvalidTestWith [Distribution.Types.Dependency.Dependency]
    | ImpossibleInternalDep [Distribution.Types.Dependency.Dependency]
    | ImpossibleInternalExe [Distribution.Types.ExeDependency.ExeDependency]
    | MissingInternalExe [Distribution.Types.ExeDependency.ExeDependency]
    | NONELicense
    | NoLicense
    | AllRightsReservedLicense
    | LicenseMessParse Distribution.License.License
    | UnrecognisedLicense GHC.Internal.Base.String
    | UncommonBSD4
    | UnknownLicenseVersion Distribution.License.License [Distribution.Types.Version.Version]
    | NoLicenseFile
    | UnrecognisedSourceRepo GHC.Internal.Base.String
    | MissingType
    | MissingLocation
    | GitProtocol
    | MissingModule
    | MissingTag
    | SubdirRelPath
    | SubdirGoodRelPath GHC.Internal.Base.String
    | OptFasm GHC.Internal.Base.String
    | OptHpc GHC.Internal.Base.String
    | OptProf GHC.Internal.Base.String
    | OptO GHC.Internal.Base.String
    | OptHide GHC.Internal.Base.String
    | OptMake GHC.Internal.Base.String
    | OptONot GHC.Internal.Base.String
    | OptOOne GHC.Internal.Base.String
    | OptOTwo GHC.Internal.Base.String
    | OptSplitSections GHC.Internal.Base.String
    | OptSplitObjs GHC.Internal.Base.String
    | OptWls GHC.Internal.Base.String
    | OptExts GHC.Internal.Base.String
    | OptRts GHC.Internal.Base.String
    | OptWithRts GHC.Internal.Base.String
    | COptONumber GHC.Internal.Base.String Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning.WarnLang
    | COptCPP GHC.Internal.Base.String
    | OptAlternatives GHC.Internal.Base.String GHC.Internal.Base.String [(GHC.Internal.Base.String, GHC.Internal.Base.String)]
    | RelativeOutside GHC.Internal.Base.String GHC.Internal.IO.FilePath
    | AbsolutePath GHC.Internal.Base.String GHC.Internal.IO.FilePath
    | BadRelativePath GHC.Internal.Base.String GHC.Internal.IO.FilePath GHC.Internal.Base.String
    | DistPoint (GHC.Internal.Maybe.Maybe GHC.Internal.Base.String) GHC.Internal.IO.FilePath
    | GlobSyntaxError GHC.Internal.Base.String GHC.Internal.Base.String
    | RecursiveGlobInRoot GHC.Internal.Base.String GHC.Internal.IO.FilePath
    | InvalidOnWin [GHC.Internal.IO.FilePath]
    | FilePathTooLong GHC.Internal.IO.FilePath
    | FilePathNameTooLong GHC.Internal.IO.FilePath
    | FilePathSplitTooLong GHC.Internal.IO.FilePath
    | FilePathEmpty
    | CVTestSuite
    | CVDefaultLanguage
    | CVDefaultLanguageComponent
    | CVDefaultLanguageComponentSoft
    | CVExtraDocFiles
    | CVMultiLib
    | CVReexported
    | CVMixins
    | CVExtraFrameworkDirs
    | CVDefaultExtensions
    | CVExtensionsDeprecated
    | CVSources
    | CVExtraDynamic [[GHC.Internal.Base.String]]
    | CVVirtualModules
    | CVSourceRepository
    | CVExtensions Distribution.CabalSpecVersion.CabalSpecVersion [Language.Haskell.Extension.Extension]
    | CVCustomSetup
    | CVExpliticDepsCustomSetup
    | CVAutogenPaths
    | CVAutogenPackageInfo
    | CVAutogenPackageInfoGuard
    | GlobNoMatch GHC.Internal.Base.String GHC.Internal.Base.String
    | GlobExactMatch GHC.Internal.Base.String GHC.Internal.Base.String GHC.Internal.IO.FilePath
    | GlobNoDir GHC.Internal.Base.String GHC.Internal.Base.String GHC.Internal.IO.FilePath
    | UnknownOS [GHC.Internal.Base.String]
    | UnknownArch [GHC.Internal.Base.String]
    | UnknownCompiler [GHC.Internal.Base.String]
    | BaseNoUpperBounds
    | MissingUpperBounds Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning.CEType [GHC.Internal.Base.String]
    | SuspiciousFlagName [GHC.Internal.Base.String]
    | DeclaredUsedFlags (Data.Set.Internal.Set Distribution.Types.Flag.FlagName) (Data.Set.Internal.Set Distribution.Types.Flag.FlagName)
    | NonASCIICustomField [GHC.Internal.Base.String]
    | RebindableClashPaths
    | RebindableClashPackageInfo
    | WErrorUnneeded GHC.Internal.Base.String
    | JUnneeded GHC.Internal.Base.String
    | FDeferTypeErrorsUnneeded GHC.Internal.Base.String
    | DynamicUnneeded GHC.Internal.Base.String
    | ProfilingUnneeded GHC.Internal.Base.String
    | UpperBoundSetup GHC.Internal.Base.String
    | DuplicateModule GHC.Internal.Base.String [Distribution.ModuleName.ModuleName]
    | PotentialDupModule GHC.Internal.Base.String [Distribution.ModuleName.ModuleName]
    | BOMStart GHC.Internal.IO.FilePath
    | NotPackageName GHC.Internal.IO.FilePath GHC.Internal.Base.String
    | NoDesc
    | MultiDesc [GHC.Internal.Base.String]
    | UnknownFile GHC.Internal.Base.String (Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File)
    | MissingSetupFile
    | MissingConfigureScript
    | UnknownDirectory GHC.Internal.Base.String GHC.Internal.IO.FilePath
    | MissingSourceControl
    | MissingExpectedDocFiles GHC.Types.Bool [GHC.Internal.IO.FilePath]
    | WrongFieldForExpectedDocFiles GHC.Types.Bool GHC.Internal.Base.String [GHC.Internal.IO.FilePath]
  type CheckExplanationID :: *
  data CheckExplanationID = ...
  type CheckExplanationIDString :: *
  type CheckExplanationIDString = GHC.Internal.Base.String
  type CheckPackageContentOps :: (* -> *) -> *
  data CheckPackageContentOps m = CheckPackageContentOps {doesFileExist :: GHC.Internal.IO.FilePath -> m GHC.Types.Bool, doesDirectoryExist :: GHC.Internal.IO.FilePath -> m GHC.Types.Bool, getDirectoryContents :: GHC.Internal.IO.FilePath -> m [GHC.Internal.IO.FilePath], getFileContents :: GHC.Internal.IO.FilePath -> m Data.ByteString.Lazy.Internal.ByteString}
  type PackageCheck :: *
  data PackageCheck = PackageBuildImpossible {explanation :: CheckExplanation} | PackageBuildWarning {explanation :: CheckExplanation} | PackageDistSuspicious {explanation :: CheckExplanation} | PackageDistSuspiciousWarn {explanation :: CheckExplanation} | PackageDistInexcusable {explanation :: CheckExplanation}
  checkConfiguredPackage :: Distribution.Types.PackageDescription.PackageDescription -> [PackageCheck]
  checkPackage :: Distribution.Types.GenericPackageDescription.GenericPackageDescription -> [PackageCheck]
  checkPackageContent :: forall (m :: * -> *). GHC.Internal.Base.Monad m => CheckPackageContentOps m -> Distribution.Types.GenericPackageDescription.GenericPackageDescription -> m [PackageCheck]
  checkPackageFiles :: Distribution.Verbosity.Verbosity -> Distribution.Types.PackageDescription.PackageDescription -> GHC.Internal.IO.FilePath -> GHC.Types.IO [PackageCheck]
  checkPackageFilesGPD :: Distribution.Verbosity.Verbosity -> Distribution.Types.GenericPackageDescription.GenericPackageDescription -> GHC.Internal.IO.FilePath -> GHC.Types.IO [PackageCheck]
  filterPackageChecksById :: [PackageCheck] -> [CheckExplanationID] -> [PackageCheck]
  filterPackageChecksByIdString :: [PackageCheck] -> [CheckExplanationIDString] -> ([PackageCheck], [CheckExplanationIDString])
  isHackageDistError :: PackageCheck -> GHC.Types.Bool
  ppCheckExplanationId :: CheckExplanationID -> CheckExplanationIDString
  ppPackageCheck :: PackageCheck -> GHC.Internal.Base.String
  wrapParseWarning :: GHC.Internal.IO.FilePath -> Distribution.Parsec.Warning.PWarning -> PackageCheck

module Distribution.PackageDescription.Configuration where
  addBuildableCondition :: forall v a c. (GHC.Classes.Eq v, GHC.Internal.Base.Monoid a, GHC.Internal.Base.Monoid c) => (a -> Distribution.Types.BuildInfo.BuildInfo) -> Distribution.Types.CondTree.CondTree v c a -> Distribution.Types.CondTree.CondTree v c a
  extractCondition :: forall v a c. GHC.Classes.Eq v => (a -> GHC.Types.Bool) -> Distribution.Types.CondTree.CondTree v c a -> Distribution.Types.Condition.Condition v
  extractConditions :: (Distribution.Types.BuildInfo.BuildInfo -> GHC.Types.Bool) -> Distribution.Types.GenericPackageDescription.GenericPackageDescription -> [Distribution.Types.Condition.Condition Distribution.Types.ConfVar.ConfVar]
  finalizePD :: Distribution.Types.Flag.FlagAssignment -> Distribution.Types.ComponentRequestedSpec.ComponentRequestedSpec -> (Distribution.Types.Dependency.Dependency -> Distribution.Types.DependencySatisfaction.DependencySatisfaction) -> Distribution.System.Platform -> Distribution.Compiler.CompilerInfo -> [Distribution.Types.PackageVersionConstraint.PackageVersionConstraint] -> Distribution.Types.GenericPackageDescription.GenericPackageDescription -> GHC.Internal.Data.Either.Either [Distribution.Types.MissingDependency.MissingDependency] (Distribution.Types.PackageDescription.PackageDescription, Distribution.Types.Flag.FlagAssignment)
  flattenPackageDescription :: Distribution.Types.GenericPackageDescription.GenericPackageDescription -> Distribution.Types.PackageDescription.PackageDescription
  freeVars :: forall c a. Distribution.Types.CondTree.CondTree Distribution.Types.ConfVar.ConfVar c a -> [Distribution.Types.Flag.FlagName]
  mapCondTree :: forall a b c d v w. (a -> b) -> (c -> d) -> (Distribution.Types.Condition.Condition v -> Distribution.Types.Condition.Condition w) -> Distribution.Types.CondTree.CondTree v c a -> Distribution.Types.CondTree.CondTree w d b
  mapTreeConds :: forall v w c a. (Distribution.Types.Condition.Condition v -> Distribution.Types.Condition.Condition w) -> Distribution.Types.CondTree.CondTree v c a -> Distribution.Types.CondTree.CondTree w c a
  mapTreeConstrs :: forall c d v a. (c -> d) -> Distribution.Types.CondTree.CondTree v c a -> Distribution.Types.CondTree.CondTree v d a
  mapTreeData :: forall a b v c. (a -> b) -> Distribution.Types.CondTree.CondTree v c a -> Distribution.Types.CondTree.CondTree v c b
  parseCondition :: forall (m :: * -> *). Distribution.Parsec.CabalParsing m => m (Distribution.Types.Condition.Condition Distribution.Types.ConfVar.ConfVar)
  simplifyWithSysParams :: Distribution.System.OS -> Distribution.System.Arch -> Distribution.Compiler.CompilerInfo -> Distribution.Types.Condition.Condition Distribution.Types.ConfVar.ConfVar -> (Distribution.Types.Condition.Condition Distribution.Types.Flag.FlagName, [Distribution.Types.Flag.FlagName])
  transformAllBuildDepends :: (Distribution.Types.Dependency.Dependency -> Distribution.Types.Dependency.Dependency) -> Distribution.Types.GenericPackageDescription.GenericPackageDescription -> Distribution.Types.GenericPackageDescription.GenericPackageDescription
  transformAllBuildDependsN :: ([Distribution.Types.Dependency.Dependency] -> [Distribution.Types.Dependency.Dependency]) -> Distribution.Types.GenericPackageDescription.GenericPackageDescription -> Distribution.Types.GenericPackageDescription.GenericPackageDescription
  transformAllBuildInfos :: (Distribution.Types.BuildInfo.BuildInfo -> Distribution.Types.BuildInfo.BuildInfo) -> (Distribution.Types.SetupBuildInfo.SetupBuildInfo -> Distribution.Types.SetupBuildInfo.SetupBuildInfo) -> Distribution.Types.GenericPackageDescription.GenericPackageDescription -> Distribution.Types.GenericPackageDescription.GenericPackageDescription

module Distribution.PackageDescription.FieldGrammar where
  type BenchmarkStanza :: *
  data BenchmarkStanza = BenchmarkStanza {_benchmarkStanzaBenchmarkType :: GHC.Internal.Maybe.Maybe Distribution.Types.BenchmarkType.BenchmarkType, _benchmarkStanzaMainIs :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Source Distribution.Utils.Path.File), _benchmarkStanzaBenchmarkModule :: GHC.Internal.Maybe.Maybe Distribution.ModuleName.ModuleName, _benchmarkStanzaBuildInfo :: Distribution.Types.BuildInfo.BuildInfo}
  type CompatDataDir :: *
  newtype CompatDataDir = CompatDataDir {getCompatDataDir :: Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.DataDir)}
  type CompatLicenseFile :: *
  newtype CompatLicenseFile = CompatLicenseFile {getCompatLicenseFile :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]}
  type TestSuiteStanza :: *
  data TestSuiteStanza = TestSuiteStanza {_testStanzaTestType :: GHC.Internal.Maybe.Maybe Distribution.Types.TestType.TestType, _testStanzaMainIs :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Source Distribution.Utils.Path.File), _testStanzaTestModule :: GHC.Internal.Maybe.Maybe Distribution.ModuleName.ModuleName, _testStanzaBuildInfo :: Distribution.Types.BuildInfo.BuildInfo, _testStanzaCodeGenerators :: [GHC.Internal.Base.String]}
  benchmarkFieldGrammar ::
    forall (c :: * -> Constraint) (g :: * -> * -> *).
    (Distribution.FieldGrammar.Class.FieldGrammar c g, GHC.Internal.Base.Applicative (g BenchmarkStanza), GHC.Internal.Base.Applicative (g Distribution.Types.BuildInfo.BuildInfo), c (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.BenchmarkType.BenchmarkType), c (GHC.Internal.Data.Functor.Identity.Identity Distribution.ModuleName.ModuleName), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaFSep (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.ExeDependency.ExeDependency) Distribution.Types.ExeDependency.ExeDependency),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaFSep (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.LegacyExeDependency.LegacyExeDependency) Distribution.Types.LegacyExeDependency.LegacyExeDependency), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaFSep (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.PkgconfigDependency.PkgconfigDependency) Distribution.Types.PkgconfigDependency.PkgconfigDependency),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaVCat (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.Dependency.Dependency) Distribution.Types.Dependency.Dependency), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaVCat (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.Mixin.Mixin) Distribution.Types.Mixin.Mixin), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.MQuoted Language.Haskell.Extension.Extension) Language.Haskell.Extension.Extension),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.MQuoted Language.Haskell.Extension.Language) Language.Haskell.Extension.Language), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep Distribution.FieldGrammar.Newtypes.Token GHC.Internal.Base.String), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.NoCommaFSep Distribution.FieldGrammar.Newtypes.Token' GHC.Internal.Base.String),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat (Distribution.FieldGrammar.Newtypes.MQuoted Distribution.ModuleName.ModuleName) Distribution.ModuleName.ModuleName), forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.SymbolicPathNT from to) (Distribution.Utils.Path.SymbolicPath from to)),
     forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.RelativePathNT from to) (Distribution.Utils.Path.RelativePath from to)), forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat (Distribution.FieldGrammar.Newtypes.SymbolicPathNT from to) (Distribution.Utils.Path.SymbolicPath from to)), forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.RelativePathNT from to),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat Distribution.FieldGrammar.Newtypes.Token GHC.Internal.Base.String), c (Distribution.FieldGrammar.Newtypes.MQuoted Language.Haskell.Extension.Language)) =>
    g BenchmarkStanza BenchmarkStanza
  benchmarkStanzaBenchmarkModule :: Distribution.Compat.Lens.Lens' BenchmarkStanza (GHC.Internal.Maybe.Maybe Distribution.ModuleName.ModuleName)
  benchmarkStanzaBenchmarkType :: Distribution.Compat.Lens.Lens' BenchmarkStanza (GHC.Internal.Maybe.Maybe Distribution.Types.BenchmarkType.BenchmarkType)
  benchmarkStanzaBuildInfo :: Distribution.Compat.Lens.Lens' BenchmarkStanza Distribution.Types.BuildInfo.BuildInfo
  benchmarkStanzaMainIs :: Distribution.Compat.Lens.Lens' BenchmarkStanza (GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Source Distribution.Utils.Path.File))
  buildInfoFieldGrammar ::
    forall (c :: * -> Constraint) (g :: * -> * -> *).
    (Distribution.FieldGrammar.Class.FieldGrammar c g, GHC.Internal.Base.Applicative (g Distribution.Types.BuildInfo.BuildInfo), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaFSep (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.ExeDependency.ExeDependency) Distribution.Types.ExeDependency.ExeDependency), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaFSep (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.LegacyExeDependency.LegacyExeDependency) Distribution.Types.LegacyExeDependency.LegacyExeDependency),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaFSep (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.PkgconfigDependency.PkgconfigDependency) Distribution.Types.PkgconfigDependency.PkgconfigDependency), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaVCat (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.Dependency.Dependency) Distribution.Types.Dependency.Dependency),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaVCat (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.Mixin.Mixin) Distribution.Types.Mixin.Mixin), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.MQuoted Language.Haskell.Extension.Extension) Language.Haskell.Extension.Extension), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.MQuoted Language.Haskell.Extension.Language) Language.Haskell.Extension.Language),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep Distribution.FieldGrammar.Newtypes.Token GHC.Internal.Base.String), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.NoCommaFSep Distribution.FieldGrammar.Newtypes.Token' GHC.Internal.Base.String), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat (Distribution.FieldGrammar.Newtypes.MQuoted Distribution.ModuleName.ModuleName) Distribution.ModuleName.ModuleName),
     forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.SymbolicPathNT from to) (Distribution.Utils.Path.SymbolicPath from to)), forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.RelativePathNT from to) (Distribution.Utils.Path.RelativePath from to)),
     forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat (Distribution.FieldGrammar.Newtypes.SymbolicPathNT from to) (Distribution.Utils.Path.SymbolicPath from to)), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat Distribution.FieldGrammar.Newtypes.Token GHC.Internal.Base.String), c (Distribution.FieldGrammar.Newtypes.MQuoted Language.Haskell.Extension.Language)) =>
    g Distribution.Types.BuildInfo.BuildInfo Distribution.Types.BuildInfo.BuildInfo
  executableFieldGrammar ::
    forall (c :: * -> Constraint) (g :: * -> * -> *).
    (Distribution.FieldGrammar.Class.FieldGrammar c g, GHC.Internal.Base.Applicative (g Distribution.Types.Executable.Executable), GHC.Internal.Base.Applicative (g Distribution.Types.BuildInfo.BuildInfo), c (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.ExecutableScope.ExecutableScope), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaFSep (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.ExeDependency.ExeDependency) Distribution.Types.ExeDependency.ExeDependency),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaFSep (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.LegacyExeDependency.LegacyExeDependency) Distribution.Types.LegacyExeDependency.LegacyExeDependency), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaFSep (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.PkgconfigDependency.PkgconfigDependency) Distribution.Types.PkgconfigDependency.PkgconfigDependency),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaVCat (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.Dependency.Dependency) Distribution.Types.Dependency.Dependency), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaVCat (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.Mixin.Mixin) Distribution.Types.Mixin.Mixin), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.MQuoted Language.Haskell.Extension.Extension) Language.Haskell.Extension.Extension),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.MQuoted Language.Haskell.Extension.Language) Language.Haskell.Extension.Language), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep Distribution.FieldGrammar.Newtypes.Token GHC.Internal.Base.String), forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.SymbolicPathNT from to) (Distribution.Utils.Path.SymbolicPath from to)),
     forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.RelativePathNT from to) (Distribution.Utils.Path.RelativePath from to)), forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.SymbolicPathNT from to) (Distribution.Utils.Path.SymbolicPath from to)),
     forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.RelativePathNT from to) (Distribution.Utils.Path.RelativePath from to)), forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat (Distribution.FieldGrammar.Newtypes.SymbolicPathNT from to) (Distribution.Utils.Path.SymbolicPath from to)), forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.SymbolicPathNT from to),
     forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.RelativePathNT from to), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.NoCommaFSep Distribution.FieldGrammar.Newtypes.Token' GHC.Internal.Base.String), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat (Distribution.FieldGrammar.Newtypes.MQuoted Distribution.ModuleName.ModuleName) Distribution.ModuleName.ModuleName), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat Distribution.FieldGrammar.Newtypes.Token GHC.Internal.Base.String),
     c (Distribution.FieldGrammar.Newtypes.MQuoted Language.Haskell.Extension.Language)) =>
    Distribution.Types.UnqualComponentName.UnqualComponentName -> g Distribution.Types.Executable.Executable Distribution.Types.Executable.Executable
  flagFieldGrammar :: forall (c :: * -> Constraint) (g :: * -> * -> *). (Distribution.FieldGrammar.Class.FieldGrammar c g, GHC.Internal.Base.Applicative (g Distribution.Types.Flag.PackageFlag)) => Distribution.Types.Flag.FlagName -> g Distribution.Types.Flag.PackageFlag Distribution.Types.Flag.PackageFlag
  foreignLibFieldGrammar ::
    forall (c :: * -> Constraint) (g :: * -> * -> *).
    (Distribution.FieldGrammar.Class.FieldGrammar c g, GHC.Internal.Base.Applicative (g Distribution.Types.ForeignLib.ForeignLib), GHC.Internal.Base.Applicative (g Distribution.Types.BuildInfo.BuildInfo), c (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.ForeignLibType.ForeignLibType), c (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.ForeignLib.LibVersionInfo), c (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.Version.Version),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaFSep (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.ExeDependency.ExeDependency) Distribution.Types.ExeDependency.ExeDependency), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaFSep (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.LegacyExeDependency.LegacyExeDependency) Distribution.Types.LegacyExeDependency.LegacyExeDependency),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaFSep (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.PkgconfigDependency.PkgconfigDependency) Distribution.Types.PkgconfigDependency.PkgconfigDependency), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaVCat (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.Dependency.Dependency) Distribution.Types.Dependency.Dependency),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaVCat (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.Mixin.Mixin) Distribution.Types.Mixin.Mixin), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.ForeignLibOption.ForeignLibOption) Distribution.Types.ForeignLibOption.ForeignLibOption), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.MQuoted Language.Haskell.Extension.Extension) Language.Haskell.Extension.Extension),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.MQuoted Language.Haskell.Extension.Language) Language.Haskell.Extension.Language), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep Distribution.FieldGrammar.Newtypes.Token GHC.Internal.Base.String), forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.SymbolicPathNT from to) (Distribution.Utils.Path.SymbolicPath from to)),
     forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.RelativePathNT from to) (Distribution.Utils.Path.RelativePath from to)), forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat (Distribution.FieldGrammar.Newtypes.SymbolicPathNT from to) (Distribution.Utils.Path.SymbolicPath from to)), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.NoCommaFSep Distribution.FieldGrammar.Newtypes.Token' GHC.Internal.Base.String),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat (Distribution.FieldGrammar.Newtypes.MQuoted Distribution.ModuleName.ModuleName) Distribution.ModuleName.ModuleName), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat Distribution.FieldGrammar.Newtypes.Token GHC.Internal.Base.String), c (Distribution.FieldGrammar.Newtypes.MQuoted Language.Haskell.Extension.Language)) =>
    Distribution.Types.UnqualComponentName.UnqualComponentName -> g Distribution.Types.ForeignLib.ForeignLib Distribution.Types.ForeignLib.ForeignLib
  formatDependencyList :: [Distribution.Types.Dependency.Dependency] -> Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaVCat (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.Dependency.Dependency) Distribution.Types.Dependency.Dependency
  formatExposedModules :: [Distribution.ModuleName.ModuleName] -> Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat (Distribution.FieldGrammar.Newtypes.MQuoted Distribution.ModuleName.ModuleName) Distribution.ModuleName.ModuleName
  formatExtraSourceFiles :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File] -> Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat (Distribution.FieldGrammar.Newtypes.RelativePathNT Distribution.Utils.Path.Pkg Distribution.Utils.Path.File) (Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File)
  formatHsSourceDirs :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Source)] -> Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.SymbolicPathNT Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Source)) (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Source))
  formatMixinList :: [Distribution.Types.Mixin.Mixin] -> Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaVCat (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.Mixin.Mixin) Distribution.Types.Mixin.Mixin
  formatOtherExtensions :: [Language.Haskell.Extension.Extension] -> Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.MQuoted Language.Haskell.Extension.Extension) Language.Haskell.Extension.Extension
  formatOtherModules :: [Distribution.ModuleName.ModuleName] -> Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat (Distribution.FieldGrammar.Newtypes.MQuoted Distribution.ModuleName.ModuleName) Distribution.ModuleName.ModuleName
  libraryFieldGrammar ::
    forall (c :: * -> Constraint) (g :: * -> * -> *).
    (Distribution.FieldGrammar.Class.FieldGrammar c g, GHC.Internal.Base.Applicative (g Distribution.Types.Library.Library), GHC.Internal.Base.Applicative (g Distribution.Types.BuildInfo.BuildInfo), c (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.LibraryVisibility.LibraryVisibility), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaFSep (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.ExeDependency.ExeDependency) Distribution.Types.ExeDependency.ExeDependency),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaFSep (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.LegacyExeDependency.LegacyExeDependency) Distribution.Types.LegacyExeDependency.LegacyExeDependency), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaFSep (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.PkgconfigDependency.PkgconfigDependency) Distribution.Types.PkgconfigDependency.PkgconfigDependency),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaVCat (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.Dependency.Dependency) Distribution.Types.Dependency.Dependency), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaVCat (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.Mixin.Mixin) Distribution.Types.Mixin.Mixin), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaVCat (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.ModuleReexport.ModuleReexport) Distribution.Types.ModuleReexport.ModuleReexport),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.MQuoted Language.Haskell.Extension.Extension) Language.Haskell.Extension.Extension), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.MQuoted Language.Haskell.Extension.Language) Language.Haskell.Extension.Language), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep Distribution.FieldGrammar.Newtypes.Token GHC.Internal.Base.String),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.NoCommaFSep Distribution.FieldGrammar.Newtypes.Token' GHC.Internal.Base.String), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat (Distribution.FieldGrammar.Newtypes.MQuoted Distribution.ModuleName.ModuleName) Distribution.ModuleName.ModuleName), forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.SymbolicPathNT from to) (Distribution.Utils.Path.SymbolicPath from to)),
     forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.RelativePathNT from to) (Distribution.Utils.Path.RelativePath from to)), forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat (Distribution.FieldGrammar.Newtypes.SymbolicPathNT from to) (Distribution.Utils.Path.SymbolicPath from to)), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat Distribution.FieldGrammar.Newtypes.Token GHC.Internal.Base.String),
     c (Distribution.FieldGrammar.Newtypes.MQuoted Language.Haskell.Extension.Language)) =>
    Distribution.Types.LibraryName.LibraryName -> g Distribution.Types.Library.Library Distribution.Types.Library.Library
  packageDescriptionFieldGrammar ::
    forall (c :: * -> Constraint) (g :: * -> * -> *).
    (Distribution.FieldGrammar.Class.FieldGrammar c g, GHC.Internal.Base.Applicative (g Distribution.Types.PackageDescription.PackageDescription), GHC.Internal.Base.Applicative (g Distribution.Types.PackageId.PackageIdentifier), c (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.BuildType.BuildType), c (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.PackageName.PackageName), c (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.Version.Version),
     forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.RelativePathNT from to) (Distribution.Utils.Path.RelativePath from to)), forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat (Distribution.FieldGrammar.Newtypes.RelativePathNT from to) (Distribution.Utils.Path.RelativePath from to)),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep Distribution.FieldGrammar.Newtypes.TestedWith (Distribution.Compiler.CompilerFlavor, Distribution.Types.VersionRange.Internal.VersionRange)), c CompatLicenseFile, c CompatDataDir) =>
    g Distribution.Types.PackageDescription.PackageDescription Distribution.Types.PackageDescription.PackageDescription
  setupBInfoFieldGrammar :: forall (c :: * -> Constraint) (g :: * -> * -> *). (Distribution.FieldGrammar.Class.FieldGrammar c g, GHC.Internal.Base.Functor (g Distribution.Types.SetupBuildInfo.SetupBuildInfo), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaVCat (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.Dependency.Dependency) Distribution.Types.Dependency.Dependency)) => GHC.Types.Bool -> g Distribution.Types.SetupBuildInfo.SetupBuildInfo Distribution.Types.SetupBuildInfo.SetupBuildInfo
  sourceRepoFieldGrammar :: forall (c :: * -> Constraint) (g :: * -> * -> *). (Distribution.FieldGrammar.Class.FieldGrammar c g, GHC.Internal.Base.Applicative (g Distribution.Types.SourceRepo.SourceRepo), c (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.SourceRepo.RepoType), c Distribution.FieldGrammar.Newtypes.Token, c Distribution.FieldGrammar.Newtypes.FilePathNT) => Distribution.Types.SourceRepo.RepoKind -> g Distribution.Types.SourceRepo.SourceRepo Distribution.Types.SourceRepo.SourceRepo
  testStanzaBuildInfo :: Distribution.Compat.Lens.Lens' TestSuiteStanza Distribution.Types.BuildInfo.BuildInfo
  testStanzaMainIs :: Distribution.Compat.Lens.Lens' TestSuiteStanza (GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Source Distribution.Utils.Path.File))
  testStanzaTestModule :: Distribution.Compat.Lens.Lens' TestSuiteStanza (GHC.Internal.Maybe.Maybe Distribution.ModuleName.ModuleName)
  testStanzaTestType :: Distribution.Compat.Lens.Lens' TestSuiteStanza (GHC.Internal.Maybe.Maybe Distribution.Types.TestType.TestType)
  testSuiteFieldGrammar ::
    forall (c :: * -> Constraint) (g :: * -> * -> *).
    (Distribution.FieldGrammar.Class.FieldGrammar c g, GHC.Internal.Base.Applicative (g TestSuiteStanza), GHC.Internal.Base.Applicative (g Distribution.Types.BuildInfo.BuildInfo), c (GHC.Internal.Data.Functor.Identity.Identity Distribution.ModuleName.ModuleName), c (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.TestType.TestType), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaFSep (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.ExeDependency.ExeDependency) Distribution.Types.ExeDependency.ExeDependency),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaFSep (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.LegacyExeDependency.LegacyExeDependency) Distribution.Types.LegacyExeDependency.LegacyExeDependency), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaFSep (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.PkgconfigDependency.PkgconfigDependency) Distribution.Types.PkgconfigDependency.PkgconfigDependency), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaFSep Distribution.FieldGrammar.Newtypes.Token GHC.Internal.Base.String),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaVCat (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.Dependency.Dependency) Distribution.Types.Dependency.Dependency), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.CommaVCat (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.Mixin.Mixin) Distribution.Types.Mixin.Mixin), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.MQuoted Language.Haskell.Extension.Extension) Language.Haskell.Extension.Extension),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.MQuoted Language.Haskell.Extension.Language) Language.Haskell.Extension.Language), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep Distribution.FieldGrammar.Newtypes.Token GHC.Internal.Base.String), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.NoCommaFSep Distribution.FieldGrammar.Newtypes.Token' GHC.Internal.Base.String),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat (Distribution.FieldGrammar.Newtypes.MQuoted Distribution.ModuleName.ModuleName) Distribution.ModuleName.ModuleName), forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.SymbolicPathNT from to) (Distribution.Utils.Path.SymbolicPath from to)),
     forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.RelativePathNT from to) (Distribution.Utils.Path.RelativePath from to)), forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat (Distribution.FieldGrammar.Newtypes.SymbolicPathNT from to) (Distribution.Utils.Path.SymbolicPath from to)), forall from (to :: Distribution.Utils.Path.FileOrDir). c (Distribution.FieldGrammar.Newtypes.RelativePathNT from to),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.VCat Distribution.FieldGrammar.Newtypes.Token GHC.Internal.Base.String), c (Distribution.FieldGrammar.Newtypes.MQuoted Language.Haskell.Extension.Language)) =>
    g TestSuiteStanza TestSuiteStanza
  unvalidateBenchmark :: Distribution.Types.Benchmark.Benchmark -> BenchmarkStanza
  unvalidateTestSuite :: Distribution.Types.TestSuite.TestSuite -> TestSuiteStanza
  validateBenchmark :: Distribution.CabalSpecVersion.CabalSpecVersion -> Distribution.Parsec.Position.Position -> BenchmarkStanza -> Distribution.Fields.ParseResult.ParseResult Distribution.Types.Benchmark.Benchmark
  validateTestSuite :: Distribution.CabalSpecVersion.CabalSpecVersion -> Distribution.Parsec.Position.Position -> TestSuiteStanza -> Distribution.Fields.ParseResult.ParseResult Distribution.Types.TestSuite.TestSuite

module Distribution.PackageDescription.Parsec where
  type ParseResult :: * -> *
  newtype ParseResult a = ...
  parseGenericPackageDescription :: bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> ParseResult Distribution.Types.GenericPackageDescription.GenericPackageDescription
  parseGenericPackageDescriptionMaybe :: bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> GHC.Internal.Maybe.Maybe Distribution.Types.GenericPackageDescription.GenericPackageDescription
  parseHookedBuildInfo :: bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> ParseResult Distribution.Types.HookedBuildInfo.HookedBuildInfo
  runParseResult :: forall a. ParseResult a -> ([Distribution.Parsec.Warning.PWarning], GHC.Internal.Data.Either.Either (GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version, GHC.Internal.Base.NonEmpty Distribution.Parsec.Error.PError) a)
  scanSpecVersion :: bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version

module Distribution.PackageDescription.PrettyPrint where
  ppGenericPackageDescription :: Distribution.CabalSpecVersion.CabalSpecVersion -> Distribution.Types.GenericPackageDescription.GenericPackageDescription -> [Distribution.Fields.Pretty.PrettyField ()]
  showGenericPackageDescription :: Distribution.Types.GenericPackageDescription.GenericPackageDescription -> GHC.Internal.Base.String
  showHookedBuildInfo :: Distribution.Types.HookedBuildInfo.HookedBuildInfo -> GHC.Internal.Base.String
  showPackageDescription :: Distribution.Types.PackageDescription.PackageDescription -> GHC.Internal.Base.String
  writeGenericPackageDescription :: GHC.Internal.IO.FilePath -> Distribution.Types.GenericPackageDescription.GenericPackageDescription -> GHC.Types.IO ()
  writeHookedBuildInfo :: GHC.Internal.IO.FilePath -> Distribution.Types.HookedBuildInfo.HookedBuildInfo -> GHC.Types.IO ()
  writePackageDescription :: GHC.Internal.IO.FilePath -> Distribution.Types.PackageDescription.PackageDescription -> GHC.Types.IO ()

module Distribution.PackageDescription.Quirks where
  patchQuirks :: bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> (GHC.Types.Bool, bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString)

module Distribution.PackageDescription.Utils where
  cabalBug :: forall a. GHC.Internal.Base.String -> a
  userBug :: forall a. GHC.Internal.Base.String -> a

module Distribution.Parsec where
  type CabalParsing :: (* -> *) -> Constraint
  class (Distribution.Compat.CharParsing.CharParsing m, GHC.Internal.Base.MonadPlus m, GHC.Internal.Control.Monad.Fail.MonadFail m) => CabalParsing m where
    parsecWarning :: PWarnType -> GHC.Internal.Base.String -> m ()
    parsecHaskellString :: m GHC.Internal.Base.String
    askCabalSpecVersion :: m Distribution.CabalSpecVersion.CabalSpecVersion
    {-# MINIMAL parsecWarning, askCabalSpecVersion #-}
  type PError :: *
  data PError = PError Position GHC.Internal.Base.String
  type PWarnType :: *
  data PWarnType = PWTOther | PWTUTF | PWTBoolCase | PWTVersionTag | PWTNewSyntax | PWTOldSyntax | PWTDeprecatedField | PWTInvalidSubsection | PWTUnknownField | PWTUnknownSection | PWTTrailingFields | PWTExtraMainIs | PWTExtraTestModule | PWTExtraBenchmarkModule | PWTLexNBSP | PWTLexBOM | PWTLexTab | PWTQuirkyCabalFile | PWTDoubleDash | PWTMultipleSingularField | PWTBuildTypeDefault | PWTVersionOperator | PWTVersionWildcard | PWTSpecVersion | PWTEmptyFilePath | PWTInconsistentIndentation | PWTExperimental
  type PWarning :: *
  data PWarning = PWarning !PWarnType !Position GHC.Internal.Base.String
  type Parsec :: * -> Constraint
  class Parsec a where
    parsec :: forall (m :: * -> *). CabalParsing m => m a
    {-# MINIMAL parsec #-}
  type ParsecParser :: * -> *
  newtype ParsecParser a = PP {unPP :: Distribution.CabalSpecVersion.CabalSpecVersion -> Text.Parsec.Prim.Parsec Distribution.Parsec.FieldLineStream.FieldLineStream [PWarning] a}
  type Position :: *
  data Position = Position {-# UNPACK #-}GHC.Types.Int {-# UNPACK #-}GHC.Types.Int
  eitherParsec :: forall a. Parsec a => GHC.Internal.Base.String -> GHC.Internal.Data.Either.Either GHC.Internal.Base.String a
  explicitEitherParsec :: forall a. ParsecParser a -> GHC.Internal.Base.String -> GHC.Internal.Data.Either.Either GHC.Internal.Base.String a
  explicitEitherParsec' :: forall a. Distribution.CabalSpecVersion.CabalSpecVersion -> ParsecParser a -> GHC.Internal.Base.String -> GHC.Internal.Data.Either.Either GHC.Internal.Base.String a
  incPos :: GHC.Types.Int -> Position -> Position
  lexemeParsec :: forall (m :: * -> *) a. (CabalParsing m, Parsec a) => m a
  parsecCommaList :: forall (m :: * -> *) a. CabalParsing m => m a -> m [a]
  parsecCommaNonEmpty :: forall (m :: * -> *) a. CabalParsing m => m a -> m (GHC.Internal.Base.NonEmpty a)
  parsecFilePath :: forall (m :: * -> *). CabalParsing m => m GHC.Internal.IO.FilePath
  parsecLeadingCommaList :: forall (m :: * -> *) a. CabalParsing m => m a -> m [a]
  parsecLeadingCommaNonEmpty :: forall (m :: * -> *) a. CabalParsing m => m a -> m (GHC.Internal.Base.NonEmpty a)
  parsecLeadingOptCommaList :: forall (m :: * -> *) a. CabalParsing m => m a -> m [a]
  parsecMaybeQuoted :: forall (m :: * -> *) a. CabalParsing m => m a -> m a
  parsecOptCommaList :: forall (m :: * -> *) a. CabalParsing m => m a -> m [a]
  parsecQuoted :: forall (m :: * -> *) a. CabalParsing m => m a -> m a
  parsecStandard :: forall (m :: * -> *) ver a. (CabalParsing m, Parsec ver) => (ver -> GHC.Internal.Base.String -> a) -> m a
  parsecToken :: forall (m :: * -> *). CabalParsing m => m GHC.Internal.Base.String
  parsecToken' :: forall (m :: * -> *). CabalParsing m => m GHC.Internal.Base.String
  parsecUnqualComponentName :: forall (m :: * -> *). CabalParsing m => m GHC.Internal.Base.String
  retPos :: Position -> Position
  runParsecParser :: forall a. ParsecParser a -> GHC.Internal.IO.FilePath -> Distribution.Parsec.FieldLineStream.FieldLineStream -> GHC.Internal.Data.Either.Either Text.Parsec.Error.ParseError a
  runParsecParser' :: forall a. Distribution.CabalSpecVersion.CabalSpecVersion -> ParsecParser a -> GHC.Internal.IO.FilePath -> Distribution.Parsec.FieldLineStream.FieldLineStream -> GHC.Internal.Data.Either.Either Text.Parsec.Error.ParseError a
  showPError :: GHC.Internal.IO.FilePath -> PError -> GHC.Internal.Base.String
  showPWarning :: GHC.Internal.IO.FilePath -> PWarning -> GHC.Internal.Base.String
  showPos :: Position -> GHC.Internal.Base.String
  simpleParsec :: forall a. Parsec a => GHC.Internal.Base.String -> GHC.Internal.Maybe.Maybe a
  simpleParsec' :: forall a. Parsec a => Distribution.CabalSpecVersion.CabalSpecVersion -> GHC.Internal.Base.String -> GHC.Internal.Maybe.Maybe a
  simpleParsecBS :: forall a. Parsec a => bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> GHC.Internal.Maybe.Maybe a
  simpleParsecW' :: forall a. Parsec a => Distribution.CabalSpecVersion.CabalSpecVersion -> GHC.Internal.Base.String -> GHC.Internal.Maybe.Maybe a
  zeroPos :: Position

module Distribution.Parsec.Error where
  type PError :: *
  data PError = PError Distribution.Parsec.Position.Position GHC.Internal.Base.String
  showPError :: GHC.Internal.IO.FilePath -> PError -> GHC.Internal.Base.String

module Distribution.Parsec.FieldLineStream where
  type FieldLineStream :: *
  data FieldLineStream = FLSLast !bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString | FLSCons {-# UNPACK #-}bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString FieldLineStream
  fieldLineStreamEnd :: FieldLineStream
  fieldLineStreamFromBS :: bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> FieldLineStream
  fieldLineStreamFromString :: GHC.Internal.Base.String -> FieldLineStream

module Distribution.Parsec.Position where
  type Position :: *
  data Position = Position {-# UNPACK #-}GHC.Types.Int {-# UNPACK #-}GHC.Types.Int
  incPos :: GHC.Types.Int -> Position -> Position
  positionCol :: Position -> GHC.Types.Int
  positionRow :: Position -> GHC.Types.Int
  retPos :: Position -> Position
  showPos :: Position -> GHC.Internal.Base.String
  zeroPos :: Position

module Distribution.Parsec.Warning where
  type PWarnType :: *
  data PWarnType = PWTOther | PWTUTF | PWTBoolCase | PWTVersionTag | PWTNewSyntax | PWTOldSyntax | PWTDeprecatedField | PWTInvalidSubsection | PWTUnknownField | PWTUnknownSection | PWTTrailingFields | PWTExtraMainIs | PWTExtraTestModule | PWTExtraBenchmarkModule | PWTLexNBSP | PWTLexBOM | PWTLexTab | PWTQuirkyCabalFile | PWTDoubleDash | PWTMultipleSingularField | PWTBuildTypeDefault | PWTVersionOperator | PWTVersionWildcard | PWTSpecVersion | PWTEmptyFilePath | PWTInconsistentIndentation | PWTExperimental
  type PWarning :: *
  data PWarning = PWarning !PWarnType !Distribution.Parsec.Position.Position GHC.Internal.Base.String
  showPWarning :: GHC.Internal.IO.FilePath -> PWarning -> GHC.Internal.Base.String

module Distribution.Pretty where
  type Pretty :: * -> Constraint
  class Pretty a where
    pretty :: a -> Text.PrettyPrint.HughesPJ.Doc
    prettyVersioned :: Distribution.CabalSpecVersion.CabalSpecVersion -> a -> Text.PrettyPrint.HughesPJ.Doc
    {-# MINIMAL pretty #-}
  type Separator :: *
  type Separator = [Text.PrettyPrint.HughesPJ.Doc] -> Text.PrettyPrint.HughesPJ.Doc
  commaSep :: forall a. Pretty a => [a] -> Text.PrettyPrint.HughesPJ.Doc
  commaSpaceSep :: forall a. Pretty a => [a] -> Text.PrettyPrint.HughesPJ.Doc
  defaultStyle :: Text.PrettyPrint.Annotated.HughesPJ.Style
  flatStyle :: Text.PrettyPrint.Annotated.HughesPJ.Style
  prettyShow :: forall a. Pretty a => a -> GHC.Internal.Base.String
  showFilePath :: GHC.Internal.IO.FilePath -> Text.PrettyPrint.HughesPJ.Doc
  showFreeText :: GHC.Internal.Base.String -> Text.PrettyPrint.HughesPJ.Doc
  showFreeTextV3 :: GHC.Internal.Base.String -> Text.PrettyPrint.HughesPJ.Doc
  showToken :: GHC.Internal.Base.String -> Text.PrettyPrint.HughesPJ.Doc
  showTokenStr :: GHC.Internal.Base.String -> GHC.Internal.Base.String

module Distribution.ReadE where
  type ReadE :: * -> *
  newtype ReadE a = ReadE {runReadE :: GHC.Internal.Base.String -> GHC.Internal.Data.Either.Either Distribution.ReadE.ErrorMsg a}
  failReadE :: forall a. Distribution.ReadE.ErrorMsg -> ReadE a
  parsecToReadE :: forall a. (GHC.Internal.Base.String -> Distribution.ReadE.ErrorMsg) -> Distribution.Parsec.ParsecParser a -> ReadE a
  parsecToReadEErr :: forall a. (Text.Parsec.Error.ParseError -> Distribution.ReadE.ErrorMsg) -> Distribution.Parsec.ParsecParser a -> ReadE a
  succeedReadE :: forall a. (GHC.Internal.Base.String -> a) -> ReadE a
  unexpectMsgString :: Text.Parsec.Error.ParseError -> GHC.Internal.Base.String

module Distribution.SPDX where
  type License :: *
  data License = NONE | License LicenseExpression
  type LicenseExceptionId :: *
  data LicenseExceptionId
    = N_389_exception
    | Asterisk_exception
    | Asterisk_linking_protocols_exception
    | Autoconf_exception_2_0
    | Autoconf_exception_3_0
    | Autoconf_exception_generic_3_0
    | Autoconf_exception_generic
    | Autoconf_exception_macro
    | Bison_exception_1_24
    | Bison_exception_2_2
    | Bootloader_exception
    | Classpath_exception_2_0
    | CLISP_exception_2_0
    | Cryptsetup_OpenSSL_exception
    | DigiRule_FOSS_exception
    | ECos_exception_2_0
    | Erlang_otp_linking_exception
    | Fawkes_Runtime_exception
    | FLTK_exception
    | Fmt_exception
    | Font_exception_2_0
    | Freertos_exception_2_0
    | GCC_exception_2_0_note
    | GCC_exception_2_0
    | GCC_exception_3_1
    | Gmsh_exception
    | GNAT_exception
    | GNOME_examples_exception
    | GNU_compiler_exception
    | Gnu_javamail_exception
    | GPL_3_0_interface_exception
    | GPL_3_0_linking_exception
    | GPL_3_0_linking_source_exception
    | GPL_CC_1_0
    | GStreamer_exception_2005
    | GStreamer_exception_2008
    | I2p_gpl_java_exception
    | KiCad_libraries_exception
    | LGPL_3_0_linking_exception
    | Libpri_OpenH323_exception
    | Libtool_exception
    | Linux_syscall_note
    | LLGPL
    | LLVM_exception
    | LZMA_exception
    | Mif_exception
    | Nokia_Qt_exception_1_1
    | OCaml_LGPL_linking_exception
    | OCCT_exception_1_0
    | OpenJDK_assembly_exception_1_0
    | Openvpn_openssl_exception
    | PCRE2_exception
    | PS_or_PDF_font_exception_20170817
    | QPL_1_0_INRIA_2004_exception
    | Qt_GPL_exception_1_0
    | Qt_LGPL_exception_1_1
    | Qwt_exception_1_0
    | Romic_exception
    | RRDtool_FLOSS_exception_2_0
    | SANE_exception
    | SHL_2_0
    | SHL_2_1
    | Stunnel_exception
    | SWI_exception
    | Swift_exception
    | Texinfo_exception
    | U_boot_exception_2_0
    | UBDL_exception
    | Universal_FOSS_exception_1_0
    | Vsftpd_openssl_exception
    | WxWindows_exception_3_1
    | X11vnc_openssl_exception
  type LicenseExpression :: *
  data LicenseExpression = ELicense !SimpleLicenseExpression !(GHC.Internal.Maybe.Maybe LicenseExceptionId) | EAnd !LicenseExpression !LicenseExpression | EOr !LicenseExpression !LicenseExpression
  type LicenseId :: *
  data LicenseId
    = N_0BSD
    | N_3D_Slicer_1_0
    | AAL
    | Abstyles
    | AdaCore_doc
    | Adobe_2006
    | Adobe_Display_PostScript
    | Adobe_Glyph
    | Adobe_Utopia
    | ADSL
    | AFL_1_1
    | AFL_1_2
    | AFL_2_0
    | AFL_2_1
    | AFL_3_0
    | Afmparse
    | AGPL_1_0
    | AGPL_1_0_only
    | AGPL_1_0_or_later
    | AGPL_3_0_only
    | AGPL_3_0_or_later
    | Aladdin
    | AMD_newlib
    | AMDPLPA
    | AML_glslang
    | AML
    | AMPAS
    | ANTLR_PD_fallback
    | ANTLR_PD
    | Any_OSI
    | Apache_1_0
    | Apache_1_1
    | Apache_2_0
    | APAFML
    | APL_1_0
    | App_s2p
    | APSL_1_0
    | APSL_1_1
    | APSL_1_2
    | APSL_2_0
    | Arphic_1999
    | Artistic_1_0_cl8
    | Artistic_1_0_Perl
    | Artistic_1_0
    | Artistic_2_0
    | ASWF_Digital_Assets_1_0
    | ASWF_Digital_Assets_1_1
    | Baekmuk
    | Bahyph
    | Barr
    | Bcrypt_Solar_Designer
    | Beerware
    | Bitstream_Charter
    | Bitstream_Vera
    | BitTorrent_1_0
    | BitTorrent_1_1
    | Blessing
    | BlueOak_1_0_0
    | Boehm_GC
    | Borceux
    | Brian_Gladman_2_Clause
    | Brian_Gladman_3_Clause
    | BSD_1_Clause
    | BSD_2_Clause_FreeBSD
    | BSD_2_Clause_NetBSD
    | BSD_2_Clause_Darwin
    | BSD_2_Clause_first_lines
    | BSD_2_Clause_Patent
    | BSD_2_Clause_Views
    | BSD_2_Clause
    | BSD_3_Clause_acpica
    | BSD_3_Clause_Attribution
    | BSD_3_Clause_Clear
    | BSD_3_Clause_flex
    | BSD_3_Clause_HP
    | BSD_3_Clause_LBNL
    | BSD_3_Clause_Modification
    | BSD_3_Clause_No_Military_License
    | BSD_3_Clause_No_Nuclear_License_2014
    | BSD_3_Clause_No_Nuclear_License
    | BSD_3_Clause_No_Nuclear_Warranty
    | BSD_3_Clause_Open_MPI
    | BSD_3_Clause_Sun
    | BSD_3_Clause
    | BSD_4_Clause_Shortened
    | BSD_4_Clause_UC
    | BSD_4_Clause
    | BSD_4_3RENO
    | BSD_4_3TAHOE
    | BSD_Advertising_Acknowledgement
    | BSD_Attribution_HPND_disclaimer
    | BSD_Inferno_Nettverk
    | BSD_Protection
    | BSD_Source_beginning_file
    | BSD_Source_Code
    | BSD_Systemics_W3Works
    | BSD_Systemics
    | BSL_1_0
    | Bzip2_1_0_5
    | BUSL_1_1
    | Bzip2_1_0_6
    | C_UDA_1_0
    | CAL_1_0_Combined_Work_Exception
    | CAL_1_0
    | Caldera_no_preamble
    | Caldera
    | Catharon
    | CATOSL_1_1
    | CC_BY_1_0
    | CC_BY_2_0
    | CC_BY_2_5_AU
    | CC_BY_2_5
    | CC_BY_3_0_AT
    | CC_BY_3_0_AU
    | CC_BY_3_0_DE
    | CC_BY_3_0_IGO
    | CC_BY_3_0_NL
    | CC_BY_3_0_US
    | CC_BY_3_0
    | CC_BY_4_0
    | CC_BY_NC_1_0
    | CC_BY_NC_2_0
    | CC_BY_NC_2_5
    | CC_BY_NC_3_0_DE
    | CC_BY_NC_3_0
    | CC_BY_NC_4_0
    | CC_BY_NC_ND_1_0
    | CC_BY_NC_ND_2_0
    | CC_BY_NC_ND_2_5
    | CC_BY_NC_ND_3_0_DE
    | CC_BY_NC_ND_3_0_IGO
    | CC_BY_NC_ND_3_0
    | CC_BY_NC_ND_4_0
    | CC_BY_NC_SA_1_0
    | CC_BY_NC_SA_2_0_DE
    | CC_BY_NC_SA_2_0_FR
    | CC_BY_NC_SA_2_0_UK
    | CC_BY_NC_SA_2_0
    | CC_BY_NC_SA_2_5
    | CC_BY_NC_SA_3_0_DE
    | CC_BY_NC_SA_3_0_IGO
    | CC_BY_NC_SA_3_0
    | CC_BY_NC_SA_4_0
    | CC_BY_ND_1_0
    | CC_BY_ND_2_0
    | CC_BY_ND_2_5
    | CC_BY_ND_3_0_DE
    | CC_BY_ND_3_0
    | CC_BY_ND_4_0
    | CC_BY_SA_1_0
    | CC_BY_SA_2_0_UK
    | CC_BY_SA_2_0
    | CC_BY_SA_2_1_JP
    | CC_BY_SA_2_5
    | CC_BY_SA_3_0_AT
    | CC_BY_SA_3_0_DE
    | CC_BY_SA_3_0_IGO
    | CC_BY_SA_3_0
    | CC_BY_SA_4_0
    | CC_PDDC
    | CC0_1_0
    | CDDL_1_0
    | CDDL_1_1
    | CDL_1_0
    | CDLA_Permissive_1_0
    | CDLA_Permissive_2_0
    | CDLA_Sharing_1_0
    | CECILL_1_0
    | CECILL_1_1
    | CECILL_2_0
    | CECILL_2_1
    | CECILL_B
    | CECILL_C
    | CERN_OHL_1_1
    | CERN_OHL_1_2
    | CERN_OHL_P_2_0
    | CERN_OHL_S_2_0
    | CERN_OHL_W_2_0
    | CFITSIO
    | Check_cvs
    | Checkmk
    | ClArtistic
    | Clips
    | CMU_Mach_nodoc
    | CMU_Mach
    | CNRI_Jython
    | CNRI_Python_GPL_Compatible
    | CNRI_Python
    | COIL_1_0
    | Community_Spec_1_0
    | Condor_1_1
    | Copyleft_next_0_3_0
    | Copyleft_next_0_3_1
    | Cornell_Lossless_JPEG
    | CPAL_1_0
    | CPL_1_0
    | CPOL_1_02
    | Cronyx
    | Crossword
    | CrystalStacker
    | CUA_OPL_1_0
    | Cube
    | Curl
    | Cve_tou
    | D_FSL_1_0
    | DEC_3_Clause
    | Diffmark
    | DL_DE_BY_2_0
    | DL_DE_ZERO_2_0
    | DocBook_Schema
    | DocBook_XML
    | DOC
    | Dotseqn
    | DRL_1_0
    | DRL_1_1
    | DSDP
    | Dtoa
    | Dvipdfm
    | ECL_1_0
    | ECL_2_0
    | EFL_1_0
    | EFL_2_0
    | EGenix
    | Elastic_2_0
    | Entessa
    | EPICS
    | EPL_1_0
    | EPL_2_0
    | ErlPL_1_1
    | Etalab_2_0
    | EUDatagrid
    | EUPL_1_0
    | EUPL_1_1
    | EUPL_1_2
    | Eurosym
    | Fair
    | FBM
    | FDK_AAC
    | Ferguson_Twofish
    | Frameworx_1_0
    | FreeBSD_DOC
    | FreeImage
    | FSFAP_no_warranty_disclaimer
    | FSFAP
    | FSFULLRWD
    | FSFULLR
    | FSFUL
    | FTL
    | Furuseth
    | Fwlw
    | GCR_docs
    | GD
    | GFDL_1_1_invariants_only
    | GFDL_1_1_invariants_or_later
    | GFDL_1_1_no_invariants_only
    | GFDL_1_1_no_invariants_or_later
    | GFDL_1_1_only
    | GFDL_1_1_or_later
    | GFDL_1_2_invariants_only
    | GFDL_1_2_invariants_or_later
    | GFDL_1_2_no_invariants_only
    | GFDL_1_2_no_invariants_or_later
    | GFDL_1_2_only
    | GFDL_1_2_or_later
    | GFDL_1_3_invariants_only
    | GFDL_1_3_invariants_or_later
    | GFDL_1_3_no_invariants_only
    | GFDL_1_3_no_invariants_or_later
    | GFDL_1_3_only
    | GFDL_1_3_or_later
    | Giftware
    | GL2PS
    | Glide
    | Glulxe
    | GLWTPL
    | Gnuplot
    | GPL_1_0_only
    | GPL_1_0_or_later
    | GPL_2_0_only
    | GPL_2_0_or_later
    | GPL_3_0_only
    | GPL_3_0_or_later
    | Graphics_Gems
    | GSOAP_1_3b
    | Gtkbook
    | Gutmann
    | HaskellReport
    | Hdparm
    | HIDAPI
    | Hippocratic_2_1
    | HP_1986
    | HP_1989
    | HPND_DEC
    | HPND_doc_sell
    | HPND_doc
    | HPND_export_US_acknowledgement
    | HPND_export_US_modify
    | HPND_export_US
    | HPND_export2_US
    | HPND_Fenneberg_Livingston
    | HPND_INRIA_IMAG
    | HPND_Intel
    | HPND_Kevlin_Henney
    | HPND_Markus_Kuhn
    | HPND_merchantability_variant
    | HPND_MIT_disclaimer
    | HPND_Netrek
    | HPND_Pbmplus
    | HPND_sell_MIT_disclaimer_xserver
    | HPND_sell_regexpr
    | HPND_sell_variant_MIT_disclaimer_rev
    | HPND_sell_variant_MIT_disclaimer
    | HPND_sell_variant
    | HPND_UC_export_US
    | HPND_UC
    | HPND
    | HTMLTIDY
    | IBM_pibs
    | ICU
    | IEC_Code_Components_EULA
    | IJG_short
    | IJG
    | ImageMagick
    | IMatix
    | Imlib2
    | Info_ZIP
    | Inner_Net_2_0
    | Intel_ACPI
    | Intel
    | Interbase_1_0
    | IPA
    | IPL_1_0
    | ISC_Veillard
    | ISC
    | Jam
    | JasPer_2_0
    | JPL_image
    | JPNIC
    | JSON
    | Kastrup
    | Kazlib
    | Knuth_CTAN
    | LAL_1_2
    | LAL_1_3
    | Latex2e_translated_notice
    | Latex2e
    | Leptonica
    | LGPL_2_0_only
    | LGPL_2_0_or_later
    | LGPL_2_1_only
    | LGPL_2_1_or_later
    | LGPL_3_0_only
    | LGPL_3_0_or_later
    | LGPLLR
    | Libpng_2_0
    | Libpng
    | Libselinux_1_0
    | Libtiff
    | Libutil_David_Nugent
    | LiLiQ_P_1_1
    | LiLiQ_R_1_1
    | LiLiQ_Rplus_1_1
    | Linux_man_pages_1_para
    | Linux_man_pages_copyleft_2_para
    | Linux_man_pages_copyleft_var
    | Linux_man_pages_copyleft
    | Linux_OpenIB
    | LOOP
    | LPD_document
    | LPL_1_02
    | LPL_1_0
    | LPPL_1_0
    | LPPL_1_1
    | LPPL_1_2
    | LPPL_1_3a
    | LPPL_1_3c
    | Lsof
    | Lucida_Bitmap_Fonts
    | LZMA_SDK_9_11_to_9_20
    | LZMA_SDK_9_22
    | Mackerras_3_Clause_acknowledgment
    | Mackerras_3_Clause
    | Magaz
    | Mailprio
    | MakeIndex
    | Martin_Birgmeier
    | McPhee_slideshow
    | Metamail
    | Minpack
    | MirOS
    | MIT_0
    | MIT_advertising
    | MIT_CMU
    | MIT_enna
    | MIT_feh
    | MIT_Festival
    | MIT_Khronos_old
    | MIT_Modern_Variant
    | MIT_open_group
    | MIT_testregex
    | MIT_Wu
    | MITNFA
    | MIT
    | MMIXware
    | Motosoto
    | MPEG_SSG
    | Mpi_permissive
    | Mpich2
    | MPL_1_0
    | MPL_1_1
    | MPL_2_0_no_copyleft_exception
    | MPL_2_0
    | Mplus
    | MS_LPL
    | MS_PL
    | MS_RL
    | MTLL
    | MulanPSL_1_0
    | MulanPSL_2_0
    | Multics
    | Mup
    | NAIST_2003
    | NASA_1_3
    | Naumen
    | NBPL_1_0
    | NCBI_PD
    | NCGL_UK_2_0
    | NCL
    | NCSA
    | Net_SNMP
    | NetCDF
    | Newsletr
    | NGPL
    | NICTA_1_0
    | NIST_PD_fallback
    | NIST_PD
    | NIST_Software
    | NLOD_1_0
    | NLOD_2_0
    | NLPL
    | Nokia
    | NOSL
    | Noweb
    | NPL_1_0
    | NPL_1_1
    | NPOSL_3_0
    | NRL
    | NTP_0
    | NTP
    | O_UDA_1_0
    | OAR
    | OCCT_PL
    | OCLC_2_0
    | ODbL_1_0
    | ODC_By_1_0
    | OFFIS
    | OFL_1_0_no_RFN
    | OFL_1_0_RFN
    | OFL_1_0
    | OFL_1_1_no_RFN
    | OFL_1_1_RFN
    | OFL_1_1
    | OGC_1_0
    | OGDL_Taiwan_1_0
    | OGL_Canada_2_0
    | OGL_UK_1_0
    | OGL_UK_2_0
    | OGL_UK_3_0
    | OGTSL
    | OLDAP_1_1
    | OLDAP_1_2
    | OLDAP_1_3
    | OLDAP_1_4
    | OLDAP_2_0_1
    | OLDAP_2_0
    | OLDAP_2_1
    | OLDAP_2_2_1
    | OLDAP_2_2_2
    | OLDAP_2_2
    | OLDAP_2_3
    | OLDAP_2_4
    | OLDAP_2_5
    | OLDAP_2_6
    | OLDAP_2_7
    | OLDAP_2_8
    | OLFL_1_3
    | OML
    | OpenPBS_2_3
    | OpenSSL_standalone
    | OpenSSL
    | OpenVision
    | OPL_1_0
    | OPL_UK_3_0
    | OPUBL_1_0
    | OSET_PL_2_1
    | OSL_1_0
    | OSL_1_1
    | OSL_2_0
    | OSL_2_1
    | OSL_3_0
    | PADL
    | Parity_6_0_0
    | Parity_7_0_0
    | PDDL_1_0
    | PHP_3_01
    | PHP_3_0
    | Pixar
    | Pkgconf
    | Plexus
    | Pnmstitch
    | PolyForm_Noncommercial_1_0_0
    | PolyForm_Small_Business_1_0_0
    | PostgreSQL
    | PPL
    | PSF_2_0
    | Psfrag
    | Psutils
    | Python_2_0_1
    | Python_2_0
    | Python_ldap
    | Qhull
    | QPL_1_0_INRIA_2004
    | QPL_1_0
    | Radvd
    | Rdisc
    | RHeCos_1_1
    | RPL_1_1
    | RPL_1_5
    | RPSL_1_0
    | RSA_MD
    | RSCPL
    | Ruby_pty
    | Ruby
    | SAX_PD_2_0
    | SAX_PD
    | Saxpath
    | SCEA
    | SchemeReport
    | Sendmail_8_23
    | Sendmail
    | SGI_B_1_0
    | SGI_B_1_1
    | SGI_B_2_0
    | SGI_OpenGL
    | SGP4
    | SHL_0_51
    | SHL_0_5
    | SimPL_2_0
    | SISSL_1_2
    | SISSL
    | Sleepycat
    | SL
    | SMLNJ
    | SMPPL
    | SNIA
    | Snprintf
    | SoftSurfer
    | Soundex
    | Spencer_86
    | Spencer_94
    | Spencer_99
    | SPL_1_0
    | Ssh_keyscan
    | SSH_OpenSSH
    | SSH_short
    | SSLeay_standalone
    | SSPL_1_0
    | SugarCRM_1_1_3
    | Sun_PPP_2000
    | Sun_PPP
    | SunPro
    | SWL
    | Swrule
    | Symlinks
    | TAPR_OHL_1_0
    | TCL
    | TCP_wrappers
    | TermReadKey
    | TGPPL_1_0
    | Threeparttable
    | TMate
    | TORQUE_1_1
    | TOSL
    | TPDL
    | TPL_1_0
    | TTWL
    | TTYP0
    | TU_Berlin_1_0
    | TU_Berlin_2_0
    | Ubuntu_font_1_0
    | UCAR
    | UCL_1_0
    | Ulem
    | UMich_Merit
    | Unicode_3_0
    | Unicode_DFS_2015
    | Unicode_DFS_2016
    | Unicode_TOU
    | UnixCrypt
    | Unlicense
    | UPL_1_0
    | URT_RLE
    | Vim
    | VOSTROM
    | VSL_1_0
    | W3C_19980720
    | W3C_20150513
    | W3C
    | W3m
    | Watcom_1_0
    | Widget_Workshop
    | Wsuipa
    | WTFPL
    | X11_distribute_modifications_variant
    | X11_swapped
    | X11
    | Xdebug_1_03
    | Xerox
    | Xfig
    | XFree86_1_1
    | Xinetd
    | Xkeyboard_config_Zinoviev
    | Xlock
    | Xnet
    | Xpp
    | XSkat
    | Xzoom
    | YPL_1_0
    | YPL_1_1
    | Zed
    | Zeeff
    | Zend_2_0
    | Zimbra_1_3
    | Zimbra_1_4
    | Zlib_acknowledgement
    | Zlib
    | ZPL_1_1
    | ZPL_2_0
    | ZPL_2_1
  type LicenseListVersion :: *
  data LicenseListVersion = LicenseListVersion_3_0 | LicenseListVersion_3_2 | LicenseListVersion_3_6 | LicenseListVersion_3_9 | LicenseListVersion_3_10 | LicenseListVersion_3_16 | LicenseListVersion_3_23 | LicenseListVersion_3_25
  type LicenseRef :: *
  data LicenseRef = ...
  type SimpleLicenseExpression :: *
  data SimpleLicenseExpression = ELicenseId LicenseId | ELicenseIdPlus LicenseId | ELicenseRef LicenseRef
  cabalSpecVersionToSPDXListVersion :: Distribution.CabalSpecVersion.CabalSpecVersion -> LicenseListVersion
  licenseDocumentRef :: LicenseRef -> GHC.Internal.Maybe.Maybe GHC.Internal.Base.String
  licenseExceptionId :: LicenseExceptionId -> GHC.Internal.Base.String
  licenseExceptionIdList :: LicenseListVersion -> [LicenseExceptionId]
  licenseExceptionName :: LicenseExceptionId -> GHC.Internal.Base.String
  licenseId :: LicenseId -> GHC.Internal.Base.String
  licenseIdList :: LicenseListVersion -> [LicenseId]
  licenseIsOsiApproved :: LicenseId -> GHC.Types.Bool
  licenseName :: LicenseId -> GHC.Internal.Base.String
  licenseRef :: LicenseRef -> GHC.Internal.Base.String
  mkLicenseExceptionId :: LicenseListVersion -> GHC.Internal.Base.String -> GHC.Internal.Maybe.Maybe LicenseExceptionId
  mkLicenseId :: LicenseListVersion -> GHC.Internal.Base.String -> GHC.Internal.Maybe.Maybe LicenseId
  mkLicenseRef :: GHC.Internal.Maybe.Maybe GHC.Internal.Base.String -> GHC.Internal.Base.String -> GHC.Internal.Maybe.Maybe LicenseRef
  mkLicenseRef' :: GHC.Internal.Maybe.Maybe GHC.Internal.Base.String -> GHC.Internal.Base.String -> LicenseRef
  simpleLicenseExpression :: LicenseId -> LicenseExpression

module Distribution.SPDX.License where
  type License :: *
  data License = NONE | License Distribution.SPDX.LicenseExpression.LicenseExpression

module Distribution.SPDX.LicenseExceptionId where
  type LicenseExceptionId :: *
  data LicenseExceptionId
    = N_389_exception
    | Asterisk_exception
    | Asterisk_linking_protocols_exception
    | Autoconf_exception_2_0
    | Autoconf_exception_3_0
    | Autoconf_exception_generic_3_0
    | Autoconf_exception_generic
    | Autoconf_exception_macro
    | Bison_exception_1_24
    | Bison_exception_2_2
    | Bootloader_exception
    | Classpath_exception_2_0
    | CLISP_exception_2_0
    | Cryptsetup_OpenSSL_exception
    | DigiRule_FOSS_exception
    | ECos_exception_2_0
    | Erlang_otp_linking_exception
    | Fawkes_Runtime_exception
    | FLTK_exception
    | Fmt_exception
    | Font_exception_2_0
    | Freertos_exception_2_0
    | GCC_exception_2_0_note
    | GCC_exception_2_0
    | GCC_exception_3_1
    | Gmsh_exception
    | GNAT_exception
    | GNOME_examples_exception
    | GNU_compiler_exception
    | Gnu_javamail_exception
    | GPL_3_0_interface_exception
    | GPL_3_0_linking_exception
    | GPL_3_0_linking_source_exception
    | GPL_CC_1_0
    | GStreamer_exception_2005
    | GStreamer_exception_2008
    | I2p_gpl_java_exception
    | KiCad_libraries_exception
    | LGPL_3_0_linking_exception
    | Libpri_OpenH323_exception
    | Libtool_exception
    | Linux_syscall_note
    | LLGPL
    | LLVM_exception
    | LZMA_exception
    | Mif_exception
    | Nokia_Qt_exception_1_1
    | OCaml_LGPL_linking_exception
    | OCCT_exception_1_0
    | OpenJDK_assembly_exception_1_0
    | Openvpn_openssl_exception
    | PCRE2_exception
    | PS_or_PDF_font_exception_20170817
    | QPL_1_0_INRIA_2004_exception
    | Qt_GPL_exception_1_0
    | Qt_LGPL_exception_1_1
    | Qwt_exception_1_0
    | Romic_exception
    | RRDtool_FLOSS_exception_2_0
    | SANE_exception
    | SHL_2_0
    | SHL_2_1
    | Stunnel_exception
    | SWI_exception
    | Swift_exception
    | Texinfo_exception
    | U_boot_exception_2_0
    | UBDL_exception
    | Universal_FOSS_exception_1_0
    | Vsftpd_openssl_exception
    | WxWindows_exception_3_1
    | X11vnc_openssl_exception
  licenseExceptionId :: LicenseExceptionId -> GHC.Internal.Base.String
  licenseExceptionIdList :: Distribution.SPDX.LicenseListVersion.LicenseListVersion -> [LicenseExceptionId]
  licenseExceptionName :: LicenseExceptionId -> GHC.Internal.Base.String
  mkLicenseExceptionId :: Distribution.SPDX.LicenseListVersion.LicenseListVersion -> GHC.Internal.Base.String -> GHC.Internal.Maybe.Maybe LicenseExceptionId

module Distribution.SPDX.LicenseExpression where
  type LicenseExpression :: *
  data LicenseExpression = ELicense !SimpleLicenseExpression !(GHC.Internal.Maybe.Maybe Distribution.SPDX.LicenseExceptionId.LicenseExceptionId) | EAnd !LicenseExpression !LicenseExpression | EOr !LicenseExpression !LicenseExpression
  type SimpleLicenseExpression :: *
  data SimpleLicenseExpression = ELicenseId Distribution.SPDX.LicenseId.LicenseId | ELicenseIdPlus Distribution.SPDX.LicenseId.LicenseId | ELicenseRef Distribution.SPDX.LicenseReference.LicenseRef
  simpleLicenseExpression :: Distribution.SPDX.LicenseId.LicenseId -> LicenseExpression

module Distribution.SPDX.LicenseId where
  type LicenseId :: *
  data LicenseId
    = N_0BSD
    | N_3D_Slicer_1_0
    | AAL
    | Abstyles
    | AdaCore_doc
    | Adobe_2006
    | Adobe_Display_PostScript
    | Adobe_Glyph
    | Adobe_Utopia
    | ADSL
    | AFL_1_1
    | AFL_1_2
    | AFL_2_0
    | AFL_2_1
    | AFL_3_0
    | Afmparse
    | AGPL_1_0
    | AGPL_1_0_only
    | AGPL_1_0_or_later
    | AGPL_3_0_only
    | AGPL_3_0_or_later
    | Aladdin
    | AMD_newlib
    | AMDPLPA
    | AML_glslang
    | AML
    | AMPAS
    | ANTLR_PD_fallback
    | ANTLR_PD
    | Any_OSI
    | Apache_1_0
    | Apache_1_1
    | Apache_2_0
    | APAFML
    | APL_1_0
    | App_s2p
    | APSL_1_0
    | APSL_1_1
    | APSL_1_2
    | APSL_2_0
    | Arphic_1999
    | Artistic_1_0_cl8
    | Artistic_1_0_Perl
    | Artistic_1_0
    | Artistic_2_0
    | ASWF_Digital_Assets_1_0
    | ASWF_Digital_Assets_1_1
    | Baekmuk
    | Bahyph
    | Barr
    | Bcrypt_Solar_Designer
    | Beerware
    | Bitstream_Charter
    | Bitstream_Vera
    | BitTorrent_1_0
    | BitTorrent_1_1
    | Blessing
    | BlueOak_1_0_0
    | Boehm_GC
    | Borceux
    | Brian_Gladman_2_Clause
    | Brian_Gladman_3_Clause
    | BSD_1_Clause
    | BSD_2_Clause_FreeBSD
    | BSD_2_Clause_NetBSD
    | BSD_2_Clause_Darwin
    | BSD_2_Clause_first_lines
    | BSD_2_Clause_Patent
    | BSD_2_Clause_Views
    | BSD_2_Clause
    | BSD_3_Clause_acpica
    | BSD_3_Clause_Attribution
    | BSD_3_Clause_Clear
    | BSD_3_Clause_flex
    | BSD_3_Clause_HP
    | BSD_3_Clause_LBNL
    | BSD_3_Clause_Modification
    | BSD_3_Clause_No_Military_License
    | BSD_3_Clause_No_Nuclear_License_2014
    | BSD_3_Clause_No_Nuclear_License
    | BSD_3_Clause_No_Nuclear_Warranty
    | BSD_3_Clause_Open_MPI
    | BSD_3_Clause_Sun
    | BSD_3_Clause
    | BSD_4_Clause_Shortened
    | BSD_4_Clause_UC
    | BSD_4_Clause
    | BSD_4_3RENO
    | BSD_4_3TAHOE
    | BSD_Advertising_Acknowledgement
    | BSD_Attribution_HPND_disclaimer
    | BSD_Inferno_Nettverk
    | BSD_Protection
    | BSD_Source_beginning_file
    | BSD_Source_Code
    | BSD_Systemics_W3Works
    | BSD_Systemics
    | BSL_1_0
    | Bzip2_1_0_5
    | BUSL_1_1
    | Bzip2_1_0_6
    | C_UDA_1_0
    | CAL_1_0_Combined_Work_Exception
    | CAL_1_0
    | Caldera_no_preamble
    | Caldera
    | Catharon
    | CATOSL_1_1
    | CC_BY_1_0
    | CC_BY_2_0
    | CC_BY_2_5_AU
    | CC_BY_2_5
    | CC_BY_3_0_AT
    | CC_BY_3_0_AU
    | CC_BY_3_0_DE
    | CC_BY_3_0_IGO
    | CC_BY_3_0_NL
    | CC_BY_3_0_US
    | CC_BY_3_0
    | CC_BY_4_0
    | CC_BY_NC_1_0
    | CC_BY_NC_2_0
    | CC_BY_NC_2_5
    | CC_BY_NC_3_0_DE
    | CC_BY_NC_3_0
    | CC_BY_NC_4_0
    | CC_BY_NC_ND_1_0
    | CC_BY_NC_ND_2_0
    | CC_BY_NC_ND_2_5
    | CC_BY_NC_ND_3_0_DE
    | CC_BY_NC_ND_3_0_IGO
    | CC_BY_NC_ND_3_0
    | CC_BY_NC_ND_4_0
    | CC_BY_NC_SA_1_0
    | CC_BY_NC_SA_2_0_DE
    | CC_BY_NC_SA_2_0_FR
    | CC_BY_NC_SA_2_0_UK
    | CC_BY_NC_SA_2_0
    | CC_BY_NC_SA_2_5
    | CC_BY_NC_SA_3_0_DE
    | CC_BY_NC_SA_3_0_IGO
    | CC_BY_NC_SA_3_0
    | CC_BY_NC_SA_4_0
    | CC_BY_ND_1_0
    | CC_BY_ND_2_0
    | CC_BY_ND_2_5
    | CC_BY_ND_3_0_DE
    | CC_BY_ND_3_0
    | CC_BY_ND_4_0
    | CC_BY_SA_1_0
    | CC_BY_SA_2_0_UK
    | CC_BY_SA_2_0
    | CC_BY_SA_2_1_JP
    | CC_BY_SA_2_5
    | CC_BY_SA_3_0_AT
    | CC_BY_SA_3_0_DE
    | CC_BY_SA_3_0_IGO
    | CC_BY_SA_3_0
    | CC_BY_SA_4_0
    | CC_PDDC
    | CC0_1_0
    | CDDL_1_0
    | CDDL_1_1
    | CDL_1_0
    | CDLA_Permissive_1_0
    | CDLA_Permissive_2_0
    | CDLA_Sharing_1_0
    | CECILL_1_0
    | CECILL_1_1
    | CECILL_2_0
    | CECILL_2_1
    | CECILL_B
    | CECILL_C
    | CERN_OHL_1_1
    | CERN_OHL_1_2
    | CERN_OHL_P_2_0
    | CERN_OHL_S_2_0
    | CERN_OHL_W_2_0
    | CFITSIO
    | Check_cvs
    | Checkmk
    | ClArtistic
    | Clips
    | CMU_Mach_nodoc
    | CMU_Mach
    | CNRI_Jython
    | CNRI_Python_GPL_Compatible
    | CNRI_Python
    | COIL_1_0
    | Community_Spec_1_0
    | Condor_1_1
    | Copyleft_next_0_3_0
    | Copyleft_next_0_3_1
    | Cornell_Lossless_JPEG
    | CPAL_1_0
    | CPL_1_0
    | CPOL_1_02
    | Cronyx
    | Crossword
    | CrystalStacker
    | CUA_OPL_1_0
    | Cube
    | Curl
    | Cve_tou
    | D_FSL_1_0
    | DEC_3_Clause
    | Diffmark
    | DL_DE_BY_2_0
    | DL_DE_ZERO_2_0
    | DocBook_Schema
    | DocBook_XML
    | DOC
    | Dotseqn
    | DRL_1_0
    | DRL_1_1
    | DSDP
    | Dtoa
    | Dvipdfm
    | ECL_1_0
    | ECL_2_0
    | EFL_1_0
    | EFL_2_0
    | EGenix
    | Elastic_2_0
    | Entessa
    | EPICS
    | EPL_1_0
    | EPL_2_0
    | ErlPL_1_1
    | Etalab_2_0
    | EUDatagrid
    | EUPL_1_0
    | EUPL_1_1
    | EUPL_1_2
    | Eurosym
    | Fair
    | FBM
    | FDK_AAC
    | Ferguson_Twofish
    | Frameworx_1_0
    | FreeBSD_DOC
    | FreeImage
    | FSFAP_no_warranty_disclaimer
    | FSFAP
    | FSFULLRWD
    | FSFULLR
    | FSFUL
    | FTL
    | Furuseth
    | Fwlw
    | GCR_docs
    | GD
    | GFDL_1_1_invariants_only
    | GFDL_1_1_invariants_or_later
    | GFDL_1_1_no_invariants_only
    | GFDL_1_1_no_invariants_or_later
    | GFDL_1_1_only
    | GFDL_1_1_or_later
    | GFDL_1_2_invariants_only
    | GFDL_1_2_invariants_or_later
    | GFDL_1_2_no_invariants_only
    | GFDL_1_2_no_invariants_or_later
    | GFDL_1_2_only
    | GFDL_1_2_or_later
    | GFDL_1_3_invariants_only
    | GFDL_1_3_invariants_or_later
    | GFDL_1_3_no_invariants_only
    | GFDL_1_3_no_invariants_or_later
    | GFDL_1_3_only
    | GFDL_1_3_or_later
    | Giftware
    | GL2PS
    | Glide
    | Glulxe
    | GLWTPL
    | Gnuplot
    | GPL_1_0_only
    | GPL_1_0_or_later
    | GPL_2_0_only
    | GPL_2_0_or_later
    | GPL_3_0_only
    | GPL_3_0_or_later
    | Graphics_Gems
    | GSOAP_1_3b
    | Gtkbook
    | Gutmann
    | HaskellReport
    | Hdparm
    | HIDAPI
    | Hippocratic_2_1
    | HP_1986
    | HP_1989
    | HPND_DEC
    | HPND_doc_sell
    | HPND_doc
    | HPND_export_US_acknowledgement
    | HPND_export_US_modify
    | HPND_export_US
    | HPND_export2_US
    | HPND_Fenneberg_Livingston
    | HPND_INRIA_IMAG
    | HPND_Intel
    | HPND_Kevlin_Henney
    | HPND_Markus_Kuhn
    | HPND_merchantability_variant
    | HPND_MIT_disclaimer
    | HPND_Netrek
    | HPND_Pbmplus
    | HPND_sell_MIT_disclaimer_xserver
    | HPND_sell_regexpr
    | HPND_sell_variant_MIT_disclaimer_rev
    | HPND_sell_variant_MIT_disclaimer
    | HPND_sell_variant
    | HPND_UC_export_US
    | HPND_UC
    | HPND
    | HTMLTIDY
    | IBM_pibs
    | ICU
    | IEC_Code_Components_EULA
    | IJG_short
    | IJG
    | ImageMagick
    | IMatix
    | Imlib2
    | Info_ZIP
    | Inner_Net_2_0
    | Intel_ACPI
    | Intel
    | Interbase_1_0
    | IPA
    | IPL_1_0
    | ISC_Veillard
    | ISC
    | Jam
    | JasPer_2_0
    | JPL_image
    | JPNIC
    | JSON
    | Kastrup
    | Kazlib
    | Knuth_CTAN
    | LAL_1_2
    | LAL_1_3
    | Latex2e_translated_notice
    | Latex2e
    | Leptonica
    | LGPL_2_0_only
    | LGPL_2_0_or_later
    | LGPL_2_1_only
    | LGPL_2_1_or_later
    | LGPL_3_0_only
    | LGPL_3_0_or_later
    | LGPLLR
    | Libpng_2_0
    | Libpng
    | Libselinux_1_0
    | Libtiff
    | Libutil_David_Nugent
    | LiLiQ_P_1_1
    | LiLiQ_R_1_1
    | LiLiQ_Rplus_1_1
    | Linux_man_pages_1_para
    | Linux_man_pages_copyleft_2_para
    | Linux_man_pages_copyleft_var
    | Linux_man_pages_copyleft
    | Linux_OpenIB
    | LOOP
    | LPD_document
    | LPL_1_02
    | LPL_1_0
    | LPPL_1_0
    | LPPL_1_1
    | LPPL_1_2
    | LPPL_1_3a
    | LPPL_1_3c
    | Lsof
    | Lucida_Bitmap_Fonts
    | LZMA_SDK_9_11_to_9_20
    | LZMA_SDK_9_22
    | Mackerras_3_Clause_acknowledgment
    | Mackerras_3_Clause
    | Magaz
    | Mailprio
    | MakeIndex
    | Martin_Birgmeier
    | McPhee_slideshow
    | Metamail
    | Minpack
    | MirOS
    | MIT_0
    | MIT_advertising
    | MIT_CMU
    | MIT_enna
    | MIT_feh
    | MIT_Festival
    | MIT_Khronos_old
    | MIT_Modern_Variant
    | MIT_open_group
    | MIT_testregex
    | MIT_Wu
    | MITNFA
    | MIT
    | MMIXware
    | Motosoto
    | MPEG_SSG
    | Mpi_permissive
    | Mpich2
    | MPL_1_0
    | MPL_1_1
    | MPL_2_0_no_copyleft_exception
    | MPL_2_0
    | Mplus
    | MS_LPL
    | MS_PL
    | MS_RL
    | MTLL
    | MulanPSL_1_0
    | MulanPSL_2_0
    | Multics
    | Mup
    | NAIST_2003
    | NASA_1_3
    | Naumen
    | NBPL_1_0
    | NCBI_PD
    | NCGL_UK_2_0
    | NCL
    | NCSA
    | Net_SNMP
    | NetCDF
    | Newsletr
    | NGPL
    | NICTA_1_0
    | NIST_PD_fallback
    | NIST_PD
    | NIST_Software
    | NLOD_1_0
    | NLOD_2_0
    | NLPL
    | Nokia
    | NOSL
    | Noweb
    | NPL_1_0
    | NPL_1_1
    | NPOSL_3_0
    | NRL
    | NTP_0
    | NTP
    | O_UDA_1_0
    | OAR
    | OCCT_PL
    | OCLC_2_0
    | ODbL_1_0
    | ODC_By_1_0
    | OFFIS
    | OFL_1_0_no_RFN
    | OFL_1_0_RFN
    | OFL_1_0
    | OFL_1_1_no_RFN
    | OFL_1_1_RFN
    | OFL_1_1
    | OGC_1_0
    | OGDL_Taiwan_1_0
    | OGL_Canada_2_0
    | OGL_UK_1_0
    | OGL_UK_2_0
    | OGL_UK_3_0
    | OGTSL
    | OLDAP_1_1
    | OLDAP_1_2
    | OLDAP_1_3
    | OLDAP_1_4
    | OLDAP_2_0_1
    | OLDAP_2_0
    | OLDAP_2_1
    | OLDAP_2_2_1
    | OLDAP_2_2_2
    | OLDAP_2_2
    | OLDAP_2_3
    | OLDAP_2_4
    | OLDAP_2_5
    | OLDAP_2_6
    | OLDAP_2_7
    | OLDAP_2_8
    | OLFL_1_3
    | OML
    | OpenPBS_2_3
    | OpenSSL_standalone
    | OpenSSL
    | OpenVision
    | OPL_1_0
    | OPL_UK_3_0
    | OPUBL_1_0
    | OSET_PL_2_1
    | OSL_1_0
    | OSL_1_1
    | OSL_2_0
    | OSL_2_1
    | OSL_3_0
    | PADL
    | Parity_6_0_0
    | Parity_7_0_0
    | PDDL_1_0
    | PHP_3_01
    | PHP_3_0
    | Pixar
    | Pkgconf
    | Plexus
    | Pnmstitch
    | PolyForm_Noncommercial_1_0_0
    | PolyForm_Small_Business_1_0_0
    | PostgreSQL
    | PPL
    | PSF_2_0
    | Psfrag
    | Psutils
    | Python_2_0_1
    | Python_2_0
    | Python_ldap
    | Qhull
    | QPL_1_0_INRIA_2004
    | QPL_1_0
    | Radvd
    | Rdisc
    | RHeCos_1_1
    | RPL_1_1
    | RPL_1_5
    | RPSL_1_0
    | RSA_MD
    | RSCPL
    | Ruby_pty
    | Ruby
    | SAX_PD_2_0
    | SAX_PD
    | Saxpath
    | SCEA
    | SchemeReport
    | Sendmail_8_23
    | Sendmail
    | SGI_B_1_0
    | SGI_B_1_1
    | SGI_B_2_0
    | SGI_OpenGL
    | SGP4
    | SHL_0_51
    | SHL_0_5
    | SimPL_2_0
    | SISSL_1_2
    | SISSL
    | Sleepycat
    | SL
    | SMLNJ
    | SMPPL
    | SNIA
    | Snprintf
    | SoftSurfer
    | Soundex
    | Spencer_86
    | Spencer_94
    | Spencer_99
    | SPL_1_0
    | Ssh_keyscan
    | SSH_OpenSSH
    | SSH_short
    | SSLeay_standalone
    | SSPL_1_0
    | SugarCRM_1_1_3
    | Sun_PPP_2000
    | Sun_PPP
    | SunPro
    | SWL
    | Swrule
    | Symlinks
    | TAPR_OHL_1_0
    | TCL
    | TCP_wrappers
    | TermReadKey
    | TGPPL_1_0
    | Threeparttable
    | TMate
    | TORQUE_1_1
    | TOSL
    | TPDL
    | TPL_1_0
    | TTWL
    | TTYP0
    | TU_Berlin_1_0
    | TU_Berlin_2_0
    | Ubuntu_font_1_0
    | UCAR
    | UCL_1_0
    | Ulem
    | UMich_Merit
    | Unicode_3_0
    | Unicode_DFS_2015
    | Unicode_DFS_2016
    | Unicode_TOU
    | UnixCrypt
    | Unlicense
    | UPL_1_0
    | URT_RLE
    | Vim
    | VOSTROM
    | VSL_1_0
    | W3C_19980720
    | W3C_20150513
    | W3C
    | W3m
    | Watcom_1_0
    | Widget_Workshop
    | Wsuipa
    | WTFPL
    | X11_distribute_modifications_variant
    | X11_swapped
    | X11
    | Xdebug_1_03
    | Xerox
    | Xfig
    | XFree86_1_1
    | Xinetd
    | Xkeyboard_config_Zinoviev
    | Xlock
    | Xnet
    | Xpp
    | XSkat
    | Xzoom
    | YPL_1_0
    | YPL_1_1
    | Zed
    | Zeeff
    | Zend_2_0
    | Zimbra_1_3
    | Zimbra_1_4
    | Zlib_acknowledgement
    | Zlib
    | ZPL_1_1
    | ZPL_2_0
    | ZPL_2_1
  licenseId :: LicenseId -> GHC.Internal.Base.String
  licenseIdList :: Distribution.SPDX.LicenseListVersion.LicenseListVersion -> [LicenseId]
  licenseIdMigrationMessage :: GHC.Internal.Base.String -> GHC.Internal.Base.String
  licenseIsFsfLibre :: LicenseId -> GHC.Types.Bool
  licenseIsOsiApproved :: LicenseId -> GHC.Types.Bool
  licenseName :: LicenseId -> GHC.Internal.Base.String
  mkLicenseId :: Distribution.SPDX.LicenseListVersion.LicenseListVersion -> GHC.Internal.Base.String -> GHC.Internal.Maybe.Maybe LicenseId

module Distribution.SPDX.LicenseListVersion where
  type LicenseListVersion :: *
  data LicenseListVersion = LicenseListVersion_3_0 | LicenseListVersion_3_2 | LicenseListVersion_3_6 | LicenseListVersion_3_9 | LicenseListVersion_3_10 | LicenseListVersion_3_16 | LicenseListVersion_3_23 | LicenseListVersion_3_25
  cabalSpecVersionToSPDXListVersion :: Distribution.CabalSpecVersion.CabalSpecVersion -> LicenseListVersion

module Distribution.SPDX.LicenseReference where
  type LicenseRef :: *
  data LicenseRef = ...
  licenseDocumentRef :: LicenseRef -> GHC.Internal.Maybe.Maybe GHC.Internal.Base.String
  licenseRef :: LicenseRef -> GHC.Internal.Base.String
  mkLicenseRef :: GHC.Internal.Maybe.Maybe GHC.Internal.Base.String -> GHC.Internal.Base.String -> GHC.Internal.Maybe.Maybe LicenseRef
  mkLicenseRef' :: GHC.Internal.Maybe.Maybe GHC.Internal.Base.String -> GHC.Internal.Base.String -> LicenseRef

module Distribution.Simple where
  type AbiHash :: *
  newtype AbiHash = ...
  type AbiTag :: *
  data AbiTag = NoAbiTag | AbiTag GHC.Internal.Base.String
  type Args :: *
  type Args = [GHC.Internal.Base.String]
  type Bound :: *
  data Bound = ExclusiveBound | InclusiveBound
  type Compiler :: *
  data Compiler = Compiler {compilerId :: CompilerId, compilerAbiTag :: AbiTag, compilerCompat :: [CompilerId], compilerLanguages :: [(Language, CompilerFlag)], compilerExtensions :: [(Extension, GHC.Internal.Maybe.Maybe CompilerFlag)], compilerProperties :: Data.Map.Internal.Map GHC.Internal.Base.String GHC.Internal.Base.String}
  type CompilerFlag :: *
  type CompilerFlag = GHC.Internal.Base.String
  type CompilerFlavor :: *
  data CompilerFlavor = GHC | GHCJS | NHC | YHC | Hugs | HBC | Helium | JHC | LHC | UHC | Eta | MHS | HaskellSuite GHC.Internal.Base.String | OtherCompiler GHC.Internal.Base.String
  type CompilerId :: *
  data CompilerId = CompilerId CompilerFlavor Version
  type CompilerInfo :: *
  data CompilerInfo = CompilerInfo {compilerInfoId :: CompilerId, compilerInfoAbiTag :: AbiTag, compilerInfoCompat :: GHC.Internal.Maybe.Maybe [CompilerId], compilerInfoLanguages :: GHC.Internal.Maybe.Maybe [Language], compilerInfoExtensions :: GHC.Internal.Maybe.Maybe [Extension]}
  type ComponentId :: *
  newtype ComponentId = ...
  type DebugInfoLevel :: *
  data DebugInfoLevel = NoDebugInfo | MinimalDebugInfo | NormalDebugInfo | MaximalDebugInfo
  type DefUnitId :: *
  newtype DefUnitId = Distribution.Types.UnitId.DefUnitId {unDefUnitId :: UnitId}
  type Dependency :: *
  data Dependency = Dependency PackageName VersionRange (Distribution.Compat.NonEmptySet.NonEmptySet Distribution.Types.LibraryName.LibraryName)
  type Extension :: *
  data Extension = EnableExtension KnownExtension | DisableExtension KnownExtension | UnknownExtension GHC.Internal.Base.String
  type HasMungedPackageId :: * -> Constraint
  class HasMungedPackageId pkg where
    mungedId :: pkg -> Distribution.Types.MungedPackageId.MungedPackageId
    {-# MINIMAL mungedId #-}
  type HasUnitId :: * -> Constraint
  class Package pkg => HasUnitId pkg where
    installedUnitId :: pkg -> UnitId
    {-# MINIMAL installedUnitId #-}
  type KnownExtension :: *
  data KnownExtension
    = OverlappingInstances
    | UndecidableInstances
    | IncoherentInstances
    | DoRec
    | RecursiveDo
    | ParallelListComp
    | MultiParamTypeClasses
    | MonomorphismRestriction
    | DeepSubsumption
    | FunctionalDependencies
    | Rank2Types
    | RankNTypes
    | PolymorphicComponents
    | ExistentialQuantification
    | ScopedTypeVariables
    | PatternSignatures
    | ImplicitParams
    | FlexibleContexts
    | FlexibleInstances
    | EmptyDataDecls
    | CPP
    | KindSignatures
    | BangPatterns
    | TypeSynonymInstances
    | TemplateHaskell
    | ForeignFunctionInterface
    | Arrows
    | Generics
    | ImplicitPrelude
    | NamedFieldPuns
    | PatternGuards
    | GeneralizedNewtypeDeriving
    | GeneralisedNewtypeDeriving
    | ExtensibleRecords
    | RestrictedTypeSynonyms
    | HereDocuments
    | MagicHash
    | TypeFamilies
    | StandaloneDeriving
    | UnicodeSyntax
    | UnliftedFFITypes
    | InterruptibleFFI
    | CApiFFI
    | LiberalTypeSynonyms
    | TypeOperators
    | RecordWildCards
    | RecordPuns
    | DisambiguateRecordFields
    | TraditionalRecordSyntax
    | OverloadedStrings
    | GADTs
    | GADTSyntax
    | MonoPatBinds
    | RelaxedPolyRec
    | ExtendedDefaultRules
    | NamedDefaults
    | UnboxedTuples
    | DeriveDataTypeable
    | DeriveGeneric
    | DefaultSignatures
    | InstanceSigs
    | ConstrainedClassMethods
    | PackageImports
    | ImpredicativeTypes
    | NewQualifiedOperators
    | PostfixOperators
    | QuasiQuotes
    | TransformListComp
    | MonadComprehensions
    | ViewPatterns
    | XmlSyntax
    | RegularPatterns
    | TupleSections
    | GHCForeignImportPrim
    | NPlusKPatterns
    | DoAndIfThenElse
    | MultiWayIf
    | LambdaCase
    | RebindableSyntax
    | ExplicitForAll
    | DatatypeContexts
    | MonoLocalBinds
    | DeriveFunctor
    | DeriveTraversable
    | DeriveFoldable
    | NondecreasingIndentation
    | SafeImports
    | Safe
    | Trustworthy
    | Unsafe
    | ConstraintKinds
    | PolyKinds
    | DataKinds
    | TypeData
    | ParallelArrays
    | RoleAnnotations
    | OverloadedLists
    | EmptyCase
    | AutoDeriveTypeable
    | NegativeLiterals
    | BinaryLiterals
    | NumDecimals
    | NullaryTypeClasses
    | ExplicitNamespaces
    | AllowAmbiguousTypes
    | JavaScriptFFI
    | PatternSynonyms
    | PartialTypeSignatures
    | NamedWildCards
    | DeriveAnyClass
    | DeriveLift
    | StaticPointers
    | StrictData
    | Strict
    | ApplicativeDo
    | DuplicateRecordFields
    | TypeApplications
    | TypeInType
    | UndecidableSuperClasses
    | MonadFailDesugaring
    | TemplateHaskellQuotes
    | OverloadedLabels
    | TypeFamilyDependencies
    | DerivingStrategies
    | DerivingVia
    | UnboxedSums
    | HexFloatLiterals
    | BlockArguments
    | NumericUnderscores
    | QuantifiedConstraints
    | StarIsType
    | EmptyDataDeriving
    | CUSKs
    | ImportQualifiedPost
    | StandaloneKindSignatures
    | UnliftedNewtypes
    | LexicalNegation
    | QualifiedDo
    | LinearTypes
    | RequiredTypeArguments
    | FieldSelectors
    | OverloadedRecordDot
    | OverloadedRecordUpdate
    | UnliftedDatatypes
    | ExtendedLiterals
    | AlternativeLayoutRule
    | AlternativeLayoutRuleTransitional
    | RelaxedLayout
    | TypeAbstractions
    | ListTuplePuns
    | MultilineStrings
    | OrPatterns
  type Language :: *
  data Language = Haskell98 | Haskell2010 | GHC2021 | GHC2024 | UnknownLanguage GHC.Internal.Base.String
  type License :: *
  data License = GPL (GHC.Internal.Maybe.Maybe Version) | AGPL (GHC.Internal.Maybe.Maybe Version) | LGPL (GHC.Internal.Maybe.Maybe Version) | BSD2 | BSD3 | BSD4 | MIT | ISC | MPL Version | Apache (GHC.Internal.Maybe.Maybe Version) | PublicDomain | AllRightsReserved | UnspecifiedLicense | OtherLicense | UnknownLicense GHC.Internal.Base.String
  type LowerBound :: *
  data LowerBound = LowerBound !Version !Bound
  type Module :: *
  data Module = Module DefUnitId Distribution.ModuleName.ModuleName
  type OptimisationLevel :: *
  data OptimisationLevel = NoOptimisation | NormalOptimisation | MaximumOptimisation
  type Package :: * -> Constraint
  class Package pkg where
    packageId :: pkg -> PackageIdentifier
    {-# MINIMAL packageId #-}
  type PackageDB :: *
  type PackageDB = PackageDBX (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB))
  type PackageDBCWD :: *
  type PackageDBCWD = PackageDBX GHC.Internal.IO.FilePath
  type PackageDBS :: * -> *
  type PackageDBS from = PackageDBX (Distribution.Utils.Path.SymbolicPath from (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB))
  type PackageDBStack :: *
  type PackageDBStack = PackageDBStackX (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB))
  type PackageDBStackCWD :: *
  type PackageDBStackCWD = PackageDBStackX GHC.Internal.IO.FilePath
  type PackageDBStackS :: * -> *
  type PackageDBStackS from = PackageDBStackX (Distribution.Utils.Path.SymbolicPath from (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB))
  type PackageDBStackX :: * -> *
  type PackageDBStackX from = [PackageDBX from]
  type PackageDBX :: * -> *
  data PackageDBX fp = GlobalPackageDB | UserPackageDB | SpecificPackageDB fp
  type PackageId :: *
  type PackageId = PackageIdentifier
  type PackageIdentifier :: *
  data PackageIdentifier = PackageIdentifier {pkgName :: PackageName, pkgVersion :: Version}
  type PackageInstalled :: * -> Constraint
  class HasUnitId pkg => PackageInstalled pkg where
    installedDepends :: pkg -> [UnitId]
    {-# MINIMAL installedDepends #-}
  type PackageName :: *
  newtype PackageName = ...
  type PerCompilerFlavor :: * -> *
  data PerCompilerFlavor v = PerCompilerFlavor v v
  type PkgconfigName :: *
  newtype PkgconfigName = ...
  type ProfDetailLevel :: *
  data ProfDetailLevel = ProfDetailNone | ProfDetailDefault | ProfDetailExportedFunctions | ProfDetailToplevelFunctions | ProfDetailAllFunctions | ProfDetailTopLate | ProfDetailOther GHC.Internal.Base.String
  type UnitId :: *
  newtype UnitId = ...
  type UpperBound :: *
  data UpperBound = NoUpperBound | UpperBound !Version !Bound
  type UserHooks :: *
  data UserHooks
    = UserHooks {readDesc :: GHC.Types.IO (GHC.Internal.Maybe.Maybe Distribution.Types.GenericPackageDescription.GenericPackageDescription),
                 hookedPreProcessors :: [Distribution.Simple.PreProcess.PPSuffixHandler],
                 hookedPrograms :: [Distribution.Simple.Program.Types.Program],
                 preConf :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 confHook :: (Distribution.Types.GenericPackageDescription.GenericPackageDescription, Distribution.Types.HookedBuildInfo.HookedBuildInfo) -> Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags -> GHC.Types.IO Distribution.Types.LocalBuildInfo.LocalBuildInfo,
                 postConf :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO (),
                 preBuild :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Build.BuildFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 buildHook :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Build.BuildFlags -> GHC.Types.IO (),
                 postBuild :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Build.BuildFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO (),
                 preRepl :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 replHook :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplFlags -> [GHC.Internal.Base.String] -> GHC.Types.IO (),
                 postRepl :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO (),
                 preClean :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Clean.CleanFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 cleanHook :: Distribution.Types.PackageDescription.PackageDescription -> () -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Clean.CleanFlags -> GHC.Types.IO (),
                 postClean :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Clean.CleanFlags -> Distribution.Types.PackageDescription.PackageDescription -> () -> GHC.Types.IO (),
                 preCopy :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Copy.CopyFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 copyHook :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Copy.CopyFlags -> GHC.Types.IO (),
                 postCopy :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Copy.CopyFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO (),
                 preInst :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Install.InstallFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 instHook :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Install.InstallFlags -> GHC.Types.IO (),
                 postInst :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Install.InstallFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO (),
                 preReg :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Register.RegisterFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 regHook :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Register.RegisterFlags -> GHC.Types.IO (),
                 postReg :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Register.RegisterFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO (),
                 preUnreg :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Register.RegisterFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 unregHook :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Register.RegisterFlags -> GHC.Types.IO (),
                 postUnreg :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Register.RegisterFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO (),
                 preHscolour :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour.HscolourFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 hscolourHook :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour.HscolourFlags -> GHC.Types.IO (),
                 postHscolour :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour.HscolourFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO (),
                 preHaddock :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 haddockHook :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockFlags -> GHC.Types.IO (),
                 postHaddock :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO (),
                 preTest :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 testHook :: Args -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestFlags -> GHC.Types.IO (),
                 postTest :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO (),
                 preBench :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Benchmark.BenchmarkFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 benchHook :: Args -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Benchmark.BenchmarkFlags -> GHC.Types.IO (),
                 postBench :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Benchmark.BenchmarkFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO ()}
  type Version :: *
  data Version = ...
  type VersionInterval :: *
  data VersionInterval = VersionInterval !LowerBound !UpperBound
  type VersionIntervals :: *
  newtype VersionIntervals = ...
  type VersionRange :: *
  data VersionRange = ...
  type VersionRangeF :: * -> *
  data VersionRangeF a = ThisVersionF Version | LaterVersionF Version | OrLaterVersionF Version | EarlierVersionF Version | OrEarlierVersionF Version | MajorBoundVersionF Version | UnionVersionRangesF a a | IntersectVersionRangesF a a
  abiTagString :: AbiTag -> GHC.Internal.Base.String
  absolutePackageDBPath :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> PackageDB -> GHC.Types.IO PackageDB
  absolutePackageDBPaths :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> PackageDBStack -> GHC.Types.IO PackageDBStack
  alterVersion :: ([GHC.Types.Int] -> [GHC.Types.Int]) -> Version -> Version
  anaVersionRange :: forall a. (a -> VersionRangeF a) -> a -> VersionRange
  anyVersion :: VersionRange
  arDashLSupported :: Compiler -> GHC.Types.Bool
  arResponseFilesSupported :: Compiler -> GHC.Types.Bool
  asVersionIntervals :: VersionRange -> [VersionInterval]
  autoconfSetupHooks :: Distribution.Simple.SetupHooks.Internal.SetupHooks
  autoconfUserHooks :: UserHooks
  backpackSupported :: Compiler -> GHC.Types.Bool
  buildCompilerFlavor :: CompilerFlavor
  buildCompilerId :: CompilerId
  cataVersionRange :: forall a. (VersionRangeF a -> a) -> VersionRange -> a
  classifyCompilerFlavor :: GHC.Internal.Base.String -> CompilerFlavor
  classifyExtension :: GHC.Internal.Base.String -> Extension
  classifyLanguage :: GHC.Internal.Base.String -> Language
  coercePackageDB :: PackageDBCWD -> PackageDBX (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB))
  coercePackageDBStack :: [PackageDBCWD] -> [PackageDBX (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB))]
  compilerCompatFlavor :: CompilerFlavor -> Compiler -> GHC.Types.Bool
  compilerCompatVersion :: CompilerFlavor -> Compiler -> GHC.Internal.Maybe.Maybe Version
  compilerFlavor :: Compiler -> CompilerFlavor
  compilerInfo :: Compiler -> CompilerInfo
  compilerVersion :: Compiler -> Version
  coverageSupported :: Compiler -> GHC.Types.Bool
  defaultCompilerFlavor :: GHC.Internal.Maybe.Maybe CompilerFlavor
  defaultMain :: GHC.Types.IO ()
  defaultMainArgs :: [GHC.Internal.Base.String] -> GHC.Types.IO ()
  defaultMainNoRead :: Distribution.Types.GenericPackageDescription.GenericPackageDescription -> GHC.Types.IO ()
  defaultMainWithHooks :: UserHooks -> GHC.Types.IO ()
  defaultMainWithHooksArgs :: UserHooks -> [GHC.Internal.Base.String] -> GHC.Types.IO ()
  defaultMainWithHooksNoRead :: UserHooks -> Distribution.Types.GenericPackageDescription.GenericPackageDescription -> GHC.Types.IO ()
  defaultMainWithHooksNoReadArgs :: UserHooks -> Distribution.Types.GenericPackageDescription.GenericPackageDescription -> [GHC.Internal.Base.String] -> GHC.Types.IO ()
  defaultMainWithSetupHooks :: Distribution.Simple.SetupHooks.Internal.SetupHooks -> GHC.Types.IO ()
  defaultMainWithSetupHooksArgs :: Distribution.Simple.SetupHooks.Internal.SetupHooks -> [GHC.Internal.Base.String] -> GHC.Types.IO ()
  depLibraries :: Dependency -> Distribution.Compat.NonEmptySet.NonEmptySet Distribution.Types.LibraryName.LibraryName
  depPkgName :: Dependency -> PackageName
  depVerRange :: Dependency -> VersionRange
  deprecatedExtensions :: [(Extension, GHC.Internal.Maybe.Maybe Extension)]
  dynamicSupported :: Compiler -> GHC.Internal.Maybe.Maybe GHC.Types.Bool
  earlierVersion :: Version -> VersionRange
  embedVersionRange :: VersionRangeF VersionRange -> VersionRange
  emptyUserHooks :: UserHooks
  extensionsToFlags :: Compiler -> [Extension] -> [CompilerFlag]
  flagToDebugInfoLevel :: GHC.Internal.Maybe.Maybe GHC.Internal.Base.String -> DebugInfoLevel
  flagToOptimisationLevel :: GHC.Internal.Maybe.Maybe GHC.Internal.Base.String -> OptimisationLevel
  flagToProfDetailLevel :: GHC.Internal.Base.String -> ProfDetailLevel
  foldVersionRange :: forall a. a -> (Version -> a) -> (Version -> a) -> (Version -> a) -> (a -> a -> a) -> (a -> a -> a) -> VersionRange -> a
  fromVersionIntervals :: VersionIntervals -> VersionRange
  getHSLibraryName :: UnitId -> GHC.Internal.Base.String
  hasLowerBound :: VersionRange -> GHC.Types.Bool
  hasUpperBound :: VersionRange -> GHC.Types.Bool
  hyloVersionRange :: (VersionRangeF VersionRange -> VersionRange) -> (VersionRange -> VersionRangeF VersionRange) -> VersionRange -> VersionRange
  interpretPackageDB :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> PackageDB -> PackageDBCWD
  interpretPackageDBStack :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> PackageDBStack -> PackageDBStackCWD
  intersectVersionRanges :: VersionRange -> VersionRange -> VersionRange
  isAnyVersion :: VersionRange -> GHC.Types.Bool
  isNoVersion :: VersionRange -> GHC.Types.Bool
  isSpecificVersion :: VersionRange -> GHC.Internal.Maybe.Maybe Version
  jsemSupported :: Compiler -> GHC.Types.Bool
  knownCompilerFlavors :: [CompilerFlavor]
  knownExtensions :: [KnownExtension]
  knownLanguages :: [Language]
  knownLicenses :: [License]
  knownProfDetailLevels :: [(GHC.Internal.Base.String, [GHC.Internal.Base.String], ProfDetailLevel)]
  languageToFlags :: Compiler -> GHC.Internal.Maybe.Maybe Language -> [CompilerFlag]
  laterVersion :: Version -> VersionRange
  libraryDynDirSupported :: Compiler -> GHC.Types.Bool
  libraryVisibilitySupported :: Compiler -> GHC.Types.Bool
  licenseFromSPDX :: Distribution.SPDX.License.License -> License
  licenseToSPDX :: License -> Distribution.SPDX.License.License
  mainLibSet :: Distribution.Compat.NonEmptySet.NonEmptySet Distribution.Types.LibraryName.LibraryName
  majorBoundVersion :: Version -> VersionRange
  majorUpperBound :: Version -> Version
  mkAbiHash :: GHC.Internal.Base.String -> AbiHash
  mkComponentId :: GHC.Internal.Base.String -> ComponentId
  mkDependency :: PackageName -> VersionRange -> Distribution.Compat.NonEmptySet.NonEmptySet Distribution.Types.LibraryName.LibraryName -> Dependency
  mkLegacyUnitId :: PackageId -> UnitId
  mkPackageName :: GHC.Internal.Base.String -> PackageName
  mkPackageNameST :: Distribution.Utils.ShortText.ShortText -> PackageName
  mkPkgconfigName :: GHC.Internal.Base.String -> PkgconfigName
  mkUnitId :: GHC.Internal.Base.String -> UnitId
  mkVersion :: [GHC.Types.Int] -> Version
  mkVersion' :: GHC.Internal.Data.Version.Version -> Version
  mungedName' :: forall pkg. HasMungedPackageId pkg => pkg -> Distribution.Types.MungedPackageName.MungedPackageName
  mungedVersion' :: forall munged. HasMungedPackageId munged => munged -> Version
  newSimpleUnitId :: ComponentId -> UnitId
  noVersion :: VersionRange
  normaliseVersionRange :: VersionRange -> VersionRange
  notThisVersion :: Version -> VersionRange
  nullVersion :: Version
  orEarlierVersion :: Version -> VersionRange
  orLaterVersion :: Version -> VersionRange
  packageKeySupported :: Compiler -> GHC.Types.Bool
  packageName :: forall pkg. Package pkg => pkg -> PackageName
  packageVersion :: forall pkg. Package pkg => pkg -> Version
  parmakeSupported :: Compiler -> GHC.Types.Bool
  perCompilerFlavorToList :: forall v. PerCompilerFlavor v -> [(CompilerFlavor, v)]
  profilingDynamicSupported :: Compiler -> GHC.Internal.Maybe.Maybe GHC.Types.Bool
  profilingDynamicSupportedOrUnknown :: Compiler -> GHC.Types.Bool
  profilingSupported :: Compiler -> GHC.Types.Bool
  profilingVanillaSupported :: Compiler -> GHC.Internal.Maybe.Maybe GHC.Types.Bool
  profilingVanillaSupportedOrUnknown :: Compiler -> GHC.Types.Bool
  projectVersionRange :: VersionRange -> VersionRangeF VersionRange
  reexportedModulesSupported :: Compiler -> GHC.Types.Bool
  registrationPackageDB :: forall from. PackageDBStackX from -> PackageDBX from
  removeLowerBound :: VersionRange -> VersionRange
  removeUpperBound :: VersionRange -> VersionRange
  renamingPackageFlagsSupported :: Compiler -> GHC.Types.Bool
  showCompilerId :: Compiler -> GHC.Internal.Base.String
  showCompilerIdWithAbi :: Compiler -> GHC.Internal.Base.String
  showProfDetailLevel :: ProfDetailLevel -> GHC.Internal.Base.String
  simpleUserHooks :: UserHooks
  simplifyDependency :: Dependency -> Dependency
  simplifyVersionRange :: VersionRange -> VersionRange
  stripParensVersionRange :: VersionRange -> VersionRange
  thisVersion :: Version -> VersionRange
  toVersionIntervals :: VersionRange -> VersionIntervals
  transformCaret :: VersionRange -> VersionRange
  transformCaretLower :: VersionRange -> VersionRange
  transformCaretUpper :: VersionRange -> VersionRange
  unAbiHash :: AbiHash -> GHC.Internal.Base.String
  unComponentId :: ComponentId -> GHC.Internal.Base.String
  unPackageName :: PackageName -> GHC.Internal.Base.String
  unPackageNameST :: PackageName -> Distribution.Utils.ShortText.ShortText
  unPkgconfigName :: PkgconfigName -> GHC.Internal.Base.String
  unUnitId :: UnitId -> GHC.Internal.Base.String
  unVersionIntervals :: VersionIntervals -> [VersionInterval]
  unifiedIPIDRequired :: Compiler -> GHC.Types.Bool
  unionVersionRanges :: VersionRange -> VersionRange -> VersionRange
  unitIdSupported :: Compiler -> GHC.Types.Bool
  unknownCompilerInfo :: CompilerId -> AbiTag -> CompilerInfo
  unsafeMkDefUnitId :: UnitId -> DefUnitId
  unsupportedExtensions :: Compiler -> [Extension] -> [Extension]
  unsupportedLanguages :: Compiler -> [Language] -> [Language]
  version0 :: Version
  versionNumbers :: Version -> [GHC.Types.Int]
  wildcardUpperBound :: Version -> Version
  withinRange :: Version -> VersionRange -> GHC.Types.Bool
  withinVersion :: Version -> VersionRange

module Distribution.Simple.Bench where
  bench :: Distribution.Simple.UserHooks.Args -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Cabal-3.15.0.0:Distribution.Simple.Setup.Benchmark.BenchmarkFlags -> GHC.Types.IO ()

module Distribution.Simple.Build where
  type AutogenFile :: *
  data AutogenFile
    = AutogenModule ! {-# UNPACK #-}(Distribution.ModuleName.N:ModuleName[0]
                                     ; Distribution.Utils.ShortText.N:ShortText[0]
                                     ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.ModuleName.ModuleName
                    !Distribution.Simple.PreProcess.Types.Suffix
    | AutogenFile ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                   ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText
  type AutogenFileContents :: *
  type AutogenFileContents = Data.ByteString.Lazy.Internal.ByteString
  addInternalBuildTools :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.BuildInfo.BuildInfo -> Distribution.Simple.Program.Db.ProgramDb -> Distribution.Simple.Program.Db.ProgramDb
  build :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Cabal-3.15.0.0:Distribution.Simple.Setup.Build.BuildFlags -> [Distribution.Simple.PreProcess.PPSuffixHandler] -> GHC.Types.IO ()
  build_setupHooks :: Distribution.Simple.SetupHooks.Internal.BuildHooks -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Cabal-3.15.0.0:Distribution.Simple.Setup.Build.BuildFlags -> [Distribution.Simple.PreProcess.PPSuffixHandler] -> GHC.Types.IO ()
  componentInitialBuildSteps :: GHC.Internal.IO.FilePath -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> Distribution.Verbosity.Verbosity -> GHC.Types.IO ()
  createInternalPackageDB :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist) -> GHC.Types.IO Distribution.Simple.Compiler.PackageDB
  initialBuildSteps :: GHC.Internal.IO.FilePath -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Verbosity.Verbosity -> GHC.Types.IO ()
  preBuildComponent :: (Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.TargetInfo.TargetInfo -> GHC.Types.IO ()) -> Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.TargetInfo.TargetInfo -> GHC.Types.IO ()
  repl :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplFlags -> [Distribution.Simple.PreProcess.PPSuffixHandler] -> [GHC.Internal.Base.String] -> GHC.Types.IO ()
  repl_setupHooks :: Distribution.Simple.SetupHooks.Internal.BuildHooks -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplFlags -> [Distribution.Simple.PreProcess.PPSuffixHandler] -> [GHC.Internal.Base.String] -> GHC.Types.IO ()
  startInterpreter :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Db.ProgramDb -> Distribution.Simple.Compiler.Compiler -> Distribution.System.Platform -> Distribution.Simple.Compiler.PackageDBStack -> GHC.Types.IO ()
  writeAutogenFiles :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> Data.Map.Internal.Map AutogenFile AutogenFileContents -> GHC.Types.IO ()
  writeBuiltinAutogenFiles :: Distribution.Verbosity.Verbosity -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO ()

module Distribution.Simple.Build.Inputs where
  type BuildingWhat :: *
  data BuildingWhat = BuildNormal Cabal-3.15.0.0:Distribution.Simple.Setup.Build.BuildFlags | BuildRepl Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplFlags | BuildHaddock Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockFlags | BuildHscolour Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour.HscolourFlags
  pattern LocalBuildInfo
    :: Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags
       -> Distribution.Types.Flag.FlagAssignment
       -> Distribution.Types.ComponentRequestedSpec.ComponentRequestedSpec
       -> [GHC.Internal.Base.String]
       -> Distribution.Simple.InstallDirs.InstallDirTemplates
       -> Distribution.Simple.Compiler.Compiler
       -> Distribution.System.Platform
       -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File)
       -> Distribution.Compat.Graph.Graph Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo
       -> Data.Map.Internal.Map Distribution.Types.ComponentName.ComponentName [Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo]
       -> Data.Map.Internal.Map (Distribution.Types.PackageName.PackageName, Distribution.Types.ComponentName.ComponentName) Distribution.Types.GivenComponent.PromisedComponent
       -> Distribution.Simple.PackageIndex.InstalledPackageIndex
       -> Distribution.Types.PackageDescription.PackageDescription
       -> Distribution.Simple.Program.Db.ProgramDb
       -> Distribution.Simple.Compiler.PackageDBStack
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> Distribution.Simple.Compiler.ProfDetailLevel
       -> Distribution.Simple.Compiler.ProfDetailLevel
       -> Distribution.Simple.Compiler.OptimisationLevel
       -> Distribution.Simple.Compiler.DebugInfoLevel
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> [Distribution.Types.UnitId.UnitId]
       -> GHC.Types.Bool
       -> LocalBuildInfo
  pattern LocalBuildInfo {configFlags, flagAssignment, componentEnabledSpec, extraConfigArgs, installDirTemplates, compiler, hostPlatform, pkgDescrFile, componentGraph, componentNameMap, promisedPkgs, installedPkgs, localPkgDescr, withPrograms, withPackageDB, withVanillaLib, withProfLib, withProfLibShared, withSharedLib, withStaticLib, withDynExe, withFullyStaticExe, withProfExe, withProfLibDetail, withProfExeDetail, withOptimization, withDebugInfo, withGHCiLib, splitSections, splitObjs, stripExes, stripLibs, exeCoverage, libCoverage, extraCoverageFor, relocatable}
  type LocalBuildInfo :: *
  data LocalBuildInfo = NewLocalBuildInfo {localBuildDescr :: Distribution.Types.LocalBuildConfig.LocalBuildDescr, localBuildConfig :: Distribution.Types.LocalBuildConfig.LocalBuildConfig}
  type PreBuildComponentInputs :: *
  data PreBuildComponentInputs = PreBuildComponentInputs {buildingWhat :: BuildingWhat, localBuildInfo :: LocalBuildInfo, targetInfo :: TargetInfo}
  type TargetInfo :: *
  data TargetInfo = TargetInfo {targetCLBI :: Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo, targetComponent :: Distribution.Types.Component.Component}
  buildBI :: PreBuildComponentInputs -> Distribution.Types.BuildInfo.BuildInfo
  buildCLBI :: PreBuildComponentInputs -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo
  buildCompiler :: PreBuildComponentInputs -> Distribution.Simple.Compiler.Compiler
  buildComponent :: PreBuildComponentInputs -> Distribution.Types.Component.Component
  buildIsLib :: PreBuildComponentInputs -> GHC.Types.Bool
  buildVerbosity :: PreBuildComponentInputs -> Distribution.Verbosity.Verbosity
  buildingWhatCommonFlags :: BuildingWhat -> Cabal-3.15.0.0:Distribution.Simple.Setup.Common.CommonSetupFlags
  buildingWhatDistPref :: BuildingWhat -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist)
  buildingWhatVerbosity :: BuildingWhat -> Distribution.Verbosity.Verbosity
  buildingWhatWorkingDir :: BuildingWhat -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg))

module Distribution.Simple.Build.Macros where
  generateCabalMacrosHeader :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Internal.Base.String
  generatePackageVersionMacros :: Distribution.Types.Version.Version -> [Distribution.Types.PackageId.PackageId] -> GHC.Internal.Base.String

module Distribution.Simple.Build.PackageInfoModule where
  generatePackageInfoModule :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Internal.Base.String

module Distribution.Simple.Build.PathsModule where
  generatePathsModule :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Internal.Base.String
  pkgPathEnvVar :: Distribution.Types.PackageDescription.PackageDescription -> GHC.Internal.Base.String -> GHC.Internal.Base.String

module Distribution.Simple.BuildPaths where
  autogenComponentModulesDir :: Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Source)
  autogenPackageInfoModuleName :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.ModuleName.ModuleName
  autogenPackageModulesDir :: Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Source)
  autogenPathsModuleName :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.ModuleName.ModuleName
  benchmarkBuildDir :: Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.Benchmark.Benchmark -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Build)
  buildInfoPref :: forall root. Distribution.Utils.Path.SymbolicPath root (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist) -> Distribution.Utils.Path.SymbolicPath root Distribution.Utils.Path.File
  cppHeaderName :: GHC.Internal.Base.String
  defaultDistPref :: Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist)
  dllExtension :: Distribution.System.Platform -> GHC.Internal.Base.String
  exeBuildDir :: Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.Executable.Executable -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Build)
  exeExtension :: Distribution.System.Platform -> GHC.Internal.Base.String
  flibBuildDir :: Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ForeignLib.ForeignLib -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Build)
  getBenchmarkSourceFiles :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.Benchmark.Benchmark -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO [(Distribution.ModuleName.ModuleName, Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File)]
  getExeSourceFiles :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.Executable.Executable -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO [(Distribution.ModuleName.ModuleName, Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File)]
  getFLibSourceFiles :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ForeignLib.ForeignLib -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO [(Distribution.ModuleName.ModuleName, Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File)]
  getLibSourceFiles :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.Library.Library -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO [(Distribution.ModuleName.ModuleName, Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File)]
  getSourceFiles :: forall (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute). Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> [Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Source)] -> [Distribution.ModuleName.ModuleName] -> GHC.Types.IO [(Distribution.ModuleName.ModuleName, Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg Distribution.Utils.Path.File)]
  getTestSourceFiles :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.TestSuite.TestSuite -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO [(Distribution.ModuleName.ModuleName, Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File)]
  haddockBenchmarkDirPath :: Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockTarget -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.Benchmark.Benchmark -> GHC.Internal.IO.FilePath
  haddockDirName :: Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockTarget -> Distribution.Types.PackageDescription.PackageDescription -> GHC.Internal.IO.FilePath
  haddockLibraryDirPath :: Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockTarget -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.Library.Library -> GHC.Internal.IO.FilePath
  haddockLibraryName :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.Library.Library -> GHC.Internal.Base.String
  haddockLibraryPath :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.Library.Library -> GHC.Internal.IO.FilePath
  haddockPackageLibraryName :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.Library.Library -> GHC.Internal.Base.String
  haddockPackageLibraryName' :: Distribution.Types.PackageName.PackageName -> Distribution.Types.LibraryName.LibraryName -> GHC.Internal.Base.String
  haddockPath :: Distribution.Types.PackageDescription.PackageDescription -> GHC.Internal.IO.FilePath
  haddockPref :: forall root. Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockTarget -> Distribution.Utils.Path.SymbolicPath root (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist) -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Utils.Path.SymbolicPath root (Distribution.Utils.Path.Dir Distribution.Utils.Path.Artifacts)
  haddockTestDirPath :: Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockTarget -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.TestSuite.TestSuite -> GHC.Internal.IO.FilePath
  hscolourPref :: forall root. Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockTarget -> Distribution.Utils.Path.SymbolicPath root (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist) -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Utils.Path.SymbolicPath root (Distribution.Utils.Path.Dir Distribution.Utils.Path.Artifacts)
  mkGenericSharedBundledLibName :: Distribution.System.Platform -> Distribution.Compiler.CompilerId -> GHC.Internal.Base.String -> GHC.Internal.Base.String
  mkGenericSharedLibName :: Distribution.System.Platform -> Distribution.Compiler.CompilerId -> GHC.Internal.Base.String -> GHC.Internal.Base.String
  mkGenericStaticLibName :: GHC.Internal.Base.String -> GHC.Internal.Base.String
  mkLibName :: Distribution.Types.UnitId.UnitId -> GHC.Internal.Base.String
  mkProfLibName :: Distribution.Types.UnitId.UnitId -> GHC.Internal.Base.String
  mkProfSharedLibName :: Distribution.System.Platform -> Distribution.Compiler.CompilerId -> Distribution.Types.UnitId.UnitId -> GHC.Internal.Base.String
  mkSharedLibName :: Distribution.System.Platform -> Distribution.Compiler.CompilerId -> Distribution.Types.UnitId.UnitId -> GHC.Internal.Base.String
  mkStaticLibName :: Distribution.System.Platform -> Distribution.Compiler.CompilerId -> Distribution.Types.UnitId.UnitId -> GHC.Internal.Base.String
  objExtension :: GHC.Internal.Base.String
  srcPref :: GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath
  staticLibExtension :: Distribution.System.Platform -> GHC.Internal.Base.String
  stubName :: Distribution.Types.TestSuite.TestSuite -> GHC.Internal.IO.FilePath
  testBuildDir :: Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.TestSuite.TestSuite -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Build)

module Distribution.Simple.BuildTarget where
  type BuildTarget :: *
  data BuildTarget = BuildTargetComponent Distribution.Types.ComponentName.ComponentName | BuildTargetModule Distribution.Types.ComponentName.ComponentName Distribution.ModuleName.ModuleName | BuildTargetFile Distribution.Types.ComponentName.ComponentName GHC.Internal.IO.FilePath
  type BuildTargetProblem :: *
  data BuildTargetProblem = BuildTargetExpected UserBuildTarget [GHC.Internal.Base.String] GHC.Internal.Base.String | BuildTargetNoSuch UserBuildTarget [(GHC.Internal.Base.String, GHC.Internal.Base.String)] | BuildTargetAmbiguous UserBuildTarget [(UserBuildTarget, BuildTarget)]
  type QualLevel :: *
  data QualLevel = QL1 | QL2 | QL3
  type UserBuildTarget :: *
  data UserBuildTarget = ...
  type UserBuildTargetProblem :: *
  data UserBuildTargetProblem = UserBuildTargetUnrecognised GHC.Internal.Base.String
  buildTargetComponentName :: BuildTarget -> Distribution.Types.ComponentName.ComponentName
  readBuildTargets :: Distribution.Verbosity.Verbosity -> Distribution.Types.PackageDescription.PackageDescription -> [GHC.Internal.Base.String] -> GHC.Types.IO [BuildTarget]
  readTargetInfos :: Distribution.Verbosity.Verbosity -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> [GHC.Internal.Base.String] -> GHC.Types.IO [Distribution.Types.TargetInfo.TargetInfo]
  readUserBuildTargets :: [GHC.Internal.Base.String] -> ([UserBuildTargetProblem], [UserBuildTarget])
  reportBuildTargetProblems :: Distribution.Verbosity.Verbosity -> [BuildTargetProblem] -> GHC.Types.IO ()
  reportUserBuildTargetProblems :: Distribution.Verbosity.Verbosity -> [UserBuildTargetProblem] -> GHC.Types.IO ()
  resolveBuildTargets :: Distribution.Types.PackageDescription.PackageDescription -> [(UserBuildTarget, GHC.Types.Bool)] -> ([BuildTargetProblem], [BuildTarget])
  showBuildTarget :: Distribution.Types.PackageId.PackageId -> BuildTarget -> GHC.Internal.Base.String
  showUserBuildTarget :: UserBuildTarget -> GHC.Internal.Base.String

module Distribution.Simple.BuildToolDepends where
  desugarBuildTool :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LegacyExeDependency.LegacyExeDependency -> GHC.Internal.Maybe.Maybe Distribution.Types.ExeDependency.ExeDependency
  desugarBuildToolSimple :: Distribution.Types.PackageName.PackageName -> [Distribution.Types.UnqualComponentName.UnqualComponentName] -> Distribution.Types.LegacyExeDependency.LegacyExeDependency -> GHC.Internal.Maybe.Maybe Distribution.Types.ExeDependency.ExeDependency
  getAllInternalToolDependencies :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.BuildInfo.BuildInfo -> [Distribution.Types.UnqualComponentName.UnqualComponentName]
  getAllToolDependencies :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.BuildInfo.BuildInfo -> [Distribution.Types.ExeDependency.ExeDependency]
  isInternal :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.ExeDependency.ExeDependency -> GHC.Types.Bool

module Distribution.Simple.BuildWay where
  type BuildWay :: *
  data BuildWay = StaticWay | DynWay | ProfWay | ProfDynWay
  buildWayPrefix :: BuildWay -> GHC.Internal.Base.String

module Distribution.Simple.CCompiler where
  type CDialect :: *
  data CDialect = C | ObjectiveC | CPlusPlus | ObjectiveCPlusPlus
  cDialectFilenameExtension :: CDialect -> GHC.Types.Bool -> GHC.Internal.Base.String
  cSourceExtensions :: [GHC.Internal.Base.String]
  filenameCDialect :: GHC.Internal.Base.String -> GHC.Internal.Maybe.Maybe (CDialect, GHC.Types.Bool)

module Distribution.Simple.Command where
  type ArgPlaceHolder :: *
  type ArgPlaceHolder = GHC.Internal.Base.String
  type Command :: * -> *
  data Command action = ...
  type CommandParse :: * -> *
  data CommandParse flags = CommandHelp (GHC.Internal.Base.String -> GHC.Internal.Base.String) | CommandList [GHC.Internal.Base.String] | CommandErrors [GHC.Internal.Base.String] | CommandReadyToGo flags
  type CommandSpec :: * -> *
  data CommandSpec action = forall flags. CommandSpec (CommandUI flags) (CommandUI flags -> Command action) CommandType
  type CommandType :: *
  data CommandType = NormalCommand | HiddenCommand
  type CommandUI :: * -> *
  data CommandUI flags = CommandUI {commandName :: GHC.Internal.Base.String, commandSynopsis :: GHC.Internal.Base.String, commandUsage :: GHC.Internal.Base.String -> GHC.Internal.Base.String, commandDescription :: GHC.Internal.Maybe.Maybe (GHC.Internal.Base.String -> GHC.Internal.Base.String), commandNotes :: GHC.Internal.Maybe.Maybe (GHC.Internal.Base.String -> GHC.Internal.Base.String), commandDefaultFlags :: flags, commandOptions :: ShowOrParseArgs -> [OptionField flags]}
  type Description :: *
  type Description = GHC.Internal.Base.String
  type LFlags :: *
  type LFlags = [GHC.Internal.Base.String]
  type MkOptDescr :: * -> * -> * -> *
  type MkOptDescr get set a = SFlags -> LFlags -> Description -> get -> set -> OptDescr a
  type Name :: *
  type Name = GHC.Internal.Base.String
  type OptDescr :: * -> *
  data OptDescr a = ReqArg Description OptFlags ArgPlaceHolder (Distribution.ReadE.ReadE (a -> a)) (a -> [GHC.Internal.Base.String]) | OptArg Description OptFlags ArgPlaceHolder (Distribution.ReadE.ReadE (a -> a)) (GHC.Internal.Base.String, a -> a) (a -> [GHC.Internal.Maybe.Maybe GHC.Internal.Base.String]) | ChoiceOpt [(Description, OptFlags, a -> a, a -> GHC.Types.Bool)] | BoolOpt Description OptFlags OptFlags (GHC.Types.Bool -> a -> a) (a -> GHC.Internal.Maybe.Maybe GHC.Types.Bool)
  type OptFlags :: *
  type OptFlags = (SFlags, LFlags)
  type OptionField :: * -> *
  data OptionField a = OptionField {optionName :: Name, optionDescr :: [OptDescr a]}
  type SFlags :: *
  type SFlags = [GHC.Types.Char]
  type ShowOrParseArgs :: *
  data ShowOrParseArgs = ShowArgs | ParseArgs
  boolOpt :: forall b a. (b -> GHC.Internal.Maybe.Maybe GHC.Types.Bool) -> (GHC.Types.Bool -> b) -> SFlags -> SFlags -> MkOptDescr (a -> b) (b -> a -> a) a
  boolOpt' :: forall b a. (b -> GHC.Internal.Maybe.Maybe GHC.Types.Bool) -> (GHC.Types.Bool -> b) -> OptFlags -> OptFlags -> MkOptDescr (a -> b) (b -> a -> a) a
  choiceOpt :: forall b a. GHC.Classes.Eq b => [(b, OptFlags, Description)] -> MkOptDescr (a -> b) (b -> a -> a) a
  choiceOptFromEnum :: forall b a. (GHC.Internal.Enum.Bounded b, GHC.Internal.Enum.Enum b, GHC.Internal.Show.Show b, GHC.Classes.Eq b) => MkOptDescr (a -> b) (b -> a -> a) a
  commandAddAction :: forall flags action. CommandUI flags -> (flags -> [GHC.Internal.Base.String] -> action) -> Command action
  commandFromSpec :: forall a. CommandSpec a -> Command a
  commandParseArgs :: forall flags. CommandUI flags -> GHC.Types.Bool -> [GHC.Internal.Base.String] -> CommandParse (flags -> flags, [GHC.Internal.Base.String])
  commandShowOptions :: forall flags. CommandUI flags -> flags -> [GHC.Internal.Base.String]
  commandsRun :: forall a action. CommandUI a -> [Command action] -> [GHC.Internal.Base.String] -> GHC.Types.IO (CommandParse (a, CommandParse action))
  commandsRunWithFallback :: forall a action. CommandUI a -> [Command action] -> ([Command action] -> GHC.Internal.Base.String -> [GHC.Internal.Base.String] -> GHC.Types.IO (CommandParse action)) -> [GHC.Internal.Base.String] -> GHC.Types.IO (CommandParse (a, CommandParse action))
  defaultCommandFallback :: forall action. [Command action] -> GHC.Internal.Base.String -> [GHC.Internal.Base.String] -> GHC.Types.IO (CommandParse action)
  fmapOptDescr :: forall a b. (b -> a) -> (a -> b -> b) -> OptDescr a -> OptDescr b
  getNormalCommandDescriptions :: forall action. [Command action] -> [(GHC.Internal.Base.String, GHC.Internal.Base.String)]
  helpCommandUI :: CommandUI ()
  hiddenCommand :: forall action. Command action -> Command action
  liftOption :: forall b a. (b -> a) -> (a -> b -> b) -> OptionField a -> OptionField b
  liftOptionL :: forall b a. Distribution.Compat.Lens.ALens' b a -> OptionField a -> OptionField b
  mkCommandUI :: forall flags. GHC.Internal.Base.String -> GHC.Internal.Base.String -> [GHC.Internal.Base.String] -> flags -> (ShowOrParseArgs -> [OptionField flags]) -> CommandUI flags
  multiOption :: forall get set a. Name -> get -> set -> [get -> set -> OptDescr a] -> OptionField a
  noArg :: forall b a. GHC.Classes.Eq b => b -> MkOptDescr (a -> b) (b -> a -> a) a
  noExtraFlags :: [GHC.Internal.Base.String] -> GHC.Types.IO ()
  optArg :: forall b a. GHC.Internal.Base.Monoid b => ArgPlaceHolder -> Distribution.ReadE.ReadE b -> (GHC.Internal.Base.String, b) -> (b -> [GHC.Internal.Maybe.Maybe GHC.Internal.Base.String]) -> MkOptDescr (a -> b) (b -> a -> a) a
  optArg' :: forall b a. GHC.Internal.Base.Monoid b => ArgPlaceHolder -> (GHC.Internal.Maybe.Maybe GHC.Internal.Base.String -> b) -> (b -> [GHC.Internal.Maybe.Maybe GHC.Internal.Base.String]) -> MkOptDescr (a -> b) (b -> a -> a) a
  optArgDef' :: forall b a. GHC.Internal.Base.Monoid b => ArgPlaceHolder -> (GHC.Internal.Base.String, GHC.Internal.Maybe.Maybe GHC.Internal.Base.String -> b) -> (b -> [GHC.Internal.Maybe.Maybe GHC.Internal.Base.String]) -> MkOptDescr (a -> b) (b -> a -> a) a
  option :: forall get set a. SFlags -> LFlags -> Description -> get -> set -> MkOptDescr get set a -> OptionField a
  reqArg :: forall b a. GHC.Internal.Base.Monoid b => ArgPlaceHolder -> Distribution.ReadE.ReadE b -> (b -> [GHC.Internal.Base.String]) -> MkOptDescr (a -> b) (b -> a -> a) a
  reqArg' :: forall b a. GHC.Internal.Base.Monoid b => ArgPlaceHolder -> (GHC.Internal.Base.String -> b) -> (b -> [GHC.Internal.Base.String]) -> MkOptDescr (a -> b) (b -> a -> a) a
  usageAlternatives :: GHC.Internal.Base.String -> [GHC.Internal.Base.String] -> GHC.Internal.Base.String -> GHC.Internal.Base.String
  usageDefault :: GHC.Internal.Base.String -> GHC.Internal.Base.String -> GHC.Internal.Base.String

module Distribution.Simple.Compiler where
  type AbiTag :: *
  data AbiTag = NoAbiTag | AbiTag GHC.Internal.Base.String
  type Compiler :: *
  data Compiler = Compiler {compilerId :: CompilerId, compilerAbiTag :: AbiTag, compilerCompat :: [CompilerId], compilerLanguages :: [(Language.Haskell.Extension.Language, CompilerFlag)], compilerExtensions :: [(Language.Haskell.Extension.Extension, GHC.Internal.Maybe.Maybe CompilerFlag)], compilerProperties :: Data.Map.Internal.Map GHC.Internal.Base.String GHC.Internal.Base.String}
  type CompilerFlag :: *
  type CompilerFlag = GHC.Internal.Base.String
  type CompilerFlavor :: *
  data CompilerFlavor = GHC | GHCJS | NHC | YHC | Hugs | HBC | Helium | JHC | LHC | UHC | Eta | MHS | HaskellSuite GHC.Internal.Base.String | OtherCompiler GHC.Internal.Base.String
  type CompilerId :: *
  data CompilerId = CompilerId CompilerFlavor Distribution.Types.Version.Version
  type CompilerInfo :: *
  data CompilerInfo = CompilerInfo {compilerInfoId :: CompilerId, compilerInfoAbiTag :: AbiTag, compilerInfoCompat :: GHC.Internal.Maybe.Maybe [CompilerId], compilerInfoLanguages :: GHC.Internal.Maybe.Maybe [Language.Haskell.Extension.Language], compilerInfoExtensions :: GHC.Internal.Maybe.Maybe [Language.Haskell.Extension.Extension]}
  type DebugInfoLevel :: *
  data DebugInfoLevel = NoDebugInfo | MinimalDebugInfo | NormalDebugInfo | MaximalDebugInfo
  type OptimisationLevel :: *
  data OptimisationLevel = NoOptimisation | NormalOptimisation | MaximumOptimisation
  type PackageDB :: *
  type PackageDB = PackageDBX (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB))
  type PackageDBCWD :: *
  type PackageDBCWD = PackageDBX GHC.Internal.IO.FilePath
  type PackageDBS :: * -> *
  type PackageDBS from = PackageDBX (Distribution.Utils.Path.SymbolicPath from (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB))
  type PackageDBStack :: *
  type PackageDBStack = PackageDBStackX (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB))
  type PackageDBStackCWD :: *
  type PackageDBStackCWD = PackageDBStackX GHC.Internal.IO.FilePath
  type PackageDBStackS :: * -> *
  type PackageDBStackS from = PackageDBStackX (Distribution.Utils.Path.SymbolicPath from (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB))
  type PackageDBStackX :: * -> *
  type PackageDBStackX from = [PackageDBX from]
  type PackageDBX :: * -> *
  data PackageDBX fp = GlobalPackageDB | UserPackageDB | SpecificPackageDB fp
  type PerCompilerFlavor :: * -> *
  data PerCompilerFlavor v = PerCompilerFlavor v v
  type ProfDetailLevel :: *
  data ProfDetailLevel = ProfDetailNone | ProfDetailDefault | ProfDetailExportedFunctions | ProfDetailToplevelFunctions | ProfDetailAllFunctions | ProfDetailTopLate | ProfDetailOther GHC.Internal.Base.String
  abiTagString :: AbiTag -> GHC.Internal.Base.String
  absolutePackageDBPath :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> PackageDB -> GHC.Types.IO PackageDB
  absolutePackageDBPaths :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> PackageDBStack -> GHC.Types.IO PackageDBStack
  arDashLSupported :: Compiler -> GHC.Types.Bool
  arResponseFilesSupported :: Compiler -> GHC.Types.Bool
  backpackSupported :: Compiler -> GHC.Types.Bool
  buildCompilerFlavor :: CompilerFlavor
  buildCompilerId :: CompilerId
  classifyCompilerFlavor :: GHC.Internal.Base.String -> CompilerFlavor
  coercePackageDB :: PackageDBCWD -> PackageDBX (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB))
  coercePackageDBStack :: [PackageDBCWD] -> [PackageDBX (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB))]
  compilerCompatFlavor :: CompilerFlavor -> Compiler -> GHC.Types.Bool
  compilerCompatVersion :: CompilerFlavor -> Compiler -> GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version
  compilerFlavor :: Compiler -> CompilerFlavor
  compilerInfo :: Compiler -> CompilerInfo
  compilerVersion :: Compiler -> Distribution.Types.Version.Version
  coverageSupported :: Compiler -> GHC.Types.Bool
  defaultCompilerFlavor :: GHC.Internal.Maybe.Maybe CompilerFlavor
  dynamicSupported :: Compiler -> GHC.Internal.Maybe.Maybe GHC.Types.Bool
  extensionsToFlags :: Compiler -> [Language.Haskell.Extension.Extension] -> [CompilerFlag]
  flagToDebugInfoLevel :: GHC.Internal.Maybe.Maybe GHC.Internal.Base.String -> DebugInfoLevel
  flagToOptimisationLevel :: GHC.Internal.Maybe.Maybe GHC.Internal.Base.String -> OptimisationLevel
  flagToProfDetailLevel :: GHC.Internal.Base.String -> ProfDetailLevel
  interpretPackageDB :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> PackageDB -> PackageDBCWD
  interpretPackageDBStack :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> PackageDBStack -> PackageDBStackCWD
  jsemSupported :: Compiler -> GHC.Types.Bool
  knownCompilerFlavors :: [CompilerFlavor]
  knownProfDetailLevels :: [(GHC.Internal.Base.String, [GHC.Internal.Base.String], ProfDetailLevel)]
  languageToFlags :: Compiler -> GHC.Internal.Maybe.Maybe Language.Haskell.Extension.Language -> [CompilerFlag]
  libraryDynDirSupported :: Compiler -> GHC.Types.Bool
  libraryVisibilitySupported :: Compiler -> GHC.Types.Bool
  packageKeySupported :: Compiler -> GHC.Types.Bool
  parmakeSupported :: Compiler -> GHC.Types.Bool
  perCompilerFlavorToList :: forall v. PerCompilerFlavor v -> [(CompilerFlavor, v)]
  profilingDynamicSupported :: Compiler -> GHC.Internal.Maybe.Maybe GHC.Types.Bool
  profilingDynamicSupportedOrUnknown :: Compiler -> GHC.Types.Bool
  profilingSupported :: Compiler -> GHC.Types.Bool
  profilingVanillaSupported :: Compiler -> GHC.Internal.Maybe.Maybe GHC.Types.Bool
  profilingVanillaSupportedOrUnknown :: Compiler -> GHC.Types.Bool
  reexportedModulesSupported :: Compiler -> GHC.Types.Bool
  registrationPackageDB :: forall from. PackageDBStackX from -> PackageDBX from
  renamingPackageFlagsSupported :: Compiler -> GHC.Types.Bool
  showCompilerId :: Compiler -> GHC.Internal.Base.String
  showCompilerIdWithAbi :: Compiler -> GHC.Internal.Base.String
  showProfDetailLevel :: ProfDetailLevel -> GHC.Internal.Base.String
  unifiedIPIDRequired :: Compiler -> GHC.Types.Bool
  unitIdSupported :: Compiler -> GHC.Types.Bool
  unknownCompilerInfo :: CompilerId -> AbiTag -> CompilerInfo
  unsupportedExtensions :: Compiler -> [Language.Haskell.Extension.Extension] -> [Language.Haskell.Extension.Extension]
  unsupportedLanguages :: Compiler -> [Language.Haskell.Extension.Language] -> [Language.Haskell.Extension.Language]

module Distribution.Simple.Configure where
  type ConfigStateFileError :: *
  data ConfigStateFileError = ConfigStateFileNoHeader | ConfigStateFileBadHeader | ConfigStateFileNoParse | ConfigStateFileMissing {cfgStateFileErrorCwd :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)), cfgStateFileErrorFile :: Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File} | ConfigStateFileBadVersion Distribution.Types.PackageId.PackageIdentifier Distribution.Types.PackageId.PackageIdentifier (GHC.Internal.Data.Either.Either ConfigStateFileError Distribution.Types.LocalBuildInfo.LocalBuildInfo)
  ccLdOptionsBuildInfo :: [GHC.Internal.Base.String] -> [GHC.Internal.Base.String] -> [GHC.Internal.Base.String] -> Distribution.Types.BuildInfo.BuildInfo
  checkForeignDeps :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Verbosity.Verbosity -> GHC.Types.IO ()
  checkPersistBuildConfigOutdated :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist) -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File -> GHC.Types.IO GHC.Types.Bool
  computeCompatPackageKey :: Distribution.Simple.Compiler.Compiler -> Distribution.Types.MungedPackageName.MungedPackageName -> Distribution.Types.Version.Version -> Distribution.Types.UnitId.UnitId -> GHC.Internal.Base.String
  computeComponentId :: GHC.Types.Bool -> Distribution.Simple.Flag.Flag GHC.Internal.Base.String -> Distribution.Simple.Flag.Flag Distribution.Types.ComponentId.ComponentId -> Distribution.Types.PackageId.PackageIdentifier -> Distribution.Types.ComponentName.ComponentName -> GHC.Internal.Maybe.Maybe ([Distribution.Types.ComponentId.ComponentId], Distribution.Types.Flag.FlagAssignment) -> Distribution.Types.ComponentId.ComponentId
  computeEffectiveProfiling :: Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags -> (GHC.Types.Bool, GHC.Types.Bool, GHC.Types.Bool)
  configCompilerAuxEx :: Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags -> GHC.Types.IO (Distribution.Simple.Compiler.Compiler, Distribution.System.Platform, Distribution.Simple.Program.Db.ProgramDb)
  configCompilerEx :: GHC.Internal.Maybe.Maybe Distribution.Compiler.CompilerFlavor -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath -> Distribution.Simple.Program.Db.ProgramDb -> Distribution.Verbosity.Verbosity -> GHC.Types.IO (Distribution.Simple.Compiler.Compiler, Distribution.System.Platform, Distribution.Simple.Program.Db.ProgramDb)
  configure :: (Distribution.Types.GenericPackageDescription.GenericPackageDescription, Distribution.Types.HookedBuildInfo.HookedBuildInfo) -> Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags -> GHC.Types.IO Distribution.Types.LocalBuildInfo.LocalBuildInfo
  configure_setupHooks :: Distribution.Simple.SetupHooks.Internal.ConfigureHooks -> (Distribution.Types.GenericPackageDescription.GenericPackageDescription, Distribution.Types.HookedBuildInfo.HookedBuildInfo) -> Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags -> GHC.Types.IO Distribution.Types.LocalBuildInfo.LocalBuildInfo
  findDistPref :: Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist) -> Distribution.Simple.Flag.Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist)) -> GHC.Types.IO (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist))
  findDistPrefOrDefault :: Distribution.Simple.Flag.Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist)) -> GHC.Types.IO (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist))
  getConfigStateFile :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File -> GHC.Types.IO Distribution.Types.LocalBuildInfo.LocalBuildInfo
  getInstalledPackages :: forall from. Distribution.Verbosity.Verbosity -> Distribution.Simple.Compiler.Compiler -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir from)) -> Distribution.Simple.Compiler.PackageDBStackX (Distribution.Utils.Path.SymbolicPath from (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB)) -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Types.IO Distribution.Simple.PackageIndex.InstalledPackageIndex
  getInstalledPackagesById :: forall exception. (GHC.Internal.Exception.Type.Exception (Distribution.Simple.Utils.VerboseException exception), GHC.Internal.Show.Show exception, ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable exception) => Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> (Distribution.Types.UnitId.UnitId -> exception) -> [Distribution.Types.UnitId.UnitId] -> GHC.Types.IO [Distribution.Types.InstalledPackageInfo.InstalledPackageInfo]
  getInstalledPackagesMonitorFiles :: forall from. Distribution.Verbosity.Verbosity -> Distribution.Simple.Compiler.Compiler -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir from)) -> Distribution.Simple.Compiler.PackageDBStackS from -> Distribution.Simple.Program.Db.ProgramDb -> Distribution.System.Platform -> GHC.Types.IO [GHC.Internal.IO.FilePath]
  getInternalLibraries :: Distribution.Types.GenericPackageDescription.GenericPackageDescription -> Data.Set.Internal.Set Distribution.Types.LibraryName.LibraryName
  getPackageDBContents :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Compiler.Compiler -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Simple.Compiler.PackageDB -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Types.IO Distribution.Simple.PackageIndex.InstalledPackageIndex
  getPersistBuildConfig :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist) -> GHC.Types.IO Distribution.Types.LocalBuildInfo.LocalBuildInfo
  interpretPackageDbFlags :: forall fp. GHC.Types.Bool -> [GHC.Internal.Maybe.Maybe (Distribution.Simple.Compiler.PackageDBX fp)] -> Distribution.Simple.Compiler.PackageDBStackX fp
  localBuildInfoFile :: Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist) -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File
  maybeGetPersistBuildConfig :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist) -> GHC.Types.IO (GHC.Internal.Maybe.Maybe Distribution.Types.LocalBuildInfo.LocalBuildInfo)
  platformDefines :: Distribution.Types.LocalBuildInfo.LocalBuildInfo -> [GHC.Internal.Base.String]
  tryGetConfigStateFile :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File -> GHC.Types.IO (GHC.Internal.Data.Either.Either ConfigStateFileError Distribution.Types.LocalBuildInfo.LocalBuildInfo)
  tryGetPersistBuildConfig :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist) -> GHC.Types.IO (GHC.Internal.Data.Either.Either ConfigStateFileError Distribution.Types.LocalBuildInfo.LocalBuildInfo)
  writePersistBuildConfig :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist) -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO ()

module Distribution.Simple.Errors where
  type CabalException :: *
  data CabalException
    = NoBenchMarkProgram GHC.Internal.IO.FilePath
    | EnableBenchMark
    | BenchMarkNameDisabled GHC.Internal.Base.String
    | NoBenchMark GHC.Internal.Base.String
    | NoLibraryFound
    | CompilerNotInstalled Distribution.Compiler.CompilerFlavor
    | CantFindIncludeFile GHC.Internal.Base.String
    | UnsupportedTestSuite GHC.Internal.Base.String
    | UnsupportedBenchMark GHC.Internal.Base.String
    | NoIncludeFileFound GHC.Internal.Base.String
    | NoModuleFound Distribution.ModuleName.ModuleName [Distribution.Simple.PreProcess.Types.Suffix]
    | RegMultipleInstancePkg
    | SuppressingChecksOnFile
    | NoSupportDirStylePackageDb
    | OnlySupportSpecificPackageDb
    | FailedToParseOutputDescribe GHC.Internal.Base.String Distribution.Types.PackageId.PackageId
    | DumpFailed GHC.Internal.Base.String GHC.Internal.Base.String
    | FailedToParseOutputDump GHC.Internal.Base.String
    | ListFailed GHC.Internal.Base.String
    | FailedToParseOutputList GHC.Internal.Base.String
    | ProgramNotFound GHC.Internal.Base.String
    | NoSupportForHoogle
    | NoSupportForQuickJumpFlag
    | NoGHCVersionFromHaddock
    | NoGHCVersionFromCompiler
    | HaddockAndGHCVersionDoesntMatch Distribution.Types.Version.Version Distribution.Types.Version.Version
    | MustHaveSharedLibraries
    | HaddockPackageFlags [(Distribution.Types.InstalledPackageInfo.InstalledPackageInfo, [Distribution.Types.UnitId.UnitId])]
    | UnknownCompilerFlavor Distribution.Compiler.CompilerFlavor
    | FailedToDetermineTarget
    | NoMultipleTargets
    | REPLNotSupported
    | NoSupportBuildingTestSuite Distribution.Types.TestType.TestType
    | NoSupportBuildingBenchMark Distribution.Types.BenchmarkType.BenchmarkType
    | BuildingNotSupportedWithCompiler
    | ProvideHaskellSuiteTool GHC.Internal.Base.String
    | CannotDetermineCompilerVersion
    | PkgDumpFailed
    | FailedToParseOutput
    | CantFindSourceModule Distribution.ModuleName.ModuleName
    | VersionMismatchJS GHC.Internal.IO.FilePath Distribution.Types.Version.Version GHC.Internal.IO.FilePath Distribution.Types.Version.Version
    | VersionMismatchGHCJS GHC.Internal.IO.FilePath Distribution.Types.Version.Version GHC.Internal.IO.FilePath Distribution.Types.Version.Version
    | GlobalPackageDBLimitation
    | GlobalPackageDBSpecifiedFirst
    | MatchDirFileGlob GHC.Internal.Base.String
    | MatchDirFileGlobErrors [GHC.Internal.Base.String]
    | ErrorParsingFileDoesntExist GHC.Internal.IO.FilePath
    | FailedParsing GHC.Internal.Base.String
    | NotFoundMsg
    | UnrecognisedBuildTarget [GHC.Internal.Base.String]
    | ReportBuildTargetProblems [(GHC.Internal.Base.String, [GHC.Internal.Base.String], GHC.Internal.Base.String)]
    | UnknownBuildTarget [(GHC.Internal.Base.String, [(GHC.Internal.Base.String, GHC.Internal.Base.String)])]
    | AmbiguousBuildTarget [(GHC.Internal.Base.String, [(GHC.Internal.Base.String, GHC.Internal.Base.String)])]
    | CheckBuildTargets GHC.Internal.Base.String
    | VersionMismatchGHC GHC.Internal.IO.FilePath Distribution.Types.Version.Version GHC.Internal.IO.FilePath Distribution.Types.Version.Version
    | CheckPackageDbStackPost76
    | CheckPackageDbStackPre76
    | GlobalPackageDbSpecifiedFirst
    | CantInstallForeignLib
    | NoSupportForPreProcessingTest Distribution.Types.TestType.TestType
    | NoSupportForPreProcessingBenchmark Distribution.Types.BenchmarkType.BenchmarkType
    | CantFindSourceForPreProcessFile GHC.Internal.Base.String
    | NoSupportPreProcessingTestExtras Distribution.Types.TestType.TestType
    | NoSupportPreProcessingBenchmarkExtras Distribution.Types.BenchmarkType.BenchmarkType
    | UnlitException GHC.Internal.Base.String
    | RunProgramInvocationException GHC.Internal.IO.FilePath GHC.Internal.Base.String
    | GetProgramInvocationException GHC.Internal.IO.FilePath GHC.Internal.Base.String
    | GetProgramInvocationLBSException GHC.Internal.IO.FilePath GHC.Internal.Base.String
    | CheckSemaphoreSupport
    | NoLibraryForPackage
    | SanityCheckHookedBuildInfo Distribution.Types.UnqualComponentName.UnqualComponentName
    | ConfigureScriptNotFound GHC.Internal.IO.FilePath
    | NoValidComponent
    | ConfigureEitherSingleOrAll
    | ConfigCIDValidForPreComponent
    | SanityCheckForEnableComponents
    | SanityCheckForDynamicStaticLinking
    | UnsupportedLanguages Distribution.Types.PackageId.PackageIdentifier Distribution.Compiler.CompilerId [GHC.Internal.Base.String]
    | UnsupportedLanguageExtension Distribution.Types.PackageId.PackageIdentifier Distribution.Compiler.CompilerId [GHC.Internal.Base.String]
    | CantFindForeignLibraries [GHC.Internal.Base.String]
    | ExpectedAbsoluteDirectory GHC.Internal.IO.FilePath
    | FlagsNotSpecified [Distribution.Types.Flag.FlagName]
    | EncounteredMissingDependency [Distribution.Types.MissingDependency.MissingDependency]
    | CompilerDoesn'tSupportThinning
    | CompilerDoesn'tSupportReexports
    | CompilerDoesn'tSupportBackpack
    | LibraryWithinSamePackage [Distribution.Types.PackageId.PackageId]
    | ReportFailedDependencies [FailedDependency] GHC.Internal.Base.String
    | NoPackageDatabaseSpecified
    | HowToFindInstalledPackages Distribution.Compiler.CompilerFlavor
    | PkgConfigNotFound GHC.Internal.Base.String GHC.Internal.Base.String
    | BadVersion GHC.Internal.Base.String GHC.Internal.Base.String Distribution.Types.PkgconfigVersion.PkgconfigVersion
    | UnknownCompilerException
    | NoWorkingGcc
    | NoOSSupport Distribution.System.OS GHC.Internal.Base.String
    | NoCompilerSupport GHC.Internal.Base.String
    | InstallDirsNotPrefixRelative (Distribution.Simple.InstallDirs.InstallDirs GHC.Internal.IO.FilePath)
    | ExplainErrors (GHC.Internal.Maybe.Maybe (GHC.Internal.Data.Either.Either [GHC.Types.Char] [GHC.Types.Char])) [GHC.Internal.Base.String]
    | CheckPackageProblems [GHC.Internal.Base.String]
    | LibDirDepsPrefixNotRelative GHC.Internal.IO.FilePath GHC.Internal.IO.FilePath
    | CombinedConstraints Text.PrettyPrint.HughesPJ.Doc
    | CantParseGHCOutput
    | IncompatibleWithCabal GHC.Internal.Base.String GHC.Internal.Base.String
    | Couldn'tFindTestProgram GHC.Internal.IO.FilePath
    | TestCoverageSupport
    | Couldn'tFindTestProgLibV09 GHC.Internal.IO.FilePath
    | TestCoverageSupportLibV09
    | RawSystemStdout GHC.Internal.Base.String
    | FindFile GHC.Internal.IO.FilePath
    | FindModuleFileEx Distribution.ModuleName.ModuleName [Distribution.Simple.PreProcess.Types.Suffix] [GHC.Internal.IO.FilePath]
    | MultipleFilesWithExtension GHC.Internal.Base.String
    | NoDesc
    | MultiDesc [GHC.Internal.Base.String]
    | RelocRegistrationInfo
    | CreatePackageDB
    | WithHcPkg GHC.Internal.Base.String
    | RegisMultiplePkgNotSupported
    | RegisteringNotImplemented
    | NoTestSuitesEnabled
    | TestNameDisabled GHC.Internal.Base.String
    | NoSuchTest GHC.Internal.Base.String
    | ConfigureProgram GHC.Internal.Base.String GHC.Internal.IO.FilePath
    | RequireProgram GHC.Internal.Base.String
    | NoProgramFound GHC.Internal.Base.String Distribution.Types.VersionRange.Internal.VersionRange
    | BadVersionDb GHC.Internal.Base.String Distribution.Types.Version.Version Distribution.Types.VersionRange.Internal.VersionRange GHC.Internal.IO.FilePath
    | UnknownVersionDb GHC.Internal.Base.String Distribution.Types.VersionRange.Internal.VersionRange GHC.Internal.IO.FilePath
    | MissingCoveredInstalledLibrary Distribution.Types.UnitId.UnitId
    | SetupHooksException Distribution.Simple.SetupHooks.Errors.SetupHooksException
  type FailedDependency :: *
  data FailedDependency = DependencyNotExists Distribution.Types.PackageName.PackageName | DependencyMissingInternal Distribution.Types.PackageName.PackageName Distribution.Types.LibraryName.LibraryName | DependencyNoVersion Distribution.Types.Dependency.Dependency
  exceptionCode :: CabalException -> GHC.Types.Int
  exceptionMessage :: CabalException -> GHC.Internal.Base.String

module Distribution.Simple.FileMonitor.Types where
  type FilePathRoot :: *
  data FilePathRoot = FilePathRelative | FilePathRoot GHC.Internal.IO.FilePath | FilePathHomeDir
  type Glob :: *
  data Glob = ...
  type MonitorFilePath :: *
  data MonitorFilePath = MonitorFile {monitorKindFile :: !MonitorKindFile, monitorKindDir :: !MonitorKindDir, monitorPath :: !GHC.Internal.IO.FilePath} | MonitorFileGlob {monitorKindFile :: !MonitorKindFile, monitorKindDir :: !MonitorKindDir, monitorPathGlob :: !RootedGlob}
  type MonitorKindDir :: *
  data MonitorKindDir = DirExists | DirModTime | DirNotExists
  type MonitorKindFile :: *
  data MonitorKindFile = FileExists | FileModTime | FileHashed | FileNotExists
  type RootedGlob :: *
  data RootedGlob = RootedGlob FilePathRoot Glob
  monitorDirectory :: GHC.Internal.IO.FilePath -> MonitorFilePath
  monitorDirectoryExistence :: GHC.Internal.IO.FilePath -> MonitorFilePath
  monitorFile :: GHC.Internal.IO.FilePath -> MonitorFilePath
  monitorFileExistence :: GHC.Internal.IO.FilePath -> MonitorFilePath
  monitorFileGlob :: RootedGlob -> MonitorFilePath
  monitorFileGlobExistence :: RootedGlob -> MonitorFilePath
  monitorFileHashed :: GHC.Internal.IO.FilePath -> MonitorFilePath
  monitorFileHashedSearchPath :: [GHC.Internal.IO.FilePath] -> GHC.Internal.IO.FilePath -> [MonitorFilePath]
  monitorFileOrDirectory :: GHC.Internal.IO.FilePath -> MonitorFilePath
  monitorFileSearchPath :: [GHC.Internal.IO.FilePath] -> GHC.Internal.IO.FilePath -> [MonitorFilePath]
  monitorNonExistentDirectory :: GHC.Internal.IO.FilePath -> MonitorFilePath
  monitorNonExistentFile :: GHC.Internal.IO.FilePath -> MonitorFilePath

module Distribution.Simple.Flag where
  type BooleanFlag :: * -> Constraint
  class BooleanFlag a where
    asBool :: a -> GHC.Types.Bool
    {-# MINIMAL asBool #-}
  type Flag :: * -> *
  data Flag a = Flag a | NoFlag
  allFlags :: [Flag GHC.Types.Bool] -> Flag GHC.Types.Bool
  flagElim :: forall b a. b -> (a -> b) -> Flag a -> b
  flagToList :: forall a. Flag a -> [a]
  flagToMaybe :: forall a. Flag a -> GHC.Internal.Maybe.Maybe a
  fromFlag :: forall a. Distribution.Compat.Stack.WithCallStack (Flag a -> a)
  fromFlagOrDefault :: forall a. a -> Flag a -> a
  maybeToFlag :: forall a. GHC.Internal.Maybe.Maybe a -> Flag a
  mergeListFlag :: forall a. Flag [a] -> Flag [a] -> Flag [a]
  toFlag :: forall a. a -> Flag a

module Distribution.Simple.GHC where
  type GhcEnvironmentFileEntry :: * -> *
  data GhcEnvironmentFileEntry fp = GhcEnvFileComment GHC.Internal.Base.String | GhcEnvFilePackageId Distribution.Types.UnitId.UnitId | GhcEnvFilePackageDb (Distribution.Simple.Compiler.PackageDBX fp) | GhcEnvFileClearPackageDbStack
  type GhcImplInfo :: *
  data GhcImplInfo = GhcImplInfo {supportsHaskell2010 :: GHC.Types.Bool, supportsGHC2021 :: GHC.Types.Bool, supportsGHC2024 :: GHC.Types.Bool, reportsNoExt :: GHC.Types.Bool, alwaysNondecIndent :: GHC.Types.Bool, flagGhciScript :: GHC.Types.Bool, flagProfAuto :: GHC.Types.Bool, flagProfLate :: GHC.Types.Bool, flagPackageConf :: GHC.Types.Bool, flagDebugInfo :: GHC.Types.Bool, flagHie :: GHC.Types.Bool, supportsDebugLevels :: GHC.Types.Bool, supportsPkgEnvFiles :: GHC.Types.Bool, flagWarnMissingHomeModules :: GHC.Types.Bool, unitIdForExes :: GHC.Types.Bool}
  type ParseErrorExc :: *
  newtype ParseErrorExc = ParseErrorExc Text.Parsec.Error.ParseError
  buildExe :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Flag.Flag Distribution.Types.ParStrat.ParStrat -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.Executable.Executable -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO ()
  buildFLib :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Flag.Flag Distribution.Types.ParStrat.ParStrat -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ForeignLib.ForeignLib -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO ()
  buildLib :: Cabal-3.15.0.0:Distribution.Simple.Setup.Build.BuildFlags -> Distribution.Simple.Flag.Flag Distribution.Types.ParStrat.ParStrat -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.Library.Library -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO ()
  compilerBuildWay :: Distribution.Simple.Compiler.Compiler -> Distribution.Simple.BuildWay.BuildWay
  componentCcGhcOptions :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.BuildInfo.BuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Artifacts) -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File -> Distribution.Simple.Program.GHC.GhcOptions
  componentGhcOptions :: forall build. Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.BuildInfo.BuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir build) -> Distribution.Simple.Program.GHC.GhcOptions
  configure :: Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Types.IO (Distribution.Simple.Compiler.Compiler, GHC.Internal.Maybe.Maybe Distribution.System.Platform, Distribution.Simple.Program.Db.ProgramDb)
  getGhcAppDir :: GHC.Types.IO GHC.Internal.IO.FilePath
  getGhcInfo :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Types.ConfiguredProgram -> GHC.Types.IO [(GHC.Internal.Base.String, GHC.Internal.Base.String)]
  getGlobalPackageDB :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Types.ConfiguredProgram -> GHC.Types.IO GHC.Internal.IO.FilePath
  getImplInfo :: Distribution.Simple.Compiler.Compiler -> GhcImplInfo
  getInstalledPackages :: forall from. Distribution.Verbosity.Verbosity -> Distribution.Simple.Compiler.Compiler -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir from)) -> Distribution.Simple.Compiler.PackageDBStackX (Distribution.Utils.Path.SymbolicPath from (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB)) -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Types.IO Distribution.Simple.PackageIndex.InstalledPackageIndex
  getInstalledPackagesMonitorFiles :: forall from. Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir from)) -> Distribution.System.Platform -> Distribution.Simple.Program.Db.ProgramDb -> [Distribution.Simple.Compiler.PackageDBS from] -> GHC.Types.IO [GHC.Internal.IO.FilePath]
  getLibDir :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO GHC.Internal.IO.FilePath
  getPackageDBContents :: forall from. Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir from)) -> Distribution.Simple.Compiler.PackageDBX (Distribution.Utils.Path.SymbolicPath from (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB)) -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Types.IO Distribution.Simple.PackageIndex.InstalledPackageIndex
  ghcPlatformAndVersionString :: Distribution.System.Platform -> Distribution.Types.Version.Version -> GHC.Internal.Base.String
  hcPkgInfo :: Distribution.Simple.Program.Db.ProgramDb -> Distribution.Simple.Program.HcPkg.HcPkgInfo
  installExe :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> (GHC.Internal.IO.FilePath, GHC.Internal.IO.FilePath) -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.Executable.Executable -> GHC.Types.IO ()
  installFLib :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.ForeignLib.ForeignLib -> GHC.Types.IO ()
  installLib :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.Library.Library -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO ()
  libAbiHash :: Distribution.Verbosity.Verbosity -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.Library.Library -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO GHC.Internal.Base.String
  parseGhcEnvironmentFile :: Text.Parsec.String.Parser [GhcEnvironmentFileEntry GHC.Internal.IO.FilePath]
  pkgRoot :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Simple.Compiler.PackageDB -> GHC.Types.IO (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg))
  readGhcEnvironmentFile :: GHC.Internal.IO.FilePath -> GHC.Types.IO [GhcEnvironmentFileEntry GHC.Internal.IO.FilePath]
  registerPackage :: forall from. Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir from)) -> Distribution.Simple.Compiler.PackageDBStackS from -> Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -> Distribution.Simple.Program.HcPkg.RegisterOptions -> GHC.Types.IO ()
  renderGhcEnvironmentFile :: [GhcEnvironmentFileEntry GHC.Internal.IO.FilePath] -> GHC.Internal.Base.String
  replExe :: Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplFlags -> Distribution.Simple.Flag.Flag Distribution.Types.ParStrat.ParStrat -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.Executable.Executable -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO ()
  replFLib :: Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplFlags -> Distribution.Simple.Flag.Flag Distribution.Types.ParStrat.ParStrat -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ForeignLib.ForeignLib -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO ()
  replLib :: Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplFlags -> Distribution.Simple.Flag.Flag Distribution.Types.ParStrat.ParStrat -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.Library.Library -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO ()
  simpleGhcEnvironmentFile :: forall fp. Distribution.Simple.Compiler.PackageDBStackX fp -> [Distribution.Types.UnitId.UnitId] -> [GhcEnvironmentFileEntry fp]
  startInterpreter :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Db.ProgramDb -> Distribution.Simple.Compiler.Compiler -> Distribution.System.Platform -> Distribution.Simple.Compiler.PackageDBStack -> GHC.Types.IO ()
  writeGhcEnvironmentFile :: GHC.Internal.IO.FilePath -> Distribution.System.Platform -> Distribution.Types.Version.Version -> [GhcEnvironmentFileEntry GHC.Internal.IO.FilePath] -> GHC.Types.IO GHC.Internal.IO.FilePath

module Distribution.Simple.GHCJS where
  type GhcEnvironmentFileEntry :: * -> *
  data GhcEnvironmentFileEntry fp = GhcEnvFileComment GHC.Internal.Base.String | GhcEnvFilePackageId Distribution.Types.UnitId.UnitId | GhcEnvFilePackageDb (Distribution.Simple.Compiler.PackageDBX fp) | GhcEnvFileClearPackageDbStack
  type GhcImplInfo :: *
  data GhcImplInfo = GhcImplInfo {supportsHaskell2010 :: GHC.Types.Bool, supportsGHC2021 :: GHC.Types.Bool, supportsGHC2024 :: GHC.Types.Bool, reportsNoExt :: GHC.Types.Bool, alwaysNondecIndent :: GHC.Types.Bool, flagGhciScript :: GHC.Types.Bool, flagProfAuto :: GHC.Types.Bool, flagProfLate :: GHC.Types.Bool, flagPackageConf :: GHC.Types.Bool, flagDebugInfo :: GHC.Types.Bool, flagHie :: GHC.Types.Bool, supportsDebugLevels :: GHC.Types.Bool, supportsPkgEnvFiles :: GHC.Types.Bool, flagWarnMissingHomeModules :: GHC.Types.Bool, unitIdForExes :: GHC.Types.Bool}
  type ParseErrorExc :: *
  newtype ParseErrorExc = ParseErrorExc Text.Parsec.Error.ParseError
  buildExe :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Flag.Flag Distribution.Types.ParStrat.ParStrat -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.Executable.Executable -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO ()
  buildFLib :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Flag.Flag Distribution.Types.ParStrat.ParStrat -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ForeignLib.ForeignLib -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO ()
  buildLib :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Flag.Flag Distribution.Types.ParStrat.ParStrat -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.Library.Library -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO ()
  componentCcGhcOptions :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.BuildInfo.BuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Artifacts) -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File -> Distribution.Simple.Program.GHC.GhcOptions
  componentGhcOptions :: forall build. Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.BuildInfo.BuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir build) -> Distribution.Simple.Program.GHC.GhcOptions
  configure :: Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Types.IO (Distribution.Simple.Compiler.Compiler, GHC.Internal.Maybe.Maybe Distribution.System.Platform, Distribution.Simple.Program.Db.ProgramDb)
  getGhcInfo :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Types.ConfiguredProgram -> GHC.Types.IO [(GHC.Internal.Base.String, GHC.Internal.Base.String)]
  getGlobalPackageDB :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Types.ConfiguredProgram -> GHC.Types.IO GHC.Internal.IO.FilePath
  getImplInfo :: Distribution.Simple.Compiler.Compiler -> GhcImplInfo
  getInstalledPackages :: forall from. Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir from)) -> Distribution.Simple.Compiler.PackageDBStackX (Distribution.Utils.Path.SymbolicPath from (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB)) -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Types.IO Distribution.Simple.PackageIndex.InstalledPackageIndex
  getInstalledPackagesMonitorFiles :: Distribution.Verbosity.Verbosity -> Distribution.System.Platform -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Simple.Program.Db.ProgramDb -> [Distribution.Simple.Compiler.PackageDB] -> GHC.Types.IO [GHC.Internal.IO.FilePath]
  getLibDir :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO GHC.Internal.IO.FilePath
  getPackageDBContents :: forall from. Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir from)) -> Distribution.Simple.Compiler.PackageDBX (Distribution.Utils.Path.SymbolicPath from (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB)) -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Types.IO Distribution.Simple.PackageIndex.InstalledPackageIndex
  ghcPlatformAndVersionString :: Distribution.System.Platform -> Distribution.Types.Version.Version -> GHC.Internal.Base.String
  hcPkgInfo :: Distribution.Simple.Program.Db.ProgramDb -> Distribution.Simple.Program.HcPkg.HcPkgInfo
  installExe :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> (GHC.Internal.IO.FilePath, GHC.Internal.IO.FilePath) -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.Executable.Executable -> GHC.Types.IO ()
  installFLib :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.ForeignLib.ForeignLib -> GHC.Types.IO ()
  installLib :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.Library.Library -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO ()
  isDynamic :: Distribution.Simple.Compiler.Compiler -> GHC.Types.Bool
  libAbiHash :: Distribution.Verbosity.Verbosity -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.Library.Library -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO GHC.Internal.Base.String
  parseGhcEnvironmentFile :: Text.Parsec.String.Parser [GhcEnvironmentFileEntry GHC.Internal.IO.FilePath]
  pkgRoot :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Simple.Compiler.PackageDB -> GHC.Types.IO GHC.Internal.IO.FilePath
  readGhcEnvironmentFile :: GHC.Internal.IO.FilePath -> GHC.Types.IO [GhcEnvironmentFileEntry GHC.Internal.IO.FilePath]
  registerPackage :: forall from. Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir from)) -> Distribution.Simple.Compiler.PackageDBStackS from -> Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -> Distribution.Simple.Program.HcPkg.RegisterOptions -> GHC.Types.IO ()
  renderGhcEnvironmentFile :: [GhcEnvironmentFileEntry GHC.Internal.IO.FilePath] -> GHC.Internal.Base.String
  replExe :: [GHC.Internal.Base.String] -> Distribution.Verbosity.Verbosity -> Distribution.Simple.Flag.Flag Distribution.Types.ParStrat.ParStrat -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.Executable.Executable -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO ()
  replFLib :: [GHC.Internal.Base.String] -> Distribution.Verbosity.Verbosity -> Distribution.Simple.Flag.Flag Distribution.Types.ParStrat.ParStrat -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ForeignLib.ForeignLib -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO ()
  replLib :: [GHC.Internal.Base.String] -> Distribution.Verbosity.Verbosity -> Distribution.Simple.Flag.Flag Distribution.Types.ParStrat.ParStrat -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.Library.Library -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO ()
  runCmd :: Distribution.Simple.Program.Db.ProgramDb -> GHC.Internal.IO.FilePath -> (GHC.Internal.IO.FilePath, GHC.Internal.IO.FilePath, [GHC.Internal.Base.String])
  simpleGhcEnvironmentFile :: forall fp. Distribution.Simple.Compiler.PackageDBStackX fp -> [Distribution.Types.UnitId.UnitId] -> [GhcEnvironmentFileEntry fp]
  startInterpreter :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Db.ProgramDb -> Distribution.Simple.Compiler.Compiler -> Distribution.System.Platform -> Distribution.Simple.Compiler.PackageDBStack -> GHC.Types.IO ()
  writeGhcEnvironmentFile :: GHC.Internal.IO.FilePath -> Distribution.System.Platform -> Distribution.Types.Version.Version -> [GhcEnvironmentFileEntry GHC.Internal.IO.FilePath] -> GHC.Types.IO GHC.Internal.IO.FilePath

module Distribution.Simple.Glob where
  type Glob :: *
  data Glob = ...
  type GlobResult :: * -> *
  data GlobResult a = GlobMatch a | GlobWarnMultiDot a | GlobMissingDirectory a | GlobMatchesDirectory a
  type GlobSyntaxError :: *
  data GlobSyntaxError = StarInDirectory | StarInFileName | StarInExtension | NoExtensionOnStar | EmptyGlob | LiteralFileNameGlobStar | VersionDoesNotSupportGlobStar | VersionDoesNotSupportGlob
  explainGlobSyntaxError :: GHC.Internal.IO.FilePath -> GlobSyntaxError -> GHC.Internal.Base.String
  fileGlobMatches :: Distribution.CabalSpecVersion.CabalSpecVersion -> Glob -> GHC.Internal.IO.FilePath -> GHC.Internal.Maybe.Maybe (GlobResult ())
  globMatches :: forall a. [GlobResult a] -> [a]
  isRecursiveInRoot :: Glob -> GHC.Types.Bool
  matchDirFileGlob :: forall dir (allowAbs :: Distribution.Utils.Path.AllowAbsolute) (file :: Distribution.Utils.Path.FileOrDir). Distribution.Verbosity.Verbosity -> Distribution.CabalSpecVersion.CabalSpecVersion -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir dir)) -> Distribution.Utils.Path.SymbolicPathX allowAbs dir file -> GHC.Types.IO [Distribution.Utils.Path.SymbolicPathX allowAbs dir file]
  matchDirFileGlobWithDie :: forall dir (allowAbs :: Distribution.Utils.Path.AllowAbsolute) (file :: Distribution.Utils.Path.FileOrDir). Distribution.Verbosity.Verbosity -> (forall res. Distribution.Verbosity.Verbosity -> Distribution.Simple.Errors.CabalException -> GHC.Types.IO [res]) -> Distribution.CabalSpecVersion.CabalSpecVersion -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir dir)) -> Distribution.Utils.Path.SymbolicPathX allowAbs dir file -> GHC.Types.IO [Distribution.Utils.Path.SymbolicPathX allowAbs dir file]
  matchGlob :: GHC.Internal.IO.FilePath -> Glob -> GHC.Types.IO [GHC.Internal.IO.FilePath]
  matchGlobPieces :: Distribution.Simple.Glob.Internal.GlobPieces -> GHC.Internal.Base.String -> GHC.Types.Bool
  parseFileGlob :: Distribution.CabalSpecVersion.CabalSpecVersion -> GHC.Internal.IO.FilePath -> GHC.Internal.Data.Either.Either GlobSyntaxError Glob
  runDirFileGlob :: Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe Distribution.CabalSpecVersion.CabalSpecVersion -> GHC.Internal.IO.FilePath -> Glob -> GHC.Types.IO [GlobResult GHC.Internal.IO.FilePath]

module Distribution.Simple.Glob.Internal where
  type Glob :: *
  data Glob = GlobDir !GlobPieces !Glob | GlobDirRecursive !GlobPieces | GlobFile !GlobPieces | GlobDirTrailing
  type GlobPiece :: *
  data GlobPiece = WildCard | Literal GHC.Internal.Base.String | Union [GlobPieces]
  type GlobPieces :: *
  type GlobPieces = [GlobPiece]
  dispGlobPieces :: GlobPieces -> Text.PrettyPrint.HughesPJ.Doc
  isGlobEscapedChar :: GHC.Types.Char -> GHC.Types.Bool

module Distribution.Simple.Haddock where
  type Visibility :: *
  data Visibility = Visible | Hidden
  createHaddockIndex :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Db.ProgramDb -> Distribution.Simple.Compiler.Compiler -> Distribution.System.Platform -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockProjectFlags -> GHC.Types.IO ()
  haddock :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> [Distribution.Simple.PreProcess.PPSuffixHandler] -> Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockFlags -> GHC.Types.IO ()
  haddockPackagePaths :: [Distribution.Types.InstalledPackageInfo.InstalledPackageInfo] -> GHC.Internal.Maybe.Maybe (Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -> GHC.Internal.IO.FilePath) -> GHC.Types.IO ([(GHC.Internal.IO.FilePath, GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath, GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath, Visibility)], GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)
  haddock_setupHooks :: Distribution.Simple.SetupHooks.Internal.BuildHooks -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> [Distribution.Simple.PreProcess.PPSuffixHandler] -> Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockFlags -> GHC.Types.IO ()
  hscolour :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> [Distribution.Simple.PreProcess.PPSuffixHandler] -> Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour.HscolourFlags -> GHC.Types.IO ()
  hscolour_setupHooks :: Distribution.Simple.SetupHooks.Internal.BuildHooks -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> [Distribution.Simple.PreProcess.PPSuffixHandler] -> Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour.HscolourFlags -> GHC.Types.IO ()

module Distribution.Simple.HaskellSuite where
  buildLib :: Distribution.Verbosity.Verbosity -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.Library.Library -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO ()
  configure :: Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Types.IO (Distribution.Simple.Compiler.Compiler, GHC.Internal.Maybe.Maybe Distribution.System.Platform, Distribution.Simple.Program.Db.ProgramDb)
  getCompilerVersion :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Types.ConfiguredProgram -> GHC.Types.IO (GHC.Internal.Base.String, Distribution.Types.Version.Version)
  getExtensions :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Types.ConfiguredProgram -> GHC.Types.IO [(Language.Haskell.Extension.Extension, GHC.Internal.Maybe.Maybe Distribution.Simple.Compiler.CompilerFlag)]
  getInstalledPackages :: forall from. Distribution.Verbosity.Verbosity -> Distribution.Simple.Compiler.PackageDBStackX (Distribution.Utils.Path.SymbolicPath from (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB)) -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Types.IO Distribution.Simple.PackageIndex.InstalledPackageIndex
  getLanguages :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Types.ConfiguredProgram -> GHC.Types.IO [(Language.Haskell.Extension.Language, Distribution.Simple.Compiler.CompilerFlag)]
  hstoolVersion :: Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> GHC.Types.IO (GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version)
  initPackageDB :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Internal.IO.FilePath -> GHC.Types.IO ()
  installLib :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.Library.Library -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO ()
  numericVersion :: Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> GHC.Types.IO (GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version)
  packageDbOpt :: forall from. Distribution.Simple.Compiler.PackageDBX (Distribution.Utils.Path.SymbolicPath from (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB)) -> GHC.Internal.Base.String
  registerPackage :: forall from. Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Db.ProgramDb -> Distribution.Simple.Compiler.PackageDBStackS from -> Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -> GHC.Types.IO ()

module Distribution.Simple.Hpc where
  type HPCMarkupInfo :: *
  data HPCMarkupInfo = HPCMarkupInfo {pathsToLibsArtifacts :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Artifacts)], libsModulesToInclude :: [Distribution.ModuleName.ModuleName]}
  type Way :: *
  data Way = Vanilla | Prof | Dyn | ProfDyn
  guessWay :: Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Way
  htmlDir :: Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist) -> Way -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Artifacts)
  markupPackage :: Distribution.Verbosity.Verbosity -> HPCMarkupInfo -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist) -> Distribution.Types.PackageDescription.PackageDescription -> [Distribution.Types.TestSuite.TestSuite] -> GHC.Types.IO ()
  mixDir :: Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist) -> Way -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Mix)
  tixDir :: Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist) -> Way -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Tix)
  tixFilePath :: Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist) -> Way -> GHC.Internal.IO.FilePath -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File

module Distribution.Simple.Install where
  install :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Cabal-3.15.0.0:Distribution.Simple.Setup.Copy.CopyFlags -> GHC.Types.IO ()
  installFileGlob :: Distribution.Verbosity.Verbosity -> Distribution.CabalSpecVersion.CabalSpecVersion -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> (GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.DataDir)), Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.DataDir)) -> Distribution.Utils.Path.RelativePath Distribution.Utils.Path.DataDir Distribution.Utils.Path.File -> GHC.Types.IO ()
  install_setupHooks :: Distribution.Simple.SetupHooks.Internal.InstallHooks -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Cabal-3.15.0.0:Distribution.Simple.Setup.Copy.CopyFlags -> GHC.Types.IO ()

module Distribution.Simple.InstallDirs where
  type CopyDest :: *
  data CopyDest = NoCopyDest | CopyTo GHC.Internal.IO.FilePath | CopyToDb GHC.Internal.IO.FilePath
  type InstallDirTemplates :: *
  type InstallDirTemplates = InstallDirs PathTemplate
  type InstallDirs :: * -> *
  data InstallDirs dir = InstallDirs {prefix :: dir, bindir :: dir, libdir :: dir, libsubdir :: dir, dynlibdir :: dir, flibdir :: dir, libexecdir :: dir, libexecsubdir :: dir, includedir :: dir, datadir :: dir, datasubdir :: dir, docdir :: dir, mandir :: dir, htmldir :: dir, haddockdir :: dir, sysconfdir :: dir}
  type PathTemplate :: *
  newtype PathTemplate = ...
  type PathTemplateEnv :: *
  type PathTemplateEnv = [(PathTemplateVariable, PathTemplate)]
  type PathTemplateVariable :: *
  data PathTemplateVariable = PrefixVar | BindirVar | LibdirVar | LibsubdirVar | DynlibdirVar | DatadirVar | DatasubdirVar | DocdirVar | HtmldirVar | PkgNameVar | PkgVerVar | PkgIdVar | LibNameVar | CompilerVar | OSVar | ArchVar | AbiVar | AbiTagVar | ExecutableNameVar | TestSuiteNameVar | TestSuiteResultVar | BenchmarkNameVar
  abiTemplateEnv :: Distribution.Compiler.CompilerInfo -> Distribution.System.Platform -> PathTemplateEnv
  absoluteInstallDirs :: Distribution.Types.PackageId.PackageIdentifier -> Distribution.Types.UnitId.UnitId -> Distribution.Compiler.CompilerInfo -> CopyDest -> Distribution.System.Platform -> InstallDirs PathTemplate -> InstallDirs GHC.Internal.IO.FilePath
  combineInstallDirs :: forall a b c. (a -> b -> c) -> InstallDirs a -> InstallDirs b -> InstallDirs c
  combinePathTemplate :: PathTemplate -> PathTemplate -> PathTemplate
  compilerTemplateEnv :: Distribution.Compiler.CompilerInfo -> PathTemplateEnv
  defaultInstallDirs :: Distribution.Compiler.CompilerFlavor -> GHC.Types.Bool -> GHC.Types.Bool -> GHC.Types.IO InstallDirTemplates
  defaultInstallDirs' :: GHC.Types.Bool -> Distribution.Compiler.CompilerFlavor -> GHC.Types.Bool -> GHC.Types.Bool -> GHC.Types.IO InstallDirTemplates
  fromPathTemplate :: PathTemplate -> GHC.Internal.IO.FilePath
  initialPathTemplateEnv :: Distribution.Types.PackageId.PackageIdentifier -> Distribution.Types.UnitId.UnitId -> Distribution.Compiler.CompilerInfo -> Distribution.System.Platform -> PathTemplateEnv
  installDirsTemplateEnv :: InstallDirs PathTemplate -> PathTemplateEnv
  packageTemplateEnv :: Distribution.Types.PackageId.PackageIdentifier -> Distribution.Types.UnitId.UnitId -> PathTemplateEnv
  platformTemplateEnv :: Distribution.System.Platform -> PathTemplateEnv
  prefixRelativeInstallDirs :: Distribution.Types.PackageId.PackageIdentifier -> Distribution.Types.UnitId.UnitId -> Distribution.Compiler.CompilerInfo -> Distribution.System.Platform -> InstallDirTemplates -> InstallDirs (GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath)
  substPathTemplate :: PathTemplateEnv -> PathTemplate -> PathTemplate
  substituteInstallDirTemplates :: PathTemplateEnv -> InstallDirTemplates -> InstallDirTemplates
  toPathTemplate :: GHC.Internal.IO.FilePath -> PathTemplate

module Distribution.Simple.InstallDirs.Internal where
  type PathComponent :: *
  data PathComponent = Ordinary GHC.Internal.IO.FilePath | Variable PathTemplateVariable
  type PathTemplateVariable :: *
  data PathTemplateVariable = PrefixVar | BindirVar | LibdirVar | LibsubdirVar | DynlibdirVar | DatadirVar | DatasubdirVar | DocdirVar | HtmldirVar | PkgNameVar | PkgVerVar | PkgIdVar | LibNameVar | CompilerVar | OSVar | ArchVar | AbiVar | AbiTagVar | ExecutableNameVar | TestSuiteNameVar | TestSuiteResultVar | BenchmarkNameVar

module Distribution.Simple.LocalBuildInfo where
  pattern CBenchName :: Distribution.Types.UnqualComponentName.UnqualComponentName -> ComponentName
  pattern CExeName :: Distribution.Types.UnqualComponentName.UnqualComponentName -> ComponentName
  pattern CFLibName :: Distribution.Types.UnqualComponentName.UnqualComponentName -> ComponentName
  pattern CTestName :: Distribution.Types.UnqualComponentName.UnqualComponentName -> ComponentName
  type Component :: *
  data Component = CLib Distribution.Types.Library.Library | CFLib Distribution.Types.ForeignLib.ForeignLib | CExe Distribution.Types.Executable.Executable | CTest Distribution.Types.TestSuite.TestSuite | CBench Distribution.Types.Benchmark.Benchmark
  type ComponentLocalBuildInfo :: *
  data ComponentLocalBuildInfo
    = LibComponentLocalBuildInfo {componentLocalName :: ComponentName,
                                  componentComponentId :: Distribution.Types.ComponentId.ComponentId,
                                  componentUnitId :: Distribution.Types.UnitId.UnitId,
                                  componentIsIndefinite_ :: GHC.Types.Bool,
                                  componentInstantiatedWith :: [(Distribution.ModuleName.ModuleName, Distribution.Backpack.OpenModule)],
                                  componentPackageDeps :: [(Distribution.Types.UnitId.UnitId, Distribution.Types.MungedPackageId.MungedPackageId)],
                                  componentIncludes :: [(Distribution.Backpack.OpenUnitId, Distribution.Types.ModuleRenaming.ModuleRenaming)],
                                  componentExeDeps :: [Distribution.Types.UnitId.UnitId],
                                  componentInternalDeps :: [Distribution.Types.UnitId.UnitId],
                                  componentCompatPackageKey :: GHC.Internal.Base.String,
                                  componentCompatPackageName :: Distribution.Types.MungedPackageName.MungedPackageName,
                                  componentExposedModules :: [Distribution.Types.ExposedModule.ExposedModule],
                                  componentIsPublic :: GHC.Types.Bool}
    | FLibComponentLocalBuildInfo {componentLocalName :: ComponentName, componentComponentId :: Distribution.Types.ComponentId.ComponentId, componentUnitId :: Distribution.Types.UnitId.UnitId, componentPackageDeps :: [(Distribution.Types.UnitId.UnitId, Distribution.Types.MungedPackageId.MungedPackageId)], componentIncludes :: [(Distribution.Backpack.OpenUnitId, Distribution.Types.ModuleRenaming.ModuleRenaming)], componentExeDeps :: [Distribution.Types.UnitId.UnitId], componentInternalDeps :: [Distribution.Types.UnitId.UnitId]}
    | ExeComponentLocalBuildInfo {componentLocalName :: ComponentName, componentComponentId :: Distribution.Types.ComponentId.ComponentId, componentUnitId :: Distribution.Types.UnitId.UnitId, componentPackageDeps :: [(Distribution.Types.UnitId.UnitId, Distribution.Types.MungedPackageId.MungedPackageId)], componentIncludes :: [(Distribution.Backpack.OpenUnitId, Distribution.Types.ModuleRenaming.ModuleRenaming)], componentExeDeps :: [Distribution.Types.UnitId.UnitId], componentInternalDeps :: [Distribution.Types.UnitId.UnitId]}
    | TestComponentLocalBuildInfo {componentLocalName :: ComponentName, componentComponentId :: Distribution.Types.ComponentId.ComponentId, componentUnitId :: Distribution.Types.UnitId.UnitId, componentPackageDeps :: [(Distribution.Types.UnitId.UnitId, Distribution.Types.MungedPackageId.MungedPackageId)], componentIncludes :: [(Distribution.Backpack.OpenUnitId, Distribution.Types.ModuleRenaming.ModuleRenaming)], componentExeDeps :: [Distribution.Types.UnitId.UnitId], componentInternalDeps :: [Distribution.Types.UnitId.UnitId]}
    | BenchComponentLocalBuildInfo {componentLocalName :: ComponentName, componentComponentId :: Distribution.Types.ComponentId.ComponentId, componentUnitId :: Distribution.Types.UnitId.UnitId, componentPackageDeps :: [(Distribution.Types.UnitId.UnitId, Distribution.Types.MungedPackageId.MungedPackageId)], componentIncludes :: [(Distribution.Backpack.OpenUnitId, Distribution.Types.ModuleRenaming.ModuleRenaming)], componentExeDeps :: [Distribution.Types.UnitId.UnitId], componentInternalDeps :: [Distribution.Types.UnitId.UnitId]}
  type ComponentName :: *
  data ComponentName = CLibName LibraryName | CNotLibName Distribution.Types.ComponentName.NotLibComponentName
  type CopyDest :: *
  data CopyDest = NoCopyDest | CopyTo GHC.Internal.IO.FilePath | CopyToDb GHC.Internal.IO.FilePath
  type InstallDirTemplates :: *
  type InstallDirTemplates = InstallDirs PathTemplate
  type InstallDirs :: * -> *
  data InstallDirs dir = InstallDirs {prefix :: dir, bindir :: dir, libdir :: dir, libsubdir :: dir, dynlibdir :: dir, flibdir :: dir, libexecdir :: dir, libexecsubdir :: dir, includedir :: dir, datadir :: dir, datasubdir :: dir, docdir :: dir, mandir :: dir, htmldir :: dir, haddockdir :: dir, sysconfdir :: dir}
  type LibraryName :: *
  data LibraryName = LMainLibName | LSubLibName Distribution.Types.UnqualComponentName.UnqualComponentName
  pattern LocalBuildInfo
    :: Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags
       -> Distribution.Types.Flag.FlagAssignment
       -> Distribution.Types.ComponentRequestedSpec.ComponentRequestedSpec
       -> [GHC.Internal.Base.String]
       -> InstallDirTemplates
       -> Distribution.Simple.Compiler.Compiler
       -> Distribution.System.Platform
       -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File)
       -> Distribution.Compat.Graph.Graph ComponentLocalBuildInfo
       -> Data.Map.Internal.Map ComponentName [ComponentLocalBuildInfo]
       -> Data.Map.Internal.Map (Distribution.Types.PackageName.PackageName, ComponentName) Distribution.Types.GivenComponent.PromisedComponent
       -> Distribution.Simple.PackageIndex.InstalledPackageIndex
       -> Distribution.Types.PackageDescription.PackageDescription
       -> Distribution.Simple.Program.Db.ProgramDb
       -> Distribution.Simple.Compiler.PackageDBStack
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> Distribution.Simple.Compiler.ProfDetailLevel
       -> Distribution.Simple.Compiler.ProfDetailLevel
       -> Distribution.Simple.Compiler.OptimisationLevel
       -> Distribution.Simple.Compiler.DebugInfoLevel
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> [Distribution.Types.UnitId.UnitId]
       -> GHC.Types.Bool
       -> LocalBuildInfo
  pattern LocalBuildInfo {configFlags, flagAssignment, componentEnabledSpec, extraConfigArgs, installDirTemplates, compiler, hostPlatform, pkgDescrFile, componentGraph, componentNameMap, promisedPkgs, installedPkgs, localPkgDescr, withPrograms, withPackageDB, withVanillaLib, withProfLib, withProfLibShared, withSharedLib, withStaticLib, withDynExe, withFullyStaticExe, withProfExe, withProfLibDetail, withProfExeDetail, withOptimization, withDebugInfo, withGHCiLib, splitSections, splitObjs, stripExes, stripLibs, exeCoverage, libCoverage, extraCoverageFor, relocatable}
  type LocalBuildInfo :: *
  data LocalBuildInfo = NewLocalBuildInfo {localBuildDescr :: Distribution.Types.LocalBuildConfig.LocalBuildDescr, localBuildConfig :: Distribution.Types.LocalBuildConfig.LocalBuildConfig}
  type PathTemplate :: *
  newtype PathTemplate = ...
  type PathTemplateEnv :: *
  type PathTemplateEnv = [(PathTemplateVariable, PathTemplate)]
  type PathTemplateVariable :: *
  data PathTemplateVariable = PrefixVar | BindirVar | LibdirVar | LibsubdirVar | DynlibdirVar | DatadirVar | DatasubdirVar | DocdirVar | HtmldirVar | PkgNameVar | PkgVerVar | PkgIdVar | LibNameVar | CompilerVar | OSVar | ArchVar | AbiVar | AbiTagVar | ExecutableNameVar | TestSuiteNameVar | TestSuiteResultVar | BenchmarkNameVar
  abiTemplateEnv :: Distribution.Compiler.CompilerInfo -> Distribution.System.Platform -> PathTemplateEnv
  absoluteComponentInstallDirs :: Distribution.Types.PackageDescription.PackageDescription -> LocalBuildInfo -> Distribution.Types.UnitId.UnitId -> CopyDest -> InstallDirs GHC.Internal.IO.FilePath
  absoluteInstallCommandDirs :: Distribution.Types.PackageDescription.PackageDescription -> LocalBuildInfo -> Distribution.Types.UnitId.UnitId -> CopyDest -> InstallDirs GHC.Internal.IO.FilePath
  absoluteInstallDirs :: Distribution.Types.PackageDescription.PackageDescription -> LocalBuildInfo -> CopyDest -> InstallDirs GHC.Internal.IO.FilePath
  absoluteWorkingDirLBI :: LocalBuildInfo -> GHC.Types.IO (Distribution.Utils.Path.AbsolutePath (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg))
  allComponentsInBuildOrder :: LocalBuildInfo -> [ComponentLocalBuildInfo]
  allLibModules :: Distribution.Types.Library.Library -> ComponentLocalBuildInfo -> [Distribution.ModuleName.ModuleName]
  buildDir :: LocalBuildInfo -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Build)
  buildWays :: LocalBuildInfo -> (GHC.Types.Bool -> [Distribution.Simple.BuildWay.BuildWay], GHC.Types.Bool -> Distribution.Simple.BuildWay.BuildWay, Distribution.Simple.BuildWay.BuildWay)
  combineInstallDirs :: forall a b c. (a -> b -> c) -> InstallDirs a -> InstallDirs b -> InstallDirs c
  combinePathTemplate :: PathTemplate -> PathTemplate -> PathTemplate
  compilerTemplateEnv :: Distribution.Compiler.CompilerInfo -> PathTemplateEnv
  componentBuildDir :: LocalBuildInfo -> ComponentLocalBuildInfo -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Build)
  componentBuildInfo :: Component -> Distribution.Types.BuildInfo.BuildInfo
  componentBuildable :: Component -> GHC.Types.Bool
  componentName :: Component -> ComponentName
  componentNameString :: ComponentName -> GHC.Internal.Maybe.Maybe Distribution.Types.UnqualComponentName.UnqualComponentName
  defaultInstallDirs :: Distribution.Compiler.CompilerFlavor -> GHC.Types.Bool -> GHC.Types.Bool -> GHC.Types.IO InstallDirTemplates
  defaultInstallDirs' :: GHC.Types.Bool -> Distribution.Compiler.CompilerFlavor -> GHC.Types.Bool -> GHC.Types.Bool -> GHC.Types.IO InstallDirTemplates
  defaultLibName :: LibraryName
  depLibraryPaths :: GHC.Types.Bool -> GHC.Types.Bool -> LocalBuildInfo -> ComponentLocalBuildInfo -> GHC.Types.IO [GHC.Internal.IO.FilePath]
  enabledBenchLBIs :: Distribution.Types.PackageDescription.PackageDescription -> LocalBuildInfo -> [(Distribution.Types.Benchmark.Benchmark, ComponentLocalBuildInfo)]
  enabledTestLBIs :: Distribution.Types.PackageDescription.PackageDescription -> LocalBuildInfo -> [(Distribution.Types.TestSuite.TestSuite, ComponentLocalBuildInfo)]
  foldComponent :: forall a. (Distribution.Types.Library.Library -> a) -> (Distribution.Types.ForeignLib.ForeignLib -> a) -> (Distribution.Types.Executable.Executable -> a) -> (Distribution.Types.TestSuite.TestSuite -> a) -> (Distribution.Types.Benchmark.Benchmark -> a) -> Component -> a
  fromPathTemplate :: PathTemplate -> GHC.Internal.IO.FilePath
  getComponent :: Distribution.Types.PackageDescription.PackageDescription -> ComponentName -> Component
  initialPathTemplateEnv :: Distribution.Types.PackageId.PackageIdentifier -> Distribution.Types.UnitId.UnitId -> Distribution.Compiler.CompilerInfo -> Distribution.System.Platform -> PathTemplateEnv
  installDirsTemplateEnv :: InstallDirs PathTemplate -> PathTemplateEnv
  interpretSymbolicPathLBI :: forall (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute) (to :: Distribution.Utils.Path.FileOrDir). LocalBuildInfo -> Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg to -> GHC.Internal.IO.FilePath
  localCompatPackageKey :: LocalBuildInfo -> GHC.Internal.Base.String
  localComponentId :: LocalBuildInfo -> Distribution.Types.ComponentId.ComponentId
  localUnitId :: LocalBuildInfo -> Distribution.Types.UnitId.UnitId
  lookupComponent :: Distribution.Types.PackageDescription.PackageDescription -> ComponentName -> GHC.Internal.Maybe.Maybe Component
  mbWorkDirLBI :: LocalBuildInfo -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg))
  packageRoot :: Cabal-3.15.0.0:Distribution.Simple.Setup.Common.CommonSetupFlags -> GHC.Internal.IO.FilePath
  packageTemplateEnv :: Distribution.Types.PackageId.PackageIdentifier -> Distribution.Types.UnitId.UnitId -> PathTemplateEnv
  pkgBuildableComponents :: Distribution.Types.PackageDescription.PackageDescription -> [Component]
  pkgComponents :: Distribution.Types.PackageDescription.PackageDescription -> [Component]
  platformTemplateEnv :: Distribution.System.Platform -> PathTemplateEnv
  prefixRelativeComponentInstallDirs :: Distribution.Types.PackageId.PackageId -> LocalBuildInfo -> Distribution.Types.UnitId.UnitId -> InstallDirs (GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath)
  prefixRelativeInstallDirs :: Distribution.Types.PackageId.PackageId -> LocalBuildInfo -> InstallDirs (GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath)
  progPrefix :: LocalBuildInfo -> PathTemplate
  progSuffix :: LocalBuildInfo -> PathTemplate
  showComponentName :: ComponentName -> GHC.Internal.Base.String
  substPathTemplate :: Distribution.Types.PackageId.PackageId -> LocalBuildInfo -> Distribution.Types.UnitId.UnitId -> PathTemplate -> GHC.Internal.IO.FilePath
  substituteInstallDirTemplates :: PathTemplateEnv -> InstallDirTemplates -> InstallDirTemplates
  toPathTemplate :: GHC.Internal.IO.FilePath -> PathTemplate
  withAllComponentsInBuildOrder :: Distribution.Types.PackageDescription.PackageDescription -> LocalBuildInfo -> (Component -> ComponentLocalBuildInfo -> GHC.Types.IO ()) -> GHC.Types.IO ()
  withBenchLBI :: Distribution.Types.PackageDescription.PackageDescription -> LocalBuildInfo -> (Distribution.Types.Benchmark.Benchmark -> ComponentLocalBuildInfo -> GHC.Types.IO ()) -> GHC.Types.IO ()
  withExeLBI :: Distribution.Types.PackageDescription.PackageDescription -> LocalBuildInfo -> (Distribution.Types.Executable.Executable -> ComponentLocalBuildInfo -> GHC.Types.IO ()) -> GHC.Types.IO ()
  withLibLBI :: Distribution.Types.PackageDescription.PackageDescription -> LocalBuildInfo -> (Distribution.Types.Library.Library -> ComponentLocalBuildInfo -> GHC.Types.IO ()) -> GHC.Types.IO ()
  withTestLBI :: Distribution.Types.PackageDescription.PackageDescription -> LocalBuildInfo -> (Distribution.Types.TestSuite.TestSuite -> ComponentLocalBuildInfo -> GHC.Types.IO ()) -> GHC.Types.IO ()

module Distribution.Simple.PackageDescription where
  parseString :: forall a. (bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> Distribution.Fields.ParseResult.ParseResult a) -> Distribution.Verbosity.Verbosity -> GHC.Internal.Base.String -> bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> GHC.Types.IO a
  readGenericPackageDescription :: GHC.Internal.Stack.Types.HasCallStack => Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File -> GHC.Types.IO Distribution.Types.GenericPackageDescription.GenericPackageDescription
  readHookedBuildInfo :: Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo

module Distribution.Simple.PackageIndex where
  type InstalledPackageIndex :: *
  type InstalledPackageIndex = PackageIndex Distribution.Types.InstalledPackageInfo.InstalledPackageInfo
  type PackageIndex :: * -> *
  data PackageIndex a = ...
  type SearchResult :: * -> *
  data SearchResult a = None | Unambiguous a | Ambiguous [a]
  allPackages :: forall a. PackageIndex a -> [a]
  allPackagesByName :: forall a. PackageIndex a -> [(Distribution.Types.PackageName.PackageName, [a])]
  allPackagesBySourcePackageId :: forall a. Distribution.Package.HasUnitId a => PackageIndex a -> [(Distribution.Types.PackageId.PackageId, [a])]
  allPackagesBySourcePackageIdAndLibName :: forall a. Distribution.Package.HasUnitId a => PackageIndex a -> [((Distribution.Types.PackageId.PackageId, Distribution.Types.LibraryName.LibraryName), [a])]
  brokenPackages :: forall a. Distribution.Package.PackageInstalled a => PackageIndex a -> [(a, [Distribution.Types.UnitId.UnitId])]
  deletePackageName :: Distribution.Types.PackageName.PackageName -> InstalledPackageIndex -> InstalledPackageIndex
  deleteSourcePackageId :: Distribution.Types.PackageId.PackageId -> InstalledPackageIndex -> InstalledPackageIndex
  deleteUnitId :: Distribution.Types.UnitId.UnitId -> InstalledPackageIndex -> InstalledPackageIndex
  dependencyClosure :: InstalledPackageIndex -> [Distribution.Types.UnitId.UnitId] -> GHC.Internal.Data.Either.Either InstalledPackageIndex [(Distribution.Types.InstalledPackageInfo.InstalledPackageInfo, [Distribution.Types.UnitId.UnitId])]
  dependencyCycles :: forall a. Distribution.Package.PackageInstalled a => PackageIndex a -> [[a]]
  dependencyGraph :: forall a. Distribution.Package.PackageInstalled a => PackageIndex a -> (Data.Graph.Graph, Data.Graph.Vertex -> a, Distribution.Types.UnitId.UnitId -> GHC.Internal.Maybe.Maybe Data.Graph.Vertex)
  dependencyInconsistencies :: InstalledPackageIndex -> [(Distribution.Simple.PackageIndex.DepUniqueKey, [(Distribution.Types.UnitId.UnitId, [Distribution.Types.InstalledPackageInfo.InstalledPackageInfo])])]
  eligibleDependencies :: [(Distribution.Types.Version.Version, [Distribution.Types.InstalledPackageInfo.InstalledPackageInfo])] -> [(Distribution.Types.Version.Version, [Distribution.Types.InstalledPackageInfo.InstalledPackageInfo])]
  fromList :: [Distribution.Types.InstalledPackageInfo.InstalledPackageInfo] -> InstalledPackageIndex
  insert :: Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -> InstalledPackageIndex -> InstalledPackageIndex
  lookupComponentId :: forall a. PackageIndex a -> Distribution.Types.ComponentId.ComponentId -> GHC.Internal.Maybe.Maybe a
  lookupDependency :: InstalledPackageIndex -> Distribution.Types.PackageName.PackageName -> Distribution.Types.VersionRange.Internal.VersionRange -> [(Distribution.Types.Version.Version, [Distribution.Types.InstalledPackageInfo.InstalledPackageInfo])]
  lookupInternalDependency :: InstalledPackageIndex -> Distribution.Types.PackageName.PackageName -> Distribution.Types.VersionRange.Internal.VersionRange -> Distribution.Types.LibraryName.LibraryName -> [(Distribution.Types.Version.Version, [Distribution.Types.InstalledPackageInfo.InstalledPackageInfo])]
  lookupInternalPackageName :: forall a. PackageIndex a -> Distribution.Types.PackageName.PackageName -> Distribution.Types.LibraryName.LibraryName -> [(Distribution.Types.Version.Version, [a])]
  lookupPackageId :: forall a. PackageIndex a -> Distribution.Types.PackageId.PackageId -> GHC.Internal.Maybe.Maybe a
  lookupPackageName :: forall a. PackageIndex a -> Distribution.Types.PackageName.PackageName -> [(Distribution.Types.Version.Version, [a])]
  lookupSourcePackageId :: forall a. PackageIndex a -> Distribution.Types.PackageId.PackageId -> [a]
  lookupUnitId :: forall a. PackageIndex a -> Distribution.Types.UnitId.UnitId -> GHC.Internal.Maybe.Maybe a
  matchingDependencies :: Distribution.Types.VersionRange.Internal.VersionRange -> [(Distribution.Types.Version.Version, [Distribution.Types.InstalledPackageInfo.InstalledPackageInfo])] -> [(Distribution.Types.Version.Version, [Distribution.Types.InstalledPackageInfo.InstalledPackageInfo])]
  merge :: InstalledPackageIndex -> InstalledPackageIndex -> InstalledPackageIndex
  moduleNameIndex :: InstalledPackageIndex -> Data.Map.Internal.Map Distribution.ModuleName.ModuleName [Distribution.Types.InstalledPackageInfo.InstalledPackageInfo]
  reverseDependencyClosure :: forall a. Distribution.Package.PackageInstalled a => PackageIndex a -> [Distribution.Types.UnitId.UnitId] -> [a]
  reverseTopologicalOrder :: forall a. Distribution.Package.PackageInstalled a => PackageIndex a -> [a]
  searchByName :: forall a. PackageIndex a -> GHC.Internal.Base.String -> SearchResult [a]
  searchByNameSubstring :: forall a. PackageIndex a -> GHC.Internal.Base.String -> [a]
  searchWithPredicate :: forall a. PackageIndex a -> (GHC.Internal.Base.String -> GHC.Types.Bool) -> [a]
  topologicalOrder :: forall a. Distribution.Package.PackageInstalled a => PackageIndex a -> [a]

module Distribution.Simple.PreProcess where
  type PPSuffixHandler :: *
  type PPSuffixHandler = (Suffix, Distribution.Types.BuildInfo.BuildInfo -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> PreProcessor)
  type PreProcessor :: *
  data PreProcessor = PreProcessor {platformIndependent :: GHC.Types.Bool, ppOrdering :: Distribution.Verbosity.Verbosity -> [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Source)] -> [Distribution.ModuleName.ModuleName] -> GHC.Types.IO [Distribution.ModuleName.ModuleName], runPreProcessor :: Distribution.Simple.PreProcess.Types.PreProcessCommand}
  type Suffix :: *
  newtype Suffix = Suffix GHC.Internal.Base.String
  builtinHaskellBootSuffixes :: [Suffix]
  builtinHaskellSuffixes :: [Suffix]
  knownSuffixHandlers :: [PPSuffixHandler]
  mkSimplePreProcessor :: (GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> Distribution.Verbosity.Verbosity -> GHC.Types.IO ()) -> (GHC.Internal.IO.FilePath, GHC.Internal.IO.FilePath) -> (GHC.Internal.IO.FilePath, GHC.Internal.IO.FilePath) -> Distribution.Verbosity.Verbosity -> GHC.Types.IO ()
  platformDefines :: Distribution.Types.LocalBuildInfo.LocalBuildInfo -> [GHC.Internal.Base.String]
  ppAlex :: Distribution.Types.BuildInfo.BuildInfo -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> PreProcessor
  ppC2hs :: Distribution.Types.BuildInfo.BuildInfo -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> PreProcessor
  ppCpp :: Distribution.Types.BuildInfo.BuildInfo -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> PreProcessor
  ppCpp' :: [GHC.Internal.Base.String] -> Distribution.Types.BuildInfo.BuildInfo -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> PreProcessor
  ppGreenCard :: Distribution.Types.BuildInfo.BuildInfo -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> PreProcessor
  ppHappy :: Distribution.Types.BuildInfo.BuildInfo -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> PreProcessor
  ppHsc2hs :: Distribution.Types.BuildInfo.BuildInfo -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> PreProcessor
  ppSuffixes :: [PPSuffixHandler] -> [Suffix]
  ppUnlit :: PreProcessor
  preprocessComponent :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.Component.Component -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.Bool -> Distribution.Verbosity.Verbosity -> [PPSuffixHandler] -> GHC.Types.IO ()
  preprocessExtras :: Distribution.Verbosity.Verbosity -> Distribution.Types.Component.Component -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
  preprocessFile :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Source)] -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Build) -> GHC.Types.Bool -> Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Source Distribution.Utils.Path.File -> Distribution.Verbosity.Verbosity -> [Suffix] -> [(Suffix, PreProcessor)] -> GHC.Types.Bool -> GHC.Types.IO ()
  runSimplePreProcessor :: PreProcessor -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> Distribution.Verbosity.Verbosity -> GHC.Types.IO ()
  unsorted :: forall path. Distribution.Verbosity.Verbosity -> [path] -> [Distribution.ModuleName.ModuleName] -> GHC.Types.IO [Distribution.ModuleName.ModuleName]

module Distribution.Simple.PreProcess.Types where
  type PreProcessCommand :: *
  type PreProcessCommand = (GHC.Internal.IO.FilePath, GHC.Internal.IO.FilePath) -> (GHC.Internal.IO.FilePath, GHC.Internal.IO.FilePath) -> Distribution.Verbosity.Verbosity -> GHC.Types.IO ()
  type PreProcessor :: *
  data PreProcessor = PreProcessor {platformIndependent :: GHC.Types.Bool, ppOrdering :: Distribution.Verbosity.Verbosity -> [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Source)] -> [Distribution.ModuleName.ModuleName] -> GHC.Types.IO [Distribution.ModuleName.ModuleName], runPreProcessor :: PreProcessCommand}
  type Suffix :: *
  newtype Suffix = Suffix GHC.Internal.Base.String
  builtinHaskellBootSuffixes :: [Suffix]
  builtinHaskellSuffixes :: [Suffix]

module Distribution.Simple.PreProcess.Unlit where
  plain :: GHC.Internal.Base.String -> GHC.Internal.Base.String -> GHC.Internal.Base.String
  unlit :: GHC.Internal.IO.FilePath -> GHC.Internal.Base.String -> GHC.Internal.Data.Either.Either GHC.Internal.Base.String Distribution.Simple.Errors.CabalException

module Distribution.Simple.Program where
  type ConfiguredProgram :: *
  data ConfiguredProgram = ConfiguredProgram {programId :: GHC.Internal.Base.String, programVersion :: GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version, programDefaultArgs :: [GHC.Internal.Base.String], programOverrideArgs :: [GHC.Internal.Base.String], programOverrideEnv :: [(GHC.Internal.Base.String, GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)], programProperties :: Data.Map.Internal.Map GHC.Internal.Base.String GHC.Internal.Base.String, programLocation :: ProgramLocation, programMonitorFiles :: [GHC.Internal.IO.FilePath]}
  type ProgArg :: *
  type ProgArg = GHC.Internal.Base.String
  type Program :: *
  data Program
    = Program {programName :: GHC.Internal.Base.String,
               programFindLocation :: Distribution.Verbosity.Verbosity -> ProgramSearchPath -> GHC.Types.IO (GHC.Internal.Maybe.Maybe (GHC.Internal.IO.FilePath, [GHC.Internal.IO.FilePath])),
               programFindVersion :: Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> GHC.Types.IO (GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version),
               programPostConf :: Distribution.Verbosity.Verbosity -> ConfiguredProgram -> GHC.Types.IO ConfiguredProgram,
               programNormaliseArgs :: GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version -> Distribution.Types.PackageDescription.PackageDescription -> [GHC.Internal.Base.String] -> [GHC.Internal.Base.String]}
  type ProgramDb :: *
  data ProgramDb = ...
  type ProgramInvocation :: *
  data ProgramInvocation = ProgramInvocation {progInvokePath :: GHC.Internal.IO.FilePath, progInvokeArgs :: [GHC.Internal.Base.String], progInvokeEnv :: [(GHC.Internal.Base.String, GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)], progInvokeCwd :: GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath, progInvokeInput :: GHC.Internal.Maybe.Maybe Distribution.Utils.IOData.IOData, progInvokeInputEncoding :: Distribution.Simple.Program.Run.IOEncoding, progInvokeOutputEncoding :: Distribution.Simple.Program.Run.IOEncoding, progInvokeWhen :: GHC.Types.IO GHC.Types.Bool}
  type ProgramLocation :: *
  data ProgramLocation = UserSpecified {locationPath :: GHC.Internal.IO.FilePath} | FoundOnSystem {locationPath :: GHC.Internal.IO.FilePath}
  type ProgramSearchPath :: *
  type ProgramSearchPath = [ProgramSearchPathEntry]
  type ProgramSearchPathEntry :: *
  data ProgramSearchPathEntry = ProgramSearchPathDir GHC.Internal.IO.FilePath | ProgramSearchPathDefault
  addKnownProgram :: Program -> ProgramDb -> ProgramDb
  addKnownPrograms :: [Program] -> ProgramDb -> ProgramDb
  alexProgram :: Program
  arProgram :: Program
  builtinPrograms :: [Program]
  c2hsProgram :: Program
  configureAllKnownPrograms :: Distribution.Verbosity.Verbosity -> ProgramDb -> GHC.Types.IO ProgramDb
  configureProgram :: Distribution.Verbosity.Verbosity -> Program -> ProgramDb -> GHC.Types.IO ProgramDb
  cppProgram :: Program
  cpphsProgram :: Program
  defaultProgramDb :: ProgramDb
  defaultProgramSearchPath :: ProgramSearchPath
  doctestProgram :: Program
  emptyProgramDb :: ProgramDb
  emptyProgramInvocation :: ProgramInvocation
  findProgramOnSearchPath :: Distribution.Verbosity.Verbosity -> ProgramSearchPath -> GHC.Internal.IO.FilePath -> GHC.Types.IO (GHC.Internal.Maybe.Maybe (GHC.Internal.IO.FilePath, [GHC.Internal.IO.FilePath]))
  findProgramVersion :: GHC.Internal.Base.String -> (GHC.Internal.Base.String -> GHC.Internal.Base.String) -> Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> GHC.Types.IO (GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version)
  gccProgram :: Program
  getDbProgramOutput :: Distribution.Verbosity.Verbosity -> Program -> ProgramDb -> [ProgArg] -> GHC.Types.IO GHC.Internal.Base.String
  getDbProgramOutputCwd :: forall to. Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir to)) -> Program -> ProgramDb -> [ProgArg] -> GHC.Types.IO GHC.Internal.Base.String
  getProgramInvocationLBS :: Distribution.Verbosity.Verbosity -> ProgramInvocation -> GHC.Types.IO Data.ByteString.Lazy.Internal.ByteString
  getProgramInvocationOutput :: Distribution.Verbosity.Verbosity -> ProgramInvocation -> GHC.Types.IO GHC.Internal.Base.String
  getProgramOutput :: Distribution.Verbosity.Verbosity -> ConfiguredProgram -> [ProgArg] -> GHC.Types.IO GHC.Internal.Base.String
  getProgramSearchPath :: ProgramDb -> ProgramSearchPath
  ghcPkgProgram :: Program
  ghcProgram :: Program
  ghcjsPkgProgram :: Program
  ghcjsProgram :: Program
  greencardProgram :: Program
  haddockProgram :: Program
  happyProgram :: Program
  hmakeProgram :: Program
  hpcProgram :: Program
  hsc2hsProgram :: Program
  hscolourProgram :: Program
  jhcProgram :: Program
  knownPrograms :: ProgramDb -> [(Program, GHC.Internal.Maybe.Maybe ConfiguredProgram)]
  ldProgram :: Program
  lookupKnownProgram :: GHC.Internal.Base.String -> ProgramDb -> GHC.Internal.Maybe.Maybe Program
  lookupProgram :: Program -> ProgramDb -> GHC.Internal.Maybe.Maybe ConfiguredProgram
  lookupProgramVersion :: Distribution.Verbosity.Verbosity -> Program -> Distribution.Types.VersionRange.Internal.VersionRange -> ProgramDb -> GHC.Types.IO (GHC.Internal.Data.Either.Either Distribution.Simple.Errors.CabalException (ConfiguredProgram, Distribution.Types.Version.Version, ProgramDb))
  needProgram :: Distribution.Verbosity.Verbosity -> Program -> ProgramDb -> GHC.Types.IO (GHC.Internal.Maybe.Maybe (ConfiguredProgram, ProgramDb))
  pkgConfigProgram :: Program
  programInvocation :: ConfiguredProgram -> [GHC.Internal.Base.String] -> ProgramInvocation
  programPath :: ConfiguredProgram -> GHC.Internal.IO.FilePath
  reconfigurePrograms :: Distribution.Verbosity.Verbosity -> [(GHC.Internal.Base.String, GHC.Internal.IO.FilePath)] -> [(GHC.Internal.Base.String, [ProgArg])] -> ProgramDb -> GHC.Types.IO ProgramDb
  requireProgram :: Distribution.Verbosity.Verbosity -> Program -> ProgramDb -> GHC.Types.IO (ConfiguredProgram, ProgramDb)
  requireProgramVersion :: Distribution.Verbosity.Verbosity -> Program -> Distribution.Types.VersionRange.Internal.VersionRange -> ProgramDb -> GHC.Types.IO (ConfiguredProgram, Distribution.Types.Version.Version, ProgramDb)
  restoreProgramDb :: [Program] -> ProgramDb -> ProgramDb
  runDbProgram :: Distribution.Verbosity.Verbosity -> Program -> ProgramDb -> [ProgArg] -> GHC.Types.IO ()
  runDbProgramCwd :: forall to. Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir to)) -> Program -> ProgramDb -> [ProgArg] -> GHC.Types.IO ()
  runProgram :: Distribution.Verbosity.Verbosity -> ConfiguredProgram -> [ProgArg] -> GHC.Types.IO ()
  runProgramCwd :: forall to. Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir to)) -> ConfiguredProgram -> [ProgArg] -> GHC.Types.IO ()
  runProgramInvocation :: Distribution.Verbosity.Verbosity -> ProgramInvocation -> GHC.Types.IO ()
  setProgramSearchPath :: ProgramSearchPath -> ProgramDb -> ProgramDb
  simpleProgram :: GHC.Internal.Base.String -> Program
  simpleProgramInvocation :: GHC.Internal.IO.FilePath -> [GHC.Internal.Base.String] -> ProgramInvocation
  stripProgram :: Program
  suppressOverrideArgs :: ConfiguredProgram -> ConfiguredProgram
  tarProgram :: Program
  uhcProgram :: Program
  updateProgram :: ConfiguredProgram -> ProgramDb -> ProgramDb
  userMaybeSpecifyPath :: GHC.Internal.Base.String -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath -> ProgramDb -> ProgramDb
  userSpecifiedArgs :: Program -> ProgramDb -> [ProgArg]
  userSpecifyArgs :: GHC.Internal.Base.String -> [ProgArg] -> ProgramDb -> ProgramDb
  userSpecifyArgss :: [(GHC.Internal.Base.String, [ProgArg])] -> ProgramDb -> ProgramDb
  userSpecifyPath :: GHC.Internal.Base.String -> GHC.Internal.IO.FilePath -> ProgramDb -> ProgramDb
  userSpecifyPaths :: [(GHC.Internal.Base.String, GHC.Internal.IO.FilePath)] -> ProgramDb -> ProgramDb

module Distribution.Simple.Program.Ar where
  createArLibArchive :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File -> [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File] -> GHC.Types.IO ()
  multiStageProgramInvocation :: Distribution.Simple.Program.Run.ProgramInvocation -> (Distribution.Simple.Program.Run.ProgramInvocation, Distribution.Simple.Program.Run.ProgramInvocation, Distribution.Simple.Program.Run.ProgramInvocation) -> [GHC.Internal.Base.String] -> [Distribution.Simple.Program.Run.ProgramInvocation]

module Distribution.Simple.Program.Builtin where
  alexProgram :: Distribution.Simple.Program.Types.Program
  arProgram :: Distribution.Simple.Program.Types.Program
  builtinPrograms :: [Distribution.Simple.Program.Types.Program]
  c2hsProgram :: Distribution.Simple.Program.Types.Program
  cppProgram :: Distribution.Simple.Program.Types.Program
  cpphsProgram :: Distribution.Simple.Program.Types.Program
  doctestProgram :: Distribution.Simple.Program.Types.Program
  gccProgram :: Distribution.Simple.Program.Types.Program
  ghcPkgProgram :: Distribution.Simple.Program.Types.Program
  ghcProgram :: Distribution.Simple.Program.Types.Program
  ghcjsPkgProgram :: Distribution.Simple.Program.Types.Program
  ghcjsProgram :: Distribution.Simple.Program.Types.Program
  greencardProgram :: Distribution.Simple.Program.Types.Program
  haddockProgram :: Distribution.Simple.Program.Types.Program
  happyProgram :: Distribution.Simple.Program.Types.Program
  haskellSuitePkgProgram :: Distribution.Simple.Program.Types.Program
  haskellSuiteProgram :: Distribution.Simple.Program.Types.Program
  hmakeProgram :: Distribution.Simple.Program.Types.Program
  hpcProgram :: Distribution.Simple.Program.Types.Program
  hsc2hsProgram :: Distribution.Simple.Program.Types.Program
  hscolourProgram :: Distribution.Simple.Program.Types.Program
  jhcProgram :: Distribution.Simple.Program.Types.Program
  ldProgram :: Distribution.Simple.Program.Types.Program
  pkgConfigProgram :: Distribution.Simple.Program.Types.Program
  runghcProgram :: Distribution.Simple.Program.Types.Program
  stripProgram :: Distribution.Simple.Program.Types.Program
  tarProgram :: Distribution.Simple.Program.Types.Program
  uhcProgram :: Distribution.Simple.Program.Types.Program

module Distribution.Simple.Program.Db where
  type ConfiguredProgs :: *
  type ConfiguredProgs = Data.Map.Internal.Map GHC.Internal.Base.String Distribution.Simple.Program.Types.ConfiguredProgram
  type ProgramDb :: *
  data ProgramDb = ProgramDb {unconfiguredProgs :: UnconfiguredProgs, progSearchPath :: Distribution.Simple.Program.Types.ProgramSearchPath, progOverrideEnv :: [(GHC.Internal.Base.String, GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)], configuredProgs :: ConfiguredProgs}
  type UnconfiguredProgs :: *
  type UnconfiguredProgs = Data.Map.Internal.Map GHC.Internal.Base.String Distribution.Simple.Program.Db.UnconfiguredProgram
  addKnownProgram :: Distribution.Simple.Program.Types.Program -> ProgramDb -> ProgramDb
  addKnownPrograms :: [Distribution.Simple.Program.Types.Program] -> ProgramDb -> ProgramDb
  configureAllKnownPrograms :: Distribution.Verbosity.Verbosity -> ProgramDb -> GHC.Types.IO ProgramDb
  configureProgram :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Types.Program -> ProgramDb -> GHC.Types.IO ProgramDb
  configureUnconfiguredProgram :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Types.Program -> ProgramDb -> GHC.Types.IO (GHC.Internal.Maybe.Maybe Distribution.Simple.Program.Types.ConfiguredProgram)
  configuredPrograms :: ProgramDb -> [Distribution.Simple.Program.Types.ConfiguredProgram]
  defaultProgramDb :: ProgramDb
  emptyProgramDb :: ProgramDb
  getProgramSearchPath :: ProgramDb -> Distribution.Simple.Program.Types.ProgramSearchPath
  knownPrograms :: ProgramDb -> [(Distribution.Simple.Program.Types.Program, GHC.Internal.Maybe.Maybe Distribution.Simple.Program.Types.ConfiguredProgram)]
  lookupKnownProgram :: GHC.Internal.Base.String -> ProgramDb -> GHC.Internal.Maybe.Maybe Distribution.Simple.Program.Types.Program
  lookupProgram :: Distribution.Simple.Program.Types.Program -> ProgramDb -> GHC.Internal.Maybe.Maybe Distribution.Simple.Program.Types.ConfiguredProgram
  lookupProgramByName :: GHC.Internal.Base.String -> ProgramDb -> GHC.Internal.Maybe.Maybe Distribution.Simple.Program.Types.ConfiguredProgram
  lookupProgramVersion :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Types.Program -> Distribution.Types.VersionRange.Internal.VersionRange -> ProgramDb -> GHC.Types.IO (GHC.Internal.Data.Either.Either Distribution.Simple.Errors.CabalException (Distribution.Simple.Program.Types.ConfiguredProgram, Distribution.Types.Version.Version, ProgramDb))
  modifyProgramSearchPath :: (Distribution.Simple.Program.Types.ProgramSearchPath -> Distribution.Simple.Program.Types.ProgramSearchPath) -> ProgramDb -> ProgramDb
  needProgram :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Types.Program -> ProgramDb -> GHC.Types.IO (GHC.Internal.Maybe.Maybe (Distribution.Simple.Program.Types.ConfiguredProgram, ProgramDb))
  prependProgramSearchPath :: Distribution.Verbosity.Verbosity -> [GHC.Internal.IO.FilePath] -> [(GHC.Internal.Base.String, GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath)] -> ProgramDb -> GHC.Types.IO ProgramDb
  prependProgramSearchPathNoLogging :: [GHC.Internal.IO.FilePath] -> [(GHC.Internal.Base.String, GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)] -> ProgramDb -> ProgramDb
  reconfigurePrograms :: Distribution.Verbosity.Verbosity -> [(GHC.Internal.Base.String, GHC.Internal.IO.FilePath)] -> [(GHC.Internal.Base.String, [Distribution.Simple.Program.Types.ProgArg])] -> ProgramDb -> GHC.Types.IO ProgramDb
  requireProgram :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Types.Program -> ProgramDb -> GHC.Types.IO (Distribution.Simple.Program.Types.ConfiguredProgram, ProgramDb)
  requireProgramVersion :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Types.Program -> Distribution.Types.VersionRange.Internal.VersionRange -> ProgramDb -> GHC.Types.IO (Distribution.Simple.Program.Types.ConfiguredProgram, Distribution.Types.Version.Version, ProgramDb)
  restoreProgramDb :: [Distribution.Simple.Program.Types.Program] -> ProgramDb -> ProgramDb
  setProgramSearchPath :: Distribution.Simple.Program.Types.ProgramSearchPath -> ProgramDb -> ProgramDb
  unconfigureProgram :: GHC.Internal.Base.String -> ProgramDb -> ProgramDb
  updateConfiguredProgs :: (ConfiguredProgs -> ConfiguredProgs) -> ProgramDb -> ProgramDb
  updateProgram :: Distribution.Simple.Program.Types.ConfiguredProgram -> ProgramDb -> ProgramDb
  updateUnconfiguredProgs :: (UnconfiguredProgs -> UnconfiguredProgs) -> ProgramDb -> ProgramDb
  userMaybeSpecifyPath :: GHC.Internal.Base.String -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath -> ProgramDb -> ProgramDb
  userSpecifiedArgs :: Distribution.Simple.Program.Types.Program -> ProgramDb -> [Distribution.Simple.Program.Types.ProgArg]
  userSpecifyArgs :: GHC.Internal.Base.String -> [Distribution.Simple.Program.Types.ProgArg] -> ProgramDb -> ProgramDb
  userSpecifyArgss :: [(GHC.Internal.Base.String, [Distribution.Simple.Program.Types.ProgArg])] -> ProgramDb -> ProgramDb
  userSpecifyPath :: GHC.Internal.Base.String -> GHC.Internal.IO.FilePath -> ProgramDb -> ProgramDb
  userSpecifyPaths :: [(GHC.Internal.Base.String, GHC.Internal.IO.FilePath)] -> ProgramDb -> ProgramDb

module Distribution.Simple.Program.Find where
  type ProgramSearchPath :: *
  type ProgramSearchPath = [ProgramSearchPathEntry]
  type ProgramSearchPathEntry :: *
  data ProgramSearchPathEntry = ProgramSearchPathDir GHC.Internal.IO.FilePath | ProgramSearchPathDefault
  defaultProgramSearchPath :: ProgramSearchPath
  findProgramOnSearchPath :: Distribution.Verbosity.Verbosity -> ProgramSearchPath -> GHC.Internal.IO.FilePath -> GHC.Types.IO (GHC.Internal.Maybe.Maybe (GHC.Internal.IO.FilePath, [GHC.Internal.IO.FilePath]))
  getExtraPathEnv :: Distribution.Verbosity.Verbosity -> [(GHC.Internal.Base.String, GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)] -> [GHC.Internal.IO.FilePath] -> GHC.Types.IO [(GHC.Internal.Base.String, GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)]
  getSystemSearchPath :: GHC.Types.IO [GHC.Internal.IO.FilePath]
  logExtraProgramOverrideEnv :: Distribution.Verbosity.Verbosity -> [(GHC.Internal.Base.String, GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)] -> GHC.Types.IO ()
  logExtraProgramSearchPath :: Distribution.Verbosity.Verbosity -> [GHC.Internal.IO.FilePath] -> GHC.Types.IO ()
  programSearchPathAsPATHVar :: ProgramSearchPath -> GHC.Types.IO GHC.Internal.Base.String
  simpleProgram :: GHC.Internal.Base.String -> Distribution.Simple.Program.Types.Program

module Distribution.Simple.Program.GHC where
  type GhcDynLinkMode :: *
  data GhcDynLinkMode = GhcStaticOnly | GhcDynamicOnly | GhcStaticAndDynamic
  type GhcMode :: *
  data GhcMode = GhcModeCompile | GhcModeLink | GhcModeMake | GhcModeInteractive | GhcModeAbiHash
  type GhcOptimisation :: *
  data GhcOptimisation = GhcNoOptimisation | GhcNormalOptimisation | GhcMaximumOptimisation | GhcSpecialOptimisation GHC.Internal.Base.String
  type GhcOptions :: *
  data GhcOptions
    = GhcOptions {ghcOptMode :: Distribution.Simple.Flag.Flag GhcMode,
                  ghcOptExtra :: [GHC.Internal.Base.String],
                  ghcOptExtraDefault :: [GHC.Internal.Base.String],
                  ghcOptInputFiles :: Distribution.Utils.NubList.NubListR (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File),
                  ghcOptInputScripts :: Distribution.Utils.NubList.NubListR (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File),
                  ghcOptInputModules :: Distribution.Utils.NubList.NubListR Distribution.ModuleName.ModuleName,
                  ghcOptOutputFile :: Distribution.Simple.Flag.Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File),
                  ghcOptOutputDynFile :: Distribution.Simple.Flag.Flag GHC.Internal.IO.FilePath,
                  ghcOptSourcePathClear :: Distribution.Simple.Flag.Flag GHC.Types.Bool,
                  ghcOptSourcePath :: Distribution.Utils.NubList.NubListR (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Source)),
                  ghcOptThisUnitId :: Distribution.Simple.Flag.Flag GHC.Internal.Base.String,
                  ghcOptThisComponentId :: Distribution.Simple.Flag.Flag Distribution.Types.ComponentId.ComponentId,
                  ghcOptInstantiatedWith :: [(Distribution.ModuleName.ModuleName, Distribution.Backpack.OpenModule)],
                  ghcOptNoCode :: Distribution.Simple.Flag.Flag GHC.Types.Bool,
                  ghcOptPackageDBs :: Distribution.Simple.Compiler.PackageDBStack,
                  ghcOptPackages :: Distribution.Utils.NubList.NubListR (Distribution.Backpack.OpenUnitId, Distribution.Types.ModuleRenaming.ModuleRenaming),
                  ghcOptHideAllPackages :: Distribution.Simple.Flag.Flag GHC.Types.Bool,
                  ghcOptWarnMissingHomeModules :: Distribution.Simple.Flag.Flag GHC.Types.Bool,
                  ghcOptNoAutoLinkPackages :: Distribution.Simple.Flag.Flag GHC.Types.Bool,
                  ghcOptLinkLibs :: [GHC.Internal.IO.FilePath],
                  ghcOptLinkLibPath :: Distribution.Utils.NubList.NubListR (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Lib)),
                  ghcOptLinkOptions :: [GHC.Internal.Base.String],
                  ghcOptLinkFrameworks :: Distribution.Utils.NubList.NubListR GHC.Internal.Base.String,
                  ghcOptLinkFrameworkDirs :: Distribution.Utils.NubList.NubListR (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Framework)),
                  ghcOptLinkRts :: Distribution.Simple.Flag.Flag GHC.Types.Bool,
                  ghcOptNoLink :: Distribution.Simple.Flag.Flag GHC.Types.Bool,
                  ghcOptLinkNoHsMain :: Distribution.Simple.Flag.Flag GHC.Types.Bool,
                  ghcOptLinkModDefFiles :: Distribution.Utils.NubList.NubListR GHC.Internal.IO.FilePath,
                  ghcOptCcOptions :: [GHC.Internal.Base.String],
                  ghcOptCxxOptions :: [GHC.Internal.Base.String],
                  ghcOptAsmOptions :: [GHC.Internal.Base.String],
                  ghcOptCppOptions :: [GHC.Internal.Base.String],
                  ghcOptCppIncludePath :: Distribution.Utils.NubList.NubListR (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Include)),
                  ghcOptCppIncludes :: Distribution.Utils.NubList.NubListR (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File),
                  ghcOptFfiIncludes :: Distribution.Utils.NubList.NubListR GHC.Internal.IO.FilePath,
                  ghcOptCcProgram :: Distribution.Simple.Flag.Flag GHC.Internal.IO.FilePath,
                  ghcOptLanguage :: Distribution.Simple.Flag.Flag Language.Haskell.Extension.Language,
                  ghcOptExtensions :: Distribution.Utils.NubList.NubListR Language.Haskell.Extension.Extension,
                  ghcOptExtensionMap :: Data.Map.Internal.Map Language.Haskell.Extension.Extension (GHC.Internal.Maybe.Maybe Distribution.Simple.Compiler.CompilerFlag),
                  ghcOptOptimisation :: Distribution.Simple.Flag.Flag GhcOptimisation,
                  ghcOptDebugInfo :: Distribution.Simple.Flag.Flag Distribution.Simple.Compiler.DebugInfoLevel,
                  ghcOptProfilingMode :: Distribution.Simple.Flag.Flag GHC.Types.Bool,
                  ghcOptProfilingAuto :: Distribution.Simple.Flag.Flag GhcProfAuto,
                  ghcOptSplitSections :: Distribution.Simple.Flag.Flag GHC.Types.Bool,
                  ghcOptSplitObjs :: Distribution.Simple.Flag.Flag GHC.Types.Bool,
                  ghcOptNumJobs :: Distribution.Simple.Flag.Flag Distribution.Types.ParStrat.ParStrat,
                  ghcOptHPCDir :: Distribution.Simple.Flag.Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Mix)),
                  ghcOptGHCiScripts :: [GHC.Internal.IO.FilePath],
                  ghcOptHiSuffix :: Distribution.Simple.Flag.Flag GHC.Internal.Base.String,
                  ghcOptObjSuffix :: Distribution.Simple.Flag.Flag GHC.Internal.Base.String,
                  ghcOptDynHiSuffix :: Distribution.Simple.Flag.Flag GHC.Internal.Base.String,
                  ghcOptDynObjSuffix :: Distribution.Simple.Flag.Flag GHC.Internal.Base.String,
                  ghcOptHiDir :: Distribution.Simple.Flag.Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Artifacts)),
                  ghcOptHieDir :: Distribution.Simple.Flag.Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Artifacts)),
                  ghcOptObjDir :: Distribution.Simple.Flag.Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Artifacts)),
                  ghcOptOutputDir :: Distribution.Simple.Flag.Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Artifacts)),
                  ghcOptStubDir :: Distribution.Simple.Flag.Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Artifacts)),
                  ghcOptDynLinkMode :: Distribution.Simple.Flag.Flag GhcDynLinkMode,
                  ghcOptStaticLib :: Distribution.Simple.Flag.Flag GHC.Types.Bool,
                  ghcOptShared :: Distribution.Simple.Flag.Flag GHC.Types.Bool,
                  ghcOptFPic :: Distribution.Simple.Flag.Flag GHC.Types.Bool,
                  ghcOptDylibName :: Distribution.Simple.Flag.Flag GHC.Internal.Base.String,
                  ghcOptRPaths :: Distribution.Utils.NubList.NubListR GHC.Internal.IO.FilePath,
                  ghcOptVerbosity :: Distribution.Simple.Flag.Flag Distribution.Verbosity.Verbosity,
                  ghcOptExtraPath :: Distribution.Utils.NubList.NubListR (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Build)),
                  ghcOptCabal :: Distribution.Simple.Flag.Flag GHC.Types.Bool}
  type GhcProfAuto :: *
  data GhcProfAuto = GhcProfAutoAll | GhcProfAutoToplevel | GhcProfAutoExported | GhcProfLate
  ghcInvocation :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Types.ConfiguredProgram -> Distribution.Simple.Compiler.Compiler -> Distribution.System.Platform -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> GhcOptions -> GHC.Types.IO Distribution.Simple.Program.Run.ProgramInvocation
  normaliseGhcArgs :: GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version -> Distribution.Types.PackageDescription.PackageDescription -> [GHC.Internal.Base.String] -> [GHC.Internal.Base.String]
  packageDbArgsDb :: Distribution.Simple.Compiler.PackageDBStackCWD -> [GHC.Internal.Base.String]
  renderGhcOptions :: Distribution.Simple.Compiler.Compiler -> Distribution.System.Platform -> GhcOptions -> [GHC.Internal.Base.String]
  runGHC :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Types.ConfiguredProgram -> Distribution.Simple.Compiler.Compiler -> Distribution.System.Platform -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> GhcOptions -> GHC.Types.IO ()
  runGHCWithResponseFile :: GHC.Internal.IO.FilePath -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.Encoding.Types.TextEncoding -> Distribution.Simple.Utils.TempFileOptions -> Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Types.ConfiguredProgram -> Distribution.Simple.Compiler.Compiler -> Distribution.System.Platform -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> GhcOptions -> GHC.Types.IO ()

module Distribution.Simple.Program.HcPkg where
  type HcPkgInfo :: *
  data HcPkgInfo = HcPkgInfo {hcPkgProgram :: Distribution.Simple.Program.Types.ConfiguredProgram, noPkgDbStack :: GHC.Types.Bool, noVerboseFlag :: GHC.Types.Bool, flagPackageConf :: GHC.Types.Bool, supportsDirDbs :: GHC.Types.Bool, requiresDirDbs :: GHC.Types.Bool, nativeMultiInstance :: GHC.Types.Bool, recacheMultiInstance :: GHC.Types.Bool, suppressFilesCheck :: GHC.Types.Bool}
  type RegisterOptions :: *
  data RegisterOptions = RegisterOptions {registerAllowOverwrite :: GHC.Types.Bool, registerMultiInstance :: GHC.Types.Bool, registerSuppressFilesCheck :: GHC.Types.Bool}
  defaultRegisterOptions :: RegisterOptions
  describe :: HcPkgInfo -> Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Simple.Compiler.PackageDBStack -> Distribution.Types.PackageId.PackageId -> GHC.Types.IO [Distribution.Types.InstalledPackageInfo.InstalledPackageInfo]
  describeInvocation :: HcPkgInfo -> Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Simple.Compiler.PackageDBStack -> Distribution.Types.PackageId.PackageId -> Distribution.Simple.Program.Run.ProgramInvocation
  dump :: forall from. HcPkgInfo -> Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir from)) -> Distribution.Simple.Compiler.PackageDBX (Distribution.Utils.Path.SymbolicPath from (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB)) -> GHC.Types.IO [Distribution.Types.InstalledPackageInfo.InstalledPackageInfo]
  dumpInvocation :: forall from. HcPkgInfo -> Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir from)) -> Distribution.Simple.Compiler.PackageDBX (Distribution.Utils.Path.SymbolicPath from (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB)) -> Distribution.Simple.Program.Run.ProgramInvocation
  expose :: HcPkgInfo -> Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Simple.Compiler.PackageDB -> Distribution.Types.PackageId.PackageId -> GHC.Types.IO ()
  exposeInvocation :: HcPkgInfo -> Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Simple.Compiler.PackageDB -> Distribution.Types.PackageId.PackageId -> Distribution.Simple.Program.Run.ProgramInvocation
  hide :: HcPkgInfo -> Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Simple.Compiler.PackageDB -> Distribution.Types.PackageId.PackageId -> GHC.Types.IO ()
  hideInvocation :: HcPkgInfo -> Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Simple.Compiler.PackageDB -> Distribution.Types.PackageId.PackageId -> Distribution.Simple.Program.Run.ProgramInvocation
  init :: HcPkgInfo -> Distribution.Verbosity.Verbosity -> GHC.Types.Bool -> GHC.Internal.IO.FilePath -> GHC.Types.IO ()
  initInvocation :: HcPkgInfo -> Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> Distribution.Simple.Program.Run.ProgramInvocation
  invoke :: HcPkgInfo -> Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Simple.Compiler.PackageDBStack -> [GHC.Internal.Base.String] -> GHC.Types.IO ()
  list :: HcPkgInfo -> Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Simple.Compiler.PackageDB -> GHC.Types.IO [Distribution.Types.PackageId.PackageId]
  listInvocation :: HcPkgInfo -> Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Simple.Compiler.PackageDB -> Distribution.Simple.Program.Run.ProgramInvocation
  recache :: forall from. HcPkgInfo -> Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir from)) -> Distribution.Simple.Compiler.PackageDBS from -> GHC.Types.IO ()
  recacheInvocation :: forall from. HcPkgInfo -> Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir from)) -> Distribution.Simple.Compiler.PackageDBS from -> Distribution.Simple.Program.Run.ProgramInvocation
  register :: forall from. HcPkgInfo -> Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir from)) -> Distribution.Simple.Compiler.PackageDBStackS from -> Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -> RegisterOptions -> GHC.Types.IO ()
  registerInvocation :: forall from. HcPkgInfo -> Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir from)) -> Distribution.Simple.Compiler.PackageDBStackS from -> Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -> RegisterOptions -> Distribution.Simple.Program.Run.ProgramInvocation
  unregister :: HcPkgInfo -> Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Simple.Compiler.PackageDB -> Distribution.Types.PackageId.PackageId -> GHC.Types.IO ()
  unregisterInvocation :: HcPkgInfo -> Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Simple.Compiler.PackageDB -> Distribution.Types.PackageId.PackageId -> Distribution.Simple.Program.Run.ProgramInvocation

module Distribution.Simple.Program.Hpc where
  markup ::
    GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg))
    -> Distribution.Simple.Program.Types.ConfiguredProgram -> Distribution.Types.Version.Version -> Distribution.Verbosity.Verbosity -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File -> [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Mix)] -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Artifacts) -> [Distribution.ModuleName.ModuleName] -> GHC.Types.IO ()
  union :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Simple.Program.Types.ConfiguredProgram -> Distribution.Verbosity.Verbosity -> [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File] -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File -> [Distribution.ModuleName.ModuleName] -> GHC.Types.IO ()

module Distribution.Simple.Program.Internal where
  stripExtractVersion :: GHC.Internal.Base.String -> GHC.Internal.Base.String

module Distribution.Simple.Program.Ld where
  combineObjectFiles :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Simple.Program.Types.ConfiguredProgram -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File -> [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File] -> GHC.Types.IO ()

module Distribution.Simple.Program.ResponseFile where
  withResponseFile :: forall a. Distribution.Verbosity.Verbosity -> Distribution.Simple.Utils.TempFileOptions -> GHC.Internal.Base.String -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.Encoding.Types.TextEncoding -> [GHC.Internal.Base.String] -> (GHC.Internal.IO.FilePath -> GHC.Types.IO a) -> GHC.Types.IO a

module Distribution.Simple.Program.Run where
  type IOEncoding :: *
  data IOEncoding = IOEncodingText | IOEncodingUTF8
  type ProgramInvocation :: *
  data ProgramInvocation = ProgramInvocation {progInvokePath :: GHC.Internal.IO.FilePath, progInvokeArgs :: [GHC.Internal.Base.String], progInvokeEnv :: [(GHC.Internal.Base.String, GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)], progInvokeCwd :: GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath, progInvokeInput :: GHC.Internal.Maybe.Maybe Distribution.Utils.IOData.IOData, progInvokeInputEncoding :: IOEncoding, progInvokeOutputEncoding :: IOEncoding, progInvokeWhen :: GHC.Types.IO GHC.Types.Bool}
  emptyProgramInvocation :: ProgramInvocation
  getEffectiveEnvironment :: [(GHC.Internal.Base.String, GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)] -> GHC.Types.IO (GHC.Internal.Maybe.Maybe [(GHC.Internal.Base.String, GHC.Internal.Base.String)])
  getProgramInvocationLBS :: Distribution.Verbosity.Verbosity -> ProgramInvocation -> GHC.Types.IO Data.ByteString.Lazy.Internal.ByteString
  getProgramInvocationLBSAndErrors :: Distribution.Verbosity.Verbosity -> ProgramInvocation -> GHC.Types.IO (Data.ByteString.Lazy.Internal.ByteString, GHC.Internal.Base.String, GHC.Internal.IO.Exception.ExitCode)
  getProgramInvocationOutput :: Distribution.Verbosity.Verbosity -> ProgramInvocation -> GHC.Types.IO GHC.Internal.Base.String
  getProgramInvocationOutputAndErrors :: Distribution.Verbosity.Verbosity -> ProgramInvocation -> GHC.Types.IO (GHC.Internal.Base.String, GHC.Internal.Base.String, GHC.Internal.IO.Exception.ExitCode)
  multiStageProgramInvocation :: ProgramInvocation -> (ProgramInvocation, ProgramInvocation, ProgramInvocation) -> [GHC.Internal.Base.String] -> [ProgramInvocation]
  programInvocation :: Distribution.Simple.Program.Types.ConfiguredProgram -> [GHC.Internal.Base.String] -> ProgramInvocation
  programInvocationCwd :: forall to. GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir to)) -> Distribution.Simple.Program.Types.ConfiguredProgram -> [GHC.Internal.Base.String] -> ProgramInvocation
  runProgramInvocation :: Distribution.Verbosity.Verbosity -> ProgramInvocation -> GHC.Types.IO ()
  simpleProgramInvocation :: GHC.Internal.IO.FilePath -> [GHC.Internal.Base.String] -> ProgramInvocation

module Distribution.Simple.Program.Script where
  invocationAsBatchFile :: Distribution.Simple.Program.Run.ProgramInvocation -> GHC.Internal.Base.String
  invocationAsShellScript :: Distribution.Simple.Program.Run.ProgramInvocation -> GHC.Internal.Base.String
  invocationAsSystemScript :: Distribution.System.OS -> Distribution.Simple.Program.Run.ProgramInvocation -> GHC.Internal.Base.String

module Distribution.Simple.Program.Strip where
  stripExe :: Distribution.Verbosity.Verbosity -> Distribution.System.Platform -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Internal.IO.FilePath -> GHC.Types.IO ()
  stripLib :: Distribution.Verbosity.Verbosity -> Distribution.System.Platform -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Internal.IO.FilePath -> GHC.Types.IO ()

module Distribution.Simple.Program.Types where
  type ConfiguredProgram :: *
  data ConfiguredProgram = ConfiguredProgram {programId :: GHC.Internal.Base.String, programVersion :: GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version, programDefaultArgs :: [GHC.Internal.Base.String], programOverrideArgs :: [GHC.Internal.Base.String], programOverrideEnv :: [(GHC.Internal.Base.String, GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)], programProperties :: Data.Map.Internal.Map GHC.Internal.Base.String GHC.Internal.Base.String, programLocation :: ProgramLocation, programMonitorFiles :: [GHC.Internal.IO.FilePath]}
  type ProgArg :: *
  type ProgArg = GHC.Internal.Base.String
  type Program :: *
  data Program
    = Program {programName :: GHC.Internal.Base.String,
               programFindLocation :: Distribution.Verbosity.Verbosity -> ProgramSearchPath -> GHC.Types.IO (GHC.Internal.Maybe.Maybe (GHC.Internal.IO.FilePath, [GHC.Internal.IO.FilePath])),
               programFindVersion :: Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> GHC.Types.IO (GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version),
               programPostConf :: Distribution.Verbosity.Verbosity -> ConfiguredProgram -> GHC.Types.IO ConfiguredProgram,
               programNormaliseArgs :: GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version -> Distribution.Types.PackageDescription.PackageDescription -> [GHC.Internal.Base.String] -> [GHC.Internal.Base.String]}
  type ProgramLocation :: *
  data ProgramLocation = UserSpecified {locationPath :: GHC.Internal.IO.FilePath} | FoundOnSystem {locationPath :: GHC.Internal.IO.FilePath}
  type ProgramSearchPath :: *
  type ProgramSearchPath = [ProgramSearchPathEntry]
  type ProgramSearchPathEntry :: *
  data ProgramSearchPathEntry = ProgramSearchPathDir GHC.Internal.IO.FilePath | ProgramSearchPathDefault
  programPath :: ConfiguredProgram -> GHC.Internal.IO.FilePath
  simpleConfiguredProgram :: GHC.Internal.Base.String -> ProgramLocation -> ConfiguredProgram
  suppressOverrideArgs :: ConfiguredProgram -> ConfiguredProgram

module Distribution.Simple.Register where
  type RegisterOptions :: *
  data RegisterOptions = RegisterOptions {registerAllowOverwrite :: GHC.Types.Bool, registerMultiInstance :: GHC.Types.Bool, registerSuppressFilesCheck :: GHC.Types.Bool}
  abiHash :: Distribution.Verbosity.Verbosity -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist) -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.Library.Library -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO Distribution.Types.AbiHash.AbiHash
  absoluteInstalledPackageInfo :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.AbiHash.AbiHash -> Distribution.Types.Library.Library -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> Distribution.Types.InstalledPackageInfo.InstalledPackageInfo
  createPackageDB :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Compiler.Compiler -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Types.Bool -> GHC.Internal.IO.FilePath -> GHC.Types.IO ()
  defaultRegisterOptions :: RegisterOptions
  deletePackageDB :: GHC.Internal.IO.FilePath -> GHC.Types.IO ()
  doesPackageDBExist :: GHC.Internal.IO.FilePath -> GHC.Types.IO GHC.Types.Bool
  generalInstalledPackageInfo :: ([GHC.Internal.IO.FilePath] -> [GHC.Internal.IO.FilePath]) -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.AbiHash.AbiHash -> Distribution.Types.Library.Library -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> Distribution.Simple.InstallDirs.InstallDirs GHC.Internal.IO.FilePath -> Distribution.Types.InstalledPackageInfo.InstalledPackageInfo
  generateRegistrationInfo :: Distribution.Verbosity.Verbosity -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.Library.Library -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.Bool -> GHC.Types.Bool -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist) -> Distribution.Simple.Compiler.PackageDB -> GHC.Types.IO Distribution.Types.InstalledPackageInfo.InstalledPackageInfo
  initPackageDB :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Compiler.Compiler -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Internal.IO.FilePath -> GHC.Types.IO ()
  inplaceInstalledPackageInfo :: Distribution.Utils.Path.AbsolutePath (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg) -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist) -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.AbiHash.AbiHash -> Distribution.Types.Library.Library -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> Distribution.Types.InstalledPackageInfo.InstalledPackageInfo
  internalPackageDBPath :: Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist) -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB)
  invokeHcPkg :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Compiler.Compiler -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Simple.Compiler.PackageDBStack -> [GHC.Internal.Base.String] -> GHC.Types.IO ()
  register :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Cabal-3.15.0.0:Distribution.Simple.Setup.Register.RegisterFlags -> GHC.Types.IO ()
  registerPackage :: forall from. Distribution.Verbosity.Verbosity -> Distribution.Simple.Compiler.Compiler -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir from)) -> Distribution.Simple.Compiler.PackageDBStackS from -> Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -> RegisterOptions -> GHC.Types.IO ()
  unregister :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Cabal-3.15.0.0:Distribution.Simple.Setup.Register.RegisterFlags -> GHC.Types.IO ()

module Distribution.Simple.Setup where
  pattern BenchmarkCommonFlags :: Flag Distribution.Verbosity.Verbosity -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File) -> [GHC.Internal.Base.String] -> BenchmarkFlags
  pattern BenchmarkCommonFlags {benchmarkVerbosity, benchmarkDistPref, benchmarkWorkingDir, benchmarkCabalFilePath, benchmarkTargets}
  type BenchmarkFlags :: *
  data BenchmarkFlags = BenchmarkFlags {benchmarkCommonFlags :: !CommonSetupFlags, benchmarkOptions :: [Distribution.Simple.InstallDirs.PathTemplate]}
  type BooleanFlag :: * -> Constraint
  class BooleanFlag a where
    asBool :: a -> GHC.Types.Bool
    {-# MINIMAL asBool #-}
  pattern BuildCommonFlags :: Flag Distribution.Verbosity.Verbosity -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File) -> [GHC.Internal.Base.String] -> BuildFlags
  pattern BuildCommonFlags {buildVerbosity, buildDistPref, buildWorkingDir, buildCabalFilePath, buildTargets}
  type BuildFlags :: *
  data BuildFlags = BuildFlags {buildCommonFlags :: !CommonSetupFlags, buildProgramPaths :: [(GHC.Internal.Base.String, GHC.Internal.IO.FilePath)], buildProgramArgs :: [(GHC.Internal.Base.String, [GHC.Internal.Base.String])], buildNumJobs :: Flag (GHC.Internal.Maybe.Maybe GHC.Types.Int), buildUseSemaphore :: Flag GHC.Internal.Base.String}
  type BuildingWhat :: *
  data BuildingWhat = BuildNormal BuildFlags | BuildRepl ReplFlags | BuildHaddock HaddockFlags | BuildHscolour HscolourFlags
  pattern CleanCommonFlags :: Flag Distribution.Verbosity.Verbosity -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File) -> [GHC.Internal.Base.String] -> CleanFlags
  pattern CleanCommonFlags {cleanVerbosity, cleanDistPref, cleanWorkingDir, cleanCabalFilePath, cleanTargets}
  type CleanFlags :: *
  data CleanFlags = CleanFlags {cleanCommonFlags :: !CommonSetupFlags, cleanSaveConf :: Flag GHC.Types.Bool}
  type CommonSetupFlags :: *
  data CommonSetupFlags = CommonSetupFlags {setupVerbosity :: !(Flag Distribution.Verbosity.Verbosity), setupWorkingDir :: !(Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg))), setupDistPref :: !(Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist))), setupCabalFilePath :: !(Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File)), setupTargets :: [GHC.Internal.Base.String], setupKeepTempFiles :: Flag GHC.Types.Bool}
  pattern ConfigCommonFlags :: Flag Distribution.Verbosity.Verbosity -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File) -> [GHC.Internal.Base.String] -> ConfigFlags
  pattern ConfigCommonFlags {configVerbosity, configDistPref, configWorkingDir, configCabalFilePath, configTargets}
  type ConfigFlags :: *
  data ConfigFlags
    = ConfigFlags {configCommonFlags :: !CommonSetupFlags,
                   configPrograms_ :: Distribution.Compat.Semigroup.Option' (Distribution.Compat.Semigroup.Last' Distribution.Simple.Program.Db.ProgramDb),
                   configProgramPaths :: [(GHC.Internal.Base.String, GHC.Internal.IO.FilePath)],
                   configProgramArgs :: [(GHC.Internal.Base.String, [GHC.Internal.Base.String])],
                   configProgramPathExtra :: Distribution.Utils.NubList.NubList GHC.Internal.IO.FilePath,
                   configHcFlavor :: Flag Distribution.Compiler.CompilerFlavor,
                   configHcPath :: Flag GHC.Internal.IO.FilePath,
                   configHcPkg :: Flag GHC.Internal.IO.FilePath,
                   configVanillaLib :: Flag GHC.Types.Bool,
                   configProfLib :: Flag GHC.Types.Bool,
                   configSharedLib :: Flag GHC.Types.Bool,
                   configStaticLib :: Flag GHC.Types.Bool,
                   configDynExe :: Flag GHC.Types.Bool,
                   configFullyStaticExe :: Flag GHC.Types.Bool,
                   configProfExe :: Flag GHC.Types.Bool,
                   configProf :: Flag GHC.Types.Bool,
                   configProfShared :: Flag GHC.Types.Bool,
                   configProfDetail :: Flag Distribution.Simple.Compiler.ProfDetailLevel,
                   configProfLibDetail :: Flag Distribution.Simple.Compiler.ProfDetailLevel,
                   configConfigureArgs :: [GHC.Internal.Base.String],
                   configOptimization :: Flag Distribution.Simple.Compiler.OptimisationLevel,
                   configProgPrefix :: Flag Distribution.Simple.InstallDirs.PathTemplate,
                   configProgSuffix :: Flag Distribution.Simple.InstallDirs.PathTemplate,
                   configInstallDirs :: Distribution.Simple.InstallDirs.InstallDirs (Flag Distribution.Simple.InstallDirs.PathTemplate),
                   configScratchDir :: Flag GHC.Internal.IO.FilePath,
                   configExtraLibDirs :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Lib)],
                   configExtraLibDirsStatic :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Lib)],
                   configExtraFrameworkDirs :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Framework)],
                   configExtraIncludeDirs :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Include)],
                   configIPID :: Flag GHC.Internal.Base.String,
                   configCID :: Flag Distribution.Types.ComponentId.ComponentId,
                   configDeterministic :: Flag GHC.Types.Bool,
                   configUserInstall :: Flag GHC.Types.Bool,
                   configPackageDBs :: [GHC.Internal.Maybe.Maybe Distribution.Simple.Compiler.PackageDB],
                   configGHCiLib :: Flag GHC.Types.Bool,
                   configSplitSections :: Flag GHC.Types.Bool,
                   configSplitObjs :: Flag GHC.Types.Bool,
                   configStripExes :: Flag GHC.Types.Bool,
                   configStripLibs :: Flag GHC.Types.Bool,
                   configConstraints :: [Distribution.Types.PackageVersionConstraint.PackageVersionConstraint],
                   configDependencies :: [Distribution.Types.GivenComponent.GivenComponent],
                   configPromisedDependencies :: [Distribution.Types.GivenComponent.PromisedComponent],
                   configInstantiateWith :: [(Distribution.ModuleName.ModuleName, Distribution.Types.Module.Module)],
                   configConfigurationsFlags :: Distribution.Types.Flag.FlagAssignment,
                   configTests :: Flag GHC.Types.Bool,
                   configBenchmarks :: Flag GHC.Types.Bool,
                   configCoverage :: Flag GHC.Types.Bool,
                   configLibCoverage :: Flag GHC.Types.Bool,
                   configExactConfiguration :: Flag GHC.Types.Bool,
                   configFlagError :: Flag GHC.Internal.Base.String,
                   configRelocatable :: Flag GHC.Types.Bool,
                   configDebugInfo :: Flag Distribution.Simple.Compiler.DebugInfoLevel,
                   configDumpBuildInfo :: Flag DumpBuildInfo,
                   configUseResponseFiles :: Flag GHC.Types.Bool,
                   configAllowDependingOnPrivateLibs :: Flag GHC.Types.Bool,
                   configCoverageFor :: Flag [Distribution.Types.UnitId.UnitId],
                   configIgnoreBuildTools :: Flag GHC.Types.Bool}
  pattern CopyCommonFlags :: Flag Distribution.Verbosity.Verbosity -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File) -> [GHC.Internal.Base.String] -> CopyFlags
  pattern CopyCommonFlags {copyVerbosity, copyDistPref, copyWorkingDir, copyCabalFilePath, copyTargets}
  type CopyDest :: *
  data CopyDest = NoCopyDest | CopyTo GHC.Internal.IO.FilePath | CopyToDb GHC.Internal.IO.FilePath
  type CopyFlags :: *
  data CopyFlags = CopyFlags {copyCommonFlags :: !CommonSetupFlags, copyDest :: Flag CopyDest}
  type DumpBuildInfo :: *
  data DumpBuildInfo = NoDumpBuildInfo | DumpBuildInfo
  type Flag :: * -> *
  data Flag a = Flag a | NoFlag
  type GlobalFlags :: *
  data GlobalFlags = GlobalFlags {globalVersion :: Flag GHC.Types.Bool, globalNumericVersion :: Flag GHC.Types.Bool, globalWorkingDir :: Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg))}
  pattern HaddockCommonFlags :: Flag Distribution.Verbosity.Verbosity -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File) -> [GHC.Internal.Base.String] -> HaddockFlags
  pattern HaddockCommonFlags {haddockVerbosity, haddockDistPref, haddockWorkingDir, haddockCabalFilePath, haddockTargets}
  type HaddockFlags :: *
  data HaddockFlags
    = HaddockFlags {haddockCommonFlags :: !CommonSetupFlags,
                    haddockProgramPaths :: [(GHC.Internal.Base.String, GHC.Internal.IO.FilePath)],
                    haddockProgramArgs :: [(GHC.Internal.Base.String, [GHC.Internal.Base.String])],
                    haddockHoogle :: Flag GHC.Types.Bool,
                    haddockHtml :: Flag GHC.Types.Bool,
                    haddockHtmlLocation :: Flag GHC.Internal.Base.String,
                    haddockForHackage :: Flag HaddockTarget,
                    haddockExecutables :: Flag GHC.Types.Bool,
                    haddockTestSuites :: Flag GHC.Types.Bool,
                    haddockBenchmarks :: Flag GHC.Types.Bool,
                    haddockForeignLibs :: Flag GHC.Types.Bool,
                    haddockInternal :: Flag GHC.Types.Bool,
                    haddockCss :: Flag GHC.Internal.IO.FilePath,
                    haddockLinkedSource :: Flag GHC.Types.Bool,
                    haddockQuickJump :: Flag GHC.Types.Bool,
                    haddockHscolourCss :: Flag GHC.Internal.IO.FilePath,
                    haddockContents :: Flag Distribution.Simple.InstallDirs.PathTemplate,
                    haddockIndex :: Flag Distribution.Simple.InstallDirs.PathTemplate,
                    haddockBaseUrl :: Flag GHC.Internal.Base.String,
                    haddockResourcesDir :: Flag GHC.Internal.Base.String,
                    haddockOutputDir :: Flag GHC.Internal.IO.FilePath,
                    haddockUseUnicode :: Flag GHC.Types.Bool}
  type HaddockProjectFlags :: *
  data HaddockProjectFlags
    = HaddockProjectFlags {haddockProjectCommonFlags :: !CommonSetupFlags,
                           haddockProjectHackage :: Flag GHC.Types.Bool,
                           haddockProjectDir :: Flag GHC.Internal.Base.String,
                           haddockProjectPrologue :: Flag GHC.Internal.Base.String,
                           haddockProjectInterfaces :: Flag [(GHC.Internal.IO.FilePath, GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath, GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath, Visibility)],
                           haddockProjectProgramPaths :: [(GHC.Internal.Base.String, GHC.Internal.IO.FilePath)],
                           haddockProjectProgramArgs :: [(GHC.Internal.Base.String, [GHC.Internal.Base.String])],
                           haddockProjectHoogle :: Flag GHC.Types.Bool,
                           haddockProjectHtmlLocation :: Flag GHC.Internal.Base.String,
                           haddockProjectExecutables :: Flag GHC.Types.Bool,
                           haddockProjectTestSuites :: Flag GHC.Types.Bool,
                           haddockProjectBenchmarks :: Flag GHC.Types.Bool,
                           haddockProjectForeignLibs :: Flag GHC.Types.Bool,
                           haddockProjectInternal :: Flag GHC.Types.Bool,
                           haddockProjectCss :: Flag GHC.Internal.IO.FilePath,
                           haddockProjectHscolourCss :: Flag GHC.Internal.IO.FilePath,
                           haddockProjectResourcesDir :: Flag GHC.Internal.Base.String,
                           haddockProjectUseUnicode :: Flag GHC.Types.Bool}
  type HaddockTarget :: *
  data HaddockTarget = ForHackage | ForDevelopment
  pattern HscolourCommonFlags :: Flag Distribution.Verbosity.Verbosity -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File) -> [GHC.Internal.Base.String] -> HscolourFlags
  pattern HscolourCommonFlags {hscolourVerbosity, hscolourDistPref, hscolourWorkingDir, hscolourCabalFilePath, hscolourTargets}
  type HscolourFlags :: *
  data HscolourFlags = HscolourFlags {hscolourCommonFlags :: !CommonSetupFlags, hscolourCSS :: Flag GHC.Internal.IO.FilePath, hscolourExecutables :: Flag GHC.Types.Bool, hscolourTestSuites :: Flag GHC.Types.Bool, hscolourBenchmarks :: Flag GHC.Types.Bool, hscolourForeignLibs :: Flag GHC.Types.Bool}
  pattern InstallCommonFlags :: Flag Distribution.Verbosity.Verbosity -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File) -> [GHC.Internal.Base.String] -> InstallFlags
  pattern InstallCommonFlags {installVerbosity, installDistPref, installWorkingDir, installCabalFilePath, installTargets}
  type InstallFlags :: *
  data InstallFlags = InstallFlags {installCommonFlags :: !CommonSetupFlags, installPackageDB :: Flag Distribution.Simple.Compiler.PackageDB, installDest :: Flag CopyDest, installUseWrapper :: Flag GHC.Types.Bool, installInPlace :: Flag GHC.Types.Bool}
  pattern RegisterCommonFlags :: Flag Distribution.Verbosity.Verbosity -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File) -> [GHC.Internal.Base.String] -> RegisterFlags
  pattern RegisterCommonFlags {registerVerbosity, registerDistPref, registerWorkingDir, registerCabalFilePath, registerTargets}
  type RegisterFlags :: *
  data RegisterFlags = RegisterFlags {registerCommonFlags :: !CommonSetupFlags, regPackageDB :: Flag Distribution.Simple.Compiler.PackageDB, regGenScript :: Flag GHC.Types.Bool, regGenPkgConf :: Flag (GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgConf))), regInPlace :: Flag GHC.Types.Bool, regPrintId :: Flag GHC.Types.Bool}
  pattern ReplCommonFlags :: Flag Distribution.Verbosity.Verbosity -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File) -> [GHC.Internal.Base.String] -> ReplFlags
  pattern ReplCommonFlags {replVerbosity, replDistPref, replWorkingDir, replCabalFilePath, replTargets}
  type ReplFlags :: *
  data ReplFlags = ReplFlags {replCommonFlags :: !CommonSetupFlags, replProgramPaths :: [(GHC.Internal.Base.String, GHC.Internal.IO.FilePath)], replProgramArgs :: [(GHC.Internal.Base.String, [GHC.Internal.Base.String])], replReload :: Flag GHC.Types.Bool, replReplOptions :: ReplOptions}
  type ReplOptions :: *
  data ReplOptions = ReplOptions {replOptionsFlags :: [GHC.Internal.Base.String], replOptionsNoLoad :: Flag GHC.Types.Bool, replOptionsFlagOutput :: Flag GHC.Internal.IO.FilePath}
  pattern SDistCommonFlags :: Flag Distribution.Verbosity.Verbosity -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File) -> [GHC.Internal.Base.String] -> SDistFlags
  pattern SDistCommonFlags {sDistVerbosity, sDistDistPref, sDistWorkingDir, sDistCabalFilePath, sDistTargets}
  type SDistFlags :: *
  data SDistFlags = SDistFlags {sDistCommonFlags :: !CommonSetupFlags, sDistSnapshot :: Flag GHC.Types.Bool, sDistDirectory :: Flag GHC.Internal.IO.FilePath, sDistListSources :: Flag GHC.Internal.IO.FilePath}
  pattern TestCommonFlags :: Flag Distribution.Verbosity.Verbosity -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File) -> [GHC.Internal.Base.String] -> TestFlags
  pattern TestCommonFlags {testVerbosity, testDistPref, testWorkingDir, testCabalFilePath, testTargets}
  type TestFlags :: *
  data TestFlags = TestFlags {testCommonFlags :: !CommonSetupFlags, testHumanLog :: Flag Distribution.Simple.InstallDirs.PathTemplate, testMachineLog :: Flag Distribution.Simple.InstallDirs.PathTemplate, testShowDetails :: Flag TestShowDetails, testKeepTix :: Flag GHC.Types.Bool, testWrapper :: Flag GHC.Internal.IO.FilePath, testFailWhenNoTestSuites :: Flag GHC.Types.Bool, testOptions :: [Distribution.Simple.InstallDirs.PathTemplate]}
  type TestShowDetails :: *
  data TestShowDetails = Never | Failures | Always | Streaming | Direct
  type Visibility :: *
  data Visibility = Visible | Hidden
  benchmarkCommand :: Distribution.Simple.Command.CommandUI BenchmarkFlags
  benchmarkOptions' :: Distribution.Simple.Command.ShowOrParseArgs -> [Distribution.Simple.Command.OptionField BenchmarkFlags]
  boolOpt :: forall a. Distribution.Simple.Command.SFlags -> Distribution.Simple.Command.SFlags -> Distribution.Simple.Command.MkOptDescr (a -> Flag GHC.Types.Bool) (Flag GHC.Types.Bool -> a -> a) a
  boolOpt' :: forall a. Distribution.Simple.Command.OptFlags -> Distribution.Simple.Command.OptFlags -> Distribution.Simple.Command.MkOptDescr (a -> Flag GHC.Types.Bool) (Flag GHC.Types.Bool -> a -> a) a
  buildCommand :: Distribution.Simple.Program.Db.ProgramDb -> Distribution.Simple.Command.CommandUI BuildFlags
  buildOptions :: Distribution.Simple.Program.Db.ProgramDb -> Distribution.Simple.Command.ShowOrParseArgs -> [Distribution.Simple.Command.OptionField BuildFlags]
  buildingWhatCommonFlags :: BuildingWhat -> CommonSetupFlags
  buildingWhatDistPref :: BuildingWhat -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist)
  buildingWhatVerbosity :: BuildingWhat -> Distribution.Verbosity.Verbosity
  buildingWhatWorkingDir :: BuildingWhat -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg))
  cleanCommand :: Distribution.Simple.Command.CommandUI CleanFlags
  commonSetupTempFileOptions :: CommonSetupFlags -> Distribution.Simple.Utils.TempFileOptions
  configPrograms :: Distribution.Compat.Stack.WithCallStack (ConfigFlags -> Distribution.Simple.Program.Db.ProgramDb)
  configureArgs :: GHC.Types.Bool -> ConfigFlags -> [GHC.Internal.Base.String]
  configureCCompiler :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Types.IO (GHC.Internal.IO.FilePath, [GHC.Internal.Base.String])
  configureCommand :: Distribution.Simple.Program.Db.ProgramDb -> Distribution.Simple.Command.CommandUI ConfigFlags
  configureLinker :: Distribution.Verbosity.Verbosity -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Types.IO (GHC.Internal.IO.FilePath, [GHC.Internal.Base.String])
  configureOptions :: Distribution.Simple.Command.ShowOrParseArgs -> [Distribution.Simple.Command.OptionField ConfigFlags]
  copyCommand :: Distribution.Simple.Command.CommandUI CopyFlags
  defaultBenchmarkFlags :: BenchmarkFlags
  defaultBuildFlags :: BuildFlags
  defaultCleanFlags :: CleanFlags
  defaultCommonSetupFlags :: CommonSetupFlags
  defaultConfigFlags :: Distribution.Simple.Program.Db.ProgramDb -> ConfigFlags
  defaultCopyFlags :: CopyFlags
  defaultDistPref :: Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist)
  defaultGlobalFlags :: GlobalFlags
  defaultHaddockFlags :: HaddockFlags
  defaultHaddockProjectFlags :: HaddockProjectFlags
  defaultHscolourFlags :: HscolourFlags
  defaultInstallFlags :: InstallFlags
  defaultRegisterFlags :: RegisterFlags
  defaultReplFlags :: ReplFlags
  defaultSDistFlags :: SDistFlags
  defaultTestFlags :: TestFlags
  emptyBenchmarkFlags :: BenchmarkFlags
  emptyBuildFlags :: BuildFlags
  emptyCleanFlags :: CleanFlags
  emptyConfigFlags :: ConfigFlags
  emptyCopyFlags :: CopyFlags
  emptyGlobalFlags :: GlobalFlags
  emptyHaddockFlags :: HaddockFlags
  emptyHaddockProjectFlags :: HaddockProjectFlags
  emptyHscolourFlags :: HscolourFlags
  emptyInstallFlags :: InstallFlags
  emptyRegisterFlags :: RegisterFlags
  emptySDistFlags :: SDistFlags
  emptyTestFlags :: TestFlags
  falseArg :: forall a. Distribution.Simple.Command.MkOptDescr (a -> Flag GHC.Types.Bool) (Flag GHC.Types.Bool -> a -> a) a
  flagToList :: forall a. Flag a -> [a]
  flagToMaybe :: forall a. Flag a -> GHC.Internal.Maybe.Maybe a
  fromFlag :: forall a. Distribution.Compat.Stack.WithCallStack (Flag a -> a)
  fromFlagOrDefault :: forall a. a -> Flag a -> a
  globalCommand :: forall action. [Distribution.Simple.Command.Command action] -> Distribution.Simple.Command.CommandUI GlobalFlags
  haddockCommand :: Distribution.Simple.Command.CommandUI HaddockFlags
  haddockOptions :: Distribution.Simple.Command.ShowOrParseArgs -> [Distribution.Simple.Command.OptionField HaddockFlags]
  haddockProjectCommand :: Distribution.Simple.Command.CommandUI HaddockProjectFlags
  haddockProjectOptions :: Distribution.Simple.Command.ShowOrParseArgs -> [Distribution.Simple.Command.OptionField HaddockProjectFlags]
  hscolourCommand :: Distribution.Simple.Command.CommandUI HscolourFlags
  installCommand :: Distribution.Simple.Command.CommandUI InstallFlags
  installDirsOptions :: [Distribution.Simple.Command.OptionField (Distribution.Simple.InstallDirs.InstallDirs (Flag Distribution.Simple.InstallDirs.PathTemplate))]
  maybeToFlag :: forall a. GHC.Internal.Maybe.Maybe a -> Flag a
  optionDistPref :: forall flags. (flags -> Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist))) -> (Flag (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist)) -> flags -> flags) -> Distribution.Simple.Command.ShowOrParseArgs -> Distribution.Simple.Command.OptionField flags
  optionVerbosity :: forall flags. (flags -> Flag Distribution.Verbosity.Verbosity) -> (Flag Distribution.Verbosity.Verbosity -> flags -> flags) -> Distribution.Simple.Command.OptionField flags
  programDbOptions :: forall flags. Distribution.Simple.Program.Db.ProgramDb -> Distribution.Simple.Command.ShowOrParseArgs -> (flags -> [(GHC.Internal.Base.String, [GHC.Internal.Base.String])]) -> ([(GHC.Internal.Base.String, [GHC.Internal.Base.String])] -> flags -> flags) -> [Distribution.Simple.Command.OptionField flags]
  programDbPaths' :: forall flags. (GHC.Internal.Base.String -> GHC.Internal.Base.String) -> Distribution.Simple.Program.Db.ProgramDb -> Distribution.Simple.Command.ShowOrParseArgs -> (flags -> [(GHC.Internal.Base.String, GHC.Internal.IO.FilePath)]) -> ([(GHC.Internal.Base.String, GHC.Internal.IO.FilePath)] -> flags -> flags) -> [Distribution.Simple.Command.OptionField flags]
  programFlagsDescription :: Distribution.Simple.Program.Db.ProgramDb -> GHC.Internal.Base.String
  readPackageDb :: GHC.Internal.Base.String -> GHC.Internal.Maybe.Maybe Distribution.Simple.Compiler.PackageDB
  readPackageDbList :: GHC.Internal.Base.String -> [GHC.Internal.Maybe.Maybe Distribution.Simple.Compiler.PackageDB]
  registerCommand :: Distribution.Simple.Command.CommandUI RegisterFlags
  replCommand :: Distribution.Simple.Program.Db.ProgramDb -> Distribution.Simple.Command.CommandUI ReplFlags
  replOptions :: Distribution.Simple.Command.ShowOrParseArgs -> [Distribution.Simple.Command.OptionField ReplOptions]
  sdistCommand :: Distribution.Simple.Command.CommandUI SDistFlags
  showPackageDb :: GHC.Internal.Maybe.Maybe Distribution.Simple.Compiler.PackageDB -> GHC.Internal.Base.String
  showPackageDbList :: [GHC.Internal.Maybe.Maybe Distribution.Simple.Compiler.PackageDB] -> [GHC.Internal.Base.String]
  splitArgs :: GHC.Internal.Base.String -> [GHC.Internal.Base.String]
  testCommand :: Distribution.Simple.Command.CommandUI TestFlags
  testOptions' :: Distribution.Simple.Command.ShowOrParseArgs -> [Distribution.Simple.Command.OptionField TestFlags]
  toFlag :: forall a. a -> Flag a
  trueArg :: forall a. Distribution.Simple.Command.MkOptDescr (a -> Flag GHC.Types.Bool) (Flag GHC.Types.Bool -> a -> a) a
  unregisterCommand :: Distribution.Simple.Command.CommandUI RegisterFlags

module Distribution.Simple.SetupHooks.Errors where
  type CannotApplyComponentDiffReason :: *
  data CannotApplyComponentDiffReason = MismatchedComponentTypes Distribution.Types.Component.Component Distribution.Types.Component.Component | IllegalComponentDiff Distribution.Types.Component.Component (GHC.Internal.Base.NonEmpty IllegalComponentDiffReason)
  type IllegalComponentDiffReason :: *
  data IllegalComponentDiffReason = CannotChangeName | CannotChangeComponentField GHC.Internal.Base.String | CannotChangeBuildInfoField GHC.Internal.Base.String
  type RulesException :: *
  data RulesException
    = CyclicRuleDependencies (GHC.Internal.Base.NonEmpty (Distribution.Simple.SetupHooks.Rule.RuleBinary, [Data.Tree.Tree Distribution.Simple.SetupHooks.Rule.RuleBinary]))
    | CantFindSourceForRuleDependencies Distribution.Simple.SetupHooks.Rule.RuleBinary (GHC.Internal.Base.NonEmpty Distribution.Simple.SetupHooks.Rule.Location)
    | MissingRuleOutputs Distribution.Simple.SetupHooks.Rule.RuleBinary (GHC.Internal.Base.NonEmpty Distribution.Simple.SetupHooks.Rule.Location)
    | InvalidRuleOutputIndex Distribution.Simple.SetupHooks.Rule.RuleId Distribution.Simple.SetupHooks.Rule.RuleId (GHC.Internal.Base.NonEmpty Distribution.Simple.SetupHooks.Rule.Location) GHC.Types.Word
    | DuplicateRuleId !Distribution.Simple.SetupHooks.Rule.RuleId !Distribution.Simple.SetupHooks.Rule.Rule !Distribution.Simple.SetupHooks.Rule.Rule
  type SetupHooksException :: *
  data SetupHooksException = CannotApplyComponentDiff CannotApplyComponentDiffReason | RulesException RulesException
  setupHooksExceptionCode :: SetupHooksException -> GHC.Types.Int
  setupHooksExceptionMessage :: SetupHooksException -> GHC.Internal.Base.String

module Distribution.Simple.SetupHooks.Internal where
  type BenchmarkDiff :: *
  type BenchmarkDiff = Distribution.Types.Benchmark.Benchmark
  type BuildHooks :: *
  data BuildHooks = BuildHooks {preBuildComponentRules :: GHC.Internal.Maybe.Maybe PreBuildComponentRules, postBuildComponentHook :: GHC.Internal.Maybe.Maybe PostBuildComponentHook}
  type BuildInfoDiff :: *
  type BuildInfoDiff = Distribution.Types.BuildInfo.BuildInfo
  type BuildingWhat :: *
  data BuildingWhat = BuildNormal Cabal-3.15.0.0:Distribution.Simple.Setup.Build.BuildFlags | BuildRepl Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplFlags | BuildHaddock Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockFlags | BuildHscolour Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour.HscolourFlags
  type ComponentDiff :: *
  newtype ComponentDiff = ComponentDiff {componentDiff :: Distribution.Types.Component.Component}
  type ConfigureHooks :: *
  data ConfigureHooks = ConfigureHooks {preConfPackageHook :: GHC.Internal.Maybe.Maybe PreConfPackageHook, postConfPackageHook :: GHC.Internal.Maybe.Maybe PostConfPackageHook, preConfComponentHook :: GHC.Internal.Maybe.Maybe PreConfComponentHook}
  type ExecutableDiff :: *
  type ExecutableDiff = Distribution.Types.Executable.Executable
  type ForeignLibDiff :: *
  type ForeignLibDiff = Distribution.Types.ForeignLib.ForeignLib
  type InstallComponentHook :: *
  type InstallComponentHook = InstallComponentInputs -> GHC.Types.IO ()
  type InstallComponentInputs :: *
  data InstallComponentInputs = InstallComponentInputs {copyFlags :: Cabal-3.15.0.0:Distribution.Simple.Setup.Copy.CopyFlags, localBuildInfo :: Distribution.Types.LocalBuildInfo.LocalBuildInfo, targetInfo :: Distribution.Types.TargetInfo.TargetInfo}
  type InstallHooks :: *
  data InstallHooks = InstallHooks {installComponentHook :: GHC.Internal.Maybe.Maybe InstallComponentHook}
  type LibraryDiff :: *
  type LibraryDiff = Distribution.Types.Library.Library
  type PostBuildComponentHook :: *
  type PostBuildComponentHook = PostBuildComponentInputs -> GHC.Types.IO ()
  type PostBuildComponentInputs :: *
  data PostBuildComponentInputs = PostBuildComponentInputs {buildFlags :: Cabal-3.15.0.0:Distribution.Simple.Setup.Build.BuildFlags, localBuildInfo :: Distribution.Types.LocalBuildInfo.LocalBuildInfo, targetInfo :: Distribution.Types.TargetInfo.TargetInfo}
  type PostConfPackageHook :: *
  type PostConfPackageHook = PostConfPackageInputs -> GHC.Types.IO ()
  type PostConfPackageInputs :: *
  data PostConfPackageInputs = PostConfPackageInputs {localBuildConfig :: Distribution.Types.LocalBuildConfig.LocalBuildConfig, packageBuildDescr :: Distribution.Types.LocalBuildConfig.PackageBuildDescr}
  type PreBuildComponentInputs :: *
  data PreBuildComponentInputs = PreBuildComponentInputs {buildingWhat :: BuildingWhat, localBuildInfo :: Distribution.Types.LocalBuildInfo.LocalBuildInfo, targetInfo :: Distribution.Types.TargetInfo.TargetInfo}
  type PreBuildComponentRules :: *
  type PreBuildComponentRules = Distribution.Simple.SetupHooks.Rule.Rules PreBuildComponentInputs
  type PreConfComponentHook :: *
  type PreConfComponentHook = PreConfComponentInputs -> GHC.Types.IO PreConfComponentOutputs
  type PreConfComponentInputs :: *
  data PreConfComponentInputs = PreConfComponentInputs {localBuildConfig :: Distribution.Types.LocalBuildConfig.LocalBuildConfig, packageBuildDescr :: Distribution.Types.LocalBuildConfig.PackageBuildDescr, component :: Distribution.Types.Component.Component}
  type PreConfComponentOutputs :: *
  data PreConfComponentOutputs = PreConfComponentOutputs {componentDiff :: ComponentDiff}
  type PreConfPackageHook :: *
  type PreConfPackageHook = PreConfPackageInputs -> GHC.Types.IO PreConfPackageOutputs
  type PreConfPackageInputs :: *
  data PreConfPackageInputs = PreConfPackageInputs {configFlags :: Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags, localBuildConfig :: Distribution.Types.LocalBuildConfig.LocalBuildConfig, compiler :: Distribution.Simple.Compiler.Compiler, platform :: Distribution.System.Platform}
  type PreConfPackageOutputs :: *
  data PreConfPackageOutputs = PreConfPackageOutputs {buildOptions :: Distribution.Types.LocalBuildConfig.BuildOptions, extraConfiguredProgs :: Distribution.Simple.Program.Db.ConfiguredProgs}
  type SetupHooks :: *
  data SetupHooks = SetupHooks {configureHooks :: ConfigureHooks, buildHooks :: BuildHooks, installHooks :: InstallHooks}
  type TestSuiteDiff :: *
  type TestSuiteDiff = Distribution.Types.TestSuite.TestSuite
  applyComponentDiffs :: Distribution.Verbosity.Verbosity -> (Distribution.Types.Component.Component -> GHC.Types.IO (GHC.Internal.Maybe.Maybe ComponentDiff)) -> Distribution.Types.PackageDescription.PackageDescription -> GHC.Types.IO Distribution.Types.PackageDescription.PackageDescription
  buildInfoComponentDiff :: Distribution.Types.ComponentName.ComponentName -> Distribution.Types.BuildInfo.BuildInfo -> ComponentDiff
  buildingWhatDistPref :: BuildingWhat -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist)
  buildingWhatVerbosity :: BuildingWhat -> Distribution.Verbosity.Verbosity
  buildingWhatWorkingDir :: BuildingWhat -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg))
  emptyComponentDiff :: Distribution.Types.ComponentName.ComponentName -> ComponentDiff
  executeRules :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.TargetInfo.TargetInfo -> Data.Map.Internal.Map Distribution.Simple.SetupHooks.Rule.RuleId Distribution.Simple.SetupHooks.Rule.Rule -> GHC.Types.IO ()
  forComponents_ :: Distribution.Types.PackageDescription.PackageDescription -> (Distribution.Types.Component.Component -> GHC.Types.IO ()) -> GHC.Types.IO ()
  hookedBuildInfoComponentDiff_maybe :: Distribution.Types.HookedBuildInfo.HookedBuildInfo -> Distribution.Types.ComponentName.ComponentName -> GHC.Internal.Maybe.Maybe (GHC.Types.IO ComponentDiff)
  hookedBuildInfoComponents :: Distribution.Types.HookedBuildInfo.HookedBuildInfo -> Data.Set.Internal.Set Distribution.Types.ComponentName.ComponentName
  noBuildHooks :: BuildHooks
  noConfigureHooks :: ConfigureHooks
  noInstallHooks :: InstallHooks
  noPreConfComponentOutputs :: PreConfComponentInputs -> PreConfComponentOutputs
  noPreConfPackageOutputs :: PreConfPackageInputs -> PreConfPackageOutputs
  noSetupHooks :: SetupHooks

module Distribution.Simple.SetupHooks.Rule where
  type Command :: * -> * -> *
  type Command = CommandData User :: * -> * -> *
  type role CommandData nominal nominal nominal
  type CommandData :: Scope -> * -> * -> *
  data CommandData scope arg res = Command {actionPtr :: !(Static scope (arg -> res)), actionArg :: !(Distribution.Simple.SetupHooks.Rule.ScopedArgument scope arg), cmdInstances :: !(Static scope (Dict (binary-0.8.9.2:Data.Binary.Class.Binary arg, GHC.Internal.Show.Show arg)))}
  type Dependency :: *
  data Dependency = RuleDependency !RuleOutput | FileDependency !Location
  type role DepsRes phantom phantom representational
  type DepsRes :: forall {k}. Scope -> k -> * -> *
  newtype DepsRes scope depsArg depsRes = DepsRes {depsRes :: Distribution.Simple.SetupHooks.Rule.ScopedArgument scope depsRes}
  type Dict :: Constraint -> *
  data Dict c where
    Dict :: forall (c :: Constraint). c => Dict c
  type role DynDepsCmd nominal nominal nominal
  type DynDepsCmd :: Scope -> * -> * -> *
  newtype DynDepsCmd scope depsArg depsRes = DynDepsCmd {dynDepsCmd :: CommandData scope depsArg (GHC.Types.IO ([Dependency], depsRes))}
  type Location :: *
  data Location where
    Location :: forall baseDir. {locationBaseDir :: !(Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir baseDir)), locationRelPath :: !(Distribution.Utils.Path.RelativePath baseDir Distribution.Utils.Path.File)} -> Location
  type MonitorFilePath :: *
  data MonitorFilePath = MonitorFile {monitorKindFile :: !MonitorKindFile, monitorKindDir :: !MonitorKindDir, monitorPath :: !GHC.Internal.IO.FilePath} | MonitorFileGlob {monitorKindFile :: !MonitorKindFile, monitorKindDir :: !MonitorKindDir, monitorPathGlob :: !Distribution.Simple.FileMonitor.Types.RootedGlob}
  type MonitorKindDir :: *
  data MonitorKindDir = DirExists | DirModTime | DirNotExists
  type MonitorKindFile :: *
  data MonitorKindFile = FileExists | FileModTime | FileHashed | FileNotExists
  type Rule :: *
  type Rule = RuleData User
  type RuleBinary :: *
  type RuleBinary = RuleData System
  type RuleCmds :: Scope -> *
  type RuleCmds scope = RuleCommands scope DynDepsCmd CommandData
  type role RuleCommands nominal representational representational
  type RuleCommands :: Scope -> (Scope -> * -> * -> *) -> (Scope -> * -> * -> *) -> *
  data RuleCommands scope deps ruleCmd where
    StaticRuleCommand :: forall arg (deps :: Scope -> * -> * -> *) (ruleCmd :: Scope -> * -> * -> *) (scope :: Scope). GHC.Internal.Data.Type.Bool.If (scope GHC.Internal.Data.Type.Equality.== System) (arg ~ Data.ByteString.Lazy.Internal.ByteString) (() :: Constraint) => {staticRuleCommand :: !(ruleCmd scope arg (GHC.Types.IO ())), staticRuleArgRep :: !(GHC.Internal.Data.Type.Bool.If (scope GHC.Internal.Data.Type.Equality.== System) ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.SomeTypeRep (ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.TypeRep arg))} -> RuleCommands scope deps ruleCmd
    DynamicRuleCommands :: forall depsArg depsRes arg (deps :: Scope -> * -> * -> *) (ruleCmd :: Scope -> * -> * -> *) (scope :: Scope).
                           GHC.Internal.Data.Type.Bool.If (scope GHC.Internal.Data.Type.Equality.== System) (depsArg ~ Data.ByteString.Lazy.Internal.ByteString, depsRes ~ Data.ByteString.Lazy.Internal.ByteString, arg ~ Data.ByteString.Lazy.Internal.ByteString) (() :: Constraint) =>
                           {dynamicRuleInstances :: !(Static scope (Dict (binary-0.8.9.2:Data.Binary.Class.Binary depsRes, GHC.Internal.Show.Show depsRes, GHC.Classes.Eq depsRes))), dynamicDeps :: !(deps scope depsArg depsRes), dynamicRuleCommand :: !(ruleCmd scope arg (depsRes -> GHC.Types.IO ())), dynamicRuleTypeRep :: !(GHC.Internal.Data.Type.Bool.If (scope GHC.Internal.Data.Type.Equality.== System) ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.SomeTypeRep (ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.TypeRep (depsArg, depsRes, arg)))} -> RuleCommands scope deps ruleCmd
  type role RuleData nominal
  type RuleData :: Scope -> *
  data RuleData scope = Rule {ruleCommands :: !(RuleCmds scope), staticDependencies :: ![Dependency], results :: !(GHC.Internal.Base.NonEmpty Location)}
  type RuleDynDepsCmd :: Scope -> *
  type RuleDynDepsCmd scope = RuleCommands scope DynDepsCmd Distribution.Simple.SetupHooks.Rule.NoCmd
  type RuleExecCmd :: Scope -> *
  type RuleExecCmd scope = RuleCommands scope DepsRes CommandData
  type RuleId :: *
  data RuleId
    = RuleId {ruleNameSpace :: !Distribution.Simple.SetupHooks.Rule.RulesNameSpace,
              ruleName :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                           ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText}
  type RuleOutput :: *
  data RuleOutput = RuleOutput {outputOfRule :: !RuleId, outputIndex :: {-# UNPACK #-}GHC.Types.Word}
  type Rules :: * -> *
  newtype Rules env = Rules {runRules :: env -> RulesM ()}
  type RulesEnv :: *
  data RulesEnv = RulesEnv {rulesEnvVerbosity :: !Distribution.Verbosity.Verbosity, rulesEnvNameSpace :: !Distribution.Simple.SetupHooks.Rule.RulesNameSpace}
  type RulesM :: * -> *
  type RulesM a = RulesT GHC.Types.IO a
  type role RulesT representational nominal
  type RulesT :: (* -> *) -> * -> *
  newtype RulesT m a = RulesT {runRulesT :: Control.Monad.Trans.Reader.ReaderT RulesEnv (Control.Monad.Trans.State.Lazy.StateT (Data.Map.Internal.Map RuleId Rule) (Control.Monad.Trans.Writer.CPS.WriterT [MonitorFilePath] m)) a}
  type role SScope nominal
  type SScope :: Scope -> *
  data SScope scope where
    SUser :: SScope User
    SSystem :: SScope System
  type Scope :: *
  data Scope = User | System
  type Static :: Scope -> * -> *
  data family Static scope
  SystemStatic :: forall fnTy. GHC.Internal.StaticPtr.StaticKey -> Static System fnTy
  UserStatic :: forall fnTy. GHC.Internal.StaticPtr.StaticPtr fnTy -> Static User fnTy
  computeRules :: forall env. Distribution.Verbosity.Verbosity -> env -> Rules env -> GHC.Types.IO (Data.Map.Internal.Map RuleId Rule, [MonitorFilePath])
  dynamicRule :: forall depsArg depsRes arg. (ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable depsArg, ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable depsRes, ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable arg) => GHC.Internal.StaticPtr.StaticPtr (Dict (binary-0.8.9.2:Data.Binary.Class.Binary depsRes, GHC.Internal.Show.Show depsRes, GHC.Classes.Eq depsRes)) -> Command depsArg (GHC.Types.IO ([Dependency], depsRes)) -> Command arg (depsRes -> GHC.Types.IO ()) -> [Dependency] -> GHC.Internal.Base.NonEmpty Location -> Rule
  location :: Location -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File
  mkCommand :: forall arg res. GHC.Internal.StaticPtr.StaticPtr (Dict (binary-0.8.9.2:Data.Binary.Class.Binary arg, GHC.Internal.Show.Show arg)) -> GHC.Internal.StaticPtr.StaticPtr (arg -> res) -> arg -> Command arg res
  noRules :: RulesM ()
  ruleBinary :: Rule -> RuleBinary
  ruleDepsCmd :: forall (scope :: Scope). RuleCmds scope -> RuleDynDepsCmd scope
  ruleExecCmd :: forall (scope :: Scope). SScope scope -> RuleCmds scope -> GHC.Internal.Maybe.Maybe Data.ByteString.Lazy.Internal.ByteString -> RuleExecCmd scope
  rules :: forall label env. GHC.Internal.StaticPtr.StaticPtr label -> (env -> RulesM ()) -> Rules env
  runCommand :: forall args res. Command args res -> res
  runRuleDynDepsCmd :: RuleDynDepsCmd User -> GHC.Internal.Maybe.Maybe (GHC.Types.IO ([Dependency], Data.ByteString.Lazy.Internal.ByteString))
  runRuleExecCmd :: RuleExecCmd User -> GHC.Types.IO ()
  staticRule :: forall arg. ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable arg => Command arg (GHC.Types.IO ()) -> [Dependency] -> GHC.Internal.Base.NonEmpty Location -> Rule
  userStaticKey :: forall fnTy. Static System fnTy -> GHC.Internal.StaticPtr.StaticKey
  userStaticPtr :: forall fnTy. Static User fnTy -> GHC.Internal.StaticPtr.StaticPtr fnTy

module Distribution.Simple.ShowBuildInfo where
  mkBuildInfo :: Distribution.Utils.Path.AbsolutePath (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg) -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Cabal-3.15.0.0:Distribution.Simple.Setup.Build.BuildFlags -> (Distribution.Simple.Program.Types.ConfiguredProgram, Distribution.Simple.Compiler.Compiler) -> [Distribution.Types.TargetInfo.TargetInfo] -> ([GHC.Internal.Base.String], Distribution.Utils.Json.Json)
  mkBuildInfo' :: Distribution.Utils.Json.Json -> [Distribution.Utils.Json.Json] -> [(GHC.Internal.Base.String, Distribution.Utils.Json.Json)]
  mkCompilerInfo :: Distribution.Simple.Program.Types.ConfiguredProgram -> Distribution.Simple.Compiler.Compiler -> Distribution.Utils.Json.Json
  mkComponentInfo :: Distribution.Utils.Path.AbsolutePath (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg) -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> ([GHC.Internal.Base.String], Distribution.Utils.Json.Json)

module Distribution.Simple.SrcDist where
  createArchive :: Distribution.Verbosity.Verbosity -> Distribution.Types.PackageDescription.PackageDescription -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> GHC.Types.IO GHC.Internal.IO.FilePath
  dateToSnapshotNumber :: time-1.12.2:Data.Time.Clock.Internal.UTCTime.UTCTime -> GHC.Types.Int
  listPackageSources :: Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Types.PackageDescription.PackageDescription -> [Distribution.Simple.PreProcess.PPSuffixHandler] -> GHC.Types.IO [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
  listPackageSourcesWithDie :: Distribution.Verbosity.Verbosity -> (forall res. Distribution.Verbosity.Verbosity -> Distribution.Simple.Errors.CabalException -> GHC.Types.IO [res]) -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Types.PackageDescription.PackageDescription -> [Distribution.Simple.PreProcess.PPSuffixHandler] -> GHC.Types.IO [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
  prepareSnapshotTree :: Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Types.PackageDescription.PackageDescription -> GHC.Internal.IO.FilePath -> [Distribution.Simple.PreProcess.PPSuffixHandler] -> GHC.Types.IO ()
  prepareTree :: Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Types.PackageDescription.PackageDescription -> GHC.Internal.IO.FilePath -> [Distribution.Simple.PreProcess.PPSuffixHandler] -> GHC.Types.IO ()
  printPackageProblems :: Distribution.Verbosity.Verbosity -> Distribution.Types.PackageDescription.PackageDescription -> GHC.Types.IO ()
  sdist :: Distribution.Types.PackageDescription.PackageDescription -> Cabal-3.15.0.0:Distribution.Simple.Setup.SDist.SDistFlags -> (GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath) -> [Distribution.Simple.PreProcess.PPSuffixHandler] -> GHC.Types.IO ()
  snapshotPackage :: time-1.12.2:Data.Time.Clock.Internal.UTCTime.UTCTime -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.PackageDescription.PackageDescription
  snapshotVersion :: time-1.12.2:Data.Time.Clock.Internal.UTCTime.UTCTime -> Distribution.Types.Version.Version -> Distribution.Types.Version.Version

module Distribution.Simple.Test where
  test :: Distribution.Simple.UserHooks.Args -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestFlags -> GHC.Types.IO ()

module Distribution.Simple.Test.ExeV10 where
  runTest :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> Distribution.Simple.Hpc.HPCMarkupInfo -> Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestFlags -> Distribution.Types.TestSuite.TestSuite -> GHC.Types.IO Distribution.Simple.Test.Log.TestSuiteLog

module Distribution.Simple.Test.LibV09 where
  runTest :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> Distribution.Simple.Hpc.HPCMarkupInfo -> Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestFlags -> Distribution.Types.TestSuite.TestSuite -> GHC.Types.IO Distribution.Simple.Test.Log.TestSuiteLog
  simpleTestStub :: Distribution.ModuleName.ModuleName -> GHC.Internal.Base.String
  stubFilePath :: Distribution.Types.TestSuite.TestSuite -> GHC.Internal.IO.FilePath
  stubMain :: GHC.Types.IO [Distribution.TestSuite.Test] -> GHC.Types.IO ()
  stubName :: Distribution.Types.TestSuite.TestSuite -> GHC.Internal.IO.FilePath
  stubWriteLog :: GHC.Internal.IO.FilePath -> Distribution.Types.UnqualComponentName.UnqualComponentName -> Distribution.Simple.Test.Log.TestLogs -> GHC.Types.IO ()
  writeSimpleTestStub :: Distribution.Types.TestSuite.TestSuite -> GHC.Internal.IO.FilePath -> GHC.Types.IO ()

module Distribution.Simple.Test.Log where
  type PackageLog :: *
  data PackageLog = PackageLog {package :: Distribution.Types.PackageId.PackageId, compiler :: Distribution.Compiler.CompilerId, platform :: Distribution.System.Platform, testSuites :: [TestSuiteLog]}
  type TestLogs :: *
  data TestLogs = TestLog {testName :: GHC.Internal.Base.String, testOptionsReturned :: Distribution.TestSuite.Options, testResult :: Distribution.TestSuite.Result} | GroupLogs GHC.Internal.Base.String [TestLogs]
  type TestSuiteLog :: *
  data TestSuiteLog = TestSuiteLog {testSuiteName :: Distribution.Types.UnqualComponentName.UnqualComponentName, testLogs :: TestLogs, logFile :: GHC.Internal.IO.FilePath}
  countTestResults :: TestLogs -> (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  localPackageLog :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> PackageLog
  suiteError :: TestLogs -> GHC.Types.Bool
  suiteFailed :: TestLogs -> GHC.Types.Bool
  suitePassed :: TestLogs -> GHC.Types.Bool
  summarizePackage :: Distribution.Verbosity.Verbosity -> PackageLog -> GHC.Types.IO GHC.Types.Bool
  summarizeSuiteFinish :: TestSuiteLog -> GHC.Internal.Base.String
  summarizeSuiteStart :: GHC.Internal.Base.String -> GHC.Internal.Base.String
  summarizeTest :: Distribution.Verbosity.Verbosity -> Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestShowDetails -> TestLogs -> GHC.Types.IO ()
  testSuiteLogPath :: Distribution.Simple.InstallDirs.PathTemplate -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Internal.Base.String -> TestLogs -> GHC.Internal.IO.FilePath

module Distribution.Simple.UHC where
  buildExe :: Distribution.Verbosity.Verbosity -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.Executable.Executable -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO ()
  buildLib :: Distribution.Verbosity.Verbosity -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Types.Library.Library -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO ()
  configure :: Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Types.IO (Distribution.Simple.Compiler.Compiler, GHC.Internal.Maybe.Maybe Distribution.System.Platform, Distribution.Simple.Program.Db.ProgramDb)
  getInstalledPackages :: forall from. Distribution.Verbosity.Verbosity -> Distribution.Simple.Compiler.Compiler -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir from)) -> Distribution.Simple.Compiler.PackageDBStackX (Distribution.Utils.Path.SymbolicPath from (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB)) -> Distribution.Simple.Program.Db.ProgramDb -> GHC.Types.IO Distribution.Simple.PackageIndex.InstalledPackageIndex
  inplacePackageDbPath :: Distribution.Types.LocalBuildInfo.LocalBuildInfo -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.PkgDB)
  installLib :: Distribution.Verbosity.Verbosity -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.Library.Library -> Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -> GHC.Types.IO ()
  registerPackage :: forall from. Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir from)) -> Distribution.Simple.Compiler.Compiler -> Distribution.Simple.Program.Db.ProgramDb -> Distribution.Simple.Compiler.PackageDBStackS from -> Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -> GHC.Types.IO ()

module Distribution.Simple.UserHooks where
  type Args :: *
  type Args = [GHC.Internal.Base.String]
  type UserHooks :: *
  data UserHooks
    = UserHooks {readDesc :: GHC.Types.IO (GHC.Internal.Maybe.Maybe Distribution.Types.GenericPackageDescription.GenericPackageDescription),
                 hookedPreProcessors :: [Distribution.Simple.PreProcess.PPSuffixHandler],
                 hookedPrograms :: [Distribution.Simple.Program.Types.Program],
                 preConf :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 confHook :: (Distribution.Types.GenericPackageDescription.GenericPackageDescription, Distribution.Types.HookedBuildInfo.HookedBuildInfo) -> Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags -> GHC.Types.IO Distribution.Types.LocalBuildInfo.LocalBuildInfo,
                 postConf :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO (),
                 preBuild :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Build.BuildFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 buildHook :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Build.BuildFlags -> GHC.Types.IO (),
                 postBuild :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Build.BuildFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO (),
                 preRepl :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 replHook :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplFlags -> [GHC.Internal.Base.String] -> GHC.Types.IO (),
                 postRepl :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO (),
                 preClean :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Clean.CleanFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 cleanHook :: Distribution.Types.PackageDescription.PackageDescription -> () -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Clean.CleanFlags -> GHC.Types.IO (),
                 postClean :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Clean.CleanFlags -> Distribution.Types.PackageDescription.PackageDescription -> () -> GHC.Types.IO (),
                 preCopy :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Copy.CopyFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 copyHook :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Copy.CopyFlags -> GHC.Types.IO (),
                 postCopy :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Copy.CopyFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO (),
                 preInst :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Install.InstallFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 instHook :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Install.InstallFlags -> GHC.Types.IO (),
                 postInst :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Install.InstallFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO (),
                 preReg :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Register.RegisterFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 regHook :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Register.RegisterFlags -> GHC.Types.IO (),
                 postReg :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Register.RegisterFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO (),
                 preUnreg :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Register.RegisterFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 unregHook :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Register.RegisterFlags -> GHC.Types.IO (),
                 postUnreg :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Register.RegisterFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO (),
                 preHscolour :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour.HscolourFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 hscolourHook :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour.HscolourFlags -> GHC.Types.IO (),
                 postHscolour :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour.HscolourFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO (),
                 preHaddock :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 haddockHook :: Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockFlags -> GHC.Types.IO (),
                 postHaddock :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO (),
                 preTest :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 testHook :: Args -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestFlags -> GHC.Types.IO (),
                 postTest :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO (),
                 preBench :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Benchmark.BenchmarkFlags -> GHC.Types.IO Distribution.Types.HookedBuildInfo.HookedBuildInfo,
                 benchHook :: Args -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> UserHooks -> Cabal-3.15.0.0:Distribution.Simple.Setup.Benchmark.BenchmarkFlags -> GHC.Types.IO (),
                 postBench :: Args -> Cabal-3.15.0.0:Distribution.Simple.Setup.Benchmark.BenchmarkFlags -> Distribution.Types.PackageDescription.PackageDescription -> Distribution.Types.LocalBuildInfo.LocalBuildInfo -> GHC.Types.IO ()}
  emptyUserHooks :: UserHooks

module Distribution.Simple.Utils where
  type IOData :: *
  data IOData = IODataText GHC.Internal.Base.String | IODataBinary Data.ByteString.Lazy.Internal.ByteString
  type role IODataMode nominal
  type IODataMode :: * -> *
  data IODataMode mode where
    IODataModeText :: IODataMode [GHC.Types.Char]
    IODataModeBinary :: IODataMode Data.ByteString.Lazy.Internal.ByteString
  type KnownIODataMode :: * -> Constraint
  class Control.DeepSeq.NFData mode => KnownIODataMode mode where
    hGetIODataContents :: GHC.Internal.IO.Handle.Types.Handle -> GHC.Types.IO mode
    toIOData :: mode -> IOData
    iodataMode :: IODataMode mode
    {-# MINIMAL hGetIODataContents, toIOData, iodataMode #-}
  type Suffix :: *
  newtype Suffix = Suffix GHC.Internal.Base.String
  type TempFileOptions :: *
  data TempFileOptions = TempFileOptions {optKeepTempFiles :: GHC.Types.Bool}
  type VerboseException :: * -> *
  data VerboseException a = VerboseException GHC.Internal.Stack.Types.CallStack time-1.12.2:Data.Time.Clock.Internal.POSIXTime.POSIXTime Distribution.Verbosity.Verbosity a
  addLibraryPath :: Distribution.System.OS -> [GHC.Internal.IO.FilePath] -> [(GHC.Internal.Base.String, GHC.Internal.Base.String)] -> [(GHC.Internal.Base.String, GHC.Internal.Base.String)]
  annotateIO :: forall a. Distribution.Verbosity.Verbosity -> GHC.Types.IO a -> GHC.Types.IO a
  cabalVersion :: Distribution.Types.Version.Version
  chattyTry :: GHC.Internal.Base.String -> GHC.Types.IO () -> GHC.Types.IO ()
  comparing :: forall a b. GHC.Classes.Ord a => (b -> a) -> b -> b -> GHC.Types.Ordering
  copyDirectoryRecursive :: Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> GHC.Types.IO ()
  copyFileTo :: Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> GHC.Types.IO ()
  copyFileToCwd :: forall target. Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir target) -> Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File -> GHC.Types.IO ()
  copyFileVerbose :: Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> GHC.Types.IO ()
  copyFiles :: Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> [(GHC.Internal.IO.FilePath, GHC.Internal.IO.FilePath)] -> GHC.Types.IO ()
  createDirectoryIfMissingVerbose :: Distribution.Verbosity.Verbosity -> GHC.Types.Bool -> GHC.Internal.IO.FilePath -> GHC.Types.IO ()
  createTempDirectory :: GHC.Internal.IO.FilePath -> GHC.Internal.Base.String -> GHC.Types.IO GHC.Internal.IO.FilePath
  debug :: Distribution.Verbosity.Verbosity -> GHC.Internal.Base.String -> GHC.Types.IO ()
  debugNoWrap :: Distribution.Verbosity.Verbosity -> GHC.Internal.Base.String -> GHC.Types.IO ()
  defaultPackageDescCwd :: Distribution.Verbosity.Verbosity -> GHC.Types.IO (Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File)
  defaultTempFileOptions :: TempFileOptions
  die' :: forall a. Distribution.Verbosity.Verbosity -> GHC.Internal.Base.String -> GHC.Types.IO a
  dieNoVerbosity :: forall a. GHC.Internal.Base.String -> GHC.Types.IO a
  dieNoWrap :: forall a. Distribution.Verbosity.Verbosity -> GHC.Internal.Base.String -> GHC.Types.IO a
  dieWithException :: forall a1 a. (GHC.Internal.Stack.Types.HasCallStack, GHC.Internal.Show.Show a1, ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable a1, GHC.Internal.Exception.Type.Exception (VerboseException a1)) => Distribution.Verbosity.Verbosity -> a1 -> GHC.Types.IO a
  dieWithLocation' :: forall a. Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> GHC.Internal.Maybe.Maybe GHC.Types.Int -> GHC.Internal.Base.String -> GHC.Types.IO a
  doesExecutableExist :: GHC.Internal.IO.FilePath -> GHC.Types.IO GHC.Types.Bool
  dropExeExtension :: GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath
  dropWhileEndLE :: forall a. (a -> GHC.Types.Bool) -> [a] -> [a]
  equating :: forall a b. GHC.Classes.Eq a => (b -> a) -> b -> b -> GHC.Types.Bool
  exceptionWithCallStackPrefix :: GHC.Internal.Stack.Types.CallStack -> Distribution.Verbosity.Verbosity -> GHC.Internal.Base.String -> GHC.Internal.Base.String
  exceptionWithMetadata :: GHC.Internal.Stack.Types.CallStack -> time-1.12.2:Data.Time.Clock.Internal.POSIXTime.POSIXTime -> Distribution.Verbosity.Verbosity -> GHC.Internal.Base.String -> GHC.Internal.Base.String
  exeExtensions :: [GHC.Internal.Base.String]
  existsAndIsMoreRecentThan :: GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> GHC.Types.IO GHC.Types.Bool
  findAllFilesCwdWithExtension :: forall searchDir (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute). GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> [Suffix] -> [Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir searchDir)] -> Distribution.Utils.Path.RelativePath searchDir Distribution.Utils.Path.File -> GHC.Types.IO [Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
  findAllFilesWithExtension :: forall (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute) searchDir. [Suffix] -> [Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir searchDir)] -> Distribution.Utils.Path.RelativePath searchDir Distribution.Utils.Path.File -> GHC.Types.IO [Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
  findFileCwd :: forall searchDir (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute). Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> [Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir searchDir)] -> Distribution.Utils.Path.RelativePath searchDir Distribution.Utils.Path.File -> GHC.Types.IO (Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg Distribution.Utils.Path.File)
  findFileCwdWithExtension :: forall searchDir (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute). GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> [Suffix] -> [Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir searchDir)] -> Distribution.Utils.Path.RelativePath searchDir Distribution.Utils.Path.File -> GHC.Types.IO (GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg Distribution.Utils.Path.File))
  findFileCwdWithExtension' ::
    forall searchDir (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute).
    GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> [Suffix] -> [Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir searchDir)] -> Distribution.Utils.Path.RelativePath searchDir Distribution.Utils.Path.File -> GHC.Types.IO (GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir searchDir), Distribution.Utils.Path.RelativePath searchDir Distribution.Utils.Path.File))
  findFileEx :: forall searchDir (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute). Distribution.Verbosity.Verbosity -> [Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir searchDir)] -> Distribution.Utils.Path.RelativePath searchDir Distribution.Utils.Path.File -> GHC.Types.IO (Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg Distribution.Utils.Path.File)
  findFileWithExtension :: forall (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute) searchDir. [Suffix] -> [Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir searchDir)] -> Distribution.Utils.Path.RelativePath searchDir Distribution.Utils.Path.File -> GHC.Types.IO (GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg Distribution.Utils.Path.File))
  findFileWithExtension' :: forall (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute) searchDir. [Suffix] -> [Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir searchDir)] -> Distribution.Utils.Path.RelativePath searchDir Distribution.Utils.Path.File -> GHC.Types.IO (GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir searchDir), Distribution.Utils.Path.RelativePath searchDir Distribution.Utils.Path.File))
  findFirstFile :: forall a. (a -> GHC.Internal.IO.FilePath) -> [a] -> GHC.Types.IO (GHC.Internal.Maybe.Maybe a)
  findHookedPackageDesc :: Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Build) -> GHC.Types.IO (GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File))
  findModuleFileCwd ::
    forall searchDir (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute). Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> [Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir searchDir)] -> [Suffix] -> Distribution.ModuleName.ModuleName -> GHC.Types.IO (Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir searchDir), Distribution.Utils.Path.RelativePath searchDir Distribution.Utils.Path.File)
  findModuleFileEx :: forall searchDir (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute). Distribution.Verbosity.Verbosity -> [Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir searchDir)] -> [Suffix] -> Distribution.ModuleName.ModuleName -> GHC.Types.IO (Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir searchDir), Distribution.Utils.Path.RelativePath searchDir Distribution.Utils.Path.File)
  findModuleFilesCwd ::
    forall searchDir (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute). Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> [Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir searchDir)] -> [Suffix] -> [Distribution.ModuleName.ModuleName] -> GHC.Types.IO [(Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir searchDir), Distribution.Utils.Path.RelativePath searchDir Distribution.Utils.Path.File)]
  findModuleFilesEx :: forall searchDir (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute). Distribution.Verbosity.Verbosity -> [Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir searchDir)] -> [Suffix] -> [Distribution.ModuleName.ModuleName] -> GHC.Types.IO [(Distribution.Utils.Path.SymbolicPathX allowAbsolute Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir searchDir), Distribution.Utils.Path.RelativePath searchDir Distribution.Utils.Path.File)]
  findPackageDesc :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> GHC.Types.IO (GHC.Internal.Data.Either.Either Distribution.Simple.Errors.CabalException (Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File))
  findProgramVersion :: GHC.Internal.Base.String -> (GHC.Internal.Base.String -> GHC.Internal.Base.String) -> Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> GHC.Types.IO (GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version)
  fromCreatePipe :: GHC.Internal.Maybe.Maybe GHC.Internal.IO.Handle.Types.Handle -> GHC.Internal.IO.Handle.Types.Handle
  fromUTF8BS :: bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> GHC.Internal.Base.String
  fromUTF8LBS :: Data.ByteString.Lazy.Internal.ByteString -> GHC.Internal.Base.String
  getDirectoryContentsRecursive :: GHC.Internal.IO.FilePath -> GHC.Types.IO [GHC.Internal.IO.FilePath]
  handleDoesNotExist :: forall a. a -> GHC.Types.IO a -> GHC.Types.IO a
  ignoreBOM :: GHC.Internal.Base.String -> GHC.Internal.Base.String
  ignoreSigPipe :: GHC.Types.IO () -> GHC.Types.IO ()
  info :: Distribution.Verbosity.Verbosity -> GHC.Internal.Base.String -> GHC.Types.IO ()
  infoNoWrap :: Distribution.Verbosity.Verbosity -> GHC.Internal.Base.String -> GHC.Types.IO ()
  installDirectoryContents :: Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> GHC.Types.IO ()
  installExecutableFile :: Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> GHC.Types.IO ()
  installExecutableFiles :: Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> [(GHC.Internal.IO.FilePath, GHC.Internal.IO.FilePath)] -> GHC.Types.IO ()
  installMaybeExecutableFile :: Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> GHC.Types.IO ()
  installMaybeExecutableFiles :: Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> [(GHC.Internal.IO.FilePath, GHC.Internal.IO.FilePath)] -> GHC.Types.IO ()
  installOrdinaryFile :: Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> GHC.Types.IO ()
  installOrdinaryFiles :: Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> [(GHC.Internal.IO.FilePath, GHC.Internal.IO.FilePath)] -> GHC.Types.IO ()
  intercalate :: forall a. [a] -> [[a]] -> [a]
  isAbsoluteOnAnyPlatform :: GHC.Internal.IO.FilePath -> GHC.Types.Bool
  isInSearchPath :: GHC.Internal.IO.FilePath -> GHC.Types.IO GHC.Types.Bool
  isInfixOf :: forall a. GHC.Classes.Eq a => [a] -> [a] -> GHC.Types.Bool
  isRelativeOnAnyPlatform :: GHC.Internal.IO.FilePath -> GHC.Types.Bool
  listUnion :: forall a. GHC.Classes.Ord a => [a] -> [a] -> [a]
  listUnionRight :: forall a. GHC.Classes.Ord a => [a] -> [a] -> [a]
  lowercase :: GHC.Internal.Base.String -> GHC.Internal.Base.String
  maybeExit :: GHC.Types.IO GHC.Internal.IO.Exception.ExitCode -> GHC.Types.IO ()
  moreRecentFile :: GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> GHC.Types.IO GHC.Types.Bool
  normaliseLineEndings :: GHC.Internal.Base.String -> GHC.Internal.Base.String
  notice :: Distribution.Verbosity.Verbosity -> GHC.Internal.Base.String -> GHC.Types.IO ()
  noticeDoc :: Distribution.Verbosity.Verbosity -> Text.PrettyPrint.HughesPJ.Doc -> GHC.Types.IO ()
  noticeNoWrap :: Distribution.Verbosity.Verbosity -> GHC.Internal.Base.String -> GHC.Types.IO ()
  ordNub :: forall a. GHC.Classes.Ord a => [a] -> [a]
  ordNubBy :: forall b a. GHC.Classes.Ord b => (a -> b) -> [a] -> [a]
  ordNubRight :: forall a. GHC.Classes.Ord a => [a] -> [a]
  rawSystemExit :: Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> GHC.Internal.IO.FilePath -> [GHC.Internal.Base.String] -> GHC.Types.IO ()
  rawSystemExitCode :: Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> GHC.Internal.IO.FilePath -> [GHC.Internal.Base.String] -> GHC.Internal.Maybe.Maybe [(GHC.Internal.Base.String, GHC.Internal.Base.String)] -> GHC.Types.IO GHC.Internal.IO.Exception.ExitCode
  rawSystemExitWithEnv :: Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> [GHC.Internal.Base.String] -> [(GHC.Internal.Base.String, GHC.Internal.Base.String)] -> GHC.Types.IO ()
  rawSystemExitWithEnvCwd :: forall (to :: Distribution.Utils.Path.FileOrDir). Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD to) -> GHC.Internal.IO.FilePath -> [GHC.Internal.Base.String] -> [(GHC.Internal.Base.String, GHC.Internal.Base.String)] -> GHC.Types.IO ()
  rawSystemIOWithEnv :: Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> [GHC.Internal.Base.String] -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath -> GHC.Internal.Maybe.Maybe [(GHC.Internal.Base.String, GHC.Internal.Base.String)] -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.Handle.Types.Handle -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.Handle.Types.Handle -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.Handle.Types.Handle -> GHC.Types.IO GHC.Internal.IO.Exception.ExitCode
  rawSystemIOWithEnvAndAction :: forall a. Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> [GHC.Internal.Base.String] -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath -> GHC.Internal.Maybe.Maybe [(GHC.Internal.Base.String, GHC.Internal.Base.String)] -> GHC.Types.IO a -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.Handle.Types.Handle -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.Handle.Types.Handle -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.Handle.Types.Handle -> GHC.Types.IO (GHC.Internal.IO.Exception.ExitCode, a)
  rawSystemProc :: Distribution.Verbosity.Verbosity -> process-1.6.19.0:System.Process.Common.CreateProcess -> GHC.Types.IO GHC.Internal.IO.Exception.ExitCode
  rawSystemProcAction :: forall a. Distribution.Verbosity.Verbosity -> process-1.6.19.0:System.Process.Common.CreateProcess -> (GHC.Internal.Maybe.Maybe GHC.Internal.IO.Handle.Types.Handle -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.Handle.Types.Handle -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.Handle.Types.Handle -> GHC.Types.IO a) -> GHC.Types.IO (GHC.Internal.IO.Exception.ExitCode, a)
  rawSystemStdInOut :: forall mode. KnownIODataMode mode => Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> [GHC.Internal.Base.String] -> GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath -> GHC.Internal.Maybe.Maybe [(GHC.Internal.Base.String, GHC.Internal.Base.String)] -> GHC.Internal.Maybe.Maybe IOData -> IODataMode mode -> GHC.Types.IO (mode, GHC.Internal.Base.String, GHC.Internal.IO.Exception.ExitCode)
  rawSystemStdout :: forall mode. KnownIODataMode mode => Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> [GHC.Internal.Base.String] -> GHC.Types.IO mode
  readUTF8File :: GHC.Internal.IO.FilePath -> GHC.Types.IO GHC.Internal.Base.String
  rewriteFileEx :: Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> GHC.Internal.Base.String -> GHC.Types.IO ()
  rewriteFileLBS :: Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> Data.ByteString.Lazy.Internal.ByteString -> GHC.Types.IO ()
  safeHead :: forall a. [a] -> GHC.Internal.Maybe.Maybe a
  safeInit :: forall a. [a] -> [a]
  safeLast :: forall a. [a] -> GHC.Internal.Maybe.Maybe a
  safeTail :: forall a. [a] -> [a]
  setFileExecutable :: GHC.Internal.IO.FilePath -> GHC.Types.IO ()
  setFileOrdinary :: GHC.Internal.IO.FilePath -> GHC.Types.IO ()
  setupMessage :: Distribution.Verbosity.Verbosity -> GHC.Internal.Base.String -> Distribution.Types.PackageId.PackageIdentifier -> GHC.Types.IO ()
  shortRelativePath :: GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath -> GHC.Internal.IO.FilePath
  takeWhileEndLE :: forall a. (a -> GHC.Types.Bool) -> [a] -> [a]
  toUTF8BS :: GHC.Internal.Base.String -> bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString
  toUTF8LBS :: GHC.Internal.Base.String -> Data.ByteString.Lazy.Internal.ByteString
  topHandler :: forall a. GHC.Types.IO a -> GHC.Types.IO a
  topHandlerWith :: forall a. (GHC.Internal.Exception.Type.SomeException -> GHC.Types.IO a) -> GHC.Types.IO a -> GHC.Types.IO a
  tryFindPackageDesc :: Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> GHC.Types.IO (Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File)
  unintersperse :: GHC.Types.Char -> GHC.Internal.Base.String -> [GHC.Internal.Base.String]
  warn :: Distribution.Verbosity.Verbosity -> GHC.Internal.Base.String -> GHC.Types.IO ()
  warnError :: Distribution.Verbosity.Verbosity -> GHC.Internal.Base.String -> GHC.Types.IO ()
  withFileContents :: forall a. GHC.Internal.IO.FilePath -> (GHC.Internal.Base.String -> GHC.Types.IO a) -> GHC.Types.IO a
  withOutputMarker :: Distribution.Verbosity.Verbosity -> GHC.Internal.Base.String -> GHC.Internal.Base.String
  withTempDirectory :: forall a. Distribution.Verbosity.Verbosity -> GHC.Internal.IO.FilePath -> GHC.Internal.Base.String -> (GHC.Internal.IO.FilePath -> GHC.Types.IO a) -> GHC.Types.IO a
  withTempDirectoryCwd :: forall tmpDir1 tmpDir2 a. Distribution.Verbosity.Verbosity -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir tmpDir1) -> GHC.Internal.Base.String -> (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir tmpDir2) -> GHC.Types.IO a) -> GHC.Types.IO a
  withTempDirectoryCwdEx :: forall a tmpDir1 tmpDir2. Distribution.Verbosity.Verbosity -> TempFileOptions -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.CWD (Distribution.Utils.Path.Dir Distribution.Utils.Path.Pkg)) -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir tmpDir1) -> GHC.Internal.Base.String -> (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir tmpDir2) -> GHC.Types.IO a) -> GHC.Types.IO a
  withTempDirectoryEx :: forall a. Distribution.Verbosity.Verbosity -> TempFileOptions -> GHC.Internal.IO.FilePath -> GHC.Internal.Base.String -> (GHC.Internal.IO.FilePath -> GHC.Types.IO a) -> GHC.Types.IO a
  withTempFile :: forall a. GHC.Internal.Base.String -> (GHC.Internal.IO.FilePath -> GHC.Internal.IO.Handle.Types.Handle -> GHC.Types.IO a) -> GHC.Types.IO a
  withTempFileCwd :: forall a. GHC.Internal.Base.String -> (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File -> GHC.Internal.IO.Handle.Types.Handle -> GHC.Types.IO a) -> GHC.Types.IO a
  withTempFileEx :: forall a. TempFileOptions -> GHC.Internal.Base.String -> (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File -> GHC.Internal.IO.Handle.Types.Handle -> GHC.Types.IO a) -> GHC.Types.IO a
  withUTF8FileContents :: forall a. GHC.Internal.IO.FilePath -> (GHC.Internal.Base.String -> GHC.Types.IO a) -> GHC.Types.IO a
  wrapLine :: GHC.Types.Int -> [GHC.Internal.Base.String] -> [[GHC.Internal.Base.String]]
  wrapText :: GHC.Internal.Base.String -> GHC.Internal.Base.String
  writeFileAtomic :: GHC.Internal.IO.FilePath -> Data.ByteString.Lazy.Internal.ByteString -> GHC.Types.IO ()
  writeUTF8File :: GHC.Internal.IO.FilePath -> GHC.Internal.Base.String -> GHC.Types.IO ()
  xargs :: GHC.Types.Int -> ([GHC.Internal.Base.String] -> GHC.Types.IO ()) -> [GHC.Internal.Base.String] -> [GHC.Internal.Base.String] -> GHC.Types.IO ()

module Distribution.System where
  type Arch :: *
  data Arch = I386 | X86_64 | PPC | PPC64 | PPC64LE | Sparc | Sparc64 | Arm | AArch64 | Mips | SH | IA64 | S390 | S390X | Alpha | Hppa | Rs6000 | M68k | Vax | RISCV64 | LoongArch64 | JavaScript | Wasm32 | OtherArch GHC.Internal.Base.String
  type ClassificationStrictness :: *
  data ClassificationStrictness = Permissive | Compat | Strict
  type OS :: *
  data OS = Linux | Windows | OSX | FreeBSD | OpenBSD | NetBSD | DragonFly | Solaris | AIX | HPUX | IRIX | HaLVM | Hurd | IOS | Android | Ghcjs | Wasi | Haiku | OtherOS GHC.Internal.Base.String
  type Platform :: *
  data Platform = Platform Arch OS
  buildArch :: Arch
  buildOS :: OS
  buildPlatform :: Platform
  classifyArch :: ClassificationStrictness -> GHC.Internal.Base.String -> Arch
  classifyOS :: ClassificationStrictness -> GHC.Internal.Base.String -> OS
  knownArches :: [Arch]
  knownOSs :: [OS]
  platformFromTriple :: GHC.Internal.Base.String -> GHC.Internal.Maybe.Maybe Platform

module Distribution.TestSuite where
  type OptionDescr :: *
  data OptionDescr = OptionDescr {optionName :: GHC.Internal.Base.String, optionDescription :: GHC.Internal.Base.String, optionType :: OptionType, optionDefault :: GHC.Internal.Maybe.Maybe GHC.Internal.Base.String}
  type OptionType :: *
  data OptionType = OptionFile {optionFileMustExist :: GHC.Types.Bool, optionFileIsDir :: GHC.Types.Bool, optionFileExtensions :: [GHC.Internal.Base.String]} | OptionString {optionStringMultiline :: GHC.Types.Bool} | OptionNumber {optionNumberIsInt :: GHC.Types.Bool, optionNumberBounds :: (GHC.Internal.Maybe.Maybe GHC.Internal.Base.String, GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)} | OptionBool | OptionEnum [GHC.Internal.Base.String] | OptionSet [GHC.Internal.Base.String] | OptionRngSeed
  type Options :: *
  type Options = [(GHC.Internal.Base.String, GHC.Internal.Base.String)]
  type Progress :: *
  data Progress = Finished Result | Progress GHC.Internal.Base.String (GHC.Types.IO Progress)
  type Result :: *
  data Result = Pass | Fail GHC.Internal.Base.String | Error GHC.Internal.Base.String
  type Test :: *
  data Test = Test TestInstance | Group {groupName :: GHC.Internal.Base.String, concurrently :: GHC.Types.Bool, groupTests :: [Test]} | ExtraOptions [OptionDescr] Test
  type TestInstance :: *
  data TestInstance = TestInstance {run :: GHC.Types.IO Progress, name :: GHC.Internal.Base.String, tags :: [GHC.Internal.Base.String], options :: [OptionDescr], setOption :: GHC.Internal.Base.String -> GHC.Internal.Base.String -> GHC.Internal.Data.Either.Either GHC.Internal.Base.String TestInstance}
  testGroup :: GHC.Internal.Base.String -> [Test] -> Test

module Distribution.Text where
  display :: forall a. Distribution.Pretty.Pretty a => a -> GHC.Internal.Base.String
  simpleParse :: forall a. Distribution.Parsec.Parsec a => GHC.Internal.Base.String -> GHC.Internal.Maybe.Maybe a

module Distribution.Types.AbiDependency where
  type AbiDependency :: *
  data AbiDependency = AbiDependency {depUnitId :: Distribution.Types.UnitId.UnitId, depAbiHash :: Distribution.Types.AbiHash.AbiHash}

module Distribution.Types.AbiHash where
  type AbiHash :: *
  newtype AbiHash = ...
  mkAbiHash :: GHC.Internal.Base.String -> AbiHash
  unAbiHash :: AbiHash -> GHC.Internal.Base.String

module Distribution.Types.AnnotatedId where
  type AnnotatedId :: * -> *
  data AnnotatedId id = AnnotatedId {ann_pid :: Distribution.Types.PackageId.PackageId, ann_cname :: Distribution.Types.ComponentName.ComponentName, ann_id :: id}

module Distribution.Types.Benchmark where
  type Benchmark :: *
  data Benchmark = Benchmark {benchmarkName :: Distribution.Types.UnqualComponentName.UnqualComponentName, benchmarkInterface :: Distribution.Types.BenchmarkInterface.BenchmarkInterface, benchmarkBuildInfo :: Distribution.Types.BuildInfo.BuildInfo}
  benchmarkModules :: Benchmark -> [Distribution.ModuleName.ModuleName]
  benchmarkModulesAutogen :: Benchmark -> [Distribution.ModuleName.ModuleName]
  benchmarkType :: Benchmark -> Distribution.Types.BenchmarkType.BenchmarkType
  emptyBenchmark :: Benchmark

module Distribution.Types.Benchmark.Lens where
  type Benchmark :: *
  data Benchmark = ...
  benchmarkBuildInfo :: Distribution.Compat.Lens.Lens' Benchmark Distribution.Types.BuildInfo.BuildInfo
  benchmarkInterface :: Distribution.Compat.Lens.Lens' Benchmark Distribution.Types.BenchmarkInterface.BenchmarkInterface
  benchmarkName :: Distribution.Compat.Lens.Lens' Benchmark Distribution.Types.UnqualComponentName.UnqualComponentName

module Distribution.Types.BenchmarkInterface where
  type BenchmarkInterface :: *
  data BenchmarkInterface = BenchmarkExeV10 Distribution.Types.Version.Version (Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Source Distribution.Utils.Path.File) | BenchmarkUnsupported Distribution.Types.BenchmarkType.BenchmarkType

module Distribution.Types.BenchmarkType where
  type BenchmarkType :: *
  data BenchmarkType = BenchmarkTypeExe Distribution.Types.Version.Version | BenchmarkTypeUnknown GHC.Internal.Base.String Distribution.Types.Version.Version
  benchmarkTypeExe :: BenchmarkType
  knownBenchmarkTypes :: [BenchmarkType]

module Distribution.Types.BuildInfo where
  type BuildInfo :: *
  data BuildInfo
    = BuildInfo {buildable :: GHC.Types.Bool,
                 buildTools :: [Distribution.Types.LegacyExeDependency.LegacyExeDependency],
                 buildToolDepends :: [Distribution.Types.ExeDependency.ExeDependency],
                 cppOptions :: [GHC.Internal.Base.String],
                 asmOptions :: [GHC.Internal.Base.String],
                 cmmOptions :: [GHC.Internal.Base.String],
                 ccOptions :: [GHC.Internal.Base.String],
                 cxxOptions :: [GHC.Internal.Base.String],
                 ldOptions :: [GHC.Internal.Base.String],
                 hsc2hsOptions :: [GHC.Internal.Base.String],
                 pkgconfigDepends :: [Distribution.Types.PkgconfigDependency.PkgconfigDependency],
                 frameworks :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Framework Distribution.Utils.Path.File],
                 extraFrameworkDirs :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Framework)],
                 asmSources :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File],
                 cmmSources :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File],
                 cSources :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File],
                 cxxSources :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File],
                 jsSources :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File],
                 hsSourceDirs :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Source)],
                 otherModules :: [Distribution.ModuleName.ModuleName],
                 virtualModules :: [Distribution.ModuleName.ModuleName],
                 autogenModules :: [Distribution.ModuleName.ModuleName],
                 defaultLanguage :: GHC.Internal.Maybe.Maybe Language.Haskell.Extension.Language,
                 otherLanguages :: [Language.Haskell.Extension.Language],
                 defaultExtensions :: [Language.Haskell.Extension.Extension],
                 otherExtensions :: [Language.Haskell.Extension.Extension],
                 oldExtensions :: [Language.Haskell.Extension.Extension],
                 extraLibs :: [GHC.Internal.Base.String],
                 extraLibsStatic :: [GHC.Internal.Base.String],
                 extraGHCiLibs :: [GHC.Internal.Base.String],
                 extraBundledLibs :: [GHC.Internal.Base.String],
                 extraLibFlavours :: [GHC.Internal.Base.String],
                 extraDynLibFlavours :: [GHC.Internal.Base.String],
                 extraLibDirs :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Lib)],
                 extraLibDirsStatic :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Lib)],
                 includeDirs :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Include)],
                 includes :: [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Include Distribution.Utils.Path.File],
                 autogenIncludes :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Include Distribution.Utils.Path.File],
                 installIncludes :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Include Distribution.Utils.Path.File],
                 options :: Distribution.Compiler.PerCompilerFlavor [GHC.Internal.Base.String],
                 profOptions :: Distribution.Compiler.PerCompilerFlavor [GHC.Internal.Base.String],
                 sharedOptions :: Distribution.Compiler.PerCompilerFlavor [GHC.Internal.Base.String],
                 profSharedOptions :: Distribution.Compiler.PerCompilerFlavor [GHC.Internal.Base.String],
                 staticOptions :: Distribution.Compiler.PerCompilerFlavor [GHC.Internal.Base.String],
                 customFieldsBI :: [(GHC.Internal.Base.String, GHC.Internal.Base.String)],
                 targetBuildDepends :: [Distribution.Types.Dependency.Dependency],
                 mixins :: [Distribution.Types.Mixin.Mixin]}
  allExtensions :: BuildInfo -> [Language.Haskell.Extension.Extension]
  allLanguages :: BuildInfo -> [Language.Haskell.Extension.Language]
  emptyBuildInfo :: BuildInfo
  hcOptions :: Distribution.Compiler.CompilerFlavor -> BuildInfo -> [GHC.Internal.Base.String]
  hcProfOptions :: Distribution.Compiler.CompilerFlavor -> BuildInfo -> [GHC.Internal.Base.String]
  hcProfSharedOptions :: Distribution.Compiler.CompilerFlavor -> BuildInfo -> [GHC.Internal.Base.String]
  hcSharedOptions :: Distribution.Compiler.CompilerFlavor -> BuildInfo -> [GHC.Internal.Base.String]
  hcStaticOptions :: Distribution.Compiler.CompilerFlavor -> BuildInfo -> [GHC.Internal.Base.String]
  usedExtensions :: BuildInfo -> [Language.Haskell.Extension.Extension]
  usesTemplateHaskellOrQQ :: BuildInfo -> GHC.Types.Bool

module Distribution.Types.BuildInfo.Lens where
  type BuildInfo :: *
  data BuildInfo = ...
  type HasBuildInfo :: * -> Constraint
  class HasBuildInfo a where
    buildInfo :: Distribution.Compat.Lens.Lens' a BuildInfo
    buildable :: Distribution.Compat.Lens.Lens' a GHC.Types.Bool
    buildTools :: Distribution.Compat.Lens.Lens' a [Distribution.Types.LegacyExeDependency.LegacyExeDependency]
    buildToolDepends :: Distribution.Compat.Lens.Lens' a [Distribution.Types.ExeDependency.ExeDependency]
    cppOptions :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    asmOptions :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    cmmOptions :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    ccOptions :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    cxxOptions :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    ldOptions :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    hsc2hsOptions :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    pkgconfigDepends :: Distribution.Compat.Lens.Lens' a [Distribution.Types.PkgconfigDependency.PkgconfigDependency]
    frameworks :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Framework Distribution.Utils.Path.File]
    extraFrameworkDirs :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Framework)]
    asmSources :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
    cmmSources :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
    cSources :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
    cxxSources :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
    jsSources :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
    hsSourceDirs :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Source)]
    otherModules :: Distribution.Compat.Lens.Lens' a [Distribution.ModuleName.ModuleName]
    virtualModules :: Distribution.Compat.Lens.Lens' a [Distribution.ModuleName.ModuleName]
    autogenModules :: Distribution.Compat.Lens.Lens' a [Distribution.ModuleName.ModuleName]
    defaultLanguage :: Distribution.Compat.Lens.Lens' a (GHC.Internal.Maybe.Maybe Language.Haskell.Extension.Language)
    otherLanguages :: Distribution.Compat.Lens.Lens' a [Language.Haskell.Extension.Language]
    defaultExtensions :: Distribution.Compat.Lens.Lens' a [Language.Haskell.Extension.Extension]
    otherExtensions :: Distribution.Compat.Lens.Lens' a [Language.Haskell.Extension.Extension]
    oldExtensions :: Distribution.Compat.Lens.Lens' a [Language.Haskell.Extension.Extension]
    extraLibs :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    extraLibsStatic :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    extraGHCiLibs :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    extraBundledLibs :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    extraLibFlavours :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    extraDynLibFlavours :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    extraLibDirs :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Lib)]
    extraLibDirsStatic :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Lib)]
    includeDirs :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Include)]
    includes :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Include Distribution.Utils.Path.File]
    autogenIncludes :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Include Distribution.Utils.Path.File]
    installIncludes :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Include Distribution.Utils.Path.File]
    options :: Distribution.Compat.Lens.Lens' a (Distribution.Compiler.PerCompilerFlavor [GHC.Internal.Base.String])
    profOptions :: Distribution.Compat.Lens.Lens' a (Distribution.Compiler.PerCompilerFlavor [GHC.Internal.Base.String])
    sharedOptions :: Distribution.Compat.Lens.Lens' a (Distribution.Compiler.PerCompilerFlavor [GHC.Internal.Base.String])
    profSharedOptions :: Distribution.Compat.Lens.Lens' a (Distribution.Compiler.PerCompilerFlavor [GHC.Internal.Base.String])
    staticOptions :: Distribution.Compat.Lens.Lens' a (Distribution.Compiler.PerCompilerFlavor [GHC.Internal.Base.String])
    customFieldsBI :: Distribution.Compat.Lens.Lens' a [(GHC.Internal.Base.String, GHC.Internal.Base.String)]
    targetBuildDepends :: Distribution.Compat.Lens.Lens' a [Distribution.Types.Dependency.Dependency]
    mixins :: Distribution.Compat.Lens.Lens' a [Distribution.Types.Mixin.Mixin]
    {-# MINIMAL buildInfo #-}
  type HasBuildInfos :: * -> Constraint
  class HasBuildInfos a where
    traverseBuildInfos :: Distribution.Compat.Lens.Traversal' a BuildInfo
    {-# MINIMAL traverseBuildInfos #-}

module Distribution.Types.BuildType where
  type BuildType :: *
  data BuildType = Simple | Configure | Make | Custom | Hooks
  knownBuildTypes :: [BuildType]

module Distribution.Types.Component where
  type Component :: *
  data Component = CLib Distribution.Types.Library.Library | CFLib Distribution.Types.ForeignLib.ForeignLib | CExe Distribution.Types.Executable.Executable | CTest Distribution.Types.TestSuite.TestSuite | CBench Distribution.Types.Benchmark.Benchmark
  componentBuildInfo :: Component -> Distribution.Types.BuildInfo.BuildInfo
  componentBuildable :: Component -> GHC.Types.Bool
  componentName :: Component -> Distribution.Types.ComponentName.ComponentName
  foldComponent :: forall a. (Distribution.Types.Library.Library -> a) -> (Distribution.Types.ForeignLib.ForeignLib -> a) -> (Distribution.Types.Executable.Executable -> a) -> (Distribution.Types.TestSuite.TestSuite -> a) -> (Distribution.Types.Benchmark.Benchmark -> a) -> Component -> a
  partitionComponents :: [Component] -> ([Distribution.Types.Library.Library], [Distribution.Types.ForeignLib.ForeignLib], [Distribution.Types.Executable.Executable], [Distribution.Types.TestSuite.TestSuite], [Distribution.Types.Benchmark.Benchmark])

module Distribution.Types.ComponentId where
  type ComponentId :: *
  newtype ComponentId = ...
  mkComponentId :: GHC.Internal.Base.String -> ComponentId
  unComponentId :: ComponentId -> GHC.Internal.Base.String

module Distribution.Types.ComponentInclude where
  type ComponentInclude :: * -> * -> *
  data ComponentInclude id rn = ComponentInclude {ci_ann_id :: Distribution.Types.AnnotatedId.AnnotatedId id, ci_renaming :: rn, ci_implicit :: GHC.Types.Bool}
  ci_cname :: forall id rn. ComponentInclude id rn -> Distribution.Types.ComponentName.ComponentName
  ci_id :: forall id rn. ComponentInclude id rn -> id
  ci_pkgid :: forall id rn. ComponentInclude id rn -> Distribution.Types.PackageId.PackageId

module Distribution.Types.ComponentLocalBuildInfo where
  type ComponentLocalBuildInfo :: *
  data ComponentLocalBuildInfo
    = LibComponentLocalBuildInfo {componentLocalName :: Distribution.Types.ComponentName.ComponentName,
                                  componentComponentId :: Distribution.Types.ComponentId.ComponentId,
                                  componentUnitId :: Distribution.Types.UnitId.UnitId,
                                  componentIsIndefinite_ :: GHC.Types.Bool,
                                  componentInstantiatedWith :: [(Distribution.ModuleName.ModuleName, Distribution.Backpack.OpenModule)],
                                  componentPackageDeps :: [(Distribution.Types.UnitId.UnitId, Distribution.Types.MungedPackageId.MungedPackageId)],
                                  componentIncludes :: [(Distribution.Backpack.OpenUnitId, Distribution.Types.ModuleRenaming.ModuleRenaming)],
                                  componentExeDeps :: [Distribution.Types.UnitId.UnitId],
                                  componentInternalDeps :: [Distribution.Types.UnitId.UnitId],
                                  componentCompatPackageKey :: GHC.Internal.Base.String,
                                  componentCompatPackageName :: Distribution.Types.MungedPackageName.MungedPackageName,
                                  componentExposedModules :: [Distribution.Types.ExposedModule.ExposedModule],
                                  componentIsPublic :: GHC.Types.Bool}
    | FLibComponentLocalBuildInfo {componentLocalName :: Distribution.Types.ComponentName.ComponentName, componentComponentId :: Distribution.Types.ComponentId.ComponentId, componentUnitId :: Distribution.Types.UnitId.UnitId, componentPackageDeps :: [(Distribution.Types.UnitId.UnitId, Distribution.Types.MungedPackageId.MungedPackageId)], componentIncludes :: [(Distribution.Backpack.OpenUnitId, Distribution.Types.ModuleRenaming.ModuleRenaming)], componentExeDeps :: [Distribution.Types.UnitId.UnitId], componentInternalDeps :: [Distribution.Types.UnitId.UnitId]}
    | ExeComponentLocalBuildInfo {componentLocalName :: Distribution.Types.ComponentName.ComponentName, componentComponentId :: Distribution.Types.ComponentId.ComponentId, componentUnitId :: Distribution.Types.UnitId.UnitId, componentPackageDeps :: [(Distribution.Types.UnitId.UnitId, Distribution.Types.MungedPackageId.MungedPackageId)], componentIncludes :: [(Distribution.Backpack.OpenUnitId, Distribution.Types.ModuleRenaming.ModuleRenaming)], componentExeDeps :: [Distribution.Types.UnitId.UnitId], componentInternalDeps :: [Distribution.Types.UnitId.UnitId]}
    | TestComponentLocalBuildInfo {componentLocalName :: Distribution.Types.ComponentName.ComponentName, componentComponentId :: Distribution.Types.ComponentId.ComponentId, componentUnitId :: Distribution.Types.UnitId.UnitId, componentPackageDeps :: [(Distribution.Types.UnitId.UnitId, Distribution.Types.MungedPackageId.MungedPackageId)], componentIncludes :: [(Distribution.Backpack.OpenUnitId, Distribution.Types.ModuleRenaming.ModuleRenaming)], componentExeDeps :: [Distribution.Types.UnitId.UnitId], componentInternalDeps :: [Distribution.Types.UnitId.UnitId]}
    | BenchComponentLocalBuildInfo {componentLocalName :: Distribution.Types.ComponentName.ComponentName, componentComponentId :: Distribution.Types.ComponentId.ComponentId, componentUnitId :: Distribution.Types.UnitId.UnitId, componentPackageDeps :: [(Distribution.Types.UnitId.UnitId, Distribution.Types.MungedPackageId.MungedPackageId)], componentIncludes :: [(Distribution.Backpack.OpenUnitId, Distribution.Types.ModuleRenaming.ModuleRenaming)], componentExeDeps :: [Distribution.Types.UnitId.UnitId], componentInternalDeps :: [Distribution.Types.UnitId.UnitId]}
  componentIsIndefinite :: ComponentLocalBuildInfo -> GHC.Types.Bool
  maybeComponentCompatPackageKey :: ComponentLocalBuildInfo -> GHC.Internal.Maybe.Maybe GHC.Internal.Base.String
  maybeComponentExposedModules :: ComponentLocalBuildInfo -> GHC.Internal.Maybe.Maybe [Distribution.Types.ExposedModule.ExposedModule]
  maybeComponentInstantiatedWith :: ComponentLocalBuildInfo -> GHC.Internal.Maybe.Maybe [(Distribution.ModuleName.ModuleName, Distribution.Backpack.OpenModule)]

module Distribution.Types.ComponentName where
  pattern CBenchName :: Distribution.Types.UnqualComponentName.UnqualComponentName -> ComponentName
  pattern CExeName :: Distribution.Types.UnqualComponentName.UnqualComponentName -> ComponentName
  pattern CFLibName :: Distribution.Types.UnqualComponentName.UnqualComponentName -> ComponentName
  pattern CTestName :: Distribution.Types.UnqualComponentName.UnqualComponentName -> ComponentName
  type ComponentName :: *
  data ComponentName = CLibName Distribution.Types.LibraryName.LibraryName | CNotLibName Distribution.Types.ComponentName.NotLibComponentName
  componentNameRaw :: ComponentName -> GHC.Internal.Base.String
  componentNameStanza :: ComponentName -> GHC.Internal.Base.String
  componentNameString :: ComponentName -> GHC.Internal.Maybe.Maybe Distribution.Types.UnqualComponentName.UnqualComponentName
  showComponentName :: ComponentName -> GHC.Internal.Base.String

module Distribution.Types.ComponentRequestedSpec where
  type ComponentDisabledReason :: *
  data ComponentDisabledReason = DisabledComponent | DisabledAllTests | DisabledAllBenchmarks | DisabledAllButOne GHC.Internal.Base.String
  type ComponentRequestedSpec :: *
  data ComponentRequestedSpec = ComponentRequestedSpec {testsRequested :: GHC.Types.Bool, benchmarksRequested :: GHC.Types.Bool} | OneComponentRequestedSpec Distribution.Types.ComponentName.ComponentName
  componentDisabledReason :: ComponentRequestedSpec -> Distribution.Types.Component.Component -> GHC.Internal.Maybe.Maybe ComponentDisabledReason
  componentEnabled :: ComponentRequestedSpec -> Distribution.Types.Component.Component -> GHC.Types.Bool
  componentNameRequested :: ComponentRequestedSpec -> Distribution.Types.ComponentName.ComponentName -> GHC.Types.Bool
  defaultComponentRequestedSpec :: ComponentRequestedSpec

module Distribution.Types.CondTree where
  type CondBranch :: * -> * -> * -> *
  data CondBranch v c a = CondBranch {condBranchCondition :: Distribution.Types.Condition.Condition v, condBranchIfTrue :: CondTree v c a, condBranchIfFalse :: GHC.Internal.Maybe.Maybe (CondTree v c a)}
  type CondTree :: * -> * -> * -> *
  data CondTree v c a = CondNode {condTreeData :: a, condTreeConstraints :: c, condTreeComponents :: [CondBranch v c a]}
  condIfThen :: forall v c a. Distribution.Types.Condition.Condition v -> CondTree v c a -> CondBranch v c a
  condIfThenElse :: forall v c a. Distribution.Types.Condition.Condition v -> CondTree v c a -> CondTree v c a -> CondBranch v c a
  extractCondition :: forall v a c. GHC.Classes.Eq v => (a -> GHC.Types.Bool) -> CondTree v c a -> Distribution.Types.Condition.Condition v
  foldCondTree :: forall b c a v. b -> ((c, a) -> b) -> (b -> b -> b) -> (b -> b -> b) -> CondTree v c a -> b
  ignoreConditions :: forall a c v. (GHC.Internal.Base.Semigroup a, GHC.Internal.Base.Semigroup c) => CondTree v c a -> (a, c)
  mapCondTree :: forall a b c d v w. (a -> b) -> (c -> d) -> (Distribution.Types.Condition.Condition v -> Distribution.Types.Condition.Condition w) -> CondTree v c a -> CondTree w d b
  mapTreeConds :: forall v w c a. (Distribution.Types.Condition.Condition v -> Distribution.Types.Condition.Condition w) -> CondTree v c a -> CondTree w c a
  mapTreeConstrs :: forall c d v a. (c -> d) -> CondTree v c a -> CondTree v d a
  mapTreeData :: forall a b v c. (a -> b) -> CondTree v c a -> CondTree v c b
  simplifyCondBranch :: forall a d v. (GHC.Internal.Base.Semigroup a, GHC.Internal.Base.Semigroup d) => (v -> GHC.Internal.Data.Either.Either v GHC.Types.Bool) -> CondBranch v d a -> GHC.Internal.Maybe.Maybe (d, a)
  simplifyCondTree :: forall a d v. (GHC.Internal.Base.Semigroup a, GHC.Internal.Base.Semigroup d) => (v -> GHC.Internal.Data.Either.Either v GHC.Types.Bool) -> CondTree v d a -> (d, a)
  traverseCondBranchC :: forall v c a d (f :: * -> *). GHC.Internal.Base.Applicative f => Distribution.Compat.Lens.LensLike f (CondBranch v c a) (CondBranch v d a) c d
  traverseCondBranchV :: forall v c a w (f :: * -> *). GHC.Internal.Base.Applicative f => Distribution.Compat.Lens.LensLike f (CondBranch v c a) (CondBranch w c a) v w
  traverseCondTreeC :: forall v c a d (f :: * -> *). GHC.Internal.Base.Applicative f => Distribution.Compat.Lens.LensLike f (CondTree v c a) (CondTree v d a) c d
  traverseCondTreeV :: forall v c a w (f :: * -> *). GHC.Internal.Base.Applicative f => Distribution.Compat.Lens.LensLike f (CondTree v c a) (CondTree w c a) v w

module Distribution.Types.Condition where
  type Condition :: * -> *
  data Condition c = Var c | Lit GHC.Types.Bool | CNot (Condition c) | COr (Condition c) (Condition c) | CAnd (Condition c) (Condition c)
  cAnd :: forall a. Condition a -> Condition a -> Condition a
  cNot :: forall a. Condition a -> Condition a
  cOr :: forall v. GHC.Classes.Eq v => Condition v -> Condition v -> Condition v
  simplifyCondition :: forall c d. Condition c -> (c -> GHC.Internal.Data.Either.Either d GHC.Types.Bool) -> (Condition d, [d])

module Distribution.Types.ConfVar where
  type ConfVar :: *
  data ConfVar = OS Distribution.System.OS | Arch Distribution.System.Arch | PackageFlag Distribution.Types.Flag.FlagName | Impl Distribution.Compiler.CompilerFlavor Distribution.Types.VersionRange.Internal.VersionRange

module Distribution.Types.Dependency where
  type Dependency :: *
  data Dependency = Dependency Distribution.Types.PackageName.PackageName Distribution.Types.VersionRange.Internal.VersionRange (Distribution.Compat.NonEmptySet.NonEmptySet Distribution.Types.LibraryName.LibraryName)
  depLibraries :: Dependency -> Distribution.Compat.NonEmptySet.NonEmptySet Distribution.Types.LibraryName.LibraryName
  depPkgName :: Dependency -> Distribution.Types.PackageName.PackageName
  depVerRange :: Dependency -> Distribution.Types.VersionRange.Internal.VersionRange
  mainLibSet :: Distribution.Compat.NonEmptySet.NonEmptySet Distribution.Types.LibraryName.LibraryName
  mkDependency :: Distribution.Types.PackageName.PackageName -> Distribution.Types.VersionRange.Internal.VersionRange -> Distribution.Compat.NonEmptySet.NonEmptySet Distribution.Types.LibraryName.LibraryName -> Dependency
  simplifyDependency :: Dependency -> Dependency

module Distribution.Types.DependencyMap where
  type DependencyMap :: *
  newtype DependencyMap = ...
  constrainBy :: DependencyMap -> [Distribution.Types.PackageVersionConstraint.PackageVersionConstraint] -> DependencyMap
  fromDepMap :: DependencyMap -> [Distribution.Types.Dependency.Dependency]
  toDepMap :: [Distribution.Types.Dependency.Dependency] -> DependencyMap

module Distribution.Types.DependencySatisfaction where
  type DependencySatisfaction :: *
  data DependencySatisfaction = Satisfied | Unsatisfied Distribution.Types.MissingDependencyReason.MissingDependencyReason

module Distribution.Types.DumpBuildInfo where
  type DumpBuildInfo :: *
  data DumpBuildInfo = NoDumpBuildInfo | DumpBuildInfo

module Distribution.Types.ExeDependency where
  type ExeDependency :: *
  data ExeDependency = ExeDependency Distribution.Types.PackageName.PackageName Distribution.Types.UnqualComponentName.UnqualComponentName Distribution.Types.VersionRange.Internal.VersionRange
  qualifiedExeName :: ExeDependency -> Distribution.Types.ComponentName.ComponentName

module Distribution.Types.Executable where
  type Executable :: *
  data Executable = Executable {exeName :: Distribution.Types.UnqualComponentName.UnqualComponentName, modulePath :: Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Source Distribution.Utils.Path.File, exeScope :: Distribution.Types.ExecutableScope.ExecutableScope, buildInfo :: Distribution.Types.BuildInfo.BuildInfo}
  emptyExecutable :: Executable
  exeModules :: Executable -> [Distribution.ModuleName.ModuleName]
  exeModulesAutogen :: Executable -> [Distribution.ModuleName.ModuleName]

module Distribution.Types.Executable.Lens where
  type Executable :: *
  data Executable = ...
  exeBuildInfo :: Distribution.Compat.Lens.Lens' Executable Distribution.Types.BuildInfo.BuildInfo
  exeName :: Distribution.Compat.Lens.Lens' Executable Distribution.Types.UnqualComponentName.UnqualComponentName
  exeScope :: Distribution.Compat.Lens.Lens' Executable Distribution.Types.ExecutableScope.ExecutableScope
  modulePath :: Distribution.Compat.Lens.Lens' Executable (Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Source Distribution.Utils.Path.File)

module Distribution.Types.ExecutableScope where
  type ExecutableScope :: *
  data ExecutableScope = ExecutablePublic | ExecutablePrivate

module Distribution.Types.ExposedModule where
  type ExposedModule :: *
  data ExposedModule = ExposedModule {exposedName :: Distribution.ModuleName.ModuleName, exposedReexport :: GHC.Internal.Maybe.Maybe Distribution.Backpack.OpenModule}

module Distribution.Types.Flag where
  type FlagAssignment :: *
  newtype FlagAssignment = ...
  type FlagName :: *
  newtype FlagName = ...
  type PackageFlag :: *
  data PackageFlag = MkPackageFlag {flagName :: FlagName, flagDescription :: GHC.Internal.Base.String, flagDefault :: GHC.Types.Bool, flagManual :: GHC.Types.Bool}
  diffFlagAssignment :: FlagAssignment -> FlagAssignment -> FlagAssignment
  dispFlagAssignment :: FlagAssignment -> Text.PrettyPrint.HughesPJ.Doc
  emptyFlag :: FlagName -> PackageFlag
  findDuplicateFlagAssignments :: FlagAssignment -> [FlagName]
  insertFlagAssignment :: FlagName -> GHC.Types.Bool -> FlagAssignment -> FlagAssignment
  legacyParsecFlagAssignment :: forall (m :: * -> *). Distribution.Parsec.CabalParsing m => m FlagAssignment
  legacyShowFlagAssignment :: FlagAssignment -> GHC.Internal.Base.String
  legacyShowFlagAssignment' :: FlagAssignment -> [GHC.Internal.Base.String]
  lookupFlagAssignment :: FlagName -> FlagAssignment -> GHC.Internal.Maybe.Maybe GHC.Types.Bool
  mkFlagAssignment :: [(FlagName, GHC.Types.Bool)] -> FlagAssignment
  mkFlagName :: GHC.Internal.Base.String -> FlagName
  nullFlagAssignment :: FlagAssignment -> GHC.Types.Bool
  parsecFlagAssignment :: forall (m :: * -> *). Distribution.Parsec.CabalParsing m => m FlagAssignment
  parsecFlagAssignmentNonEmpty :: forall (m :: * -> *). Distribution.Parsec.CabalParsing m => m FlagAssignment
  showFlagAssignment :: FlagAssignment -> GHC.Internal.Base.String
  showFlagValue :: (FlagName, GHC.Types.Bool) -> GHC.Internal.Base.String
  unFlagAssignment :: FlagAssignment -> [(FlagName, GHC.Types.Bool)]
  unFlagName :: FlagName -> GHC.Internal.Base.String

module Distribution.Types.ForeignLib where
  type ForeignLib :: *
  data ForeignLib = ForeignLib {foreignLibName :: Distribution.Types.UnqualComponentName.UnqualComponentName, foreignLibType :: Distribution.Types.ForeignLibType.ForeignLibType, foreignLibOptions :: [Distribution.Types.ForeignLibOption.ForeignLibOption], foreignLibBuildInfo :: Distribution.Types.BuildInfo.BuildInfo, foreignLibVersionInfo :: GHC.Internal.Maybe.Maybe LibVersionInfo, foreignLibVersionLinux :: GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version, foreignLibModDefFile :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Source Distribution.Utils.Path.File]}
  type LibVersionInfo :: *
  data LibVersionInfo = ...
  emptyForeignLib :: ForeignLib
  foreignLibIsShared :: ForeignLib -> GHC.Types.Bool
  foreignLibModules :: ForeignLib -> [Distribution.ModuleName.ModuleName]
  foreignLibVersion :: ForeignLib -> Distribution.System.OS -> [GHC.Types.Int]
  libVersionInfoCRA :: LibVersionInfo -> (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  libVersionMajor :: LibVersionInfo -> GHC.Types.Int
  libVersionNumber :: LibVersionInfo -> (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  libVersionNumberShow :: LibVersionInfo -> GHC.Internal.Base.String
  mkLibVersionInfo :: (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int) -> LibVersionInfo

module Distribution.Types.ForeignLib.Lens where
  type ForeignLib :: *
  data ForeignLib = ...
  foreignLibBuildInfo :: Distribution.Compat.Lens.Lens' ForeignLib Distribution.Types.BuildInfo.BuildInfo
  foreignLibModDefFile :: Distribution.Compat.Lens.Lens' ForeignLib [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Source Distribution.Utils.Path.File]
  foreignLibName :: Distribution.Compat.Lens.Lens' ForeignLib Distribution.Types.UnqualComponentName.UnqualComponentName
  foreignLibOptions :: Distribution.Compat.Lens.Lens' ForeignLib [Distribution.Types.ForeignLibOption.ForeignLibOption]
  foreignLibType :: Distribution.Compat.Lens.Lens' ForeignLib Distribution.Types.ForeignLibType.ForeignLibType
  foreignLibVersionInfo :: Distribution.Compat.Lens.Lens' ForeignLib (GHC.Internal.Maybe.Maybe Distribution.Types.ForeignLib.LibVersionInfo)
  foreignLibVersionLinux :: Distribution.Compat.Lens.Lens' ForeignLib (GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version)

module Distribution.Types.ForeignLibOption where
  type ForeignLibOption :: *
  data ForeignLibOption = ForeignLibStandalone

module Distribution.Types.ForeignLibType where
  type ForeignLibType :: *
  data ForeignLibType = ForeignLibNativeShared | ForeignLibNativeStatic | ForeignLibTypeUnknown
  foreignLibTypeIsShared :: ForeignLibType -> GHC.Types.Bool
  knownForeignLibTypes :: [ForeignLibType]

module Distribution.Types.GenericPackageDescription where
  type GenericPackageDescription :: *
  data GenericPackageDescription
    = GenericPackageDescription {packageDescription :: Distribution.Types.PackageDescription.PackageDescription,
                                 gpdScannedVersion :: GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version,
                                 genPackageFlags :: [Distribution.Types.Flag.PackageFlag],
                                 condLibrary :: GHC.Internal.Maybe.Maybe (Distribution.Types.CondTree.CondTree Distribution.Types.ConfVar.ConfVar [Distribution.Types.Dependency.Dependency] Distribution.Types.Library.Library),
                                 condSubLibraries :: [(Distribution.Types.UnqualComponentName.UnqualComponentName, Distribution.Types.CondTree.CondTree Distribution.Types.ConfVar.ConfVar [Distribution.Types.Dependency.Dependency] Distribution.Types.Library.Library)],
                                 condForeignLibs :: [(Distribution.Types.UnqualComponentName.UnqualComponentName, Distribution.Types.CondTree.CondTree Distribution.Types.ConfVar.ConfVar [Distribution.Types.Dependency.Dependency] Distribution.Types.ForeignLib.ForeignLib)],
                                 condExecutables :: [(Distribution.Types.UnqualComponentName.UnqualComponentName, Distribution.Types.CondTree.CondTree Distribution.Types.ConfVar.ConfVar [Distribution.Types.Dependency.Dependency] Distribution.Types.Executable.Executable)],
                                 condTestSuites :: [(Distribution.Types.UnqualComponentName.UnqualComponentName, Distribution.Types.CondTree.CondTree Distribution.Types.ConfVar.ConfVar [Distribution.Types.Dependency.Dependency] Distribution.Types.TestSuite.TestSuite)],
                                 condBenchmarks :: [(Distribution.Types.UnqualComponentName.UnqualComponentName, Distribution.Types.CondTree.CondTree Distribution.Types.ConfVar.ConfVar [Distribution.Types.Dependency.Dependency] Distribution.Types.Benchmark.Benchmark)]}
  emptyGenericPackageDescription :: GenericPackageDescription

module Distribution.Types.GenericPackageDescription.Lens where
  type ConfVar :: *
  data ConfVar = OS Distribution.System.OS | Arch Distribution.System.Arch | PackageFlag FlagName | Impl Distribution.Compiler.CompilerFlavor Distribution.Types.VersionRange.Internal.VersionRange
  type FlagName :: *
  newtype FlagName = ...
  type GenericPackageDescription :: *
  data GenericPackageDescription = ...
  type PackageFlag :: *
  data PackageFlag = ...
  _Arch :: Distribution.Compat.Lens.Traversal' ConfVar Distribution.System.Arch
  _Impl :: Distribution.Compat.Lens.Traversal' ConfVar (Distribution.Compiler.CompilerFlavor, Distribution.Types.VersionRange.Internal.VersionRange)
  _OS :: Distribution.Compat.Lens.Traversal' ConfVar Distribution.System.OS
  _PackageFlag :: Distribution.Compat.Lens.Traversal' ConfVar FlagName
  allCondTrees :: forall (f :: * -> *). GHC.Internal.Base.Applicative f => (forall a. Distribution.Types.CondTree.CondTree ConfVar [Distribution.Types.Dependency.Dependency] a -> f (Distribution.Types.CondTree.CondTree ConfVar [Distribution.Types.Dependency.Dependency] a)) -> GenericPackageDescription -> f GenericPackageDescription
  condBenchmarks :: Distribution.Compat.Lens.Lens' GenericPackageDescription [(Distribution.Types.UnqualComponentName.UnqualComponentName, Distribution.Types.CondTree.CondTree ConfVar [Distribution.Types.Dependency.Dependency] Distribution.Types.Benchmark.Benchmark)]
  condExecutables :: Distribution.Compat.Lens.Lens' GenericPackageDescription [(Distribution.Types.UnqualComponentName.UnqualComponentName, Distribution.Types.CondTree.CondTree ConfVar [Distribution.Types.Dependency.Dependency] Distribution.Types.Executable.Executable)]
  condForeignLibs :: Distribution.Compat.Lens.Lens' GenericPackageDescription [(Distribution.Types.UnqualComponentName.UnqualComponentName, Distribution.Types.CondTree.CondTree ConfVar [Distribution.Types.Dependency.Dependency] Distribution.Types.ForeignLib.ForeignLib)]
  condLibrary :: Distribution.Compat.Lens.Lens' GenericPackageDescription (GHC.Internal.Maybe.Maybe (Distribution.Types.CondTree.CondTree ConfVar [Distribution.Types.Dependency.Dependency] Distribution.Types.Library.Library))
  condSubLibraries :: Distribution.Compat.Lens.Lens' GenericPackageDescription [(Distribution.Types.UnqualComponentName.UnqualComponentName, Distribution.Types.CondTree.CondTree ConfVar [Distribution.Types.Dependency.Dependency] Distribution.Types.Library.Library)]
  condTestSuites :: Distribution.Compat.Lens.Lens' GenericPackageDescription [(Distribution.Types.UnqualComponentName.UnqualComponentName, Distribution.Types.CondTree.CondTree ConfVar [Distribution.Types.Dependency.Dependency] Distribution.Types.TestSuite.TestSuite)]
  flagDefault :: Distribution.Compat.Lens.Lens' PackageFlag GHC.Types.Bool
  flagDescription :: Distribution.Compat.Lens.Lens' PackageFlag GHC.Internal.Base.String
  flagManual :: Distribution.Compat.Lens.Lens' PackageFlag GHC.Types.Bool
  flagName :: Distribution.Compat.Lens.Lens' PackageFlag FlagName
  genPackageFlags :: Distribution.Compat.Lens.Lens' GenericPackageDescription [PackageFlag]
  gpdScannedVersion :: Distribution.Compat.Lens.Lens' GenericPackageDescription (GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version)
  packageDescription :: Distribution.Compat.Lens.Lens' GenericPackageDescription Distribution.Types.PackageDescription.PackageDescription

module Distribution.Types.GivenComponent where
  type GivenComponent :: *
  data GivenComponent = GivenComponent {givenComponentPackage :: Distribution.Types.PackageName.PackageName, givenComponentName :: Distribution.Types.LibraryName.LibraryName, givenComponentId :: Distribution.Types.ComponentId.ComponentId}
  type PromisedComponent :: *
  data PromisedComponent = PromisedComponent {promisedComponentPackage :: Distribution.Types.PackageId.PackageId, promisedComponentName :: Distribution.Types.LibraryName.LibraryName, promisedComponentId :: Distribution.Types.ComponentId.ComponentId}

module Distribution.Types.HookedBuildInfo where
  type HookedBuildInfo :: *
  type HookedBuildInfo = (GHC.Internal.Maybe.Maybe Distribution.Types.BuildInfo.BuildInfo, [(Distribution.Types.UnqualComponentName.UnqualComponentName, Distribution.Types.BuildInfo.BuildInfo)])
  emptyHookedBuildInfo :: HookedBuildInfo

module Distribution.Types.IncludeRenaming where
  type IncludeRenaming :: *
  data IncludeRenaming = IncludeRenaming {includeProvidesRn :: Distribution.Types.ModuleRenaming.ModuleRenaming, includeRequiresRn :: Distribution.Types.ModuleRenaming.ModuleRenaming}
  defaultIncludeRenaming :: IncludeRenaming
  isDefaultIncludeRenaming :: IncludeRenaming -> GHC.Types.Bool

module Distribution.Types.InstalledPackageInfo where
  type AbiDependency :: *
  data AbiDependency = AbiDependency {depUnitId :: Distribution.Types.UnitId.UnitId, depAbiHash :: Distribution.Types.AbiHash.AbiHash}
  type ExposedModule :: *
  data ExposedModule = ExposedModule {exposedName :: Distribution.ModuleName.ModuleName, exposedReexport :: GHC.Internal.Maybe.Maybe Distribution.Backpack.OpenModule}
  type InstalledPackageInfo :: *
  data InstalledPackageInfo
    = InstalledPackageInfo {sourcePackageId :: Distribution.Types.PackageId.PackageId,
                            sourceLibName :: Distribution.Types.LibraryName.LibraryName,
                            installedComponentId_ :: Distribution.Types.ComponentId.ComponentId,
                            libVisibility :: Distribution.Types.LibraryVisibility.LibraryVisibility,
                            installedUnitId :: Distribution.Types.UnitId.UnitId,
                            instantiatedWith :: [(Distribution.ModuleName.ModuleName, Distribution.Backpack.OpenModule)],
                            compatPackageKey :: GHC.Internal.Base.String,
                            license :: GHC.Internal.Data.Either.Either Distribution.SPDX.License.License Distribution.License.License,
                            copyright :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                          ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                            maintainer :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                           ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                            author :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                       ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                            stability :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                          ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                            homepage :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                         ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                            pkgUrl :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                       ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                            synopsis :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                         ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                            description :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                            ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                            category :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                         ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                            abiHash :: Distribution.Types.AbiHash.AbiHash,
                            indefinite :: GHC.Types.Bool,
                            exposed :: GHC.Types.Bool,
                            exposedModules :: [ExposedModule],
                            hiddenModules :: [Distribution.ModuleName.ModuleName],
                            trusted :: GHC.Types.Bool,
                            importDirs :: [GHC.Internal.IO.FilePath],
                            libraryDirs :: [GHC.Internal.IO.FilePath],
                            libraryDirsStatic :: [GHC.Internal.IO.FilePath],
                            libraryDynDirs :: [GHC.Internal.IO.FilePath],
                            dataDir :: GHC.Internal.IO.FilePath,
                            hsLibraries :: [GHC.Internal.Base.String],
                            extraLibraries :: [GHC.Internal.Base.String],
                            extraLibrariesStatic :: [GHC.Internal.Base.String],
                            extraGHCiLibraries :: [GHC.Internal.Base.String],
                            includeDirs :: [GHC.Internal.IO.FilePath],
                            includes :: [GHC.Internal.Base.String],
                            depends :: [Distribution.Types.UnitId.UnitId],
                            abiDepends :: [AbiDependency],
                            ccOptions :: [GHC.Internal.Base.String],
                            cxxOptions :: [GHC.Internal.Base.String],
                            ldOptions :: [GHC.Internal.Base.String],
                            frameworkDirs :: [GHC.Internal.IO.FilePath],
                            frameworks :: [GHC.Internal.Base.String],
                            haddockInterfaces :: [GHC.Internal.IO.FilePath],
                            haddockHTMLs :: [GHC.Internal.IO.FilePath],
                            pkgRoot :: GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath}
  emptyInstalledPackageInfo :: InstalledPackageInfo
  mungedPackageId :: InstalledPackageInfo -> Distribution.Types.MungedPackageId.MungedPackageId
  mungedPackageName :: InstalledPackageInfo -> Distribution.Types.MungedPackageName.MungedPackageName

module Distribution.Types.InstalledPackageInfo.FieldGrammar where
  ipiFieldGrammar ::
    forall (c :: * -> Constraint) (g :: * -> * -> *).
    (Distribution.FieldGrammar.Class.FieldGrammar c g, GHC.Internal.Base.Applicative (g Distribution.Types.InstalledPackageInfo.InstalledPackageInfo), GHC.Internal.Base.Applicative (g Distribution.Types.InstalledPackageInfo.FieldGrammar.Basic), c (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.AbiHash.AbiHash), c (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.LibraryVisibility.LibraryVisibility), c (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.PackageName.PackageName), c (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.UnitId.UnitId),
     c (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.UnqualComponentName.UnqualComponentName), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.AbiDependency.AbiDependency) Distribution.Types.AbiDependency.AbiDependency), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (GHC.Internal.Data.Functor.Identity.Identity Distribution.Types.UnitId.UnitId) Distribution.Types.UnitId.UnitId),
     c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep (Distribution.FieldGrammar.Newtypes.MQuoted Distribution.ModuleName.ModuleName) Distribution.ModuleName.ModuleName), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep Distribution.FieldGrammar.Newtypes.FilePathNT GHC.Internal.Base.String), c (Distribution.FieldGrammar.Newtypes.List Distribution.FieldGrammar.Newtypes.FSep Distribution.FieldGrammar.Newtypes.Token GHC.Internal.Base.String), c (Distribution.FieldGrammar.Newtypes.MQuoted Distribution.Types.MungedPackageName.MungedPackageName),
     c (Distribution.FieldGrammar.Newtypes.MQuoted Distribution.Types.Version.Version), c Distribution.Types.InstalledPackageInfo.FieldGrammar.CompatPackageKey, c Distribution.Types.InstalledPackageInfo.FieldGrammar.ExposedModules, c Distribution.Types.InstalledPackageInfo.FieldGrammar.InstWith, c Distribution.Types.InstalledPackageInfo.FieldGrammar.SpecLicenseLenient) =>
    g Distribution.Types.InstalledPackageInfo.InstalledPackageInfo Distribution.Types.InstalledPackageInfo.InstalledPackageInfo

module Distribution.Types.InstalledPackageInfo.Lens where
  type InstalledPackageInfo :: *
  data InstalledPackageInfo = ...
  abiDepends :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [Distribution.Types.AbiDependency.AbiDependency]
  abiHash :: Distribution.Compat.Lens.Lens' InstalledPackageInfo Distribution.Types.AbiHash.AbiHash
  author :: Distribution.Compat.Lens.Lens' InstalledPackageInfo Distribution.Utils.ShortText.ShortText
  category :: Distribution.Compat.Lens.Lens' InstalledPackageInfo Distribution.Utils.ShortText.ShortText
  ccOptions :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [GHC.Internal.Base.String]
  compatPackageKey :: Distribution.Compat.Lens.Lens' InstalledPackageInfo GHC.Internal.Base.String
  copyright :: Distribution.Compat.Lens.Lens' InstalledPackageInfo Distribution.Utils.ShortText.ShortText
  cxxOptions :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [GHC.Internal.Base.String]
  dataDir :: Distribution.Compat.Lens.Lens' InstalledPackageInfo GHC.Internal.IO.FilePath
  depends :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [Distribution.Types.UnitId.UnitId]
  description :: Distribution.Compat.Lens.Lens' InstalledPackageInfo Distribution.Utils.ShortText.ShortText
  exposed :: Distribution.Compat.Lens.Lens' InstalledPackageInfo GHC.Types.Bool
  exposedModules :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [Distribution.Types.ExposedModule.ExposedModule]
  extraGHCiLibraries :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [GHC.Internal.Base.String]
  extraLibraries :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [GHC.Internal.Base.String]
  extraLibrariesStatic :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [GHC.Internal.Base.String]
  frameworkDirs :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [GHC.Internal.IO.FilePath]
  frameworks :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [GHC.Internal.Base.String]
  haddockHTMLs :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [GHC.Internal.IO.FilePath]
  haddockInterfaces :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [GHC.Internal.IO.FilePath]
  hiddenModules :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [Distribution.ModuleName.ModuleName]
  homepage :: Distribution.Compat.Lens.Lens' InstalledPackageInfo Distribution.Utils.ShortText.ShortText
  hsLibraries :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [GHC.Internal.Base.String]
  importDirs :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [GHC.Internal.IO.FilePath]
  includeDirs :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [GHC.Internal.IO.FilePath]
  includes :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [GHC.Internal.Base.String]
  indefinite :: Distribution.Compat.Lens.Lens' InstalledPackageInfo GHC.Types.Bool
  installedComponentId_ :: Distribution.Compat.Lens.Lens' InstalledPackageInfo Distribution.Types.ComponentId.ComponentId
  installedUnitId :: Distribution.Compat.Lens.Lens' InstalledPackageInfo Distribution.Types.UnitId.UnitId
  instantiatedWith :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [(Distribution.ModuleName.ModuleName, Distribution.Backpack.OpenModule)]
  ldOptions :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [GHC.Internal.Base.String]
  libVisibility :: Distribution.Compat.Lens.Lens' InstalledPackageInfo Distribution.Types.LibraryVisibility.LibraryVisibility
  libraryDirs :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [GHC.Internal.IO.FilePath]
  libraryDirsStatic :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [GHC.Internal.IO.FilePath]
  libraryDynDirs :: Distribution.Compat.Lens.Lens' InstalledPackageInfo [GHC.Internal.IO.FilePath]
  license :: Distribution.Compat.Lens.Lens' InstalledPackageInfo (GHC.Internal.Data.Either.Either Distribution.SPDX.License.License Distribution.License.License)
  maintainer :: Distribution.Compat.Lens.Lens' InstalledPackageInfo Distribution.Utils.ShortText.ShortText
  pkgRoot :: Distribution.Compat.Lens.Lens' InstalledPackageInfo (GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath)
  pkgUrl :: Distribution.Compat.Lens.Lens' InstalledPackageInfo Distribution.Utils.ShortText.ShortText
  sourceLibName :: Distribution.Compat.Lens.Lens' InstalledPackageInfo Distribution.Types.LibraryName.LibraryName
  sourcePackageId :: Distribution.Compat.Lens.Lens' InstalledPackageInfo Distribution.Types.PackageId.PackageIdentifier
  stability :: Distribution.Compat.Lens.Lens' InstalledPackageInfo Distribution.Utils.ShortText.ShortText
  synopsis :: Distribution.Compat.Lens.Lens' InstalledPackageInfo Distribution.Utils.ShortText.ShortText
  trusted :: Distribution.Compat.Lens.Lens' InstalledPackageInfo GHC.Types.Bool

module Distribution.Types.LegacyExeDependency where
  type LegacyExeDependency :: *
  data LegacyExeDependency = LegacyExeDependency GHC.Internal.Base.String Distribution.Types.VersionRange.Internal.VersionRange

module Distribution.Types.Lens where
  type Benchmark :: *
  data Benchmark = ...
  type BuildInfo :: *
  data BuildInfo = ...
  type ConfVar :: *
  data ConfVar = OS Distribution.System.OS | Arch Distribution.System.Arch | PackageFlag FlagName | Impl Distribution.Compiler.CompilerFlavor Distribution.Types.VersionRange.Internal.VersionRange
  type Executable :: *
  data Executable = ...
  type FlagName :: *
  newtype FlagName = ...
  type ForeignLib :: *
  data ForeignLib = ...
  type GenericPackageDescription :: *
  data GenericPackageDescription = ...
  type HasBuildInfo :: * -> Constraint
  class HasBuildInfo a where
    buildInfo :: Distribution.Compat.Lens.Lens' a BuildInfo
    buildable :: Distribution.Compat.Lens.Lens' a GHC.Types.Bool
    buildTools :: Distribution.Compat.Lens.Lens' a [Distribution.Types.LegacyExeDependency.LegacyExeDependency]
    buildToolDepends :: Distribution.Compat.Lens.Lens' a [Distribution.Types.ExeDependency.ExeDependency]
    cppOptions :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    asmOptions :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    cmmOptions :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    ccOptions :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    cxxOptions :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    ldOptions :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    hsc2hsOptions :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    pkgconfigDepends :: Distribution.Compat.Lens.Lens' a [Distribution.Types.PkgconfigDependency.PkgconfigDependency]
    frameworks :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Framework Distribution.Utils.Path.File]
    extraFrameworkDirs :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Framework)]
    asmSources :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
    cmmSources :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
    cSources :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
    cxxSources :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
    jsSources :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
    hsSourceDirs :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Source)]
    otherModules :: Distribution.Compat.Lens.Lens' a [Distribution.ModuleName.ModuleName]
    virtualModules :: Distribution.Compat.Lens.Lens' a [Distribution.ModuleName.ModuleName]
    autogenModules :: Distribution.Compat.Lens.Lens' a [Distribution.ModuleName.ModuleName]
    defaultLanguage :: Distribution.Compat.Lens.Lens' a (GHC.Internal.Maybe.Maybe Language.Haskell.Extension.Language)
    otherLanguages :: Distribution.Compat.Lens.Lens' a [Language.Haskell.Extension.Language]
    defaultExtensions :: Distribution.Compat.Lens.Lens' a [Language.Haskell.Extension.Extension]
    otherExtensions :: Distribution.Compat.Lens.Lens' a [Language.Haskell.Extension.Extension]
    oldExtensions :: Distribution.Compat.Lens.Lens' a [Language.Haskell.Extension.Extension]
    extraLibs :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    extraLibsStatic :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    extraGHCiLibs :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    extraBundledLibs :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    extraLibFlavours :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    extraDynLibFlavours :: Distribution.Compat.Lens.Lens' a [GHC.Internal.Base.String]
    extraLibDirs :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Lib)]
    extraLibDirsStatic :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Lib)]
    includeDirs :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Include)]
    includes :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Include Distribution.Utils.Path.File]
    autogenIncludes :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Include Distribution.Utils.Path.File]
    installIncludes :: Distribution.Compat.Lens.Lens' a [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Include Distribution.Utils.Path.File]
    options :: Distribution.Compat.Lens.Lens' a (Distribution.Compiler.PerCompilerFlavor [GHC.Internal.Base.String])
    profOptions :: Distribution.Compat.Lens.Lens' a (Distribution.Compiler.PerCompilerFlavor [GHC.Internal.Base.String])
    sharedOptions :: Distribution.Compat.Lens.Lens' a (Distribution.Compiler.PerCompilerFlavor [GHC.Internal.Base.String])
    profSharedOptions :: Distribution.Compat.Lens.Lens' a (Distribution.Compiler.PerCompilerFlavor [GHC.Internal.Base.String])
    staticOptions :: Distribution.Compat.Lens.Lens' a (Distribution.Compiler.PerCompilerFlavor [GHC.Internal.Base.String])
    customFieldsBI :: Distribution.Compat.Lens.Lens' a [(GHC.Internal.Base.String, GHC.Internal.Base.String)]
    targetBuildDepends :: Distribution.Compat.Lens.Lens' a [Distribution.Types.Dependency.Dependency]
    mixins :: Distribution.Compat.Lens.Lens' a [Distribution.Types.Mixin.Mixin]
    {-# MINIMAL buildInfo #-}
  type HasBuildInfos :: * -> Constraint
  class HasBuildInfos a where
    traverseBuildInfos :: Distribution.Compat.Lens.Traversal' a BuildInfo
    {-# MINIMAL traverseBuildInfos #-}
  type Library :: *
  data Library = ...
  type PackageDescription :: *
  data PackageDescription = ...
  type PackageFlag :: *
  data PackageFlag = ...
  type PackageIdentifier :: *
  data PackageIdentifier = ...
  type SetupBuildInfo :: *
  data SetupBuildInfo = ...
  type SourceRepo :: *
  data SourceRepo = ...
  type TestSuite :: *
  data TestSuite = ...
  _Arch :: Distribution.Compat.Lens.Traversal' ConfVar Distribution.System.Arch
  _Impl :: Distribution.Compat.Lens.Traversal' ConfVar (Distribution.Compiler.CompilerFlavor, Distribution.Types.VersionRange.Internal.VersionRange)
  _OS :: Distribution.Compat.Lens.Traversal' ConfVar Distribution.System.OS
  _PackageFlag :: Distribution.Compat.Lens.Traversal' ConfVar FlagName
  allCondTrees :: forall (f :: * -> *). GHC.Internal.Base.Applicative f => (forall a. Distribution.Types.CondTree.CondTree ConfVar [Distribution.Types.Dependency.Dependency] a -> f (Distribution.Types.CondTree.CondTree ConfVar [Distribution.Types.Dependency.Dependency] a)) -> GenericPackageDescription -> f GenericPackageDescription
  allLibraries :: Distribution.Compat.Lens.Traversal' PackageDescription Library
  author :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.Utils.ShortText.ShortText
  benchmarkBuildInfo :: Distribution.Compat.Lens.Lens' Benchmark BuildInfo
  benchmarkInterface :: Distribution.Compat.Lens.Lens' Benchmark Distribution.Types.BenchmarkInterface.BenchmarkInterface
  benchmarkName :: Distribution.Compat.Lens.Lens' Benchmark Distribution.Types.UnqualComponentName.UnqualComponentName
  benchmarks :: Distribution.Compat.Lens.Lens' PackageDescription [Benchmark]
  bugReports :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.Utils.ShortText.ShortText
  buildTypeRaw :: Distribution.Compat.Lens.Lens' PackageDescription (GHC.Internal.Maybe.Maybe Distribution.Types.BuildType.BuildType)
  category :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.Utils.ShortText.ShortText
  componentBuildInfo :: Distribution.Types.ComponentName.ComponentName -> Distribution.Compat.Lens.Traversal' PackageDescription BuildInfo
  componentModules :: forall r. GHC.Internal.Base.Monoid r => Distribution.Types.ComponentName.ComponentName -> Distribution.Compat.Lens.Getting r PackageDescription [Distribution.ModuleName.ModuleName]
  condBenchmarks :: Distribution.Compat.Lens.Lens' GenericPackageDescription [(Distribution.Types.UnqualComponentName.UnqualComponentName, Distribution.Types.CondTree.CondTree ConfVar [Distribution.Types.Dependency.Dependency] Benchmark)]
  condExecutables :: Distribution.Compat.Lens.Lens' GenericPackageDescription [(Distribution.Types.UnqualComponentName.UnqualComponentName, Distribution.Types.CondTree.CondTree ConfVar [Distribution.Types.Dependency.Dependency] Executable)]
  condForeignLibs :: Distribution.Compat.Lens.Lens' GenericPackageDescription [(Distribution.Types.UnqualComponentName.UnqualComponentName, Distribution.Types.CondTree.CondTree ConfVar [Distribution.Types.Dependency.Dependency] ForeignLib)]
  condLibrary :: Distribution.Compat.Lens.Lens' GenericPackageDescription (GHC.Internal.Maybe.Maybe (Distribution.Types.CondTree.CondTree ConfVar [Distribution.Types.Dependency.Dependency] Library))
  condSubLibraries :: Distribution.Compat.Lens.Lens' GenericPackageDescription [(Distribution.Types.UnqualComponentName.UnqualComponentName, Distribution.Types.CondTree.CondTree ConfVar [Distribution.Types.Dependency.Dependency] Library)]
  condTestSuites :: Distribution.Compat.Lens.Lens' GenericPackageDescription [(Distribution.Types.UnqualComponentName.UnqualComponentName, Distribution.Types.CondTree.CondTree ConfVar [Distribution.Types.Dependency.Dependency] TestSuite)]
  copyright :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.Utils.ShortText.ShortText
  customFieldsPD :: Distribution.Compat.Lens.Lens' PackageDescription [(GHC.Internal.Base.String, GHC.Internal.Base.String)]
  dataDir :: Distribution.Compat.Lens.Lens' PackageDescription (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.DataDir))
  dataFiles :: Distribution.Compat.Lens.Lens' PackageDescription [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.DataDir Distribution.Utils.Path.File]
  defaultSetupDepends :: Distribution.Compat.Lens.Lens' SetupBuildInfo GHC.Types.Bool
  description :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.Utils.ShortText.ShortText
  exeBuildInfo :: Distribution.Compat.Lens.Lens' Executable BuildInfo
  exeName :: Distribution.Compat.Lens.Lens' Executable Distribution.Types.UnqualComponentName.UnqualComponentName
  exeScope :: Distribution.Compat.Lens.Lens' Executable Distribution.Types.ExecutableScope.ExecutableScope
  executables :: Distribution.Compat.Lens.Lens' PackageDescription [Executable]
  exposedModules :: Distribution.Compat.Lens.Lens' Library [Distribution.ModuleName.ModuleName]
  extraDocFiles :: Distribution.Compat.Lens.Lens' PackageDescription [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
  extraFiles :: Distribution.Compat.Lens.Lens' PackageDescription [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
  extraSrcFiles :: Distribution.Compat.Lens.Lens' PackageDescription [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
  extraTmpFiles :: Distribution.Compat.Lens.Lens' PackageDescription [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
  flagDefault :: Distribution.Compat.Lens.Lens' PackageFlag GHC.Types.Bool
  flagDescription :: Distribution.Compat.Lens.Lens' PackageFlag GHC.Internal.Base.String
  flagManual :: Distribution.Compat.Lens.Lens' PackageFlag GHC.Types.Bool
  flagName :: Distribution.Compat.Lens.Lens' PackageFlag FlagName
  foreignLibBuildInfo :: Distribution.Compat.Lens.Lens' ForeignLib BuildInfo
  foreignLibModDefFile :: Distribution.Compat.Lens.Lens' ForeignLib [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Source Distribution.Utils.Path.File]
  foreignLibName :: Distribution.Compat.Lens.Lens' ForeignLib Distribution.Types.UnqualComponentName.UnqualComponentName
  foreignLibOptions :: Distribution.Compat.Lens.Lens' ForeignLib [Distribution.Types.ForeignLibOption.ForeignLibOption]
  foreignLibType :: Distribution.Compat.Lens.Lens' ForeignLib Distribution.Types.ForeignLibType.ForeignLibType
  foreignLibVersionInfo :: Distribution.Compat.Lens.Lens' ForeignLib (GHC.Internal.Maybe.Maybe Distribution.Types.ForeignLib.LibVersionInfo)
  foreignLibVersionLinux :: Distribution.Compat.Lens.Lens' ForeignLib (GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version)
  foreignLibs :: Distribution.Compat.Lens.Lens' PackageDescription [ForeignLib]
  genPackageFlags :: Distribution.Compat.Lens.Lens' GenericPackageDescription [PackageFlag]
  gpdScannedVersion :: Distribution.Compat.Lens.Lens' GenericPackageDescription (GHC.Internal.Maybe.Maybe Distribution.Types.Version.Version)
  homepage :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.Utils.ShortText.ShortText
  libBuildInfo :: Distribution.Compat.Lens.Lens' Library BuildInfo
  libExposed :: Distribution.Compat.Lens.Lens' Library GHC.Types.Bool
  libName :: Distribution.Compat.Lens.Lens' Library Distribution.Types.LibraryName.LibraryName
  libVisibility :: Distribution.Compat.Lens.Lens' Library Distribution.Types.LibraryVisibility.LibraryVisibility
  library :: Distribution.Compat.Lens.Lens' PackageDescription (GHC.Internal.Maybe.Maybe Library)
  licenseFiles :: Distribution.Compat.Lens.Lens' PackageDescription [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
  licenseRaw :: Distribution.Compat.Lens.Lens' PackageDescription (GHC.Internal.Data.Either.Either Distribution.SPDX.License.License Distribution.License.License)
  maintainer :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.Utils.ShortText.ShortText
  modulePath :: Distribution.Compat.Lens.Lens' Executable (Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Source Distribution.Utils.Path.File)
  package :: Distribution.Compat.Lens.Lens' PackageDescription PackageIdentifier
  packageDescription :: Distribution.Compat.Lens.Lens' GenericPackageDescription PackageDescription
  pkgName :: Distribution.Compat.Lens.Lens' PackageIdentifier Distribution.Types.PackageName.PackageName
  pkgUrl :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.Utils.ShortText.ShortText
  pkgVersion :: Distribution.Compat.Lens.Lens' PackageIdentifier Distribution.Types.Version.Version
  reexportedModules :: Distribution.Compat.Lens.Lens' Library [Distribution.Types.ModuleReexport.ModuleReexport]
  repoBranch :: Distribution.Compat.Lens.Lens' SourceRepo (GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)
  repoKind :: Distribution.Compat.Lens.Lens' SourceRepo Distribution.Types.SourceRepo.RepoKind
  repoLocation :: Distribution.Compat.Lens.Lens' SourceRepo (GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)
  repoModule :: Distribution.Compat.Lens.Lens' SourceRepo (GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)
  repoSubdir :: Distribution.Compat.Lens.Lens' SourceRepo (GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath)
  repoTag :: Distribution.Compat.Lens.Lens' SourceRepo (GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)
  repoType :: Distribution.Compat.Lens.Lens' SourceRepo (GHC.Internal.Maybe.Maybe Distribution.Types.SourceRepo.RepoType)
  setupBuildInfo :: Distribution.Compat.Lens.Lens' PackageDescription (GHC.Internal.Maybe.Maybe SetupBuildInfo)
  setupDepends :: Distribution.Compat.Lens.Lens' SetupBuildInfo [Distribution.Types.Dependency.Dependency]
  signatures :: Distribution.Compat.Lens.Lens' Library [Distribution.ModuleName.ModuleName]
  sourceRepos :: Distribution.Compat.Lens.Lens' PackageDescription [SourceRepo]
  specVersion :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.CabalSpecVersion.CabalSpecVersion
  stability :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.Utils.ShortText.ShortText
  subLibraries :: Distribution.Compat.Lens.Lens' PackageDescription [Library]
  synopsis :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.Utils.ShortText.ShortText
  testBuildInfo :: Distribution.Compat.Lens.Lens' TestSuite BuildInfo
  testInterface :: Distribution.Compat.Lens.Lens' TestSuite Distribution.Types.TestSuiteInterface.TestSuiteInterface
  testName :: Distribution.Compat.Lens.Lens' TestSuite Distribution.Types.UnqualComponentName.UnqualComponentName
  testSuites :: Distribution.Compat.Lens.Lens' PackageDescription [TestSuite]
  testedWith :: Distribution.Compat.Lens.Lens' PackageDescription [(Distribution.Compiler.CompilerFlavor, Distribution.Types.VersionRange.Internal.VersionRange)]

module Distribution.Types.Library where
  type Library :: *
  data Library = Library {libName :: Distribution.Types.LibraryName.LibraryName, exposedModules :: [Distribution.ModuleName.ModuleName], reexportedModules :: [Distribution.Types.ModuleReexport.ModuleReexport], signatures :: [Distribution.ModuleName.ModuleName], libExposed :: GHC.Types.Bool, libVisibility :: Distribution.Types.LibraryVisibility.LibraryVisibility, libBuildInfo :: Distribution.Types.BuildInfo.BuildInfo}
  emptyLibrary :: Library
  explicitLibModules :: Library -> [Distribution.ModuleName.ModuleName]
  libModulesAutogen :: Library -> [Distribution.ModuleName.ModuleName]

module Distribution.Types.Library.Lens where
  type Library :: *
  data Library = ...
  exposedModules :: Distribution.Compat.Lens.Lens' Library [Distribution.ModuleName.ModuleName]
  libBuildInfo :: Distribution.Compat.Lens.Lens' Library Distribution.Types.BuildInfo.BuildInfo
  libExposed :: Distribution.Compat.Lens.Lens' Library GHC.Types.Bool
  libName :: Distribution.Compat.Lens.Lens' Library Distribution.Types.LibraryName.LibraryName
  libVisibility :: Distribution.Compat.Lens.Lens' Library Distribution.Types.LibraryVisibility.LibraryVisibility
  reexportedModules :: Distribution.Compat.Lens.Lens' Library [Distribution.Types.ModuleReexport.ModuleReexport]
  signatures :: Distribution.Compat.Lens.Lens' Library [Distribution.ModuleName.ModuleName]

module Distribution.Types.LibraryName where
  type LibraryName :: *
  data LibraryName = LMainLibName | LSubLibName Distribution.Types.UnqualComponentName.UnqualComponentName
  defaultLibName :: LibraryName
  libraryNameStanza :: LibraryName -> GHC.Internal.Base.String
  libraryNameString :: LibraryName -> GHC.Internal.Maybe.Maybe Distribution.Types.UnqualComponentName.UnqualComponentName
  maybeToLibraryName :: GHC.Internal.Maybe.Maybe Distribution.Types.UnqualComponentName.UnqualComponentName -> LibraryName
  parsecLibraryNameComponent :: forall (m :: * -> *). Distribution.Parsec.CabalParsing m => m LibraryName
  prettyLibraryNameComponent :: LibraryName -> Text.PrettyPrint.HughesPJ.Doc
  prettyLibraryNames :: forall a. Distribution.Pretty.Pretty a => a -> GHC.Internal.Base.NonEmpty LibraryName -> Text.PrettyPrint.HughesPJ.Doc
  showLibraryName :: LibraryName -> GHC.Internal.Base.String

module Distribution.Types.LibraryVisibility where
  type LibraryVisibility :: *
  data LibraryVisibility = LibraryVisibilityPublic | LibraryVisibilityPrivate

module Distribution.Types.LocalBuildConfig where
  type BuildOptions :: *
  data BuildOptions
    = BuildOptions {withVanillaLib :: GHC.Types.Bool,
                    withProfLib :: GHC.Types.Bool,
                    withProfLibShared :: GHC.Types.Bool,
                    withSharedLib :: GHC.Types.Bool,
                    withStaticLib :: GHC.Types.Bool,
                    withDynExe :: GHC.Types.Bool,
                    withFullyStaticExe :: GHC.Types.Bool,
                    withProfExe :: GHC.Types.Bool,
                    withProfLibDetail :: Distribution.Simple.Compiler.ProfDetailLevel,
                    withProfExeDetail :: Distribution.Simple.Compiler.ProfDetailLevel,
                    withOptimization :: Distribution.Simple.Compiler.OptimisationLevel,
                    withDebugInfo :: Distribution.Simple.Compiler.DebugInfoLevel,
                    withGHCiLib :: GHC.Types.Bool,
                    splitSections :: GHC.Types.Bool,
                    splitObjs :: GHC.Types.Bool,
                    stripExes :: GHC.Types.Bool,
                    stripLibs :: GHC.Types.Bool,
                    exeCoverage :: GHC.Types.Bool,
                    libCoverage :: GHC.Types.Bool,
                    relocatable :: GHC.Types.Bool}
  type ComponentBuildDescr :: *
  data ComponentBuildDescr = ComponentBuildDescr {componentGraph :: Distribution.Compat.Graph.Graph Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo, componentNameMap :: Data.Map.Internal.Map Distribution.Types.ComponentName.ComponentName [Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo], promisedPkgs :: Data.Map.Internal.Map (Distribution.Types.PackageName.PackageName, Distribution.Types.ComponentName.ComponentName) Distribution.Types.GivenComponent.PromisedComponent, installedPkgs :: Distribution.Simple.PackageIndex.InstalledPackageIndex}
  type LocalBuildConfig :: *
  data LocalBuildConfig = LocalBuildConfig {extraConfigArgs :: [GHC.Internal.Base.String], withPrograms :: Distribution.Simple.Program.Db.ProgramDb, withBuildOptions :: BuildOptions}
  type LocalBuildDescr :: *
  data LocalBuildDescr = LocalBuildDescr {packageBuildDescr :: PackageBuildDescr, componentBuildDescr :: ComponentBuildDescr}
  type PackageBuildDescr :: *
  data PackageBuildDescr
    = PackageBuildDescr {configFlags :: Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags,
                         flagAssignment :: Distribution.Types.Flag.FlagAssignment,
                         componentEnabledSpec :: Distribution.Types.ComponentRequestedSpec.ComponentRequestedSpec,
                         compiler :: Distribution.Simple.Compiler.Compiler,
                         hostPlatform :: Distribution.System.Platform,
                         pkgDescrFile :: GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File),
                         localPkgDescr :: Distribution.Types.PackageDescription.PackageDescription,
                         installDirTemplates :: Distribution.Simple.InstallDirs.InstallDirTemplates,
                         withPackageDB :: Distribution.Simple.Compiler.PackageDBStack,
                         extraCoverageFor :: [Distribution.Types.UnitId.UnitId]}
  buildOptionsConfigFlags :: BuildOptions -> Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags

module Distribution.Types.LocalBuildInfo where
  pattern LocalBuildInfo
    :: Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags
       -> Distribution.Types.Flag.FlagAssignment
       -> Distribution.Types.ComponentRequestedSpec.ComponentRequestedSpec
       -> [GHC.Internal.Base.String]
       -> Distribution.Simple.InstallDirs.InstallDirTemplates
       -> Distribution.Simple.Compiler.Compiler
       -> Distribution.System.Platform
       -> GHC.Internal.Maybe.Maybe (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File)
       -> Distribution.Compat.Graph.Graph Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo
       -> Data.Map.Internal.Map Distribution.Types.ComponentName.ComponentName [Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo]
       -> Data.Map.Internal.Map (Distribution.Types.PackageName.PackageName, Distribution.Types.ComponentName.ComponentName) Distribution.Types.GivenComponent.PromisedComponent
       -> Distribution.Simple.PackageIndex.InstalledPackageIndex
       -> Distribution.Types.PackageDescription.PackageDescription
       -> Distribution.Simple.Program.Db.ProgramDb
       -> Distribution.Simple.Compiler.PackageDBStack
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> Distribution.Simple.Compiler.ProfDetailLevel
       -> Distribution.Simple.Compiler.ProfDetailLevel
       -> Distribution.Simple.Compiler.OptimisationLevel
       -> Distribution.Simple.Compiler.DebugInfoLevel
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> GHC.Types.Bool
       -> [Distribution.Types.UnitId.UnitId]
       -> GHC.Types.Bool
       -> LocalBuildInfo
  pattern LocalBuildInfo {configFlags, flagAssignment, componentEnabledSpec, extraConfigArgs, installDirTemplates, compiler, hostPlatform, pkgDescrFile, componentGraph, componentNameMap, promisedPkgs, installedPkgs, localPkgDescr, withPrograms, withPackageDB, withVanillaLib, withProfLib, withProfLibShared, withSharedLib, withStaticLib, withDynExe, withFullyStaticExe, withProfExe, withProfLibDetail, withProfExeDetail, withOptimization, withDebugInfo, withGHCiLib, splitSections, splitObjs, stripExes, stripLibs, exeCoverage, libCoverage, extraCoverageFor, relocatable}
  type LocalBuildInfo :: *
  data LocalBuildInfo = NewLocalBuildInfo {localBuildDescr :: Distribution.Types.LocalBuildConfig.LocalBuildDescr, localBuildConfig :: Distribution.Types.LocalBuildConfig.LocalBuildConfig}
  allTargetsInBuildOrder :: LocalBuildInfo -> [Distribution.Types.TargetInfo.TargetInfo]
  allTargetsInBuildOrder' :: Distribution.Types.PackageDescription.PackageDescription -> LocalBuildInfo -> [Distribution.Types.TargetInfo.TargetInfo]
  buildDir :: LocalBuildInfo -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Build)
  buildDirPBD :: Distribution.Types.LocalBuildConfig.PackageBuildDescr -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Build)
  buildWays :: LocalBuildInfo -> (GHC.Types.Bool -> [Distribution.Simple.BuildWay.BuildWay], GHC.Types.Bool -> Distribution.Simple.BuildWay.BuildWay, Distribution.Simple.BuildWay.BuildWay)
  componentNameCLBIs :: LocalBuildInfo -> Distribution.Types.ComponentName.ComponentName -> [Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo]
  componentNameTargets :: LocalBuildInfo -> Distribution.Types.ComponentName.ComponentName -> [Distribution.Types.TargetInfo.TargetInfo]
  componentNameTargets' :: Distribution.Types.PackageDescription.PackageDescription -> LocalBuildInfo -> Distribution.Types.ComponentName.ComponentName -> [Distribution.Types.TargetInfo.TargetInfo]
  distPrefLBI :: LocalBuildInfo -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Dist)
  localCompatPackageKey :: LocalBuildInfo -> GHC.Internal.Base.String
  localComponentId :: LocalBuildInfo -> Distribution.Types.ComponentId.ComponentId
  localPackage :: LocalBuildInfo -> Distribution.Types.PackageId.PackageId
  localUnitId :: LocalBuildInfo -> Distribution.Types.UnitId.UnitId
  neededTargetsInBuildOrder :: LocalBuildInfo -> [Distribution.Types.UnitId.UnitId] -> [Distribution.Types.TargetInfo.TargetInfo]
  neededTargetsInBuildOrder' :: Distribution.Types.PackageDescription.PackageDescription -> LocalBuildInfo -> [Distribution.Types.UnitId.UnitId] -> [Distribution.Types.TargetInfo.TargetInfo]
  packageRoot :: Cabal-3.15.0.0:Distribution.Simple.Setup.Common.CommonSetupFlags -> GHC.Internal.IO.FilePath
  progPrefix :: LocalBuildInfo -> Distribution.Simple.InstallDirs.PathTemplate
  progSuffix :: LocalBuildInfo -> Distribution.Simple.InstallDirs.PathTemplate
  setupFlagsBuildDir :: Cabal-3.15.0.0:Distribution.Simple.Setup.Common.CommonSetupFlags -> Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.Build)
  testCoverage :: LocalBuildInfo -> GHC.Types.Bool
  unitIdTarget :: LocalBuildInfo -> Distribution.Types.UnitId.UnitId -> GHC.Internal.Maybe.Maybe Distribution.Types.TargetInfo.TargetInfo
  unitIdTarget' :: Distribution.Types.PackageDescription.PackageDescription -> LocalBuildInfo -> Distribution.Types.UnitId.UnitId -> GHC.Internal.Maybe.Maybe Distribution.Types.TargetInfo.TargetInfo
  withAllTargetsInBuildOrder :: LocalBuildInfo -> (Distribution.Types.TargetInfo.TargetInfo -> GHC.Types.IO ()) -> GHC.Types.IO ()
  withAllTargetsInBuildOrder' :: Distribution.Types.PackageDescription.PackageDescription -> LocalBuildInfo -> (Distribution.Types.TargetInfo.TargetInfo -> GHC.Types.IO ()) -> GHC.Types.IO ()
  withNeededTargetsInBuildOrder :: LocalBuildInfo -> [Distribution.Types.UnitId.UnitId] -> (Distribution.Types.TargetInfo.TargetInfo -> GHC.Types.IO ()) -> GHC.Types.IO ()
  withNeededTargetsInBuildOrder' :: Distribution.Types.PackageDescription.PackageDescription -> LocalBuildInfo -> [Distribution.Types.UnitId.UnitId] -> (Distribution.Types.TargetInfo.TargetInfo -> GHC.Types.IO ()) -> GHC.Types.IO ()

module Distribution.Types.MissingDependency where
  type MissingDependency :: *
  data MissingDependency = MissingDependency Distribution.Types.Dependency.Dependency Distribution.Types.MissingDependencyReason.MissingDependencyReason

module Distribution.Types.MissingDependencyReason where
  type MissingDependencyReason :: *
  data MissingDependencyReason = MissingLibrary (GHC.Internal.Base.NonEmpty Distribution.Types.LibraryName.LibraryName) | MissingPackage | WrongVersion [Distribution.Types.Version.Version] | MissingComponent Distribution.Types.PackageName.PackageName

module Distribution.Types.Mixin where
  type Mixin :: *
  data Mixin = Mixin {mixinPackageName :: Distribution.Types.PackageName.PackageName, mixinLibraryName :: Distribution.Types.LibraryName.LibraryName, mixinIncludeRenaming :: Distribution.Types.IncludeRenaming.IncludeRenaming}
  mkMixin :: Distribution.Types.PackageName.PackageName -> Distribution.Types.LibraryName.LibraryName -> Distribution.Types.IncludeRenaming.IncludeRenaming -> Mixin
  normaliseMixin :: Mixin -> Mixin

module Distribution.Types.Module where
  type Module :: *
  data Module = Module Distribution.Types.UnitId.DefUnitId Distribution.ModuleName.ModuleName

module Distribution.Types.ModuleReexport where
  type ModuleReexport :: *
  data ModuleReexport = ModuleReexport {moduleReexportOriginalPackage :: GHC.Internal.Maybe.Maybe Distribution.Types.PackageName.PackageName, moduleReexportOriginalName :: Distribution.ModuleName.ModuleName, moduleReexportName :: Distribution.ModuleName.ModuleName}

module Distribution.Types.ModuleRenaming where
  type ModuleRenaming :: *
  data ModuleRenaming = ModuleRenaming [(Distribution.ModuleName.ModuleName, Distribution.ModuleName.ModuleName)] | DefaultRenaming | HidingRenaming [Distribution.ModuleName.ModuleName]
  defaultRenaming :: ModuleRenaming
  interpModuleRenaming :: ModuleRenaming -> Distribution.ModuleName.ModuleName -> GHC.Internal.Maybe.Maybe Distribution.ModuleName.ModuleName
  isDefaultRenaming :: ModuleRenaming -> GHC.Types.Bool

module Distribution.Types.MungedPackageId where
  type MungedPackageId :: *
  data MungedPackageId = MungedPackageId {mungedName :: Distribution.Types.MungedPackageName.MungedPackageName, mungedVersion :: Distribution.Types.Version.Version}
  computeCompatPackageId :: Distribution.Types.PackageId.PackageId -> Distribution.Types.LibraryName.LibraryName -> MungedPackageId

module Distribution.Types.MungedPackageName where
  type MungedPackageName :: *
  data MungedPackageName
    = MungedPackageName ! {-# UNPACK #-}(Distribution.Types.PackageName.N:PackageName[0]
                                         ; Distribution.Utils.ShortText.N:ShortText[0]
                                         ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Types.PackageName.PackageName
                        !Distribution.Types.LibraryName.LibraryName
  decodeCompatPackageName :: Distribution.Types.PackageName.PackageName -> MungedPackageName
  encodeCompatPackageName :: MungedPackageName -> Distribution.Types.PackageName.PackageName

module Distribution.Types.PackageDescription where
  type PackageDescription :: *
  data PackageDescription
    = PackageDescription {specVersion :: Distribution.CabalSpecVersion.CabalSpecVersion,
                          package :: Distribution.Types.PackageId.PackageIdentifier,
                          licenseRaw :: GHC.Internal.Data.Either.Either Distribution.SPDX.License.License Distribution.License.License,
                          licenseFiles :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File],
                          copyright :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                        ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                          maintainer :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                         ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                          author :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                     ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                          stability :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                        ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                          testedWith :: [(Distribution.Compiler.CompilerFlavor, Distribution.Types.VersionRange.Internal.VersionRange)],
                          homepage :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                       ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                          pkgUrl :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                     ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                          bugReports :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                         ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                          sourceRepos :: [Distribution.Types.SourceRepo.SourceRepo],
                          synopsis :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                       ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                          description :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                          ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                          category :: ! {-# UNPACK #-}(Distribution.Utils.ShortText.N:ShortText[0]
                                                       ; Data.ByteString.Short.Internal.N:ShortByteString[0])Distribution.Utils.ShortText.ShortText,
                          customFieldsPD :: [(GHC.Internal.Base.String, GHC.Internal.Base.String)],
                          buildTypeRaw :: GHC.Internal.Maybe.Maybe Distribution.Types.BuildType.BuildType,
                          setupBuildInfo :: GHC.Internal.Maybe.Maybe Distribution.Types.SetupBuildInfo.SetupBuildInfo,
                          library :: GHC.Internal.Maybe.Maybe Distribution.Types.Library.Library,
                          subLibraries :: [Distribution.Types.Library.Library],
                          executables :: [Distribution.Types.Executable.Executable],
                          foreignLibs :: [Distribution.Types.ForeignLib.ForeignLib],
                          testSuites :: [Distribution.Types.TestSuite.TestSuite],
                          benchmarks :: [Distribution.Types.Benchmark.Benchmark],
                          dataFiles :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.DataDir Distribution.Utils.Path.File],
                          dataDir :: Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.DataDir),
                          extraSrcFiles :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File],
                          extraTmpFiles :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File],
                          extraDocFiles :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File],
                          extraFiles :: [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]}
  allBuildDepends :: PackageDescription -> [Distribution.Types.Dependency.Dependency]
  allBuildInfo :: PackageDescription -> [Distribution.Types.BuildInfo.BuildInfo]
  allLibraries :: PackageDescription -> [Distribution.Types.Library.Library]
  buildType :: PackageDescription -> Distribution.Types.BuildType.BuildType
  emptyPackageDescription :: PackageDescription
  enabledBuildDepends :: PackageDescription -> Distribution.Types.ComponentRequestedSpec.ComponentRequestedSpec -> [Distribution.Types.Dependency.Dependency]
  enabledBuildInfos :: PackageDescription -> Distribution.Types.ComponentRequestedSpec.ComponentRequestedSpec -> [Distribution.Types.BuildInfo.BuildInfo]
  enabledComponents :: PackageDescription -> Distribution.Types.ComponentRequestedSpec.ComponentRequestedSpec -> [Distribution.Types.Component.Component]
  getComponent :: PackageDescription -> Distribution.Types.ComponentName.ComponentName -> Distribution.Types.Component.Component
  hasBenchmarks :: PackageDescription -> GHC.Types.Bool
  hasExes :: PackageDescription -> GHC.Types.Bool
  hasForeignLibs :: PackageDescription -> GHC.Types.Bool
  hasLibs :: PackageDescription -> GHC.Types.Bool
  hasPublicLib :: PackageDescription -> GHC.Types.Bool
  hasTests :: PackageDescription -> GHC.Types.Bool
  license :: PackageDescription -> Distribution.SPDX.License.License
  license' :: GHC.Internal.Data.Either.Either Distribution.SPDX.License.License Distribution.License.License -> Distribution.SPDX.License.License
  lookupComponent :: PackageDescription -> Distribution.Types.ComponentName.ComponentName -> GHC.Internal.Maybe.Maybe Distribution.Types.Component.Component
  pkgBuildableComponents :: PackageDescription -> [Distribution.Types.Component.Component]
  pkgComponents :: PackageDescription -> [Distribution.Types.Component.Component]
  updatePackageDescription :: Distribution.Types.HookedBuildInfo.HookedBuildInfo -> PackageDescription -> PackageDescription
  withBenchmark :: PackageDescription -> (Distribution.Types.Benchmark.Benchmark -> GHC.Types.IO ()) -> GHC.Types.IO ()
  withExe :: PackageDescription -> (Distribution.Types.Executable.Executable -> GHC.Types.IO ()) -> GHC.Types.IO ()
  withForeignLib :: PackageDescription -> (Distribution.Types.ForeignLib.ForeignLib -> GHC.Types.IO ()) -> GHC.Types.IO ()
  withLib :: PackageDescription -> (Distribution.Types.Library.Library -> GHC.Types.IO ()) -> GHC.Types.IO ()
  withTest :: PackageDescription -> (Distribution.Types.TestSuite.TestSuite -> GHC.Types.IO ()) -> GHC.Types.IO ()

module Distribution.Types.PackageDescription.Lens where
  type PackageDescription :: *
  data PackageDescription = ...
  allLibraries :: Distribution.Compat.Lens.Traversal' PackageDescription Distribution.Types.Library.Library
  author :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.Utils.ShortText.ShortText
  benchmarks :: Distribution.Compat.Lens.Lens' PackageDescription [Distribution.Types.Benchmark.Benchmark]
  bugReports :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.Utils.ShortText.ShortText
  buildTypeRaw :: Distribution.Compat.Lens.Lens' PackageDescription (GHC.Internal.Maybe.Maybe Distribution.Types.BuildType.BuildType)
  category :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.Utils.ShortText.ShortText
  componentBuildInfo :: Distribution.Types.ComponentName.ComponentName -> Distribution.Compat.Lens.Traversal' PackageDescription Distribution.Types.BuildInfo.BuildInfo
  componentModules :: forall r. GHC.Internal.Base.Monoid r => Distribution.Types.ComponentName.ComponentName -> Distribution.Compat.Lens.Getting r PackageDescription [Distribution.ModuleName.ModuleName]
  copyright :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.Utils.ShortText.ShortText
  customFieldsPD :: Distribution.Compat.Lens.Lens' PackageDescription [(GHC.Internal.Base.String, GHC.Internal.Base.String)]
  dataDir :: Distribution.Compat.Lens.Lens' PackageDescription (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.DataDir))
  dataFiles :: Distribution.Compat.Lens.Lens' PackageDescription [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.DataDir Distribution.Utils.Path.File]
  description :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.Utils.ShortText.ShortText
  executables :: Distribution.Compat.Lens.Lens' PackageDescription [Distribution.Types.Executable.Executable]
  extraDocFiles :: Distribution.Compat.Lens.Lens' PackageDescription [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
  extraFiles :: Distribution.Compat.Lens.Lens' PackageDescription [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
  extraSrcFiles :: Distribution.Compat.Lens.Lens' PackageDescription [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
  extraTmpFiles :: Distribution.Compat.Lens.Lens' PackageDescription [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
  foreignLibs :: Distribution.Compat.Lens.Lens' PackageDescription [Distribution.Types.ForeignLib.ForeignLib]
  homepage :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.Utils.ShortText.ShortText
  library :: Distribution.Compat.Lens.Lens' PackageDescription (GHC.Internal.Maybe.Maybe Distribution.Types.Library.Library)
  licenseFiles :: Distribution.Compat.Lens.Lens' PackageDescription [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File]
  licenseRaw :: Distribution.Compat.Lens.Lens' PackageDescription (GHC.Internal.Data.Either.Either Distribution.SPDX.License.License Distribution.License.License)
  maintainer :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.Utils.ShortText.ShortText
  package :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.Types.PackageId.PackageIdentifier
  pkgUrl :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.Utils.ShortText.ShortText
  setupBuildInfo :: Distribution.Compat.Lens.Lens' PackageDescription (GHC.Internal.Maybe.Maybe Distribution.Types.SetupBuildInfo.SetupBuildInfo)
  sourceRepos :: Distribution.Compat.Lens.Lens' PackageDescription [Distribution.Types.SourceRepo.SourceRepo]
  specVersion :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.CabalSpecVersion.CabalSpecVersion
  stability :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.Utils.ShortText.ShortText
  subLibraries :: Distribution.Compat.Lens.Lens' PackageDescription [Distribution.Types.Library.Library]
  synopsis :: Distribution.Compat.Lens.Lens' PackageDescription Distribution.Utils.ShortText.ShortText
  testSuites :: Distribution.Compat.Lens.Lens' PackageDescription [Distribution.Types.TestSuite.TestSuite]
  testedWith :: Distribution.Compat.Lens.Lens' PackageDescription [(Distribution.Compiler.CompilerFlavor, Distribution.Types.VersionRange.Internal.VersionRange)]

module Distribution.Types.PackageId where
  type PackageId :: *
  type PackageId = PackageIdentifier
  type PackageIdentifier :: *
  data PackageIdentifier = PackageIdentifier {pkgName :: Distribution.Types.PackageName.PackageName, pkgVersion :: Distribution.Types.Version.Version}

module Distribution.Types.PackageId.Lens where
  type PackageIdentifier :: *
  data PackageIdentifier = ...
  pkgName :: Distribution.Compat.Lens.Lens' PackageIdentifier Distribution.Types.PackageName.PackageName
  pkgVersion :: Distribution.Compat.Lens.Lens' PackageIdentifier Distribution.Types.Version.Version

module Distribution.Types.PackageName where
  type PackageName :: *
  newtype PackageName = ...
  mkPackageName :: GHC.Internal.Base.String -> PackageName
  mkPackageNameST :: Distribution.Utils.ShortText.ShortText -> PackageName
  unPackageName :: PackageName -> GHC.Internal.Base.String
  unPackageNameST :: PackageName -> Distribution.Utils.ShortText.ShortText

module Distribution.Types.PackageName.Magic where
  fakePackageCabalFileName :: GHC.Internal.IO.FilePath
  fakePackageId :: Distribution.Types.PackageId.PackageId
  fakePackageName :: Distribution.Types.PackageName.PackageName
  nonExistentPackageThisIsCabalBug :: Distribution.Types.PackageName.PackageName

module Distribution.Types.PackageVersionConstraint where
  type PackageVersionConstraint :: *
  data PackageVersionConstraint = PackageVersionConstraint Distribution.Types.PackageName.PackageName Distribution.Types.VersionRange.Internal.VersionRange
  simplifyPackageVersionConstraint :: PackageVersionConstraint -> PackageVersionConstraint
  thisPackageVersionConstraint :: Distribution.Types.PackageId.PackageIdentifier -> PackageVersionConstraint

module Distribution.Types.ParStrat where
  type ParStrat :: *
  type ParStrat = ParStratX GHC.Internal.Base.String
  type ParStratInstall :: *
  type ParStratInstall = ParStratX GHC.Types.Int
  type ParStratX :: * -> *
  data ParStratX sem = NumJobs (GHC.Internal.Maybe.Maybe GHC.Types.Int) | UseSem sem | Serial
  isParallelBuild :: forall n. ParStratX n -> GHC.Types.Bool

module Distribution.Types.PkgconfigDependency where
  type PkgconfigDependency :: *
  data PkgconfigDependency = PkgconfigDependency Distribution.Types.PkgconfigName.PkgconfigName Distribution.Types.PkgconfigVersionRange.PkgconfigVersionRange

module Distribution.Types.PkgconfigName where
  type PkgconfigName :: *
  newtype PkgconfigName = ...
  mkPkgconfigName :: GHC.Internal.Base.String -> PkgconfigName
  unPkgconfigName :: PkgconfigName -> GHC.Internal.Base.String

module Distribution.Types.PkgconfigVersion where
  type PkgconfigVersion :: *
  newtype PkgconfigVersion = PkgconfigVersion bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString
  rpmvercmp :: bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> GHC.Types.Ordering

module Distribution.Types.PkgconfigVersionRange where
  type PkgconfigVersionRange :: *
  data PkgconfigVersionRange = PcAnyVersion | PcThisVersion Distribution.Types.PkgconfigVersion.PkgconfigVersion | PcLaterVersion Distribution.Types.PkgconfigVersion.PkgconfigVersion | PcEarlierVersion Distribution.Types.PkgconfigVersion.PkgconfigVersion | PcOrLaterVersion Distribution.Types.PkgconfigVersion.PkgconfigVersion | PcOrEarlierVersion Distribution.Types.PkgconfigVersion.PkgconfigVersion | PcUnionVersionRanges PkgconfigVersionRange PkgconfigVersionRange | PcIntersectVersionRanges PkgconfigVersionRange PkgconfigVersionRange
  anyPkgconfigVersion :: PkgconfigVersionRange
  isAnyPkgconfigVersion :: PkgconfigVersionRange -> GHC.Types.Bool
  versionRangeToPkgconfigVersionRange :: Distribution.Types.VersionRange.Internal.VersionRange -> PkgconfigVersionRange
  versionToPkgconfigVersion :: Distribution.Types.Version.Version -> Distribution.Types.PkgconfigVersion.PkgconfigVersion
  withinPkgconfigVersionRange :: Distribution.Types.PkgconfigVersion.PkgconfigVersion -> PkgconfigVersionRange -> GHC.Types.Bool

module Distribution.Types.SetupBuildInfo where
  type SetupBuildInfo :: *
  data SetupBuildInfo = SetupBuildInfo {setupDepends :: [Distribution.Types.Dependency.Dependency], defaultSetupDepends :: GHC.Types.Bool}

module Distribution.Types.SetupBuildInfo.Lens where
  type SetupBuildInfo :: *
  data SetupBuildInfo = ...
  defaultSetupDepends :: Distribution.Compat.Lens.Lens' SetupBuildInfo GHC.Types.Bool
  setupDepends :: Distribution.Compat.Lens.Lens' SetupBuildInfo [Distribution.Types.Dependency.Dependency]

module Distribution.Types.SourceRepo where
  type KnownRepoType :: *
  data KnownRepoType = Darcs | Git | SVN | CVS | Mercurial | GnuArch | Bazaar | Monotone | Pijul
  type RepoKind :: *
  data RepoKind = RepoHead | RepoThis | RepoKindUnknown GHC.Internal.Base.String
  type RepoType :: *
  data RepoType = KnownRepoType KnownRepoType | OtherRepoType GHC.Internal.Base.String
  type SourceRepo :: *
  data SourceRepo = SourceRepo {repoKind :: RepoKind, repoType :: GHC.Internal.Maybe.Maybe RepoType, repoLocation :: GHC.Internal.Maybe.Maybe GHC.Internal.Base.String, repoModule :: GHC.Internal.Maybe.Maybe GHC.Internal.Base.String, repoBranch :: GHC.Internal.Maybe.Maybe GHC.Internal.Base.String, repoTag :: GHC.Internal.Maybe.Maybe GHC.Internal.Base.String, repoSubdir :: GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath}
  classifyRepoKind :: GHC.Internal.Base.String -> RepoKind
  classifyRepoType :: GHC.Internal.Base.String -> RepoType
  emptySourceRepo :: RepoKind -> SourceRepo
  knownRepoTypes :: [KnownRepoType]

module Distribution.Types.SourceRepo.Lens where
  type SourceRepo :: *
  data SourceRepo = ...
  repoBranch :: Distribution.Compat.Lens.Lens' SourceRepo (GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)
  repoKind :: Distribution.Compat.Lens.Lens' SourceRepo Distribution.Types.SourceRepo.RepoKind
  repoLocation :: Distribution.Compat.Lens.Lens' SourceRepo (GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)
  repoModule :: Distribution.Compat.Lens.Lens' SourceRepo (GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)
  repoSubdir :: Distribution.Compat.Lens.Lens' SourceRepo (GHC.Internal.Maybe.Maybe GHC.Internal.IO.FilePath)
  repoTag :: Distribution.Compat.Lens.Lens' SourceRepo (GHC.Internal.Maybe.Maybe GHC.Internal.Base.String)
  repoType :: Distribution.Compat.Lens.Lens' SourceRepo (GHC.Internal.Maybe.Maybe Distribution.Types.SourceRepo.RepoType)

module Distribution.Types.TargetInfo where
  type TargetInfo :: *
  data TargetInfo = TargetInfo {targetCLBI :: Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo, targetComponent :: Distribution.Types.Component.Component}

module Distribution.Types.TestSuite where
  type TestSuite :: *
  data TestSuite = TestSuite {testName :: Distribution.Types.UnqualComponentName.UnqualComponentName, testInterface :: Distribution.Types.TestSuiteInterface.TestSuiteInterface, testBuildInfo :: Distribution.Types.BuildInfo.BuildInfo, testCodeGenerators :: [GHC.Internal.Base.String]}
  emptyTestSuite :: TestSuite
  testModules :: TestSuite -> [Distribution.ModuleName.ModuleName]
  testModulesAutogen :: TestSuite -> [Distribution.ModuleName.ModuleName]
  testType :: TestSuite -> Distribution.Types.TestType.TestType

module Distribution.Types.TestSuite.Lens where
  type TestSuite :: *
  data TestSuite = ...
  testBuildInfo :: Distribution.Compat.Lens.Lens' TestSuite Distribution.Types.BuildInfo.BuildInfo
  testInterface :: Distribution.Compat.Lens.Lens' TestSuite Distribution.Types.TestSuiteInterface.TestSuiteInterface
  testName :: Distribution.Compat.Lens.Lens' TestSuite Distribution.Types.UnqualComponentName.UnqualComponentName

module Distribution.Types.TestSuiteInterface where
  type TestSuiteInterface :: *
  data TestSuiteInterface = TestSuiteExeV10 Distribution.Types.Version.Version (Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Source Distribution.Utils.Path.File) | TestSuiteLibV09 Distribution.Types.Version.Version Distribution.ModuleName.ModuleName | TestSuiteUnsupported Distribution.Types.TestType.TestType

module Distribution.Types.TestType where
  type TestType :: *
  data TestType = TestTypeExe Distribution.Types.Version.Version | TestTypeLib Distribution.Types.Version.Version | TestTypeUnknown GHC.Internal.Base.String Distribution.Types.Version.Version
  knownTestTypes :: [TestType]
  testTypeExe :: TestType
  testTypeLib :: TestType

module Distribution.Types.UnitId where
  type DefUnitId :: *
  newtype DefUnitId = Distribution.Types.UnitId.DefUnitId {unDefUnitId :: UnitId}
  type UnitId :: *
  newtype UnitId = ...
  getHSLibraryName :: UnitId -> GHC.Internal.Base.String
  mkLegacyUnitId :: Distribution.Types.PackageId.PackageId -> UnitId
  mkUnitId :: GHC.Internal.Base.String -> UnitId
  newSimpleUnitId :: Distribution.Types.ComponentId.ComponentId -> UnitId
  unUnitId :: UnitId -> GHC.Internal.Base.String
  unsafeMkDefUnitId :: UnitId -> DefUnitId

module Distribution.Types.UnqualComponentName where
  type UnqualComponentName :: *
  newtype UnqualComponentName = ...
  combineNames :: forall b a. (GHC.Internal.Base.Monoid b, GHC.Classes.Eq b, GHC.Internal.Show.Show b) => a -> a -> (a -> b) -> GHC.Internal.Base.String -> b
  mkUnqualComponentName :: GHC.Internal.Base.String -> UnqualComponentName
  packageNameToUnqualComponentName :: Distribution.Types.PackageName.PackageName -> UnqualComponentName
  unUnqualComponentName :: UnqualComponentName -> GHC.Internal.Base.String
  unUnqualComponentNameST :: UnqualComponentName -> Distribution.Utils.ShortText.ShortText
  unqualComponentNameToPackageName :: UnqualComponentName -> Distribution.Types.PackageName.PackageName

module Distribution.Types.Version where
  type Version :: *
  data Version = ...
  alterVersion :: ([GHC.Types.Int] -> [GHC.Types.Int]) -> Version -> Version
  mkVersion :: [GHC.Types.Int] -> Version
  mkVersion' :: GHC.Internal.Data.Version.Version -> Version
  nullVersion :: Version
  validVersion :: Version -> GHC.Types.Bool
  version0 :: Version
  versionDigitParser :: forall (m :: * -> *). Distribution.Parsec.CabalParsing m => m GHC.Types.Int
  versionNumbers :: Version -> [GHC.Types.Int]

module Distribution.Types.VersionInterval where
  type Bound :: *
  data Bound = ExclusiveBound | InclusiveBound
  type LowerBound :: *
  data LowerBound = LowerBound !Distribution.Types.Version.Version !Bound
  type UpperBound :: *
  data UpperBound = NoUpperBound | UpperBound !Distribution.Types.Version.Version !Bound
  type VersionInterval :: *
  data VersionInterval = VersionInterval !LowerBound !UpperBound
  type VersionIntervals :: *
  newtype VersionIntervals = ...
  asVersionIntervals :: Distribution.Types.VersionRange.Internal.VersionRange -> [VersionInterval]
  fromVersionIntervals :: VersionIntervals -> Distribution.Types.VersionRange.Internal.VersionRange
  invariantVersionIntervals :: VersionIntervals -> GHC.Types.Bool
  mkVersionIntervals :: [VersionInterval] -> GHC.Internal.Maybe.Maybe VersionIntervals
  normaliseVersionRange2 :: Distribution.Types.VersionRange.Internal.VersionRange -> Distribution.Types.VersionRange.Internal.VersionRange
  relaxHeadInterval :: VersionIntervals -> VersionIntervals
  relaxLastInterval :: VersionIntervals -> VersionIntervals
  toVersionIntervals :: Distribution.Types.VersionRange.Internal.VersionRange -> VersionIntervals
  unVersionIntervals :: VersionIntervals -> [VersionInterval]

module Distribution.Types.VersionInterval.Legacy where
  type Bound :: *
  data Bound = ExclusiveBound | InclusiveBound
  type LowerBound :: *
  data LowerBound = LowerBound Distribution.Types.Version.Version !Bound
  type UpperBound :: *
  data UpperBound = NoUpperBound | UpperBound Distribution.Types.Version.Version !Bound
  type VersionInterval :: *
  type VersionInterval = (LowerBound, UpperBound)
  type VersionIntervals :: *
  newtype VersionIntervals = ...
  asVersionIntervals :: Distribution.Types.VersionRange.Internal.VersionRange -> [VersionInterval]
  fromVersionIntervals :: VersionIntervals -> Distribution.Types.VersionRange.Internal.VersionRange
  intersectVersionIntervals :: VersionIntervals -> VersionIntervals -> VersionIntervals
  invertVersionIntervals :: VersionIntervals -> VersionIntervals
  mkVersionIntervals :: [VersionInterval] -> VersionIntervals
  relaxHeadInterval :: VersionIntervals -> VersionIntervals
  relaxLastInterval :: VersionIntervals -> VersionIntervals
  toVersionIntervals :: Distribution.Types.VersionRange.Internal.VersionRange -> VersionIntervals
  unionVersionIntervals :: VersionIntervals -> VersionIntervals -> VersionIntervals
  versionIntervals :: VersionIntervals -> [VersionInterval]
  withinIntervals :: Distribution.Types.Version.Version -> VersionIntervals -> GHC.Types.Bool

module Distribution.Types.VersionRange where
  type VersionRange :: *
  data VersionRange = ...
  type VersionRangeF :: * -> *
  data VersionRangeF a = ThisVersionF Distribution.Types.Version.Version | LaterVersionF Distribution.Types.Version.Version | OrLaterVersionF Distribution.Types.Version.Version | EarlierVersionF Distribution.Types.Version.Version | OrEarlierVersionF Distribution.Types.Version.Version | MajorBoundVersionF Distribution.Types.Version.Version | UnionVersionRangesF a a | IntersectVersionRangesF a a
  anaVersionRange :: forall a. (a -> VersionRangeF a) -> a -> VersionRange
  anyVersion :: VersionRange
  cataVersionRange :: forall a. (VersionRangeF a -> a) -> VersionRange -> a
  earlierVersion :: Distribution.Types.Version.Version -> VersionRange
  embedVersionRange :: VersionRangeF VersionRange -> VersionRange
  foldVersionRange :: forall a. a -> (Distribution.Types.Version.Version -> a) -> (Distribution.Types.Version.Version -> a) -> (Distribution.Types.Version.Version -> a) -> (a -> a -> a) -> (a -> a -> a) -> VersionRange -> a
  hasLowerBound :: VersionRange -> GHC.Types.Bool
  hasUpperBound :: VersionRange -> GHC.Types.Bool
  hyloVersionRange :: (VersionRangeF VersionRange -> VersionRange) -> (VersionRange -> VersionRangeF VersionRange) -> VersionRange -> VersionRange
  intersectVersionRanges :: VersionRange -> VersionRange -> VersionRange
  isAnyVersion :: VersionRange -> GHC.Types.Bool
  isAnyVersionLight :: VersionRange -> GHC.Types.Bool
  isWildcardRange :: Distribution.Types.Version.Version -> Distribution.Types.Version.Version -> GHC.Types.Bool
  laterVersion :: Distribution.Types.Version.Version -> VersionRange
  majorBoundVersion :: Distribution.Types.Version.Version -> VersionRange
  majorUpperBound :: Distribution.Types.Version.Version -> Distribution.Types.Version.Version
  noVersion :: VersionRange
  normaliseVersionRange :: VersionRange -> VersionRange
  notThisVersion :: Distribution.Types.Version.Version -> VersionRange
  orEarlierVersion :: Distribution.Types.Version.Version -> VersionRange
  orLaterVersion :: Distribution.Types.Version.Version -> VersionRange
  projectVersionRange :: VersionRange -> VersionRangeF VersionRange
  stripParensVersionRange :: VersionRange -> VersionRange
  thisVersion :: Distribution.Types.Version.Version -> VersionRange
  unionVersionRanges :: VersionRange -> VersionRange -> VersionRange
  versionRangeParser :: forall (m :: * -> *). Distribution.Parsec.CabalParsing m => m GHC.Types.Int -> Distribution.CabalSpecVersion.CabalSpecVersion -> m VersionRange
  wildcardUpperBound :: Distribution.Types.Version.Version -> Distribution.Types.Version.Version
  withinRange :: Distribution.Types.Version.Version -> VersionRange -> GHC.Types.Bool
  withinVersion :: Distribution.Types.Version.Version -> VersionRange

module Distribution.Types.VersionRange.Internal where
  type VersionRange :: *
  data VersionRange = ThisVersion Distribution.Types.Version.Version | LaterVersion Distribution.Types.Version.Version | OrLaterVersion Distribution.Types.Version.Version | EarlierVersion Distribution.Types.Version.Version | OrEarlierVersion Distribution.Types.Version.Version | MajorBoundVersion Distribution.Types.Version.Version | UnionVersionRanges VersionRange VersionRange | IntersectVersionRanges VersionRange VersionRange
  type VersionRangeF :: * -> *
  data VersionRangeF a = ThisVersionF Distribution.Types.Version.Version | LaterVersionF Distribution.Types.Version.Version | OrLaterVersionF Distribution.Types.Version.Version | EarlierVersionF Distribution.Types.Version.Version | OrEarlierVersionF Distribution.Types.Version.Version | MajorBoundVersionF Distribution.Types.Version.Version | UnionVersionRangesF a a | IntersectVersionRangesF a a
  anaVersionRange :: forall a. (a -> VersionRangeF a) -> a -> VersionRange
  anyVersion :: VersionRange
  cataVersionRange :: forall a. (VersionRangeF a -> a) -> VersionRange -> a
  earlierVersion :: Distribution.Types.Version.Version -> VersionRange
  embedVersionRange :: VersionRangeF VersionRange -> VersionRange
  hyloVersionRange :: (VersionRangeF VersionRange -> VersionRange) -> (VersionRange -> VersionRangeF VersionRange) -> VersionRange -> VersionRange
  intersectVersionRanges :: VersionRange -> VersionRange -> VersionRange
  laterVersion :: Distribution.Types.Version.Version -> VersionRange
  majorBoundVersion :: Distribution.Types.Version.Version -> VersionRange
  majorUpperBound :: Distribution.Types.Version.Version -> Distribution.Types.Version.Version
  noVersion :: VersionRange
  notThisVersion :: Distribution.Types.Version.Version -> VersionRange
  orEarlierVersion :: Distribution.Types.Version.Version -> VersionRange
  orLaterVersion :: Distribution.Types.Version.Version -> VersionRange
  projectVersionRange :: VersionRange -> VersionRangeF VersionRange
  thisVersion :: Distribution.Types.Version.Version -> VersionRange
  unionVersionRanges :: VersionRange -> VersionRange -> VersionRange
  versionRangeParser :: forall (m :: * -> *). Distribution.Parsec.CabalParsing m => m GHC.Types.Int -> Distribution.CabalSpecVersion.CabalSpecVersion -> m VersionRange
  wildcardUpperBound :: Distribution.Types.Version.Version -> Distribution.Types.Version.Version
  withinVersion :: Distribution.Types.Version.Version -> VersionRange

module Distribution.Utils.Base62 where
  hashToBase62 :: GHC.Internal.Base.String -> GHC.Internal.Base.String

module Distribution.Utils.Generic where
  breakMaybe :: forall a b. (a -> GHC.Internal.Maybe.Maybe b) -> [a] -> ([a], GHC.Internal.Maybe.Maybe (b, [a]))
  comparing :: forall a b. GHC.Classes.Ord a => (b -> a) -> b -> b -> GHC.Types.Ordering
  dropWhileEndLE :: forall a. (a -> GHC.Types.Bool) -> [a] -> [a]
  equating :: forall a b. GHC.Classes.Eq a => (b -> a) -> b -> b -> GHC.Types.Bool
  fromUTF8BS :: bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> GHC.Internal.Base.String
  fromUTF8LBS :: Data.ByteString.Lazy.Internal.ByteString -> GHC.Internal.Base.String
  fstOf3 :: forall a b c. (a, b, c) -> a
  ignoreBOM :: GHC.Internal.Base.String -> GHC.Internal.Base.String
  intercalate :: forall a. [a] -> [[a]] -> [a]
  isAbsoluteOnAnyPlatform :: GHC.Internal.IO.FilePath -> GHC.Types.Bool
  isAscii :: GHC.Types.Char -> GHC.Types.Bool
  isAsciiAlpha :: GHC.Types.Char -> GHC.Types.Bool
  isAsciiAlphaNum :: GHC.Types.Char -> GHC.Types.Bool
  isInfixOf :: forall a. GHC.Classes.Eq a => [a] -> [a] -> GHC.Types.Bool
  isRelativeOnAnyPlatform :: GHC.Internal.IO.FilePath -> GHC.Types.Bool
  listUnion :: forall a. GHC.Classes.Ord a => [a] -> [a] -> [a]
  listUnionRight :: forall a. GHC.Classes.Ord a => [a] -> [a] -> [a]
  lowercase :: GHC.Internal.Base.String -> GHC.Internal.Base.String
  normaliseLineEndings :: GHC.Internal.Base.String -> GHC.Internal.Base.String
  ordNub :: forall a. GHC.Classes.Ord a => [a] -> [a]
  ordNubBy :: forall b a. GHC.Classes.Ord b => (a -> b) -> [a] -> [a]
  ordNubRight :: forall a. GHC.Classes.Ord a => [a] -> [a]
  readUTF8File :: GHC.Internal.IO.FilePath -> GHC.Types.IO GHC.Internal.Base.String
  safeHead :: forall a. [a] -> GHC.Internal.Maybe.Maybe a
  safeInit :: forall a. [a] -> [a]
  safeLast :: forall a. [a] -> GHC.Internal.Maybe.Maybe a
  safeTail :: forall a. [a] -> [a]
  sndOf3 :: forall a b c. (a, b, c) -> b
  spanMaybe :: forall a b. (a -> GHC.Internal.Maybe.Maybe b) -> [a] -> ([b], [a])
  takeWhileEndLE :: forall a. (a -> GHC.Types.Bool) -> [a] -> [a]
  toUTF8BS :: GHC.Internal.Base.String -> bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString
  toUTF8LBS :: GHC.Internal.Base.String -> Data.ByteString.Lazy.Internal.ByteString
  trdOf3 :: forall a b c. (a, b, c) -> c
  unfoldrM :: forall (m :: * -> *) b a. GHC.Internal.Base.Monad m => (b -> m (GHC.Internal.Maybe.Maybe (a, b))) -> b -> m [a]
  unintersperse :: GHC.Types.Char -> GHC.Internal.Base.String -> [GHC.Internal.Base.String]
  unsnoc :: forall a. [a] -> GHC.Internal.Maybe.Maybe ([a], a)
  unsnocNE :: forall a. GHC.Internal.Base.NonEmpty a -> ([a], a)
  validateUTF8 :: bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> GHC.Internal.Maybe.Maybe GHC.Types.Int
  withFileContents :: forall a. GHC.Internal.IO.FilePath -> (GHC.Internal.Base.String -> GHC.Types.IO a) -> GHC.Types.IO a
  withUTF8FileContents :: forall a. GHC.Internal.IO.FilePath -> (GHC.Internal.Base.String -> GHC.Types.IO a) -> GHC.Types.IO a
  wrapLine :: GHC.Types.Int -> [GHC.Internal.Base.String] -> [[GHC.Internal.Base.String]]
  wrapText :: GHC.Internal.Base.String -> GHC.Internal.Base.String
  writeFileAtomic :: GHC.Internal.IO.FilePath -> Data.ByteString.Lazy.Internal.ByteString -> GHC.Types.IO ()
  writeUTF8File :: GHC.Internal.IO.FilePath -> GHC.Internal.Base.String -> GHC.Types.IO ()

module Distribution.Utils.IOData where
  type IOData :: *
  data IOData = IODataText GHC.Internal.Base.String | IODataBinary Data.ByteString.Lazy.Internal.ByteString
  type role IODataMode nominal
  type IODataMode :: * -> *
  data IODataMode mode where
    IODataModeText :: IODataMode [GHC.Types.Char]
    IODataModeBinary :: IODataMode Data.ByteString.Lazy.Internal.ByteString
  type KnownIODataMode :: * -> Constraint
  class Control.DeepSeq.NFData mode => KnownIODataMode mode where
    hGetIODataContents :: GHC.Internal.IO.Handle.Types.Handle -> GHC.Types.IO mode
    toIOData :: mode -> IOData
    iodataMode :: IODataMode mode
    {-# MINIMAL hGetIODataContents, toIOData, iodataMode #-}
  hPutContents :: GHC.Internal.IO.Handle.Types.Handle -> IOData -> GHC.Types.IO ()
  null :: IOData -> GHC.Types.Bool
  withIOData :: forall r. IOData -> (forall mode. IODataMode mode -> mode -> r) -> r

module Distribution.Utils.Json where
  (.=) :: GHC.Internal.Base.String -> Json -> (GHC.Internal.Base.String, Json)
  type Json :: *
  data Json = JsonArray [Json] | JsonBool !GHC.Types.Bool | JsonNull | JsonNumber {-# UNPACK #-}GHC.Types.Int | JsonObject [(GHC.Internal.Base.String, Json)] | JsonString !GHC.Internal.Base.String
  renderJson :: Json -> Data.ByteString.Lazy.Internal.ByteString

module Distribution.Utils.LogProgress where
  type LogProgress :: * -> *
  newtype LogProgress a = ...
  addProgressCtx :: forall a. Distribution.Utils.LogProgress.CtxMsg -> LogProgress a -> LogProgress a
  dieProgress :: forall a. Text.PrettyPrint.HughesPJ.Doc -> LogProgress a
  infoProgress :: Text.PrettyPrint.HughesPJ.Doc -> LogProgress ()
  runLogProgress :: forall a. Distribution.Verbosity.Verbosity -> LogProgress a -> GHC.Types.IO a
  warnProgress :: Text.PrettyPrint.HughesPJ.Doc -> LogProgress ()

module Distribution.Utils.MD5 where
  type MD5 :: *
  type MD5 = GHC.Internal.Fingerprint.Type.Fingerprint
  binaryGetMD5 :: Data.Binary.Get.Internal.Get MD5
  binaryPutMD5 :: MD5 -> Data.Binary.Put.Put
  md5 :: bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> MD5
  md5FromInteger :: GHC.Num.Integer.Integer -> MD5
  showMD5 :: MD5 -> GHC.Internal.Base.String

module Distribution.Utils.MapAccum where
  mapAccumM :: forall (m :: * -> *) (t :: * -> *) a b c. (GHC.Internal.Base.Monad m, GHC.Internal.Data.Traversable.Traversable t) => (a -> b -> m (a, c)) -> a -> t b -> m (a, t c)

module Distribution.Utils.NubList where
  type NubList :: * -> *
  newtype NubList a = Distribution.Utils.NubList.NubList {fromNubList :: [a]}
  type NubListR :: * -> *
  newtype NubListR a = Distribution.Utils.NubList.NubListR {fromNubListR :: [a]}
  overNubList :: forall a. GHC.Classes.Ord a => ([a] -> [a]) -> NubList a -> NubList a
  overNubListR :: forall a. GHC.Classes.Ord a => ([a] -> [a]) -> NubListR a -> NubListR a
  toNubList :: forall a. GHC.Classes.Ord a => [a] -> NubList a
  toNubListR :: forall a. GHC.Classes.Ord a => [a] -> NubListR a

module Distribution.Utils.Path where
  (<.>) :: forall p. Distribution.Utils.Path.FileLike p => p -> GHC.Internal.Base.String -> p
  (</>) :: forall p q r. Distribution.Utils.Path.PathLike p q r => p -> q -> r
  type role AbsolutePath nominal
  type AbsolutePath :: FileOrDir -> *
  newtype AbsolutePath to = AbsolutePath (forall from. SymbolicPath from to)
  type AllowAbsolute :: *
  data AllowAbsolute = AllowAbsolute | OnlyRelative
  type Artifacts :: *
  data Artifacts
  type Build :: *
  data Build
  type CWD :: *
  data CWD
  type DataDir :: *
  data DataDir
  type Dist :: *
  data Dist
  type FileOrDir :: *
  data FileOrDir = File | Dir (*)
  type Framework :: *
  data Framework
  type Include :: *
  data Include
  type Lib :: *
  data Lib
  type Mix :: *
  data Mix
  type Pkg :: *
  data Pkg
  type PkgConf :: *
  data PkgConf
  type PkgDB :: *
  data PkgDB
  type RelativePath :: * -> FileOrDir -> *
  type RelativePath = SymbolicPathX OnlyRelative :: * -> FileOrDir -> *
  type Response :: *
  data Response
  type Source :: *
  data Source
  type SymbolicPath :: * -> FileOrDir -> *
  type SymbolicPath = SymbolicPathX 'AllowAbsolute :: * -> FileOrDir -> *
  type role SymbolicPathX nominal nominal nominal
  type SymbolicPathX :: AllowAbsolute -> * -> FileOrDir -> *
  newtype SymbolicPathX allowAbsolute from to = ...
  type Tix :: *
  data Tix
  type Tmp :: *
  data Tmp
  absoluteWorkingDir :: forall (to :: FileOrDir). GHC.Internal.Maybe.Maybe (SymbolicPath CWD to) -> GHC.Types.IO (AbsolutePath to)
  coerceSymbolicPath :: forall (allowAbsolute :: AllowAbsolute) from (to1 :: FileOrDir) (to2 :: FileOrDir). SymbolicPathX allowAbsolute from to1 -> SymbolicPathX allowAbsolute from to2
  dropExtensionsSymbolicPath :: forall (allowAbsolute :: AllowAbsolute) from. SymbolicPathX allowAbsolute from File -> SymbolicPathX allowAbsolute from File
  getAbsolutePath :: forall (to :: FileOrDir). AbsolutePath to -> GHC.Internal.IO.FilePath
  getSymbolicPath :: forall (allowAbsolute :: AllowAbsolute) from (to :: FileOrDir). SymbolicPathX allowAbsolute from to -> GHC.Internal.IO.FilePath
  interpretSymbolicPath :: forall from (allowAbsolute :: AllowAbsolute) (to :: FileOrDir). GHC.Internal.Maybe.Maybe (SymbolicPath CWD (Dir from)) -> SymbolicPathX allowAbsolute from to -> GHC.Internal.IO.FilePath
  interpretSymbolicPathAbsolute :: forall (allowAbsolute :: AllowAbsolute) (to :: FileOrDir). AbsolutePath (Dir Pkg) -> SymbolicPathX allowAbsolute Pkg to -> GHC.Internal.IO.FilePath
  interpretSymbolicPathCWD :: forall (allowAbsolute :: AllowAbsolute) from (to :: FileOrDir). SymbolicPathX allowAbsolute from to -> GHC.Internal.IO.FilePath
  makeRelativePathEx :: forall from (to :: FileOrDir). GHC.Internal.Stack.Types.HasCallStack => GHC.Internal.IO.FilePath -> RelativePath from to
  makeSymbolicPath :: forall from (to :: FileOrDir). GHC.Internal.IO.FilePath -> SymbolicPath from to
  moduleNameSymbolicPath :: forall (allowAbsolute :: AllowAbsolute). Distribution.ModuleName.ModuleName -> SymbolicPathX allowAbsolute Source File
  normaliseSymbolicPath :: forall (allowAbsolute :: AllowAbsolute) from (to :: FileOrDir). SymbolicPathX allowAbsolute from to -> SymbolicPathX allowAbsolute from to
  relativeSymbolicPath :: forall from (to :: FileOrDir). RelativePath from to -> SymbolicPath from to
  replaceExtensionSymbolicPath :: forall (allowAbsolute :: AllowAbsolute) from. SymbolicPathX allowAbsolute from File -> GHC.Internal.Base.String -> SymbolicPathX allowAbsolute from File
  sameDirectory :: forall (allowAbsolute :: AllowAbsolute) from to. SymbolicPathX allowAbsolute from (Dir to)
  symbolicPathRelative_maybe :: forall from (to :: FileOrDir). SymbolicPath from to -> GHC.Internal.Maybe.Maybe (RelativePath from to)
  takeDirectorySymbolicPath :: forall (allowAbsolute :: AllowAbsolute) from to'. SymbolicPathX allowAbsolute from File -> SymbolicPathX allowAbsolute from (Dir to')
  tryMakeRelative :: forall dir (to :: FileOrDir). GHC.Internal.Maybe.Maybe (SymbolicPath CWD (Dir dir)) -> SymbolicPath dir to -> GHC.Types.IO (SymbolicPath dir to)
  unsafeCoerceSymbolicPath :: forall (allowAbsolute :: AllowAbsolute) from1 (to1 :: FileOrDir) from2 (to2 :: FileOrDir). SymbolicPathX allowAbsolute from1 to1 -> SymbolicPathX allowAbsolute from2 to2
  unsafeMakeSymbolicPath :: forall (allowAbs :: AllowAbsolute) from (to :: FileOrDir). GHC.Internal.IO.FilePath -> SymbolicPathX allowAbs from to

module Distribution.Utils.Progress where
  type Progress :: * -> * -> * -> *
  data Progress step fail done = ...
  failProgress :: forall fail step done. fail -> Progress step fail done
  foldProgress :: forall step a fail done. (step -> a -> a) -> (fail -> a) -> (done -> a) -> Progress step fail done -> a
  stepProgress :: forall step fail. step -> Progress step fail ()

module Distribution.Utils.ShortText where
  type ShortText :: *
  newtype ShortText = ...
  decodeStringUtf8 :: [GHC.Internal.Word.Word8] -> GHC.Internal.Base.String
  encodeStringUtf8 :: GHC.Internal.Base.String -> [GHC.Internal.Word.Word8]
  fromShortText :: ShortText -> GHC.Internal.Base.String
  length :: ShortText -> GHC.Types.Int
  null :: ShortText -> GHC.Types.Bool
  toShortText :: GHC.Internal.Base.String -> ShortText
  unsafeFromUTF8BS :: bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -> ShortText

module Distribution.Utils.String where
  decodeStringUtf8 :: [GHC.Internal.Word.Word8] -> GHC.Internal.Base.String
  encodeStringUtf8 :: GHC.Internal.Base.String -> [GHC.Internal.Word.Word8]
  trim :: GHC.Internal.Base.String -> GHC.Internal.Base.String

module Distribution.Utils.Structured where
  type ConstructorName :: *
  type ConstructorName = GHC.Internal.Base.String
  type GStructured :: (* -> *) -> Constraint
  class GStructured f where
    ...
    {-# MINIMAL Distribution.Utils.Structured.gstructured #-}
  type MD5 :: *
  type MD5 = GHC.Internal.Fingerprint.Type.Fingerprint
  type SopStructure :: *
  type SopStructure = [(ConstructorName, [Structure])]
  type Structure :: *
  data Structure = Nominal !GHC.Internal.Data.Typeable.TypeRep {-# UNPACK #-}TypeVersion TypeName [Structure] | Newtype !GHC.Internal.Data.Typeable.TypeRep {-# UNPACK #-}TypeVersion TypeName Structure | Structure !GHC.Internal.Data.Typeable.TypeRep {-# UNPACK #-}TypeVersion TypeName SopStructure
  type Structured :: * -> Constraint
  class ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable a => Structured a where
    structure :: GHC.Internal.Data.Proxy.Proxy a -> Structure
    default structure :: (GHC.Internal.Generics.Generic a, GStructured (GHC.Internal.Generics.Rep a)) => GHC.Internal.Data.Proxy.Proxy a -> Structure
    ...
    {-# MINIMAL #-}
  type role Tag phantom
  type Tag :: forall {k}. k -> *
  data Tag a = Tag
  type TypeName :: *
  type TypeName = GHC.Internal.Base.String
  type TypeVersion :: *
  type TypeVersion = GHC.Internal.Word.Word32
  containerStructure :: forall {k} (f :: * -> k) a. (ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable f, Structured a) => GHC.Internal.Data.Proxy.Proxy (f a) -> Structure
  genericStructure :: forall a. (ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable a, GHC.Internal.Generics.Generic a, GStructured (GHC.Internal.Generics.Rep a)) => GHC.Internal.Data.Proxy.Proxy a -> Structure
  hashStructure :: Structure -> MD5
  nominalStructure :: forall {k} (a :: k). ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable a => GHC.Internal.Data.Proxy.Proxy a -> Structure
  structureBuilder :: Structure -> Data.ByteString.Builder.Internal.Builder
  structureHash :: forall a. Structured a => GHC.Internal.Data.Proxy.Proxy a -> MD5
  structuredDecode :: forall a. (binary-0.8.9.2:Data.Binary.Class.Binary a, Structured a) => Data.ByteString.Lazy.Internal.ByteString -> a
  structuredDecodeFileOrFail :: forall a. (binary-0.8.9.2:Data.Binary.Class.Binary a, Structured a) => GHC.Internal.IO.FilePath -> GHC.Types.IO (GHC.Internal.Data.Either.Either GHC.Internal.Base.String a)
  structuredDecodeOrFailIO :: forall a. (binary-0.8.9.2:Data.Binary.Class.Binary a, Structured a) => Data.ByteString.Lazy.Internal.ByteString -> GHC.Types.IO (GHC.Internal.Data.Either.Either GHC.Internal.Base.String a)
  structuredEncode :: forall a. (binary-0.8.9.2:Data.Binary.Class.Binary a, Structured a) => a -> Data.ByteString.Lazy.Internal.ByteString
  structuredEncodeFile :: forall a. (binary-0.8.9.2:Data.Binary.Class.Binary a, Structured a) => GHC.Internal.IO.FilePath -> a -> GHC.Types.IO ()
  typeName :: forall (f :: * -> *). GHC.Internal.Base.Functor f => (TypeName -> f TypeName) -> Structure -> f Structure
  typeVersion :: forall (f :: * -> *). GHC.Internal.Base.Functor f => (TypeVersion -> f TypeVersion) -> Structure -> f Structure

module Distribution.Verbosity where
  type Verbosity :: *
  data Verbosity = ...
  deafening :: Verbosity
  flagToVerbosity :: Distribution.ReadE.ReadE Verbosity
  intToVerbosity :: GHC.Types.Int -> GHC.Internal.Maybe.Maybe Verbosity
  isVerboseCallSite :: Verbosity -> GHC.Types.Bool
  isVerboseCallStack :: Verbosity -> GHC.Types.Bool
  isVerboseMarkOutput :: Verbosity -> GHC.Types.Bool
  isVerboseNoWarn :: Verbosity -> GHC.Types.Bool
  isVerboseNoWrap :: Verbosity -> GHC.Types.Bool
  isVerboseQuiet :: Verbosity -> GHC.Types.Bool
  isVerboseStderr :: Verbosity -> GHC.Types.Bool
  isVerboseTimestamp :: Verbosity -> GHC.Types.Bool
  lessVerbose :: Verbosity -> Verbosity
  modifyVerbosity :: (Verbosity -> Verbosity) -> Verbosity -> Verbosity
  moreVerbose :: Verbosity -> Verbosity
  normal :: Verbosity
  showForCabal :: Verbosity -> GHC.Internal.Base.String
  showForGHC :: Verbosity -> GHC.Internal.Base.String
  silent :: Verbosity
  verbose :: Verbosity
  verboseCallSite :: Verbosity -> Verbosity
  verboseCallStack :: Verbosity -> Verbosity
  verboseHasFlags :: Verbosity -> GHC.Types.Bool
  verboseMarkOutput :: Verbosity -> Verbosity
  verboseNoFlags :: Verbosity -> Verbosity
  verboseNoStderr :: Verbosity -> Verbosity
  verboseNoTimestamp :: Verbosity -> Verbosity
  verboseNoWarn :: Verbosity -> Verbosity
  verboseNoWrap :: Verbosity -> Verbosity
  verboseStderr :: Verbosity -> Verbosity
  verboseTimestamp :: Verbosity -> Verbosity
  verboseUnmarkOutput :: Verbosity -> Verbosity

module Distribution.Verbosity.Internal where
  type VerbosityFlag :: *
  data VerbosityFlag = VCallStack | VCallSite | VNoWrap | VMarkOutput | VTimestamp | VStderr | VNoWarn
  type VerbosityLevel :: *
  data VerbosityLevel = Silent | Normal | Verbose | Deafening

module Distribution.Version where
  type Bound :: *
  data Bound = ExclusiveBound | InclusiveBound
  type LowerBound :: *
  data LowerBound = LowerBound !Version !Bound
  type UpperBound :: *
  data UpperBound = NoUpperBound | UpperBound !Version !Bound
  type Version :: *
  data Version = ...
  type VersionInterval :: *
  data VersionInterval = VersionInterval !LowerBound !UpperBound
  type VersionIntervals :: *
  newtype VersionIntervals = ...
  type VersionRange :: *
  data VersionRange = ...
  type VersionRangeF :: * -> *
  data VersionRangeF a = ThisVersionF Version | LaterVersionF Version | OrLaterVersionF Version | EarlierVersionF Version | OrEarlierVersionF Version | MajorBoundVersionF Version | UnionVersionRangesF a a | IntersectVersionRangesF a a
  alterVersion :: ([GHC.Types.Int] -> [GHC.Types.Int]) -> Version -> Version
  anaVersionRange :: forall a. (a -> VersionRangeF a) -> a -> VersionRange
  anyVersion :: VersionRange
  asVersionIntervals :: VersionRange -> [VersionInterval]
  cataVersionRange :: forall a. (VersionRangeF a -> a) -> VersionRange -> a
  earlierVersion :: Version -> VersionRange
  embedVersionRange :: VersionRangeF VersionRange -> VersionRange
  foldVersionRange :: forall a. a -> (Version -> a) -> (Version -> a) -> (Version -> a) -> (a -> a -> a) -> (a -> a -> a) -> VersionRange -> a
  fromVersionIntervals :: VersionIntervals -> VersionRange
  hasLowerBound :: VersionRange -> GHC.Types.Bool
  hasUpperBound :: VersionRange -> GHC.Types.Bool
  hyloVersionRange :: (VersionRangeF VersionRange -> VersionRange) -> (VersionRange -> VersionRangeF VersionRange) -> VersionRange -> VersionRange
  intersectVersionRanges :: VersionRange -> VersionRange -> VersionRange
  isAnyVersion :: VersionRange -> GHC.Types.Bool
  isNoVersion :: VersionRange -> GHC.Types.Bool
  isSpecificVersion :: VersionRange -> GHC.Internal.Maybe.Maybe Version
  laterVersion :: Version -> VersionRange
  majorBoundVersion :: Version -> VersionRange
  majorUpperBound :: Version -> Version
  mkVersion :: [GHC.Types.Int] -> Version
  mkVersion' :: GHC.Internal.Data.Version.Version -> Version
  noVersion :: VersionRange
  normaliseVersionRange :: VersionRange -> VersionRange
  notThisVersion :: Version -> VersionRange
  nullVersion :: Version
  orEarlierVersion :: Version -> VersionRange
  orLaterVersion :: Version -> VersionRange
  projectVersionRange :: VersionRange -> VersionRangeF VersionRange
  removeLowerBound :: VersionRange -> VersionRange
  removeUpperBound :: VersionRange -> VersionRange
  simplifyVersionRange :: VersionRange -> VersionRange
  stripParensVersionRange :: VersionRange -> VersionRange
  thisVersion :: Version -> VersionRange
  toVersionIntervals :: VersionRange -> VersionIntervals
  transformCaret :: VersionRange -> VersionRange
  transformCaretLower :: VersionRange -> VersionRange
  transformCaretUpper :: VersionRange -> VersionRange
  unVersionIntervals :: VersionIntervals -> [VersionInterval]
  unionVersionRanges :: VersionRange -> VersionRange -> VersionRange
  version0 :: Version
  versionNumbers :: Version -> [GHC.Types.Int]
  wildcardUpperBound :: Version -> Version
  withinRange :: Version -> VersionRange -> GHC.Types.Bool
  withinVersion :: Version -> VersionRange

module Language.Haskell.Extension where
  type Extension :: *
  data Extension = EnableExtension KnownExtension | DisableExtension KnownExtension | UnknownExtension GHC.Internal.Base.String
  type KnownExtension :: *
  data KnownExtension
    = OverlappingInstances
    | UndecidableInstances
    | IncoherentInstances
    | DoRec
    | RecursiveDo
    | ParallelListComp
    | MultiParamTypeClasses
    | MonomorphismRestriction
    | DeepSubsumption
    | FunctionalDependencies
    | Rank2Types
    | RankNTypes
    | PolymorphicComponents
    | ExistentialQuantification
    | ScopedTypeVariables
    | PatternSignatures
    | ImplicitParams
    | FlexibleContexts
    | FlexibleInstances
    | EmptyDataDecls
    | CPP
    | KindSignatures
    | BangPatterns
    | TypeSynonymInstances
    | TemplateHaskell
    | ForeignFunctionInterface
    | Arrows
    | Generics
    | ImplicitPrelude
    | NamedFieldPuns
    | PatternGuards
    | GeneralizedNewtypeDeriving
    | GeneralisedNewtypeDeriving
    | ExtensibleRecords
    | RestrictedTypeSynonyms
    | HereDocuments
    | MagicHash
    | TypeFamilies
    | StandaloneDeriving
    | UnicodeSyntax
    | UnliftedFFITypes
    | InterruptibleFFI
    | CApiFFI
    | LiberalTypeSynonyms
    | TypeOperators
    | RecordWildCards
    | RecordPuns
    | DisambiguateRecordFields
    | TraditionalRecordSyntax
    | OverloadedStrings
    | GADTs
    | GADTSyntax
    | MonoPatBinds
    | RelaxedPolyRec
    | ExtendedDefaultRules
    | NamedDefaults
    | UnboxedTuples
    | DeriveDataTypeable
    | DeriveGeneric
    | DefaultSignatures
    | InstanceSigs
    | ConstrainedClassMethods
    | PackageImports
    | ImpredicativeTypes
    | NewQualifiedOperators
    | PostfixOperators
    | QuasiQuotes
    | TransformListComp
    | MonadComprehensions
    | ViewPatterns
    | XmlSyntax
    | RegularPatterns
    | TupleSections
    | GHCForeignImportPrim
    | NPlusKPatterns
    | DoAndIfThenElse
    | MultiWayIf
    | LambdaCase
    | RebindableSyntax
    | ExplicitForAll
    | DatatypeContexts
    | MonoLocalBinds
    | DeriveFunctor
    | DeriveTraversable
    | DeriveFoldable
    | NondecreasingIndentation
    | SafeImports
    | Safe
    | Trustworthy
    | Unsafe
    | ConstraintKinds
    | PolyKinds
    | DataKinds
    | TypeData
    | ParallelArrays
    | RoleAnnotations
    | OverloadedLists
    | EmptyCase
    | AutoDeriveTypeable
    | NegativeLiterals
    | BinaryLiterals
    | NumDecimals
    | NullaryTypeClasses
    | ExplicitNamespaces
    | AllowAmbiguousTypes
    | JavaScriptFFI
    | PatternSynonyms
    | PartialTypeSignatures
    | NamedWildCards
    | DeriveAnyClass
    | DeriveLift
    | StaticPointers
    | StrictData
    | Strict
    | ApplicativeDo
    | DuplicateRecordFields
    | TypeApplications
    | TypeInType
    | UndecidableSuperClasses
    | MonadFailDesugaring
    | TemplateHaskellQuotes
    | OverloadedLabels
    | TypeFamilyDependencies
    | DerivingStrategies
    | DerivingVia
    | UnboxedSums
    | HexFloatLiterals
    | BlockArguments
    | NumericUnderscores
    | QuantifiedConstraints
    | StarIsType
    | EmptyDataDeriving
    | CUSKs
    | ImportQualifiedPost
    | StandaloneKindSignatures
    | UnliftedNewtypes
    | LexicalNegation
    | QualifiedDo
    | LinearTypes
    | RequiredTypeArguments
    | FieldSelectors
    | OverloadedRecordDot
    | OverloadedRecordUpdate
    | UnliftedDatatypes
    | ExtendedLiterals
    | AlternativeLayoutRule
    | AlternativeLayoutRuleTransitional
    | RelaxedLayout
    | TypeAbstractions
    | ListTuplePuns
    | MultilineStrings
    | OrPatterns
  type Language :: *
  data Language = Haskell98 | Haskell2010 | GHC2021 | GHC2024 | UnknownLanguage GHC.Internal.Base.String
  classifyExtension :: GHC.Internal.Base.String -> Extension
  classifyLanguage :: GHC.Internal.Base.String -> Language
  deprecatedExtensions :: [(Extension, GHC.Internal.Maybe.Maybe Extension)]
  knownExtensions :: [KnownExtension]
  knownLanguages :: [Language]


-- Instances:
instance forall a. Distribution.Backpack.ModSubst.ModSubst a => Distribution.Backpack.ModSubst.ModSubst [a] -- Defined in ‘Distribution.Backpack.ModSubst’
instance forall a k. Distribution.Backpack.ModSubst.ModSubst a => Distribution.Backpack.ModSubst.ModSubst (Data.Map.Internal.Map k a) -- Defined in ‘Distribution.Backpack.ModSubst’
instance Distribution.Backpack.ModSubst.ModSubst Distribution.Backpack.OpenModule -- Defined in ‘Distribution.Backpack.ModSubst’
instance Distribution.Backpack.ModSubst.ModSubst Distribution.Backpack.OpenUnitId -- Defined in ‘Distribution.Backpack.ModSubst’
instance Distribution.Backpack.ModSubst.ModSubst (Data.Set.Internal.Set Distribution.ModuleName.ModuleName) -- Defined in ‘Distribution.Backpack.ModSubst’
instance forall a k. Distribution.Backpack.ModSubst.ModSubst a => Distribution.Backpack.ModSubst.ModSubst (k, a) -- Defined in ‘Distribution.Backpack.ModSubst’
instance Distribution.Backpack.ModSubst.ModSubst Distribution.Backpack.ModuleShape.ModuleShape -- Defined in ‘Distribution.Backpack.ModuleShape’
instance [safe] Distribution.Simple.Flag.BooleanFlag GHC.Types.Bool -- Defined in ‘Distribution.Simple.Flag’
instance [safe] Distribution.Utils.IOData.KnownIODataMode Data.ByteString.Lazy.Internal.ByteString -- Defined in ‘Distribution.Utils.IOData’
instance [safe] forall a. (a ~ GHC.Types.Char) => Distribution.Utils.IOData.KnownIODataMode [a] -- Defined in ‘Distribution.Utils.IOData’
instance [safe] forall s (m :: * -> *) u. Text.Parsec.Prim.Stream s m GHC.Types.Char => Distribution.Compat.CharParsing.CharParsing (Text.Parsec.Prim.ParsecT s u m) -- Defined in ‘Distribution.Compat.CharParsing’
instance [safe] forall (m :: * -> *) w r s. (Distribution.Compat.CharParsing.CharParsing m, GHC.Internal.Base.MonadPlus m, GHC.Internal.Base.Monoid w) => Distribution.Compat.CharParsing.CharParsing (Control.Monad.Trans.RWS.Strict.RWST r w s m) -- Defined in ‘Distribution.Compat.CharParsing’
instance [safe] forall (m :: * -> *) w r s. (Distribution.Compat.CharParsing.CharParsing m, GHC.Internal.Base.MonadPlus m, GHC.Internal.Base.Monoid w) => Distribution.Compat.CharParsing.CharParsing (Control.Monad.Trans.RWS.Lazy.RWST r w s m) -- Defined in ‘Distribution.Compat.CharParsing’
instance [safe] forall (m :: * -> *) e. (Distribution.Compat.CharParsing.CharParsing m, GHC.Internal.Base.MonadPlus m) => Distribution.Compat.CharParsing.CharParsing (Control.Monad.Trans.Reader.ReaderT e m) -- Defined in ‘Distribution.Compat.CharParsing’
instance [safe] forall (m :: * -> *) s. (Distribution.Compat.CharParsing.CharParsing m, GHC.Internal.Base.MonadPlus m) => Distribution.Compat.CharParsing.CharParsing (Control.Monad.Trans.State.Strict.StateT s m) -- Defined in ‘Distribution.Compat.CharParsing’
instance [safe] forall (m :: * -> *) s. (Distribution.Compat.CharParsing.CharParsing m, GHC.Internal.Base.MonadPlus m) => Distribution.Compat.CharParsing.CharParsing (Control.Monad.Trans.State.Lazy.StateT s m) -- Defined in ‘Distribution.Compat.CharParsing’
instance [safe] forall (m :: * -> *) w. (Distribution.Compat.CharParsing.CharParsing m, GHC.Internal.Base.MonadPlus m, GHC.Internal.Base.Monoid w) => Distribution.Compat.CharParsing.CharParsing (Control.Monad.Trans.Writer.Lazy.WriterT w m) -- Defined in ‘Distribution.Compat.CharParsing’
instance [safe] forall (m :: * -> *) w. (Distribution.Compat.CharParsing.CharParsing m, GHC.Internal.Base.MonadPlus m, GHC.Internal.Base.Monoid w) => Distribution.Compat.CharParsing.CharParsing (Control.Monad.Trans.Writer.Strict.WriterT w m) -- Defined in ‘Distribution.Compat.CharParsing’
instance Distribution.Compat.CharParsing.CharParsing Distribution.Parsec.ParsecParser -- Defined in ‘Distribution.Parsec’
instance forall a b. (Distribution.Compat.Graph.IsNode a, Distribution.Compat.Graph.IsNode b, Distribution.Compat.Graph.Key a ~ Distribution.Compat.Graph.Key b) => Distribution.Compat.Graph.IsNode (GHC.Internal.Data.Either.Either a b) -- Defined in ‘Distribution.Compat.Graph’
instance forall k a. GHC.Classes.Ord k => Distribution.Compat.Graph.IsNode (Distribution.Compat.Graph.Node k a) -- Defined in ‘Distribution.Compat.Graph’
instance Distribution.Compat.Graph.IsNode Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -- Defined in ‘Distribution.Types.InstalledPackageInfo’
instance Distribution.Compat.Graph.IsNode Distribution.Types.TargetInfo.TargetInfo -- Defined in ‘Distribution.Types.TargetInfo’
instance Distribution.Compat.Graph.IsNode Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -- Defined in ‘Distribution.Types.ComponentLocalBuildInfo’
instance Distribution.Compat.Newtype.Newtype Distribution.CabalSpecVersion.CabalSpecVersion Distribution.FieldGrammar.Newtypes.SpecVersion -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance forall a sep wrapper. Distribution.Compat.Newtype.Newtype (GHC.Internal.Base.NonEmpty a) (Distribution.FieldGrammar.Newtypes.NonEmpty' sep wrapper a) -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance forall a sep wrapper. Distribution.Compat.Newtype.Newtype (Data.Set.Internal.Set a) (Distribution.FieldGrammar.Newtypes.Set' sep wrapper a) -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.Compat.Newtype.Newtype (Distribution.Compiler.CompilerFlavor, Distribution.Types.VersionRange.Internal.VersionRange) Distribution.FieldGrammar.Newtypes.TestedWith -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance forall from (to :: Distribution.Utils.Path.FileOrDir). Distribution.Compat.Newtype.Newtype (Distribution.Utils.Path.RelativePath from to) (Distribution.FieldGrammar.Newtypes.RelativePathNT from to) -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance forall from (to :: Distribution.Utils.Path.FileOrDir). Distribution.Compat.Newtype.Newtype (Distribution.Utils.Path.SymbolicPath from to) (Distribution.FieldGrammar.Newtypes.SymbolicPathNT from to) -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.Compat.Newtype.Newtype (Distribution.Utils.Path.SymbolicPath Distribution.Utils.Path.Pkg (Distribution.Utils.Path.Dir Distribution.Utils.Path.DataDir)) Distribution.PackageDescription.FieldGrammar.CompatDataDir -- Defined in ‘Distribution.PackageDescription.FieldGrammar’
instance Distribution.Compat.Newtype.Newtype (GHC.Internal.Data.Either.Either Distribution.SPDX.License.License Distribution.License.License) Distribution.FieldGrammar.Newtypes.SpecLicense -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.Compat.Newtype.Newtype (GHC.Internal.Data.Either.Either Distribution.SPDX.License.License Distribution.License.License) Distribution.Types.InstalledPackageInfo.FieldGrammar.SpecLicenseLenient -- Defined in ‘Distribution.Types.InstalledPackageInfo.FieldGrammar’
instance Distribution.Compat.Newtype.Newtype GHC.Internal.Base.String Distribution.FieldGrammar.Newtypes.FilePathNT -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance forall a sep wrapper. Distribution.Compat.Newtype.Newtype [a] (Distribution.FieldGrammar.Newtypes.List sep wrapper a) -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.Compat.Newtype.Newtype GHC.Internal.Base.String Distribution.FieldGrammar.Newtypes.Token -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.Compat.Newtype.Newtype GHC.Internal.Base.String Distribution.FieldGrammar.Newtypes.Token' -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.Compat.Newtype.Newtype [Distribution.Utils.Path.RelativePath Distribution.Utils.Path.Pkg Distribution.Utils.Path.File] Distribution.PackageDescription.FieldGrammar.CompatLicenseFile -- Defined in ‘Distribution.PackageDescription.FieldGrammar’
instance Distribution.Compat.Newtype.Newtype GHC.Internal.Base.String Distribution.Types.InstalledPackageInfo.FieldGrammar.CompatPackageKey -- Defined in ‘Distribution.Types.InstalledPackageInfo.FieldGrammar’
instance Distribution.Compat.Newtype.Newtype [Distribution.Types.ExposedModule.ExposedModule] Distribution.Types.InstalledPackageInfo.FieldGrammar.ExposedModules -- Defined in ‘Distribution.Types.InstalledPackageInfo.FieldGrammar’
instance Distribution.Compat.Newtype.Newtype [(Distribution.ModuleName.ModuleName, Distribution.Backpack.OpenModule)] Distribution.Types.InstalledPackageInfo.FieldGrammar.InstWith -- Defined in ‘Distribution.Types.InstalledPackageInfo.FieldGrammar’
instance forall a. Distribution.Compat.Newtype.Newtype a (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘Distribution.Compat.Newtype’
instance forall a. Distribution.Compat.Newtype.Newtype a (GHC.Internal.Data.Semigroup.Internal.Product a) -- Defined in ‘Distribution.Compat.Newtype’
instance forall a. Distribution.Compat.Newtype.Newtype a (GHC.Internal.Data.Semigroup.Internal.Sum a) -- Defined in ‘Distribution.Compat.Newtype’
instance forall a. Distribution.Compat.Newtype.Newtype a (Distribution.FieldGrammar.Newtypes.MQuoted a) -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance [safe] forall s (m :: * -> *) t u. (Text.Parsec.Prim.Stream s m t, GHC.Internal.Show.Show t) => Distribution.Compat.Parsing.Parsing (Text.Parsec.Prim.ParsecT s u m) -- Defined in ‘Distribution.Compat.Parsing’
instance [safe] forall (m :: * -> *) w r s. (Distribution.Compat.Parsing.Parsing m, GHC.Internal.Base.MonadPlus m, GHC.Internal.Base.Monoid w) => Distribution.Compat.Parsing.Parsing (Control.Monad.Trans.RWS.Strict.RWST r w s m) -- Defined in ‘Distribution.Compat.Parsing’
instance [safe] forall (m :: * -> *) w r s. (Distribution.Compat.Parsing.Parsing m, GHC.Internal.Base.MonadPlus m, GHC.Internal.Base.Monoid w) => Distribution.Compat.Parsing.Parsing (Control.Monad.Trans.RWS.Lazy.RWST r w s m) -- Defined in ‘Distribution.Compat.Parsing’
instance [safe] forall (m :: * -> *) e. (Distribution.Compat.Parsing.Parsing m, GHC.Internal.Base.MonadPlus m) => Distribution.Compat.Parsing.Parsing (Control.Monad.Trans.Reader.ReaderT e m) -- Defined in ‘Distribution.Compat.Parsing’
instance [safe] forall (m :: * -> *) s. (Distribution.Compat.Parsing.Parsing m, GHC.Internal.Base.MonadPlus m) => Distribution.Compat.Parsing.Parsing (Control.Monad.Trans.State.Strict.StateT s m) -- Defined in ‘Distribution.Compat.Parsing’
instance [safe] forall (m :: * -> *) s. (Distribution.Compat.Parsing.Parsing m, GHC.Internal.Base.MonadPlus m) => Distribution.Compat.Parsing.Parsing (Control.Monad.Trans.State.Lazy.StateT s m) -- Defined in ‘Distribution.Compat.Parsing’
instance [safe] forall (m :: * -> *) w. (Distribution.Compat.Parsing.Parsing m, GHC.Internal.Base.MonadPlus m, GHC.Internal.Base.Monoid w) => Distribution.Compat.Parsing.Parsing (Control.Monad.Trans.Writer.Lazy.WriterT w m) -- Defined in ‘Distribution.Compat.Parsing’
instance [safe] forall (m :: * -> *) w. (Distribution.Compat.Parsing.Parsing m, GHC.Internal.Base.MonadPlus m, GHC.Internal.Base.Monoid w) => Distribution.Compat.Parsing.Parsing (Control.Monad.Trans.Writer.Strict.WriterT w m) -- Defined in ‘Distribution.Compat.Parsing’
instance Distribution.Compat.Parsing.Parsing Distribution.Parsec.ParsecParser -- Defined in ‘Distribution.Parsec’
instance Distribution.FieldGrammar.Class.FieldGrammar Distribution.Parsec.Parsec Distribution.FieldGrammar.Parsec.ParsecFieldGrammar -- Defined in ‘Distribution.FieldGrammar.Parsec’
instance Distribution.FieldGrammar.Class.FieldGrammar Distribution.Pretty.Pretty Distribution.FieldGrammar.Pretty.PrettyFieldGrammar -- Defined in ‘Distribution.FieldGrammar.Pretty’
instance Distribution.FieldGrammar.Class.FieldGrammar Distribution.FieldGrammar.FieldDescrs.ParsecPretty Distribution.FieldGrammar.FieldDescrs.FieldDescrs -- Defined in ‘Distribution.FieldGrammar.FieldDescrs’
instance forall a. (Distribution.Parsec.Parsec a, Distribution.Pretty.Pretty a) => Distribution.FieldGrammar.FieldDescrs.ParsecPretty a -- Defined in ‘Distribution.FieldGrammar.FieldDescrs’
instance Distribution.FieldGrammar.Newtypes.Sep Distribution.FieldGrammar.Newtypes.CommaFSep -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.FieldGrammar.Newtypes.Sep Distribution.FieldGrammar.Newtypes.CommaVCat -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.FieldGrammar.Newtypes.Sep Distribution.FieldGrammar.Newtypes.FSep -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.FieldGrammar.Newtypes.Sep Distribution.FieldGrammar.Newtypes.NoCommaFSep -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.FieldGrammar.Newtypes.Sep Distribution.FieldGrammar.Newtypes.VCat -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.Package.HasMungedPackageId Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -- Defined in ‘Distribution.Types.InstalledPackageInfo’
instance Distribution.Package.HasMungedPackageId Distribution.Types.MungedPackageId.MungedPackageId -- Defined in ‘Distribution.Package’
instance Distribution.Package.HasUnitId Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -- Defined in ‘Distribution.Types.InstalledPackageInfo’
instance Distribution.Package.Package Distribution.Backpack.LinkedComponent.LinkedComponent -- Defined in ‘Distribution.Backpack.LinkedComponent’
instance Distribution.Package.Package Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -- Defined in ‘Distribution.Types.InstalledPackageInfo’
instance Distribution.Package.Package Distribution.Types.PackageId.PackageIdentifier -- Defined in ‘Distribution.Package’
instance Distribution.Package.Package Distribution.Types.GenericPackageDescription.GenericPackageDescription -- Defined in ‘Distribution.Types.GenericPackageDescription’
instance Distribution.Package.Package Distribution.Types.PackageDescription.PackageDescription -- Defined in ‘Distribution.Types.PackageDescription’
instance forall id. Distribution.Package.Package (Distribution.Types.AnnotatedId.AnnotatedId id) -- Defined in ‘Distribution.Types.AnnotatedId’
instance Distribution.Package.PackageInstalled Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -- Defined in ‘Distribution.Types.InstalledPackageInfo’
instance Distribution.PackageDescription.Parsec.FromBuildInfo Distribution.PackageDescription.FieldGrammar.BenchmarkStanza -- Defined in ‘Distribution.PackageDescription.Parsec’
instance Distribution.PackageDescription.Parsec.FromBuildInfo Distribution.Types.BuildInfo.BuildInfo -- Defined in ‘Distribution.PackageDescription.Parsec’
instance Distribution.PackageDescription.Parsec.FromBuildInfo Distribution.Types.Executable.Executable -- Defined in ‘Distribution.PackageDescription.Parsec’
instance Distribution.PackageDescription.Parsec.FromBuildInfo Distribution.Types.ForeignLib.ForeignLib -- Defined in ‘Distribution.PackageDescription.Parsec’
instance Distribution.PackageDescription.Parsec.FromBuildInfo Distribution.PackageDescription.FieldGrammar.TestSuiteStanza -- Defined in ‘Distribution.PackageDescription.Parsec’
instance Distribution.Parsec.CabalParsing Distribution.Parsec.ParsecParser -- Defined in ‘Distribution.Parsec’
instance Distribution.Parsec.Parsec Distribution.Backpack.OpenModule -- Defined in ‘Distribution.Backpack’
instance Distribution.Parsec.Parsec Distribution.Backpack.OpenUnitId -- Defined in ‘Distribution.Backpack’
instance Distribution.Parsec.Parsec Distribution.Types.UnitId.DefUnitId -- Defined in ‘Distribution.Types.UnitId’
instance Distribution.Parsec.Parsec Distribution.Types.UnitId.UnitId -- Defined in ‘Distribution.Types.UnitId’
instance Distribution.Parsec.Parsec Distribution.Compiler.AbiTag -- Defined in ‘Distribution.Compiler’
instance Distribution.Parsec.Parsec Distribution.Compiler.CompilerFlavor -- Defined in ‘Distribution.Compiler’
instance Distribution.Parsec.Parsec Distribution.Compiler.CompilerId -- Defined in ‘Distribution.Compiler’
instance Distribution.Parsec.Parsec Distribution.FieldGrammar.Newtypes.FilePathNT -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance forall a b sep. (Distribution.Compat.Newtype.Newtype a b, Distribution.FieldGrammar.Newtypes.Sep sep, Distribution.Parsec.Parsec b) => Distribution.Parsec.Parsec (Distribution.FieldGrammar.Newtypes.List sep b a) -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance forall a. Distribution.Parsec.Parsec a => Distribution.Parsec.Parsec (Distribution.FieldGrammar.Newtypes.MQuoted a) -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance forall a b sep. (Distribution.Compat.Newtype.Newtype a b, Distribution.FieldGrammar.Newtypes.Sep sep, Distribution.Parsec.Parsec b) => Distribution.Parsec.Parsec (Distribution.FieldGrammar.Newtypes.NonEmpty' sep b a) -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance forall from (to :: Distribution.Utils.Path.FileOrDir). Distribution.Parsec.Parsec (Distribution.FieldGrammar.Newtypes.RelativePathNT from to) -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance forall a b sep. (Distribution.Compat.Newtype.Newtype a b, GHC.Classes.Ord a, Distribution.FieldGrammar.Newtypes.Sep sep, Distribution.Parsec.Parsec b) => Distribution.Parsec.Parsec (Distribution.FieldGrammar.Newtypes.Set' sep b a) -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.Parsec.Parsec Distribution.FieldGrammar.Newtypes.SpecLicense -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.Parsec.Parsec Distribution.FieldGrammar.Newtypes.SpecVersion -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance forall from (to :: Distribution.Utils.Path.FileOrDir). Distribution.Parsec.Parsec (Distribution.FieldGrammar.Newtypes.SymbolicPathNT from to) -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.Parsec.Parsec Distribution.FieldGrammar.Newtypes.TestedWith -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.Parsec.Parsec Distribution.FieldGrammar.Newtypes.Token -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.Parsec.Parsec Distribution.FieldGrammar.Newtypes.Token' -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.Parsec.Parsec Distribution.Types.AbiDependency.AbiDependency -- Defined in ‘Distribution.Types.AbiDependency’
instance Distribution.Parsec.Parsec Distribution.Types.ExposedModule.ExposedModule -- Defined in ‘Distribution.Types.ExposedModule’
instance Distribution.Parsec.Parsec Distribution.License.License -- Defined in ‘Distribution.License’
instance Distribution.Parsec.Parsec Distribution.Types.AbiHash.AbiHash -- Defined in ‘Distribution.Types.AbiHash’
instance Distribution.Parsec.Parsec Distribution.Types.ComponentId.ComponentId -- Defined in ‘Distribution.Types.ComponentId’
instance Distribution.Parsec.Parsec Distribution.Types.Dependency.Dependency -- Defined in ‘Distribution.Types.Dependency’
instance Distribution.Parsec.Parsec Distribution.Types.Module.Module -- Defined in ‘Distribution.Types.Module’
instance Distribution.Parsec.Parsec Distribution.Types.PackageId.PackageIdentifier -- Defined in ‘Distribution.Types.PackageId’
instance Distribution.Parsec.Parsec Distribution.Types.PackageName.PackageName -- Defined in ‘Distribution.Types.PackageName’
instance Distribution.Parsec.Parsec Distribution.Types.PkgconfigName.PkgconfigName -- Defined in ‘Distribution.Types.PkgconfigName’
instance Distribution.Parsec.Parsec Distribution.Types.Version.Version -- Defined in ‘Distribution.Types.Version’
instance Distribution.Parsec.Parsec Distribution.ModuleName.ModuleName -- Defined in ‘Distribution.ModuleName’
instance Distribution.Parsec.Parsec Distribution.Types.SourceRepo.KnownRepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance Distribution.Parsec.Parsec Distribution.Types.SourceRepo.RepoKind -- Defined in ‘Distribution.Types.SourceRepo’
instance Distribution.Parsec.Parsec Distribution.Types.SourceRepo.RepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance Distribution.Parsec.Parsec Distribution.Types.BenchmarkType.BenchmarkType -- Defined in ‘Distribution.Types.BenchmarkType’
instance Distribution.Parsec.Parsec Distribution.Types.BuildType.BuildType -- Defined in ‘Distribution.Types.BuildType’
instance Distribution.Parsec.Parsec Distribution.Types.ComponentName.ComponentName -- Defined in ‘Distribution.Types.ComponentName’
instance Distribution.Parsec.Parsec Distribution.Types.ModuleRenaming.ModuleRenaming -- Defined in ‘Distribution.Types.ModuleRenaming’
instance Distribution.Parsec.Parsec Distribution.Types.ExeDependency.ExeDependency -- Defined in ‘Distribution.Types.ExeDependency’
instance Distribution.Parsec.Parsec Distribution.Types.ExecutableScope.ExecutableScope -- Defined in ‘Distribution.Types.ExecutableScope’
instance Distribution.Parsec.Parsec Distribution.Types.Flag.FlagAssignment -- Defined in ‘Distribution.Types.Flag’
instance Distribution.Parsec.Parsec Distribution.Types.Flag.FlagName -- Defined in ‘Distribution.Types.Flag’
instance Distribution.Parsec.Parsec Distribution.Types.ForeignLib.LibVersionInfo -- Defined in ‘Distribution.Types.ForeignLib’
instance Distribution.Parsec.Parsec Distribution.Types.ForeignLibType.ForeignLibType -- Defined in ‘Distribution.Types.ForeignLibType’
instance Distribution.Parsec.Parsec Distribution.Types.ForeignLibOption.ForeignLibOption -- Defined in ‘Distribution.Types.ForeignLibOption’
instance Distribution.Parsec.Parsec Distribution.Types.IncludeRenaming.IncludeRenaming -- Defined in ‘Distribution.Types.IncludeRenaming’
instance Distribution.Parsec.Parsec Distribution.Types.LegacyExeDependency.LegacyExeDependency -- Defined in ‘Distribution.Types.LegacyExeDependency’
instance Distribution.Parsec.Parsec Distribution.Types.LibraryVisibility.LibraryVisibility -- Defined in ‘Distribution.Types.LibraryVisibility’
instance Distribution.Parsec.Parsec Distribution.Types.Mixin.Mixin -- Defined in ‘Distribution.Types.Mixin’
instance Distribution.Parsec.Parsec Distribution.Types.ModuleReexport.ModuleReexport -- Defined in ‘Distribution.Types.ModuleReexport’
instance Distribution.Parsec.Parsec Distribution.Types.PkgconfigVersionRange.PkgconfigVersionRange -- Defined in ‘Distribution.Types.PkgconfigVersionRange’
instance Distribution.Parsec.Parsec Distribution.Types.PkgconfigDependency.PkgconfigDependency -- Defined in ‘Distribution.Types.PkgconfigDependency’
instance Distribution.Parsec.Parsec Distribution.Types.PkgconfigVersion.PkgconfigVersion -- Defined in ‘Distribution.Types.PkgconfigVersion’
instance Distribution.Parsec.Parsec Distribution.Types.TestType.TestType -- Defined in ‘Distribution.Types.TestType’
instance Distribution.Parsec.Parsec Distribution.Types.UnqualComponentName.UnqualComponentName -- Defined in ‘Distribution.Types.UnqualComponentName’
instance Distribution.Parsec.Parsec Distribution.PackageDescription.FieldGrammar.CompatDataDir -- Defined in ‘Distribution.PackageDescription.FieldGrammar’
instance Distribution.Parsec.Parsec Distribution.PackageDescription.FieldGrammar.CompatLicenseFile -- Defined in ‘Distribution.PackageDescription.FieldGrammar’
instance Distribution.Parsec.Parsec GHC.Types.Bool -- Defined in ‘Distribution.Parsec’
instance forall a. Distribution.Parsec.Parsec a => Distribution.Parsec.Parsec (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘Distribution.Parsec’
instance Distribution.Parsec.Parsec Distribution.SPDX.LicenseId.LicenseId -- Defined in ‘Distribution.SPDX.LicenseId’
instance Distribution.Parsec.Parsec Distribution.SPDX.LicenseExceptionId.LicenseExceptionId -- Defined in ‘Distribution.SPDX.LicenseExceptionId’
instance Distribution.Parsec.Parsec Distribution.SPDX.LicenseExpression.LicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance Distribution.Parsec.Parsec Distribution.SPDX.LicenseExpression.SimpleLicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance Distribution.Parsec.Parsec Distribution.SPDX.License.License -- Defined in ‘Distribution.SPDX.License’
instance Distribution.Parsec.Parsec Distribution.SPDX.LicenseReference.LicenseRef -- Defined in ‘Distribution.SPDX.LicenseReference’
instance Distribution.Parsec.Parsec Language.Haskell.Extension.Extension -- Defined in ‘Language.Haskell.Extension’
instance Distribution.Parsec.Parsec Language.Haskell.Extension.Language -- Defined in ‘Language.Haskell.Extension’
instance Distribution.Parsec.Parsec Distribution.Types.VersionRange.Internal.VersionRange -- Defined in ‘Distribution.Types.VersionRange.Internal’
instance Distribution.Parsec.Parsec Distribution.Simple.FileMonitor.Types.FilePathRoot -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance Distribution.Parsec.Parsec Distribution.Simple.FileMonitor.Types.RootedGlob -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance Distribution.Parsec.Parsec Distribution.Simple.Glob.Internal.Glob -- Defined in ‘Distribution.Simple.Glob.Internal’
instance Distribution.Parsec.Parsec Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockTarget -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock’
instance Distribution.Parsec.Parsec Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestShowDetails -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Test’
instance Distribution.Parsec.Parsec Distribution.System.Arch -- Defined in ‘Distribution.System’
instance Distribution.Parsec.Parsec Distribution.System.OS -- Defined in ‘Distribution.System’
instance Distribution.Parsec.Parsec Distribution.System.Platform -- Defined in ‘Distribution.System’
instance Distribution.Parsec.Parsec Distribution.Types.InstalledPackageInfo.FieldGrammar.CompatPackageKey -- Defined in ‘Distribution.Types.InstalledPackageInfo.FieldGrammar’
instance Distribution.Parsec.Parsec Distribution.Types.InstalledPackageInfo.FieldGrammar.ExposedModules -- Defined in ‘Distribution.Types.InstalledPackageInfo.FieldGrammar’
instance Distribution.Parsec.Parsec Distribution.Types.InstalledPackageInfo.FieldGrammar.InstWith -- Defined in ‘Distribution.Types.InstalledPackageInfo.FieldGrammar’
instance Distribution.Parsec.Parsec Distribution.Types.InstalledPackageInfo.FieldGrammar.SpecLicenseLenient -- Defined in ‘Distribution.Types.InstalledPackageInfo.FieldGrammar’
instance Distribution.Parsec.Parsec Distribution.Types.MungedPackageId.MungedPackageId -- Defined in ‘Distribution.Types.MungedPackageId’
instance Distribution.Parsec.Parsec Distribution.Types.MungedPackageName.MungedPackageName -- Defined in ‘Distribution.Types.MungedPackageName’
instance Distribution.Parsec.Parsec Distribution.Types.PackageVersionConstraint.PackageVersionConstraint -- Defined in ‘Distribution.Types.PackageVersionConstraint’
instance forall from (to :: Distribution.Utils.Path.FileOrDir). Distribution.Parsec.Parsec (Distribution.Utils.Path.SymbolicPathX Distribution.Utils.Path.OnlyRelative from to) -- Defined in ‘Distribution.Utils.Path’
instance forall from (to :: Distribution.Utils.Path.FileOrDir). Distribution.Parsec.Parsec (Distribution.Utils.Path.SymbolicPathX Distribution.Utils.Path.AllowAbsolute from to) -- Defined in ‘Distribution.Utils.Path’
instance Distribution.Parsec.Parsec Distribution.Verbosity.Verbosity -- Defined in ‘Distribution.Verbosity’
instance Distribution.Pretty.Pretty Distribution.Backpack.OpenModule -- Defined in ‘Distribution.Backpack’
instance Distribution.Pretty.Pretty Distribution.Backpack.OpenUnitId -- Defined in ‘Distribution.Backpack’
instance Distribution.Pretty.Pretty Distribution.Types.UnitId.DefUnitId -- Defined in ‘Distribution.Types.UnitId’
instance Distribution.Pretty.Pretty Distribution.Types.UnitId.UnitId -- Defined in ‘Distribution.Types.UnitId’
instance Distribution.Pretty.Pretty Distribution.Compiler.AbiTag -- Defined in ‘Distribution.Compiler’
instance Distribution.Pretty.Pretty Distribution.Compiler.CompilerFlavor -- Defined in ‘Distribution.Compiler’
instance Distribution.Pretty.Pretty Distribution.Compiler.CompilerId -- Defined in ‘Distribution.Compiler’
instance Distribution.Pretty.Pretty Distribution.FieldGrammar.Newtypes.FilePathNT -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance forall a b sep. (Distribution.Compat.Newtype.Newtype a b, Distribution.FieldGrammar.Newtypes.Sep sep, Distribution.Pretty.Pretty b) => Distribution.Pretty.Pretty (Distribution.FieldGrammar.Newtypes.List sep b a) -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance forall a. Distribution.Pretty.Pretty a => Distribution.Pretty.Pretty (Distribution.FieldGrammar.Newtypes.MQuoted a) -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance forall a b sep. (Distribution.Compat.Newtype.Newtype a b, Distribution.FieldGrammar.Newtypes.Sep sep, Distribution.Pretty.Pretty b) => Distribution.Pretty.Pretty (Distribution.FieldGrammar.Newtypes.NonEmpty' sep b a) -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance forall from (to :: Distribution.Utils.Path.FileOrDir). Distribution.Pretty.Pretty (Distribution.FieldGrammar.Newtypes.RelativePathNT from to) -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance forall a b sep. (Distribution.Compat.Newtype.Newtype a b, Distribution.FieldGrammar.Newtypes.Sep sep, Distribution.Pretty.Pretty b) => Distribution.Pretty.Pretty (Distribution.FieldGrammar.Newtypes.Set' sep b a) -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.Pretty.Pretty Distribution.FieldGrammar.Newtypes.SpecLicense -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.Pretty.Pretty Distribution.FieldGrammar.Newtypes.SpecVersion -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance forall from (to :: Distribution.Utils.Path.FileOrDir). Distribution.Pretty.Pretty (Distribution.FieldGrammar.Newtypes.SymbolicPathNT from to) -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.Pretty.Pretty Distribution.FieldGrammar.Newtypes.TestedWith -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.Pretty.Pretty Distribution.FieldGrammar.Newtypes.Token -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.Pretty.Pretty Distribution.FieldGrammar.Newtypes.Token' -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance Distribution.Pretty.Pretty Distribution.Types.AbiDependency.AbiDependency -- Defined in ‘Distribution.Types.AbiDependency’
instance Distribution.Pretty.Pretty Distribution.Types.ExposedModule.ExposedModule -- Defined in ‘Distribution.Types.ExposedModule’
instance Distribution.Pretty.Pretty Distribution.License.License -- Defined in ‘Distribution.License’
instance Distribution.Pretty.Pretty Distribution.Types.AbiHash.AbiHash -- Defined in ‘Distribution.Types.AbiHash’
instance Distribution.Pretty.Pretty Distribution.Types.ComponentId.ComponentId -- Defined in ‘Distribution.Types.ComponentId’
instance Distribution.Pretty.Pretty Distribution.Types.Dependency.Dependency -- Defined in ‘Distribution.Types.Dependency’
instance Distribution.Pretty.Pretty Distribution.Types.Module.Module -- Defined in ‘Distribution.Types.Module’
instance Distribution.Pretty.Pretty Distribution.Types.PackageId.PackageIdentifier -- Defined in ‘Distribution.Types.PackageId’
instance Distribution.Pretty.Pretty Distribution.Types.PackageName.PackageName -- Defined in ‘Distribution.Types.PackageName’
instance Distribution.Pretty.Pretty Distribution.Types.PkgconfigName.PkgconfigName -- Defined in ‘Distribution.Types.PkgconfigName’
instance Distribution.Pretty.Pretty Distribution.Types.Version.Version -- Defined in ‘Distribution.Types.Version’
instance Distribution.Pretty.Pretty Distribution.ModuleName.ModuleName -- Defined in ‘Distribution.ModuleName’
instance Distribution.Pretty.Pretty Distribution.Types.SourceRepo.KnownRepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance Distribution.Pretty.Pretty Distribution.Types.SourceRepo.RepoKind -- Defined in ‘Distribution.Types.SourceRepo’
instance Distribution.Pretty.Pretty Distribution.Types.SourceRepo.RepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance Distribution.Pretty.Pretty Distribution.Types.BenchmarkType.BenchmarkType -- Defined in ‘Distribution.Types.BenchmarkType’
instance Distribution.Pretty.Pretty Distribution.Types.BuildType.BuildType -- Defined in ‘Distribution.Types.BuildType’
instance Distribution.Pretty.Pretty Distribution.Types.ComponentName.ComponentName -- Defined in ‘Distribution.Types.ComponentName’
instance Distribution.Pretty.Pretty Distribution.Types.ModuleRenaming.ModuleRenaming -- Defined in ‘Distribution.Types.ModuleRenaming’
instance Distribution.Pretty.Pretty Distribution.Types.ExeDependency.ExeDependency -- Defined in ‘Distribution.Types.ExeDependency’
instance Distribution.Pretty.Pretty Distribution.Types.ExecutableScope.ExecutableScope -- Defined in ‘Distribution.Types.ExecutableScope’
instance Distribution.Pretty.Pretty Distribution.Types.Flag.FlagAssignment -- Defined in ‘Distribution.Types.Flag’
instance Distribution.Pretty.Pretty Distribution.Types.Flag.FlagName -- Defined in ‘Distribution.Types.Flag’
instance Distribution.Pretty.Pretty Distribution.Types.ForeignLib.LibVersionInfo -- Defined in ‘Distribution.Types.ForeignLib’
instance Distribution.Pretty.Pretty Distribution.Types.ForeignLibType.ForeignLibType -- Defined in ‘Distribution.Types.ForeignLibType’
instance Distribution.Pretty.Pretty Distribution.Types.ForeignLibOption.ForeignLibOption -- Defined in ‘Distribution.Types.ForeignLibOption’
instance Distribution.Pretty.Pretty Distribution.Types.IncludeRenaming.IncludeRenaming -- Defined in ‘Distribution.Types.IncludeRenaming’
instance Distribution.Pretty.Pretty Distribution.Types.LegacyExeDependency.LegacyExeDependency -- Defined in ‘Distribution.Types.LegacyExeDependency’
instance Distribution.Pretty.Pretty Distribution.Types.LibraryVisibility.LibraryVisibility -- Defined in ‘Distribution.Types.LibraryVisibility’
instance Distribution.Pretty.Pretty Distribution.Types.Mixin.Mixin -- Defined in ‘Distribution.Types.Mixin’
instance Distribution.Pretty.Pretty Distribution.Types.ModuleReexport.ModuleReexport -- Defined in ‘Distribution.Types.ModuleReexport’
instance Distribution.Pretty.Pretty Distribution.Types.PkgconfigVersionRange.PkgconfigVersionRange -- Defined in ‘Distribution.Types.PkgconfigVersionRange’
instance Distribution.Pretty.Pretty Distribution.Types.PkgconfigDependency.PkgconfigDependency -- Defined in ‘Distribution.Types.PkgconfigDependency’
instance Distribution.Pretty.Pretty Distribution.Types.PkgconfigVersion.PkgconfigVersion -- Defined in ‘Distribution.Types.PkgconfigVersion’
instance Distribution.Pretty.Pretty Distribution.Types.TestType.TestType -- Defined in ‘Distribution.Types.TestType’
instance Distribution.Pretty.Pretty Distribution.Types.UnqualComponentName.UnqualComponentName -- Defined in ‘Distribution.Types.UnqualComponentName’
instance Distribution.Pretty.Pretty Distribution.PackageDescription.FieldGrammar.CompatDataDir -- Defined in ‘Distribution.PackageDescription.FieldGrammar’
instance Distribution.Pretty.Pretty Distribution.PackageDescription.FieldGrammar.CompatLicenseFile -- Defined in ‘Distribution.PackageDescription.FieldGrammar’
instance [safe] Distribution.Pretty.Pretty GHC.Types.Bool -- Defined in ‘Distribution.Pretty’
instance [safe] Distribution.Pretty.Pretty Text.PrettyPrint.HughesPJ.Doc -- Defined in ‘Distribution.Pretty’
instance [safe] forall a. Distribution.Pretty.Pretty a => Distribution.Pretty.Pretty (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘Distribution.Pretty’
instance [safe] Distribution.Pretty.Pretty GHC.Types.Int -- Defined in ‘Distribution.Pretty’
instance Distribution.Pretty.Pretty Distribution.SPDX.LicenseId.LicenseId -- Defined in ‘Distribution.SPDX.LicenseId’
instance Distribution.Pretty.Pretty Distribution.SPDX.LicenseExceptionId.LicenseExceptionId -- Defined in ‘Distribution.SPDX.LicenseExceptionId’
instance Distribution.Pretty.Pretty Distribution.SPDX.LicenseExpression.LicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance Distribution.Pretty.Pretty Distribution.SPDX.LicenseExpression.SimpleLicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance Distribution.Pretty.Pretty Distribution.SPDX.License.License -- Defined in ‘Distribution.SPDX.License’
instance Distribution.Pretty.Pretty Distribution.SPDX.LicenseReference.LicenseRef -- Defined in ‘Distribution.SPDX.LicenseReference’
instance Distribution.Pretty.Pretty Language.Haskell.Extension.Extension -- Defined in ‘Language.Haskell.Extension’
instance Distribution.Pretty.Pretty Language.Haskell.Extension.KnownExtension -- Defined in ‘Language.Haskell.Extension’
instance Distribution.Pretty.Pretty Language.Haskell.Extension.Language -- Defined in ‘Language.Haskell.Extension’
instance Distribution.Pretty.Pretty Distribution.Types.VersionRange.Internal.VersionRange -- Defined in ‘Distribution.Types.VersionRange.Internal’
instance Distribution.Pretty.Pretty Distribution.Simple.FileMonitor.Types.FilePathRoot -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance Distribution.Pretty.Pretty Distribution.Simple.FileMonitor.Types.RootedGlob -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance Distribution.Pretty.Pretty Distribution.Simple.Glob.Internal.Glob -- Defined in ‘Distribution.Simple.Glob.Internal’
instance Distribution.Pretty.Pretty Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockTarget -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock’
instance Distribution.Pretty.Pretty Distribution.Simple.PreProcess.Types.Suffix -- Defined in ‘Distribution.Simple.PreProcess.Types’
instance Distribution.Pretty.Pretty Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestShowDetails -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Test’
instance Distribution.Pretty.Pretty Distribution.System.Arch -- Defined in ‘Distribution.System’
instance Distribution.Pretty.Pretty Distribution.System.OS -- Defined in ‘Distribution.System’
instance Distribution.Pretty.Pretty Distribution.System.Platform -- Defined in ‘Distribution.System’
instance Distribution.Pretty.Pretty Distribution.Types.InstalledPackageInfo.FieldGrammar.CompatPackageKey -- Defined in ‘Distribution.Types.InstalledPackageInfo.FieldGrammar’
instance Distribution.Pretty.Pretty Distribution.Types.InstalledPackageInfo.FieldGrammar.ExposedModules -- Defined in ‘Distribution.Types.InstalledPackageInfo.FieldGrammar’
instance Distribution.Pretty.Pretty Distribution.Types.InstalledPackageInfo.FieldGrammar.InstWith -- Defined in ‘Distribution.Types.InstalledPackageInfo.FieldGrammar’
instance Distribution.Pretty.Pretty Distribution.Types.InstalledPackageInfo.FieldGrammar.SpecLicenseLenient -- Defined in ‘Distribution.Types.InstalledPackageInfo.FieldGrammar’
instance Distribution.Pretty.Pretty Distribution.Types.MissingDependency.MissingDependency -- Defined in ‘Distribution.Types.MissingDependency’
instance Distribution.Pretty.Pretty Distribution.Types.MungedPackageId.MungedPackageId -- Defined in ‘Distribution.Types.MungedPackageId’
instance Distribution.Pretty.Pretty Distribution.Types.MungedPackageName.MungedPackageName -- Defined in ‘Distribution.Types.MungedPackageName’
instance Distribution.Pretty.Pretty Distribution.Types.PackageVersionConstraint.PackageVersionConstraint -- Defined in ‘Distribution.Types.PackageVersionConstraint’
instance forall (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute) from (to :: Distribution.Utils.Path.FileOrDir). Distribution.Pretty.Pretty (Distribution.Utils.Path.SymbolicPathX allowAbsolute from to) -- Defined in ‘Distribution.Utils.Path’
instance Distribution.Pretty.Pretty Distribution.Verbosity.Verbosity -- Defined in ‘Distribution.Verbosity’
instance Distribution.Types.BuildInfo.Lens.HasBuildInfo Distribution.Types.Benchmark.Benchmark -- Defined in ‘Distribution.Types.Benchmark’
instance Distribution.Types.BuildInfo.Lens.HasBuildInfo Distribution.Types.Executable.Executable -- Defined in ‘Distribution.Types.Executable’
instance Distribution.Types.BuildInfo.Lens.HasBuildInfo Distribution.Types.ForeignLib.ForeignLib -- Defined in ‘Distribution.Types.ForeignLib’
instance Distribution.Types.BuildInfo.Lens.HasBuildInfo Distribution.Types.Library.Library -- Defined in ‘Distribution.Types.Library’
instance Distribution.Types.BuildInfo.Lens.HasBuildInfo Distribution.Types.TestSuite.TestSuite -- Defined in ‘Distribution.Types.TestSuite’
instance Distribution.Types.BuildInfo.Lens.HasBuildInfo Distribution.PackageDescription.FieldGrammar.BenchmarkStanza -- Defined in ‘Distribution.PackageDescription.FieldGrammar’
instance Distribution.Types.BuildInfo.Lens.HasBuildInfo Distribution.PackageDescription.FieldGrammar.TestSuiteStanza -- Defined in ‘Distribution.PackageDescription.FieldGrammar’
instance Distribution.Types.BuildInfo.Lens.HasBuildInfo Distribution.Types.Component.Component -- Defined in ‘Distribution.Types.Component’
instance Distribution.Types.BuildInfo.Lens.HasBuildInfo Distribution.Types.BuildInfo.BuildInfo -- Defined in ‘Distribution.Types.BuildInfo.Lens’
instance Distribution.Types.BuildInfo.Lens.HasBuildInfos Distribution.Types.GenericPackageDescription.GenericPackageDescription -- Defined in ‘Distribution.Types.GenericPackageDescription’
instance Distribution.Types.BuildInfo.Lens.HasBuildInfos Distribution.Types.PackageDescription.PackageDescription -- Defined in ‘Distribution.Types.PackageDescription’
instance Distribution.Utils.Path.FileLike GHC.Internal.IO.FilePath -- Defined in ‘Distribution.Utils.Path’
instance forall (p :: Distribution.Utils.Path.FileOrDir) (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute) dir. (p ~ Distribution.Utils.Path.File) => Distribution.Utils.Path.FileLike (Distribution.Utils.Path.SymbolicPathX allowAbsolute dir p) -- Defined in ‘Distribution.Utils.Path’
instance forall (b1 :: Distribution.Utils.Path.FileOrDir) b2 (c2 :: Distribution.Utils.Path.FileOrDir) (c3 :: Distribution.Utils.Path.FileOrDir) (midAbsolute :: Distribution.Utils.Path.AllowAbsolute). (b1 ~ Distribution.Utils.Path.Dir b2, c2 ~ c3, midAbsolute ~ Distribution.Utils.Path.OnlyRelative) => Distribution.Utils.Path.PathLike (Distribution.Utils.Path.AbsolutePath b1) (Distribution.Utils.Path.SymbolicPathX midAbsolute b2 c2) (Distribution.Utils.Path.AbsolutePath c3) -- Defined in ‘Distribution.Utils.Path’
instance Distribution.Utils.Path.PathLike GHC.Internal.IO.FilePath GHC.Internal.IO.FilePath GHC.Internal.IO.FilePath -- Defined in ‘Distribution.Utils.Path’
instance forall (b1 :: Distribution.Utils.Path.FileOrDir) b2 a3 a1 (c2 :: Distribution.Utils.Path.FileOrDir) (c3 :: Distribution.Utils.Path.FileOrDir) (midAbsolute :: Distribution.Utils.Path.AllowAbsolute) (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute). (b1 ~ Distribution.Utils.Path.Dir b2, a3 ~ a1, c2 ~ c3, midAbsolute ~ Distribution.Utils.Path.OnlyRelative) => Distribution.Utils.Path.PathLike (Distribution.Utils.Path.SymbolicPathX allowAbsolute a1 b1) (Distribution.Utils.Path.SymbolicPathX midAbsolute b2 c2) (Distribution.Utils.Path.SymbolicPathX allowAbsolute a3 c3) -- Defined in ‘Distribution.Utils.Path’
instance Distribution.Utils.Structured.Structured Distribution.Backpack.OpenModule -- Defined in ‘Distribution.Backpack’
instance Distribution.Utils.Structured.Structured Distribution.Backpack.OpenUnitId -- Defined in ‘Distribution.Backpack’
instance Distribution.Utils.Structured.Structured Distribution.Types.UnitId.DefUnitId -- Defined in ‘Distribution.Types.UnitId’
instance Distribution.Utils.Structured.Structured Distribution.Types.UnitId.UnitId -- Defined in ‘Distribution.Types.UnitId’
instance Distribution.Utils.Structured.Structured Distribution.Backpack.ModuleShape.ModuleShape -- Defined in ‘Distribution.Backpack.ModuleShape’
instance [safe] Distribution.Utils.Structured.Structured Distribution.CabalSpecVersion.CabalSpecVersion -- Defined in ‘Distribution.CabalSpecVersion’
instance forall a. Distribution.Utils.Structured.Structured a => Distribution.Utils.Structured.Structured (Distribution.Compat.Graph.Graph a) -- Defined in ‘Distribution.Compat.Graph’
instance forall a. Distribution.Utils.Structured.Structured a => Distribution.Utils.Structured.Structured (Distribution.Compat.NonEmptySet.NonEmptySet a) -- Defined in ‘Distribution.Compat.NonEmptySet’
instance Distribution.Utils.Structured.Structured GHC.Types.Bool -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured Data.ByteString.Lazy.Internal.ByteString -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured GHC.Types.Char -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured time-1.12.2:Data.Time.Calendar.Days.Day -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured time-1.12.2:Data.Time.Clock.Internal.DiffTime.DiffTime -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured GHC.Types.Double -- Defined in ‘Distribution.Utils.Structured’
instance forall a b. (Distribution.Utils.Structured.Structured a, Distribution.Utils.Structured.Structured b) => Distribution.Utils.Structured.Structured (GHC.Internal.Data.Either.Either a b) -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured GHC.Types.Float -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured GHC.Types.Int -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured GHC.Internal.Int.Int16 -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured GHC.Internal.Int.Int32 -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured GHC.Internal.Int.Int64 -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured GHC.Internal.Int.Int8 -- Defined in ‘Distribution.Utils.Structured’
instance forall v. Distribution.Utils.Structured.Structured v => Distribution.Utils.Structured.Structured (Data.IntMap.Internal.IntMap v) -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured Data.IntSet.Internal.IntSet -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured GHC.Num.Integer.Integer -- Defined in ‘Distribution.Utils.Structured’
instance forall a. Distribution.Utils.Structured.Structured a => Distribution.Utils.Structured.Structured [a] -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured time-1.12.2:Data.Time.LocalTime.Internal.LocalTime.LocalTime -- Defined in ‘Distribution.Utils.Structured’
instance forall k v. (Distribution.Utils.Structured.Structured k, Distribution.Utils.Structured.Structured v) => Distribution.Utils.Structured.Structured (Data.Map.Internal.Map k v) -- Defined in ‘Distribution.Utils.Structured’
instance forall a. Distribution.Utils.Structured.Structured a => Distribution.Utils.Structured.Structured (GHC.Internal.Maybe.Maybe a) -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured time-1.12.2:Data.Time.Clock.Internal.NominalDiffTime.NominalDiffTime -- Defined in ‘Distribution.Utils.Structured’
instance forall a. Distribution.Utils.Structured.Structured a => Distribution.Utils.Structured.Structured (GHC.Internal.Base.NonEmpty a) -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured GHC.Types.Ordering -- Defined in ‘Distribution.Utils.Structured’
instance forall a. Distribution.Utils.Structured.Structured a => Distribution.Utils.Structured.Structured (GHC.Internal.Real.Ratio a) -- Defined in ‘Distribution.Utils.Structured’
instance forall a1 a2. (Distribution.Utils.Structured.Structured a1, Distribution.Utils.Structured.Structured a2) => Distribution.Utils.Structured.Structured (Distribution.Utils.Structured.STuple2 a1 a2) -- Defined in ‘Distribution.Utils.Structured’
instance forall a1 a2 a3. (Distribution.Utils.Structured.Structured a1, Distribution.Utils.Structured.Structured a2, Distribution.Utils.Structured.Structured a3) => Distribution.Utils.Structured.Structured (Distribution.Utils.Structured.STuple3 a1 a2 a3) -- Defined in ‘Distribution.Utils.Structured’
instance forall a1 a2 a3 a4. (Distribution.Utils.Structured.Structured a1, Distribution.Utils.Structured.Structured a2, Distribution.Utils.Structured.Structured a3, Distribution.Utils.Structured.Structured a4) => Distribution.Utils.Structured.Structured (Distribution.Utils.Structured.STuple4 a1 a2 a3 a4) -- Defined in ‘Distribution.Utils.Structured’
instance forall a1 a2 a3 a4 a5. (Distribution.Utils.Structured.Structured a1, Distribution.Utils.Structured.Structured a2, Distribution.Utils.Structured.Structured a3, Distribution.Utils.Structured.Structured a4, Distribution.Utils.Structured.Structured a5) => Distribution.Utils.Structured.Structured (Distribution.Utils.Structured.STuple5 a1 a2 a3 a4 a5) -- Defined in ‘Distribution.Utils.Structured’
instance forall a1 a2 a3 a4 a5 a6. (Distribution.Utils.Structured.Structured a1, Distribution.Utils.Structured.Structured a2, Distribution.Utils.Structured.Structured a3, Distribution.Utils.Structured.Structured a4, Distribution.Utils.Structured.Structured a5, Distribution.Utils.Structured.Structured a6) => Distribution.Utils.Structured.Structured (Distribution.Utils.Structured.STuple6 a1 a2 a3 a4 a5 a6) -- Defined in ‘Distribution.Utils.Structured’
instance forall a1 a2 a3 a4 a5 a6 a7. (Distribution.Utils.Structured.Structured a1, Distribution.Utils.Structured.Structured a2, Distribution.Utils.Structured.Structured a3, Distribution.Utils.Structured.Structured a4, Distribution.Utils.Structured.Structured a5, Distribution.Utils.Structured.Structured a6, Distribution.Utils.Structured.Structured a7) => Distribution.Utils.Structured.Structured (Distribution.Utils.Structured.STuple7 a1 a2 a3 a4 a5 a6 a7) -- Defined in ‘Distribution.Utils.Structured’
instance forall v. Distribution.Utils.Structured.Structured v => Distribution.Utils.Structured.Structured (Data.Sequence.Internal.Seq v) -- Defined in ‘Distribution.Utils.Structured’
instance forall k. Distribution.Utils.Structured.Structured k => Distribution.Utils.Structured.Structured (Data.Set.Internal.Set k) -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured Data.Text.Internal.Lazy.Text -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured Data.Text.Internal.Text -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured time-1.12.2:Data.Time.LocalTime.Internal.TimeOfDay.TimeOfDay -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured time-1.12.2:Data.Time.LocalTime.Internal.TimeZone.TimeZone -- Defined in ‘Distribution.Utils.Structured’
instance forall a1 a2. (Distribution.Utils.Structured.Structured a1, Distribution.Utils.Structured.Structured a2) => Distribution.Utils.Structured.Structured (a1, a2) -- Defined in ‘Distribution.Utils.Structured’
instance forall a1 a2 a3. (Distribution.Utils.Structured.Structured a1, Distribution.Utils.Structured.Structured a2, Distribution.Utils.Structured.Structured a3) => Distribution.Utils.Structured.Structured (a1, a2, a3) -- Defined in ‘Distribution.Utils.Structured’
instance forall a1 a2 a3 a4. (Distribution.Utils.Structured.Structured a1, Distribution.Utils.Structured.Structured a2, Distribution.Utils.Structured.Structured a3, Distribution.Utils.Structured.Structured a4) => Distribution.Utils.Structured.Structured (a1, a2, a3, a4) -- Defined in ‘Distribution.Utils.Structured’
instance forall a1 a2 a3 a4 a5. (Distribution.Utils.Structured.Structured a1, Distribution.Utils.Structured.Structured a2, Distribution.Utils.Structured.Structured a3, Distribution.Utils.Structured.Structured a4, Distribution.Utils.Structured.Structured a5) => Distribution.Utils.Structured.Structured (a1, a2, a3, a4, a5) -- Defined in ‘Distribution.Utils.Structured’
instance forall a1 a2 a3 a4 a5 a6. (Distribution.Utils.Structured.Structured a1, Distribution.Utils.Structured.Structured a2, Distribution.Utils.Structured.Structured a3, Distribution.Utils.Structured.Structured a4, Distribution.Utils.Structured.Structured a5, Distribution.Utils.Structured.Structured a6) => Distribution.Utils.Structured.Structured (a1, a2, a3, a4, a5, a6) -- Defined in ‘Distribution.Utils.Structured’
instance forall a1 a2 a3 a4 a5 a6 a7. (Distribution.Utils.Structured.Structured a1, Distribution.Utils.Structured.Structured a2, Distribution.Utils.Structured.Structured a3, Distribution.Utils.Structured.Structured a4, Distribution.Utils.Structured.Structured a5, Distribution.Utils.Structured.Structured a6, Distribution.Utils.Structured.Structured a7) => Distribution.Utils.Structured.Structured (a1, a2, a3, a4, a5, a6, a7) -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured time-1.12.2:Data.Time.Clock.Internal.UTCTime.UTCTime -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured () -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured time-1.12.2:Data.Time.Clock.Internal.UniversalTime.UniversalTime -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured GHC.Types.Word -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured GHC.Internal.Word.Word16 -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured GHC.Internal.Word.Word32 -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured GHC.Internal.Word.Word64 -- Defined in ‘Distribution.Utils.Structured’
instance Distribution.Utils.Structured.Structured GHC.Internal.Word.Word8 -- Defined in ‘Distribution.Utils.Structured’
instance forall a. Distribution.Utils.Structured.Structured a => Distribution.Utils.Structured.Structured (Distribution.Compat.Semigroup.Last' a) -- Defined in ‘Distribution.Compat.Semigroup’
instance forall a. Distribution.Utils.Structured.Structured a => Distribution.Utils.Structured.Structured (Distribution.Compat.Semigroup.Option' a) -- Defined in ‘Distribution.Compat.Semigroup’
instance Distribution.Utils.Structured.Structured Distribution.Compat.Time.ModTime -- Defined in ‘Distribution.Compat.Time’
instance Distribution.Utils.Structured.Structured Distribution.Compiler.AbiTag -- Defined in ‘Distribution.Compiler’
instance Distribution.Utils.Structured.Structured Distribution.Compiler.CompilerFlavor -- Defined in ‘Distribution.Compiler’
instance Distribution.Utils.Structured.Structured Distribution.Compiler.CompilerId -- Defined in ‘Distribution.Compiler’
instance forall a. Distribution.Utils.Structured.Structured a => Distribution.Utils.Structured.Structured (Distribution.Compiler.PerCompilerFlavor a) -- Defined in ‘Distribution.Compiler’
instance Distribution.Utils.Structured.Structured Distribution.Types.AbiDependency.AbiDependency -- Defined in ‘Distribution.Types.AbiDependency’
instance Distribution.Utils.Structured.Structured Distribution.Types.ExposedModule.ExposedModule -- Defined in ‘Distribution.Types.ExposedModule’
instance Distribution.Utils.Structured.Structured Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -- Defined in ‘Distribution.Types.InstalledPackageInfo’
instance Distribution.Utils.Structured.Structured Distribution.License.License -- Defined in ‘Distribution.License’
instance Distribution.Utils.Structured.Structured Distribution.Types.AbiHash.AbiHash -- Defined in ‘Distribution.Types.AbiHash’
instance Distribution.Utils.Structured.Structured Distribution.Types.ComponentId.ComponentId -- Defined in ‘Distribution.Types.ComponentId’
instance Distribution.Utils.Structured.Structured Distribution.Types.Dependency.Dependency -- Defined in ‘Distribution.Types.Dependency’
instance Distribution.Utils.Structured.Structured Distribution.Types.Module.Module -- Defined in ‘Distribution.Types.Module’
instance Distribution.Utils.Structured.Structured Distribution.Types.PackageId.PackageIdentifier -- Defined in ‘Distribution.Types.PackageId’
instance Distribution.Utils.Structured.Structured Distribution.Types.PackageName.PackageName -- Defined in ‘Distribution.Types.PackageName’
instance Distribution.Utils.Structured.Structured Distribution.Types.PkgconfigName.PkgconfigName -- Defined in ‘Distribution.Types.PkgconfigName’
instance Distribution.Utils.Structured.Structured Distribution.Types.Version.Version -- Defined in ‘Distribution.Types.Version’
instance Distribution.Utils.Structured.Structured Distribution.ModuleName.ModuleName -- Defined in ‘Distribution.ModuleName’
instance Distribution.Utils.Structured.Structured Distribution.Types.ConfVar.ConfVar -- Defined in ‘Distribution.Types.ConfVar’
instance Distribution.Utils.Structured.Structured Distribution.Types.SourceRepo.KnownRepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance Distribution.Utils.Structured.Structured Distribution.Types.SourceRepo.RepoKind -- Defined in ‘Distribution.Types.SourceRepo’
instance Distribution.Utils.Structured.Structured Distribution.Types.SourceRepo.RepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance Distribution.Utils.Structured.Structured Distribution.Types.SourceRepo.SourceRepo -- Defined in ‘Distribution.Types.SourceRepo’
instance Distribution.Utils.Structured.Structured Distribution.Types.Benchmark.Benchmark -- Defined in ‘Distribution.Types.Benchmark’
instance Distribution.Utils.Structured.Structured Distribution.Types.BenchmarkInterface.BenchmarkInterface -- Defined in ‘Distribution.Types.BenchmarkInterface’
instance Distribution.Utils.Structured.Structured Distribution.Types.BenchmarkType.BenchmarkType -- Defined in ‘Distribution.Types.BenchmarkType’
instance Distribution.Utils.Structured.Structured Distribution.Types.BuildInfo.BuildInfo -- Defined in ‘Distribution.Types.BuildInfo’
instance Distribution.Utils.Structured.Structured Distribution.Types.BuildType.BuildType -- Defined in ‘Distribution.Types.BuildType’
instance [safe] forall c. Distribution.Utils.Structured.Structured c => Distribution.Utils.Structured.Structured (Distribution.Types.Condition.Condition c) -- Defined in ‘Distribution.Types.Condition’
instance Distribution.Utils.Structured.Structured Distribution.Types.ComponentName.ComponentName -- Defined in ‘Distribution.Types.ComponentName’
instance Distribution.Utils.Structured.Structured Distribution.Types.ComponentName.NotLibComponentName -- Defined in ‘Distribution.Types.ComponentName’
instance [safe] forall v c a. (Distribution.Utils.Structured.Structured v, Distribution.Utils.Structured.Structured c, Distribution.Utils.Structured.Structured a) => Distribution.Utils.Structured.Structured (Distribution.Types.CondTree.CondBranch v c a) -- Defined in ‘Distribution.Types.CondTree’
instance [safe] forall v c a. (Distribution.Utils.Structured.Structured v, Distribution.Utils.Structured.Structured c, Distribution.Utils.Structured.Structured a) => Distribution.Utils.Structured.Structured (Distribution.Types.CondTree.CondTree v c a) -- Defined in ‘Distribution.Types.CondTree’
instance Distribution.Utils.Structured.Structured Distribution.Types.ModuleRenaming.ModuleRenaming -- Defined in ‘Distribution.Types.ModuleRenaming’
instance Distribution.Utils.Structured.Structured Distribution.Types.ExeDependency.ExeDependency -- Defined in ‘Distribution.Types.ExeDependency’
instance Distribution.Utils.Structured.Structured Distribution.Types.Executable.Executable -- Defined in ‘Distribution.Types.Executable’
instance Distribution.Utils.Structured.Structured Distribution.Types.ExecutableScope.ExecutableScope -- Defined in ‘Distribution.Types.ExecutableScope’
instance Distribution.Utils.Structured.Structured Distribution.Types.Flag.FlagAssignment -- Defined in ‘Distribution.Types.Flag’
instance Distribution.Utils.Structured.Structured Distribution.Types.Flag.FlagName -- Defined in ‘Distribution.Types.Flag’
instance Distribution.Utils.Structured.Structured Distribution.Types.Flag.PackageFlag -- Defined in ‘Distribution.Types.Flag’
instance Distribution.Utils.Structured.Structured Distribution.Types.ForeignLib.ForeignLib -- Defined in ‘Distribution.Types.ForeignLib’
instance Distribution.Utils.Structured.Structured Distribution.Types.ForeignLib.LibVersionInfo -- Defined in ‘Distribution.Types.ForeignLib’
instance Distribution.Utils.Structured.Structured Distribution.Types.ForeignLibType.ForeignLibType -- Defined in ‘Distribution.Types.ForeignLibType’
instance Distribution.Utils.Structured.Structured Distribution.Types.ForeignLibOption.ForeignLibOption -- Defined in ‘Distribution.Types.ForeignLibOption’
instance Distribution.Utils.Structured.Structured Distribution.Types.GenericPackageDescription.GenericPackageDescription -- Defined in ‘Distribution.Types.GenericPackageDescription’
instance Distribution.Utils.Structured.Structured Distribution.Types.IncludeRenaming.IncludeRenaming -- Defined in ‘Distribution.Types.IncludeRenaming’
instance Distribution.Utils.Structured.Structured Distribution.Types.LibraryName.LibraryName -- Defined in ‘Distribution.Types.LibraryName’
instance Distribution.Utils.Structured.Structured Distribution.Types.LegacyExeDependency.LegacyExeDependency -- Defined in ‘Distribution.Types.LegacyExeDependency’
instance Distribution.Utils.Structured.Structured Distribution.Types.Library.Library -- Defined in ‘Distribution.Types.Library’
instance Distribution.Utils.Structured.Structured Distribution.Types.LibraryVisibility.LibraryVisibility -- Defined in ‘Distribution.Types.LibraryVisibility’
instance Distribution.Utils.Structured.Structured Distribution.Types.Mixin.Mixin -- Defined in ‘Distribution.Types.Mixin’
instance Distribution.Utils.Structured.Structured Distribution.Types.ModuleReexport.ModuleReexport -- Defined in ‘Distribution.Types.ModuleReexport’
instance Distribution.Utils.Structured.Structured Distribution.Types.PackageDescription.PackageDescription -- Defined in ‘Distribution.Types.PackageDescription’
instance Distribution.Utils.Structured.Structured Distribution.Types.PkgconfigVersionRange.PkgconfigVersionRange -- Defined in ‘Distribution.Types.PkgconfigVersionRange’
instance Distribution.Utils.Structured.Structured Distribution.Types.PkgconfigDependency.PkgconfigDependency -- Defined in ‘Distribution.Types.PkgconfigDependency’
instance Distribution.Utils.Structured.Structured Distribution.Types.PkgconfigVersion.PkgconfigVersion -- Defined in ‘Distribution.Types.PkgconfigVersion’
instance Distribution.Utils.Structured.Structured Distribution.Types.SetupBuildInfo.SetupBuildInfo -- Defined in ‘Distribution.Types.SetupBuildInfo’
instance Distribution.Utils.Structured.Structured Distribution.Types.TestSuite.TestSuite -- Defined in ‘Distribution.Types.TestSuite’
instance Distribution.Utils.Structured.Structured Distribution.Types.TestSuiteInterface.TestSuiteInterface -- Defined in ‘Distribution.Types.TestSuiteInterface’
instance Distribution.Utils.Structured.Structured Distribution.Types.TestType.TestType -- Defined in ‘Distribution.Types.TestType’
instance Distribution.Utils.Structured.Structured Distribution.Types.UnqualComponentName.UnqualComponentName -- Defined in ‘Distribution.Types.UnqualComponentName’
instance Distribution.Utils.Structured.Structured Distribution.SPDX.LicenseId.LicenseId -- Defined in ‘Distribution.SPDX.LicenseId’
instance Distribution.Utils.Structured.Structured Distribution.SPDX.LicenseExceptionId.LicenseExceptionId -- Defined in ‘Distribution.SPDX.LicenseExceptionId’
instance Distribution.Utils.Structured.Structured Distribution.SPDX.LicenseExpression.LicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance Distribution.Utils.Structured.Structured Distribution.SPDX.LicenseExpression.SimpleLicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance Distribution.Utils.Structured.Structured Distribution.SPDX.License.License -- Defined in ‘Distribution.SPDX.License’
instance Distribution.Utils.Structured.Structured Distribution.SPDX.LicenseReference.LicenseRef -- Defined in ‘Distribution.SPDX.LicenseReference’
instance Distribution.Utils.Structured.Structured Language.Haskell.Extension.Extension -- Defined in ‘Language.Haskell.Extension’
instance Distribution.Utils.Structured.Structured Language.Haskell.Extension.KnownExtension -- Defined in ‘Language.Haskell.Extension’
instance Distribution.Utils.Structured.Structured Language.Haskell.Extension.Language -- Defined in ‘Language.Haskell.Extension’
instance Distribution.Utils.Structured.Structured Distribution.Simple.Compiler.Compiler -- Defined in ‘Distribution.Simple.Compiler’
instance Distribution.Utils.Structured.Structured Distribution.Simple.Compiler.DebugInfoLevel -- Defined in ‘Distribution.Simple.Compiler’
instance Distribution.Utils.Structured.Structured Distribution.Simple.Compiler.OptimisationLevel -- Defined in ‘Distribution.Simple.Compiler’
instance forall fp. Distribution.Utils.Structured.Structured fp => Distribution.Utils.Structured.Structured (Distribution.Simple.Compiler.PackageDBX fp) -- Defined in ‘Distribution.Simple.Compiler’
instance Distribution.Utils.Structured.Structured Distribution.Simple.Compiler.ProfDetailLevel -- Defined in ‘Distribution.Simple.Compiler’
instance Distribution.Utils.Structured.Structured Distribution.Types.VersionRange.Internal.VersionRange -- Defined in ‘Distribution.Types.VersionRange.Internal’
instance Distribution.Utils.Structured.Structured Distribution.Simple.Setup.BuildingWhat -- Defined in ‘Distribution.Simple.Setup’
instance Distribution.Utils.Structured.Structured Distribution.Types.LocalBuildInfo.LocalBuildInfo -- Defined in ‘Distribution.Types.LocalBuildInfo’
instance Distribution.Utils.Structured.Structured Distribution.Types.TargetInfo.TargetInfo -- Defined in ‘Distribution.Types.TargetInfo’
instance Distribution.Utils.Structured.Structured Cabal-3.15.0.0:Distribution.Simple.Setup.Common.CommonSetupFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Common’
instance Distribution.Utils.Structured.Structured Distribution.Simple.FileMonitor.Types.FilePathRoot -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance Distribution.Utils.Structured.Structured Distribution.Simple.FileMonitor.Types.MonitorFilePath -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance Distribution.Utils.Structured.Structured Distribution.Simple.FileMonitor.Types.MonitorKindDir -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance Distribution.Utils.Structured.Structured Distribution.Simple.FileMonitor.Types.MonitorKindFile -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance Distribution.Utils.Structured.Structured Distribution.Simple.FileMonitor.Types.RootedGlob -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance Distribution.Utils.Structured.Structured Distribution.Simple.Glob.Internal.Glob -- Defined in ‘Distribution.Simple.Glob.Internal’
instance Distribution.Utils.Structured.Structured Distribution.Simple.Glob.Internal.GlobPiece -- Defined in ‘Distribution.Simple.Glob.Internal’
instance [safe] forall a. Distribution.Utils.Structured.Structured a => Distribution.Utils.Structured.Structured (Distribution.Simple.Flag.Flag a) -- Defined in ‘Distribution.Simple.Flag’
instance Distribution.Utils.Structured.Structured Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock’
instance Distribution.Utils.Structured.Structured Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockTarget -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock’
instance Distribution.Utils.Structured.Structured Distribution.Simple.InstallDirs.CopyDest -- Defined in ‘Distribution.Simple.InstallDirs’
instance forall dir. Distribution.Utils.Structured.Structured dir => Distribution.Utils.Structured.Structured (Distribution.Simple.InstallDirs.InstallDirs dir) -- Defined in ‘Distribution.Simple.InstallDirs’
instance Distribution.Utils.Structured.Structured Distribution.Simple.InstallDirs.PathTemplate -- Defined in ‘Distribution.Simple.InstallDirs’
instance [safe] Distribution.Utils.Structured.Structured Distribution.Simple.InstallDirs.Internal.PathComponent -- Defined in ‘Distribution.Simple.InstallDirs.Internal’
instance [safe] Distribution.Utils.Structured.Structured Distribution.Simple.InstallDirs.Internal.PathTemplateVariable -- Defined in ‘Distribution.Simple.InstallDirs.Internal’
instance Distribution.Utils.Structured.Structured Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -- Defined in ‘Distribution.Types.ComponentLocalBuildInfo’
instance Distribution.Utils.Structured.Structured Distribution.Types.Component.Component -- Defined in ‘Distribution.Types.Component’
instance forall a. Distribution.Utils.Structured.Structured a => Distribution.Utils.Structured.Structured (Distribution.Simple.PackageIndex.PackageIndex a) -- Defined in ‘Distribution.Simple.PackageIndex’
instance Distribution.Utils.Structured.Structured Distribution.Simple.PreProcess.Types.Suffix -- Defined in ‘Distribution.Simple.PreProcess.Types’
instance Distribution.Utils.Structured.Structured Distribution.Simple.Program.Types.ConfiguredProgram -- Defined in ‘Distribution.Simple.Program.Types’
instance Distribution.Utils.Structured.Structured Distribution.Simple.Program.Types.ProgramLocation -- Defined in ‘Distribution.Simple.Program.Types’
instance Distribution.Utils.Structured.Structured Distribution.Simple.Program.Types.ProgramSearchPathEntry -- Defined in ‘Distribution.Simple.Program.Types’
instance Distribution.Utils.Structured.Structured Distribution.Simple.Program.Db.ProgramDb -- Defined in ‘Distribution.Simple.Program.Db’
instance Distribution.Utils.Structured.Structured Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Test’
instance Distribution.Utils.Structured.Structured Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestShowDetails -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Test’
instance Distribution.Utils.Structured.Structured Cabal-3.15.0.0:Distribution.Simple.Setup.Benchmark.BenchmarkFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Benchmark’
instance Distribution.Utils.Structured.Structured Cabal-3.15.0.0:Distribution.Simple.Setup.Build.BuildFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Build’
instance Distribution.Utils.Structured.Structured Cabal-3.15.0.0:Distribution.Simple.Setup.Clean.CleanFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Clean’
instance Distribution.Utils.Structured.Structured Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Config’
instance Distribution.Utils.Structured.Structured Cabal-3.15.0.0:Distribution.Simple.Setup.Copy.CopyFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Copy’
instance [safe] Distribution.Utils.Structured.Structured Distribution.Types.DumpBuildInfo.DumpBuildInfo -- Defined in ‘Distribution.Types.DumpBuildInfo’
instance Distribution.Utils.Structured.Structured Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour.HscolourFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour’
instance Distribution.Utils.Structured.Structured Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Repl’
instance Distribution.Utils.Structured.Structured Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplOptions -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Repl’
instance Distribution.Utils.Structured.Structured Distribution.Simple.SetupHooks.Internal.ComponentDiff -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance Distribution.Utils.Structured.Structured Distribution.Simple.SetupHooks.Internal.InstallComponentInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance Distribution.Utils.Structured.Structured Distribution.Simple.SetupHooks.Internal.PostBuildComponentInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance Distribution.Utils.Structured.Structured Distribution.Simple.SetupHooks.Internal.PostConfPackageInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance Distribution.Utils.Structured.Structured Distribution.Simple.SetupHooks.Internal.PreBuildComponentInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance Distribution.Utils.Structured.Structured Distribution.Simple.SetupHooks.Internal.PreConfComponentInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance Distribution.Utils.Structured.Structured Distribution.Simple.SetupHooks.Internal.PreConfComponentOutputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance Distribution.Utils.Structured.Structured Distribution.Simple.SetupHooks.Internal.PreConfPackageInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance Distribution.Utils.Structured.Structured Distribution.Simple.SetupHooks.Internal.PreConfPackageOutputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance Distribution.Utils.Structured.Structured Distribution.Simple.SetupHooks.Rule.Dependency -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance Distribution.Utils.Structured.Structured Distribution.Simple.SetupHooks.Rule.Location -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance Distribution.Utils.Structured.Structured Distribution.Simple.SetupHooks.Rule.RuleId -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance Distribution.Utils.Structured.Structured Distribution.Simple.SetupHooks.Rule.RuleOutput -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance Distribution.Utils.Structured.Structured Distribution.Simple.SetupHooks.Rule.RulesNameSpace -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance Distribution.Utils.Structured.Structured Distribution.System.Arch -- Defined in ‘Distribution.System’
instance Distribution.Utils.Structured.Structured Distribution.System.OS -- Defined in ‘Distribution.System’
instance Distribution.Utils.Structured.Structured Distribution.System.Platform -- Defined in ‘Distribution.System’
instance Distribution.Utils.Structured.Structured Distribution.Types.ComponentRequestedSpec.ComponentRequestedSpec -- Defined in ‘Distribution.Types.ComponentRequestedSpec’
instance Distribution.Utils.Structured.Structured Distribution.Types.GivenComponent.GivenComponent -- Defined in ‘Distribution.Types.GivenComponent’
instance Distribution.Utils.Structured.Structured Distribution.Types.GivenComponent.PromisedComponent -- Defined in ‘Distribution.Types.GivenComponent’
instance Distribution.Utils.Structured.Structured Distribution.Types.LocalBuildConfig.BuildOptions -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance Distribution.Utils.Structured.Structured Distribution.Types.LocalBuildConfig.ComponentBuildDescr -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance Distribution.Utils.Structured.Structured Distribution.Types.LocalBuildConfig.LocalBuildConfig -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance Distribution.Utils.Structured.Structured Distribution.Types.LocalBuildConfig.LocalBuildDescr -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance Distribution.Utils.Structured.Structured Distribution.Types.LocalBuildConfig.PackageBuildDescr -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance Distribution.Utils.Structured.Structured Distribution.Types.MungedPackageId.MungedPackageId -- Defined in ‘Distribution.Types.MungedPackageId’
instance Distribution.Utils.Structured.Structured Distribution.Types.MungedPackageName.MungedPackageName -- Defined in ‘Distribution.Types.MungedPackageName’
instance Distribution.Utils.Structured.Structured Distribution.Types.PackageVersionConstraint.PackageVersionConstraint -- Defined in ‘Distribution.Types.PackageVersionConstraint’
instance forall a. Distribution.Utils.Structured.Structured a => Distribution.Utils.Structured.Structured (Distribution.Utils.NubList.NubList a) -- Defined in ‘Distribution.Utils.NubList’
instance forall (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute) from (to :: Distribution.Utils.Path.FileOrDir). (ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable allowAbsolute, ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable from, ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable to) => Distribution.Utils.Structured.Structured (Distribution.Utils.Path.SymbolicPathX allowAbsolute from to) -- Defined in ‘Distribution.Utils.Path’
instance Distribution.Utils.Structured.Structured Distribution.Utils.ShortText.ShortText -- Defined in ‘Distribution.Utils.ShortText’
instance Distribution.Utils.Structured.Structured Distribution.Verbosity.Verbosity -- Defined in ‘Distribution.Verbosity’
instance [safe] Distribution.Utils.Structured.Structured Distribution.Verbosity.Internal.VerbosityFlag -- Defined in ‘Distribution.Verbosity.Internal’
instance [safe] Distribution.Utils.Structured.Structured Distribution.Verbosity.Internal.VerbosityLevel -- Defined in ‘Distribution.Verbosity.Internal’
instance forall (m :: * -> *). Control.Monad.IO.Class.MonadIO m => Control.Monad.IO.Class.MonadIO (Distribution.Simple.SetupHooks.Rule.RulesT m) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance Data.Bifoldable.Bifoldable Data.Map.Internal.Map -- Defined in ‘Data.Map.Internal’
instance [safe] Data.Foldable1.Foldable1 Data.Graph.SCC -- Defined in ‘Data.Graph’
instance Data.Foldable1.Foldable1 Distribution.Fields.Field.Field -- Defined in ‘Distribution.Fields.Field’
instance Data.Foldable1.Foldable1 Distribution.Fields.Field.FieldLine -- Defined in ‘Distribution.Fields.Field’
instance Data.Foldable1.Foldable1 Distribution.Fields.Field.Name -- Defined in ‘Distribution.Fields.Field’
instance Data.Foldable1.Foldable1 Distribution.Fields.Field.SectionArg -- Defined in ‘Distribution.Fields.Field’
instance [safe] Data.Functor.Classes.Eq1 Data.Graph.SCC -- Defined in ‘Data.Graph’
instance forall k. GHC.Classes.Eq k => Data.Functor.Classes.Eq1 (Data.Map.Internal.Map k) -- Defined in ‘Data.Map.Internal’
instance Data.Functor.Classes.Eq1 Data.Set.Internal.Set -- Defined in ‘Data.Set.Internal’
instance Data.Functor.Classes.Eq2 Data.Map.Internal.Map -- Defined in ‘Data.Map.Internal’
instance forall k. GHC.Classes.Ord k => Data.Functor.Classes.Ord1 (Data.Map.Internal.Map k) -- Defined in ‘Data.Map.Internal’
instance Data.Functor.Classes.Ord1 Data.Set.Internal.Set -- Defined in ‘Data.Set.Internal’
instance Data.Functor.Classes.Ord2 Data.Map.Internal.Map -- Defined in ‘Data.Map.Internal’
instance [safe] Data.Functor.Classes.Read1 Data.Graph.SCC -- Defined in ‘Data.Graph’
instance forall k. (GHC.Classes.Ord k, GHC.Internal.Read.Read k) => Data.Functor.Classes.Read1 (Data.Map.Internal.Map k) -- Defined in ‘Data.Map.Internal’
instance [safe] Data.Functor.Classes.Show1 Data.Graph.SCC -- Defined in ‘Data.Graph’
instance forall k. GHC.Internal.Show.Show k => Data.Functor.Classes.Show1 (Data.Map.Internal.Map k) -- Defined in ‘Data.Map.Internal’
instance Data.Functor.Classes.Show1 Data.Set.Internal.Set -- Defined in ‘Data.Set.Internal’
instance Data.Functor.Classes.Show2 Data.Map.Internal.Map -- Defined in ‘Data.Map.Internal’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Backpack.OpenModule -- Defined in ‘Distribution.Backpack’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Backpack.OpenUnitId -- Defined in ‘Distribution.Backpack’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.UnitId.DefUnitId -- Defined in ‘Distribution.Types.UnitId’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.UnitId.UnitId -- Defined in ‘Distribution.Types.UnitId’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Backpack.ModuleShape.ModuleShape -- Defined in ‘Distribution.Backpack.ModuleShape’
instance [safe] binary-0.8.9.2:Data.Binary.Class.Binary Distribution.CabalSpecVersion.CabalSpecVersion -- Defined in ‘Distribution.CabalSpecVersion’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Internal.Data.Semigroup.Internal.All -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall k (f :: k -> *) (a :: k). binary-0.8.9.2:Data.Binary.Class.Binary (f a) => binary-0.8.9.2:Data.Binary.Class.Binary (GHC.Internal.Data.Semigroup.Internal.Alt f a) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Internal.Data.Semigroup.Internal.Any -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a b. (binary-0.8.9.2:Data.Binary.Class.Binary a, binary-0.8.9.2:Data.Binary.Class.Binary b) => binary-0.8.9.2:Data.Binary.Class.Binary (Data.Semigroup.Arg a b) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall i e. (binary-0.8.9.2:Data.Binary.Class.Binary i, GHC.Internal.Ix.Ix i, binary-0.8.9.2:Data.Binary.Class.Binary e) => binary-0.8.9.2:Data.Binary.Class.Binary (GHC.Internal.Arr.Array i e) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Types.Bool -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary Data.ByteString.Lazy.Internal.ByteString -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary bytestring-0.12.1.0:Data.ByteString.Internal.Type.ByteString -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Types.Char -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a. binary-0.8.9.2:Data.Binary.Class.Binary a => binary-0.8.9.2:Data.Binary.Class.Binary (Data.Complex.Complex a) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Types.Double -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a. binary-0.8.9.2:Data.Binary.Class.Binary a => binary-0.8.9.2:Data.Binary.Class.Binary (GHC.Internal.Data.Semigroup.Internal.Dual a) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a b. (binary-0.8.9.2:Data.Binary.Class.Binary a, binary-0.8.9.2:Data.Binary.Class.Binary b) => binary-0.8.9.2:Data.Binary.Class.Binary (GHC.Internal.Data.Either.Either a b) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Internal.Fingerprint.Type.Fingerprint -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a. binary-0.8.9.2:Data.Binary.Class.Binary a => binary-0.8.9.2:Data.Binary.Class.Binary (Data.Semigroup.First a) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a. binary-0.8.9.2:Data.Binary.Class.Binary a => binary-0.8.9.2:Data.Binary.Class.Binary (GHC.Internal.Data.Monoid.First a) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall k (a :: k). binary-0.8.9.2:Data.Binary.Class.Binary (Data.Fixed.Fixed a) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Types.Float -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a. binary-0.8.9.2:Data.Binary.Class.Binary a => binary-0.8.9.2:Data.Binary.Class.Binary (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Types.Int -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Internal.Int.Int16 -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Internal.Int.Int32 -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Internal.Int.Int64 -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Internal.Int.Int8 -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall e. binary-0.8.9.2:Data.Binary.Class.Binary e => binary-0.8.9.2:Data.Binary.Class.Binary (Data.IntMap.Internal.IntMap e) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary Data.IntSet.Internal.IntSet -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Num.Integer.Integer -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Types.KindRep -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a. binary-0.8.9.2:Data.Binary.Class.Binary a => binary-0.8.9.2:Data.Binary.Class.Binary (Data.Semigroup.Last a) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a. binary-0.8.9.2:Data.Binary.Class.Binary a => binary-0.8.9.2:Data.Binary.Class.Binary (GHC.Internal.Data.Monoid.Last a) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a. binary-0.8.9.2:Data.Binary.Class.Binary a => binary-0.8.9.2:Data.Binary.Class.Binary [a] -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall k e. (binary-0.8.9.2:Data.Binary.Class.Binary k, binary-0.8.9.2:Data.Binary.Class.Binary e) => binary-0.8.9.2:Data.Binary.Class.Binary (Data.Map.Internal.Map k e) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a. binary-0.8.9.2:Data.Binary.Class.Binary a => binary-0.8.9.2:Data.Binary.Class.Binary (Data.Semigroup.Max a) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a. binary-0.8.9.2:Data.Binary.Class.Binary a => binary-0.8.9.2:Data.Binary.Class.Binary (GHC.Internal.Maybe.Maybe a) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a. binary-0.8.9.2:Data.Binary.Class.Binary a => binary-0.8.9.2:Data.Binary.Class.Binary (Data.Semigroup.Min a) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Num.Natural.Natural -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a. binary-0.8.9.2:Data.Binary.Class.Binary a => binary-0.8.9.2:Data.Binary.Class.Binary (GHC.Internal.Base.NonEmpty a) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Types.Ordering -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a. binary-0.8.9.2:Data.Binary.Class.Binary a => binary-0.8.9.2:Data.Binary.Class.Binary (GHC.Internal.Data.Semigroup.Internal.Product a) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a. (binary-0.8.9.2:Data.Binary.Class.Binary a, GHC.Internal.Real.Integral a) => binary-0.8.9.2:Data.Binary.Class.Binary (GHC.Internal.Real.Ratio a) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Types.RuntimeRep -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall e. binary-0.8.9.2:Data.Binary.Class.Binary e => binary-0.8.9.2:Data.Binary.Class.Binary (Data.Sequence.Internal.Seq e) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a. binary-0.8.9.2:Data.Binary.Class.Binary a => binary-0.8.9.2:Data.Binary.Class.Binary (Data.Set.Internal.Set a) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary Data.ByteString.Short.Internal.ShortByteString -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.SomeTypeRep -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a. binary-0.8.9.2:Data.Binary.Class.Binary a => binary-0.8.9.2:Data.Binary.Class.Binary (GHC.Internal.Data.Semigroup.Internal.Sum a) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall e. binary-0.8.9.2:Data.Binary.Class.Binary e => binary-0.8.9.2:Data.Binary.Class.Binary (Data.Tree.Tree e) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a b c d e f g h i j. (binary-0.8.9.2:Data.Binary.Class.Binary a, binary-0.8.9.2:Data.Binary.Class.Binary b, binary-0.8.9.2:Data.Binary.Class.Binary c, binary-0.8.9.2:Data.Binary.Class.Binary d, binary-0.8.9.2:Data.Binary.Class.Binary e, binary-0.8.9.2:Data.Binary.Class.Binary f, binary-0.8.9.2:Data.Binary.Class.Binary g, binary-0.8.9.2:Data.Binary.Class.Binary h, binary-0.8.9.2:Data.Binary.Class.Binary i, binary-0.8.9.2:Data.Binary.Class.Binary j) => binary-0.8.9.2:Data.Binary.Class.Binary (a, b, c, d, e, f, g, h, i, j) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a b. (binary-0.8.9.2:Data.Binary.Class.Binary a, binary-0.8.9.2:Data.Binary.Class.Binary b) => binary-0.8.9.2:Data.Binary.Class.Binary (a, b) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a b c. (binary-0.8.9.2:Data.Binary.Class.Binary a, binary-0.8.9.2:Data.Binary.Class.Binary b, binary-0.8.9.2:Data.Binary.Class.Binary c) => binary-0.8.9.2:Data.Binary.Class.Binary (a, b, c) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a b c d. (binary-0.8.9.2:Data.Binary.Class.Binary a, binary-0.8.9.2:Data.Binary.Class.Binary b, binary-0.8.9.2:Data.Binary.Class.Binary c, binary-0.8.9.2:Data.Binary.Class.Binary d) => binary-0.8.9.2:Data.Binary.Class.Binary (a, b, c, d) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a b c d e. (binary-0.8.9.2:Data.Binary.Class.Binary a, binary-0.8.9.2:Data.Binary.Class.Binary b, binary-0.8.9.2:Data.Binary.Class.Binary c, binary-0.8.9.2:Data.Binary.Class.Binary d, binary-0.8.9.2:Data.Binary.Class.Binary e) => binary-0.8.9.2:Data.Binary.Class.Binary (a, b, c, d, e) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a b c d e f. (binary-0.8.9.2:Data.Binary.Class.Binary a, binary-0.8.9.2:Data.Binary.Class.Binary b, binary-0.8.9.2:Data.Binary.Class.Binary c, binary-0.8.9.2:Data.Binary.Class.Binary d, binary-0.8.9.2:Data.Binary.Class.Binary e, binary-0.8.9.2:Data.Binary.Class.Binary f) => binary-0.8.9.2:Data.Binary.Class.Binary (a, b, c, d, e, f) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a b c d e f g. (binary-0.8.9.2:Data.Binary.Class.Binary a, binary-0.8.9.2:Data.Binary.Class.Binary b, binary-0.8.9.2:Data.Binary.Class.Binary c, binary-0.8.9.2:Data.Binary.Class.Binary d, binary-0.8.9.2:Data.Binary.Class.Binary e, binary-0.8.9.2:Data.Binary.Class.Binary f, binary-0.8.9.2:Data.Binary.Class.Binary g) => binary-0.8.9.2:Data.Binary.Class.Binary (a, b, c, d, e, f, g) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a b c d e f g h. (binary-0.8.9.2:Data.Binary.Class.Binary a, binary-0.8.9.2:Data.Binary.Class.Binary b, binary-0.8.9.2:Data.Binary.Class.Binary c, binary-0.8.9.2:Data.Binary.Class.Binary d, binary-0.8.9.2:Data.Binary.Class.Binary e, binary-0.8.9.2:Data.Binary.Class.Binary f, binary-0.8.9.2:Data.Binary.Class.Binary g, binary-0.8.9.2:Data.Binary.Class.Binary h) => binary-0.8.9.2:Data.Binary.Class.Binary (a, b, c, d, e, f, g, h) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a b c d e f g h i. (binary-0.8.9.2:Data.Binary.Class.Binary a, binary-0.8.9.2:Data.Binary.Class.Binary b, binary-0.8.9.2:Data.Binary.Class.Binary c, binary-0.8.9.2:Data.Binary.Class.Binary d, binary-0.8.9.2:Data.Binary.Class.Binary e, binary-0.8.9.2:Data.Binary.Class.Binary f, binary-0.8.9.2:Data.Binary.Class.Binary g, binary-0.8.9.2:Data.Binary.Class.Binary h, binary-0.8.9.2:Data.Binary.Class.Binary i) => binary-0.8.9.2:Data.Binary.Class.Binary (a, b, c, d, e, f, g, h, i) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Types.TyCon -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Types.TypeLitSort -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall k (a :: k). ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable a => binary-0.8.9.2:Data.Binary.Class.Binary (ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.TypeRep a) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall i e. (binary-0.8.9.2:Data.Binary.Class.Binary i, GHC.Internal.Ix.Ix i, binary-0.8.9.2:Data.Binary.Class.Binary e, Data.Array.Base.IArray Data.Array.Base.UArray e) => binary-0.8.9.2:Data.Binary.Class.Binary (Data.Array.Base.UArray i e) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary () -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Types.VecCount -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Types.VecElem -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Internal.Data.Version.Version -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Internal.Base.Void -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Types.Word -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Internal.Word.Word16 -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Internal.Word.Word32 -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Internal.Word.Word64 -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance binary-0.8.9.2:Data.Binary.Class.Binary GHC.Internal.Word.Word8 -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall m. binary-0.8.9.2:Data.Binary.Class.Binary m => binary-0.8.9.2:Data.Binary.Class.Binary (Data.Semigroup.WrappedMonoid m) -- Defined in ‘binary-0.8.9.2:Data.Binary.Class’
instance forall a. (Distribution.Compat.Graph.IsNode a, binary-0.8.9.2:Data.Binary.Class.Binary a, GHC.Internal.Show.Show (Distribution.Compat.Graph.Key a)) => binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Compat.Graph.Graph a) -- Defined in ‘Distribution.Compat.Graph’
instance forall a. binary-0.8.9.2:Data.Binary.Class.Binary a => binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Compat.NonEmptySet.NonEmptySet a) -- Defined in ‘Distribution.Compat.NonEmptySet’
instance forall a. binary-0.8.9.2:Data.Binary.Class.Binary a => binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Compat.Semigroup.Last' a) -- Defined in ‘Distribution.Compat.Semigroup’
instance forall a. binary-0.8.9.2:Data.Binary.Class.Binary a => binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Compat.Semigroup.Option' a) -- Defined in ‘Distribution.Compat.Semigroup’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Compat.Time.ModTime -- Defined in ‘Distribution.Compat.Time’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Compiler.AbiTag -- Defined in ‘Distribution.Compiler’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Compiler.CompilerFlavor -- Defined in ‘Distribution.Compiler’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Compiler.CompilerId -- Defined in ‘Distribution.Compiler’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Compiler.CompilerInfo -- Defined in ‘Distribution.Compiler’
instance forall a. binary-0.8.9.2:Data.Binary.Class.Binary a => binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Compiler.PerCompilerFlavor a) -- Defined in ‘Distribution.Compiler’
instance [safe] binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Parsec.Error.PError -- Defined in ‘Distribution.Parsec.Error’
instance [safe] binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Parsec.Warning.PWarnType -- Defined in ‘Distribution.Parsec.Warning’
instance [safe] binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Parsec.Warning.PWarning -- Defined in ‘Distribution.Parsec.Warning’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.AbiDependency.AbiDependency -- Defined in ‘Distribution.Types.AbiDependency’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.ExposedModule.ExposedModule -- Defined in ‘Distribution.Types.ExposedModule’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -- Defined in ‘Distribution.Types.InstalledPackageInfo’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.License.License -- Defined in ‘Distribution.License’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.AbiHash.AbiHash -- Defined in ‘Distribution.Types.AbiHash’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.ComponentId.ComponentId -- Defined in ‘Distribution.Types.ComponentId’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.Dependency.Dependency -- Defined in ‘Distribution.Types.Dependency’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.Module.Module -- Defined in ‘Distribution.Types.Module’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.PackageId.PackageIdentifier -- Defined in ‘Distribution.Types.PackageId’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.PackageName.PackageName -- Defined in ‘Distribution.Types.PackageName’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.PkgconfigName.PkgconfigName -- Defined in ‘Distribution.Types.PkgconfigName’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.Version.Version -- Defined in ‘Distribution.Types.Version’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.ModuleName.ModuleName -- Defined in ‘Distribution.ModuleName’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.ConfVar.ConfVar -- Defined in ‘Distribution.Types.ConfVar’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.SourceRepo.KnownRepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.SourceRepo.RepoKind -- Defined in ‘Distribution.Types.SourceRepo’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.SourceRepo.RepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.SourceRepo.SourceRepo -- Defined in ‘Distribution.Types.SourceRepo’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.Benchmark.Benchmark -- Defined in ‘Distribution.Types.Benchmark’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.BenchmarkInterface.BenchmarkInterface -- Defined in ‘Distribution.Types.BenchmarkInterface’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.BenchmarkType.BenchmarkType -- Defined in ‘Distribution.Types.BenchmarkType’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.BuildInfo.BuildInfo -- Defined in ‘Distribution.Types.BuildInfo’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.BuildType.BuildType -- Defined in ‘Distribution.Types.BuildType’
instance [safe] forall c. binary-0.8.9.2:Data.Binary.Class.Binary c => binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Types.Condition.Condition c) -- Defined in ‘Distribution.Types.Condition’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.ComponentName.ComponentName -- Defined in ‘Distribution.Types.ComponentName’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.ComponentName.NotLibComponentName -- Defined in ‘Distribution.Types.ComponentName’
instance [safe] forall v c a. (binary-0.8.9.2:Data.Binary.Class.Binary v, binary-0.8.9.2:Data.Binary.Class.Binary c, binary-0.8.9.2:Data.Binary.Class.Binary a) => binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Types.CondTree.CondBranch v c a) -- Defined in ‘Distribution.Types.CondTree’
instance [safe] forall v c a. (binary-0.8.9.2:Data.Binary.Class.Binary v, binary-0.8.9.2:Data.Binary.Class.Binary c, binary-0.8.9.2:Data.Binary.Class.Binary a) => binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Types.CondTree.CondTree v c a) -- Defined in ‘Distribution.Types.CondTree’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.ModuleRenaming.ModuleRenaming -- Defined in ‘Distribution.Types.ModuleRenaming’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.ExeDependency.ExeDependency -- Defined in ‘Distribution.Types.ExeDependency’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.Executable.Executable -- Defined in ‘Distribution.Types.Executable’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.ExecutableScope.ExecutableScope -- Defined in ‘Distribution.Types.ExecutableScope’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.Flag.FlagAssignment -- Defined in ‘Distribution.Types.Flag’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.Flag.FlagName -- Defined in ‘Distribution.Types.Flag’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.Flag.PackageFlag -- Defined in ‘Distribution.Types.Flag’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.ForeignLib.ForeignLib -- Defined in ‘Distribution.Types.ForeignLib’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.ForeignLib.LibVersionInfo -- Defined in ‘Distribution.Types.ForeignLib’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.ForeignLibType.ForeignLibType -- Defined in ‘Distribution.Types.ForeignLibType’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.ForeignLibOption.ForeignLibOption -- Defined in ‘Distribution.Types.ForeignLibOption’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.GenericPackageDescription.GenericPackageDescription -- Defined in ‘Distribution.Types.GenericPackageDescription’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.IncludeRenaming.IncludeRenaming -- Defined in ‘Distribution.Types.IncludeRenaming’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.LibraryName.LibraryName -- Defined in ‘Distribution.Types.LibraryName’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.LegacyExeDependency.LegacyExeDependency -- Defined in ‘Distribution.Types.LegacyExeDependency’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.Library.Library -- Defined in ‘Distribution.Types.Library’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.LibraryVisibility.LibraryVisibility -- Defined in ‘Distribution.Types.LibraryVisibility’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.Mixin.Mixin -- Defined in ‘Distribution.Types.Mixin’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.ModuleReexport.ModuleReexport -- Defined in ‘Distribution.Types.ModuleReexport’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.PackageDescription.PackageDescription -- Defined in ‘Distribution.Types.PackageDescription’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.PkgconfigVersionRange.PkgconfigVersionRange -- Defined in ‘Distribution.Types.PkgconfigVersionRange’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.PkgconfigDependency.PkgconfigDependency -- Defined in ‘Distribution.Types.PkgconfigDependency’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.PkgconfigVersion.PkgconfigVersion -- Defined in ‘Distribution.Types.PkgconfigVersion’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.SetupBuildInfo.SetupBuildInfo -- Defined in ‘Distribution.Types.SetupBuildInfo’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.TestSuite.TestSuite -- Defined in ‘Distribution.Types.TestSuite’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.TestSuiteInterface.TestSuiteInterface -- Defined in ‘Distribution.Types.TestSuiteInterface’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.TestType.TestType -- Defined in ‘Distribution.Types.TestType’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.UnqualComponentName.UnqualComponentName -- Defined in ‘Distribution.Types.UnqualComponentName’
instance [safe] binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Parsec.Position.Position -- Defined in ‘Distribution.Parsec.Position’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.SPDX.LicenseId.LicenseId -- Defined in ‘Distribution.SPDX.LicenseId’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.SPDX.LicenseExceptionId.LicenseExceptionId -- Defined in ‘Distribution.SPDX.LicenseExceptionId’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.SPDX.LicenseExpression.LicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.SPDX.LicenseExpression.SimpleLicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.SPDX.License.License -- Defined in ‘Distribution.SPDX.License’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.SPDX.LicenseReference.LicenseRef -- Defined in ‘Distribution.SPDX.LicenseReference’
instance binary-0.8.9.2:Data.Binary.Class.Binary Language.Haskell.Extension.Extension -- Defined in ‘Language.Haskell.Extension’
instance binary-0.8.9.2:Data.Binary.Class.Binary Language.Haskell.Extension.KnownExtension -- Defined in ‘Language.Haskell.Extension’
instance binary-0.8.9.2:Data.Binary.Class.Binary Language.Haskell.Extension.Language -- Defined in ‘Language.Haskell.Extension’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.Compiler.Compiler -- Defined in ‘Distribution.Simple.Compiler’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.Compiler.DebugInfoLevel -- Defined in ‘Distribution.Simple.Compiler’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.Compiler.OptimisationLevel -- Defined in ‘Distribution.Simple.Compiler’
instance forall fp. binary-0.8.9.2:Data.Binary.Class.Binary fp => binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Simple.Compiler.PackageDBX fp) -- Defined in ‘Distribution.Simple.Compiler’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.Compiler.ProfDetailLevel -- Defined in ‘Distribution.Simple.Compiler’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.VersionRange.Internal.VersionRange -- Defined in ‘Distribution.Types.VersionRange.Internal’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.Setup.BuildingWhat -- Defined in ‘Distribution.Simple.Setup’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.LocalBuildInfo.LocalBuildInfo -- Defined in ‘Distribution.Types.LocalBuildInfo’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.TargetInfo.TargetInfo -- Defined in ‘Distribution.Types.TargetInfo’
instance binary-0.8.9.2:Data.Binary.Class.Binary Cabal-3.15.0.0:Distribution.Simple.Setup.Common.CommonSetupFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Common’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.BuildTarget.BuildTarget -- Defined in ‘Distribution.Simple.BuildTarget’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.FileMonitor.Types.FilePathRoot -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.FileMonitor.Types.MonitorFilePath -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.FileMonitor.Types.MonitorKindDir -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.FileMonitor.Types.MonitorKindFile -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.FileMonitor.Types.RootedGlob -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.Glob.Internal.Glob -- Defined in ‘Distribution.Simple.Glob.Internal’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.Glob.Internal.GlobPiece -- Defined in ‘Distribution.Simple.Glob.Internal’
instance [safe] forall a. binary-0.8.9.2:Data.Binary.Class.Binary a => binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Simple.Flag.Flag a) -- Defined in ‘Distribution.Simple.Flag’
instance binary-0.8.9.2:Data.Binary.Class.Binary Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock’
instance binary-0.8.9.2:Data.Binary.Class.Binary Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockTarget -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.InstallDirs.CopyDest -- Defined in ‘Distribution.Simple.InstallDirs’
instance forall dir. binary-0.8.9.2:Data.Binary.Class.Binary dir => binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Simple.InstallDirs.InstallDirs dir) -- Defined in ‘Distribution.Simple.InstallDirs’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.InstallDirs.PathTemplate -- Defined in ‘Distribution.Simple.InstallDirs’
instance [safe] binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.InstallDirs.Internal.PathComponent -- Defined in ‘Distribution.Simple.InstallDirs.Internal’
instance [safe] binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.InstallDirs.Internal.PathTemplateVariable -- Defined in ‘Distribution.Simple.InstallDirs.Internal’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -- Defined in ‘Distribution.Types.ComponentLocalBuildInfo’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.Component.Component -- Defined in ‘Distribution.Types.Component’
instance forall a. binary-0.8.9.2:Data.Binary.Class.Binary a => binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Simple.PackageIndex.PackageIndex a) -- Defined in ‘Distribution.Simple.PackageIndex’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.PreProcess.Types.Suffix -- Defined in ‘Distribution.Simple.PreProcess.Types’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.Program.Types.ConfiguredProgram -- Defined in ‘Distribution.Simple.Program.Types’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.Program.Types.ProgramLocation -- Defined in ‘Distribution.Simple.Program.Types’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.Program.Types.ProgramSearchPathEntry -- Defined in ‘Distribution.Simple.Program.Types’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.Program.Db.ProgramDb -- Defined in ‘Distribution.Simple.Program.Db’
instance binary-0.8.9.2:Data.Binary.Class.Binary Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Test’
instance binary-0.8.9.2:Data.Binary.Class.Binary Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestShowDetails -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Test’
instance binary-0.8.9.2:Data.Binary.Class.Binary Cabal-3.15.0.0:Distribution.Simple.Setup.Benchmark.BenchmarkFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Benchmark’
instance binary-0.8.9.2:Data.Binary.Class.Binary Cabal-3.15.0.0:Distribution.Simple.Setup.Build.BuildFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Build’
instance binary-0.8.9.2:Data.Binary.Class.Binary Cabal-3.15.0.0:Distribution.Simple.Setup.Clean.CleanFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Clean’
instance binary-0.8.9.2:Data.Binary.Class.Binary Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Config’
instance binary-0.8.9.2:Data.Binary.Class.Binary Cabal-3.15.0.0:Distribution.Simple.Setup.Copy.CopyFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Copy’
instance [safe] binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.DumpBuildInfo.DumpBuildInfo -- Defined in ‘Distribution.Types.DumpBuildInfo’
instance binary-0.8.9.2:Data.Binary.Class.Binary Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour.HscolourFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour’
instance binary-0.8.9.2:Data.Binary.Class.Binary Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Repl’
instance binary-0.8.9.2:Data.Binary.Class.Binary Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplOptions -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Repl’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.SetupHooks.Internal.ComponentDiff -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.SetupHooks.Internal.InstallComponentInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.SetupHooks.Internal.PostBuildComponentInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.SetupHooks.Internal.PostConfPackageInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.SetupHooks.Internal.PreBuildComponentInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.SetupHooks.Internal.PreConfComponentInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.SetupHooks.Internal.PreConfComponentOutputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.SetupHooks.Internal.PreConfPackageInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.SetupHooks.Internal.PreConfPackageOutputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance forall arg res. binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Simple.SetupHooks.Rule.CommandData Distribution.Simple.SetupHooks.Rule.User arg res) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall arg res. (arg ~ Data.ByteString.Lazy.Internal.ByteString) => binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Simple.SetupHooks.Rule.CommandData Distribution.Simple.SetupHooks.Rule.System arg res) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.SetupHooks.Rule.Dependency -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall k (scope :: Distribution.Simple.SetupHooks.Rule.Scope) depsRes (depsArg :: k). binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Simple.SetupHooks.Rule.ScopedArgument scope depsRes) => binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Simple.SetupHooks.Rule.DepsRes scope depsArg depsRes) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall depsArg depsRes. binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Simple.SetupHooks.Rule.DynDepsCmd Distribution.Simple.SetupHooks.Rule.User depsArg depsRes) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall arg depsRes. (arg ~ Data.ByteString.Lazy.Internal.ByteString, depsRes ~ Data.ByteString.Lazy.Internal.ByteString) => binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Simple.SetupHooks.Rule.DynDepsCmd Distribution.Simple.SetupHooks.Rule.System arg depsRes) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.SetupHooks.Rule.Location -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall (scope :: Distribution.Simple.SetupHooks.Rule.Scope) k1 (arg :: k1) k2 (res :: k2). binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Simple.SetupHooks.Rule.NoCmd scope arg res) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall (ruleCmd :: Distribution.Simple.SetupHooks.Rule.Scope -> * -> * -> *) (deps :: Distribution.Simple.SetupHooks.Rule.Scope -> * -> * -> *). (forall arg res. binary-0.8.9.2:Data.Binary.Class.Binary (ruleCmd Distribution.Simple.SetupHooks.Rule.User arg res), forall depsArg depsRes. binary-0.8.9.2:Data.Binary.Class.Binary depsRes => binary-0.8.9.2:Data.Binary.Class.Binary (deps Distribution.Simple.SetupHooks.Rule.User depsArg depsRes)) => binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Simple.SetupHooks.Rule.RuleCommands Distribution.Simple.SetupHooks.Rule.User deps ruleCmd) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall (ruleCmd :: Distribution.Simple.SetupHooks.Rule.Scope -> * -> * -> *) (deps :: Distribution.Simple.SetupHooks.Rule.Scope -> * -> * -> *). (forall res. binary-0.8.9.2:Data.Binary.Class.Binary (ruleCmd Distribution.Simple.SetupHooks.Rule.System Data.ByteString.Lazy.Internal.ByteString res), binary-0.8.9.2:Data.Binary.Class.Binary (deps Distribution.Simple.SetupHooks.Rule.System Data.ByteString.Lazy.Internal.ByteString Data.ByteString.Lazy.Internal.ByteString)) => binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Simple.SetupHooks.Rule.RuleCommands Distribution.Simple.SetupHooks.Rule.System deps ruleCmd)
  -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Simple.SetupHooks.Rule.RuleData Distribution.Simple.SetupHooks.Rule.User) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Simple.SetupHooks.Rule.RuleData Distribution.Simple.SetupHooks.Rule.System) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.SetupHooks.Rule.RuleId -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.SetupHooks.Rule.RuleOutput -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Simple.SetupHooks.Rule.RulesNameSpace -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall arg. binary-0.8.9.2:Data.Binary.Class.Binary arg => binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Simple.SetupHooks.Rule.ScopedArgument Distribution.Simple.SetupHooks.Rule.User arg) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall arg. (arg ~ Data.ByteString.Lazy.Internal.ByteString) => binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Simple.SetupHooks.Rule.ScopedArgument Distribution.Simple.SetupHooks.Rule.System arg) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall fnTy. binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Simple.SetupHooks.Rule.Static Distribution.Simple.SetupHooks.Rule.System fnTy) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall fnTy. binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Simple.SetupHooks.Rule.Static Distribution.Simple.SetupHooks.Rule.User fnTy) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.System.Arch -- Defined in ‘Distribution.System’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.System.OS -- Defined in ‘Distribution.System’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.System.Platform -- Defined in ‘Distribution.System’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.ComponentRequestedSpec.ComponentRequestedSpec -- Defined in ‘Distribution.Types.ComponentRequestedSpec’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.GivenComponent.GivenComponent -- Defined in ‘Distribution.Types.GivenComponent’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.GivenComponent.PromisedComponent -- Defined in ‘Distribution.Types.GivenComponent’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.LocalBuildConfig.BuildOptions -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.LocalBuildConfig.ComponentBuildDescr -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.LocalBuildConfig.LocalBuildConfig -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.LocalBuildConfig.LocalBuildDescr -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.LocalBuildConfig.PackageBuildDescr -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.MungedPackageId.MungedPackageId -- Defined in ‘Distribution.Types.MungedPackageId’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.MungedPackageName.MungedPackageName -- Defined in ‘Distribution.Types.MungedPackageName’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Types.PackageVersionConstraint.PackageVersionConstraint -- Defined in ‘Distribution.Types.PackageVersionConstraint’
instance forall a. (GHC.Classes.Ord a, binary-0.8.9.2:Data.Binary.Class.Binary a) => binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Utils.NubList.NubList a) -- Defined in ‘Distribution.Utils.NubList’
instance forall (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute) from (to :: Distribution.Utils.Path.FileOrDir). binary-0.8.9.2:Data.Binary.Class.Binary (Distribution.Utils.Path.SymbolicPathX allowAbsolute from to) -- Defined in ‘Distribution.Utils.Path’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Utils.ShortText.ShortText -- Defined in ‘Distribution.Utils.ShortText’
instance binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Verbosity.Verbosity -- Defined in ‘Distribution.Verbosity’
instance [safe] binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Verbosity.Internal.VerbosityFlag -- Defined in ‘Distribution.Verbosity.Internal’
instance [safe] binary-0.8.9.2:Data.Binary.Class.Binary Distribution.Verbosity.Internal.VerbosityLevel -- Defined in ‘Distribution.Verbosity.Internal’
instance [safe] Control.DeepSeq.GNFData Control.DeepSeq.One GHC.Internal.Generics.Par1 -- Defined in ‘Control.DeepSeq’
instance Control.DeepSeq.NFData Distribution.Backpack.OpenModule -- Defined in ‘Distribution.Backpack’
instance Control.DeepSeq.NFData Distribution.Backpack.OpenUnitId -- Defined in ‘Distribution.Backpack’
instance Control.DeepSeq.NFData Distribution.Types.UnitId.DefUnitId -- Defined in ‘Distribution.Types.UnitId’
instance Control.DeepSeq.NFData Distribution.Types.UnitId.UnitId -- Defined in ‘Distribution.Types.UnitId’
instance [safe] Control.DeepSeq.NFData Distribution.CabalSpecVersion.CabalSpecVersion -- Defined in ‘Distribution.CabalSpecVersion’
instance forall a. (Control.DeepSeq.NFData a, Control.DeepSeq.NFData (Distribution.Compat.Graph.Key a)) => Control.DeepSeq.NFData (Distribution.Compat.Graph.Graph a) -- Defined in ‘Distribution.Compat.Graph’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Data.Graph.SCC a) -- Defined in ‘Data.Graph’
instance forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Distribution.Compat.NonEmptySet.NonEmptySet a) -- Defined in ‘Distribution.Compat.NonEmptySet’
instance [safe] Control.DeepSeq.NFData Text.PrettyPrint.HughesPJ.Doc -- Defined in ‘Text.PrettyPrint.HughesPJ’
instance forall k a. (Control.DeepSeq.NFData k, Control.DeepSeq.NFData a) => Control.DeepSeq.NFData (Data.Map.Internal.Map k a) -- Defined in ‘Data.Map.Internal’
instance [safe] forall k (a :: k) (b :: k). Control.DeepSeq.NFData (a GHC.Internal.Data.Type.Equality.:~: b) -- Defined in ‘Control.DeepSeq’
instance [safe] forall k1 k2 (a :: k1) (b :: k2). Control.DeepSeq.NFData (a GHC.Internal.Data.Type.Equality.:~~: b) -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Data.Semigroup.Internal.All -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Data.Semigroup.Internal.Any -- Defined in ‘Control.DeepSeq’
instance [safe] forall a b. (Control.DeepSeq.NFData a, Control.DeepSeq.NFData b) => Control.DeepSeq.NFData (Data.Semigroup.Arg a b) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a b. (Control.DeepSeq.NFData a, Control.DeepSeq.NFData b) => Control.DeepSeq.NFData (GHC.Internal.Arr.Array a b) -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Types.Bool -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData Data.Array.Byte.ByteArray -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CBool -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CChar -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CClock -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CDouble -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CFile -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CFloat -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CFpos -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CInt -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CIntMax -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CIntPtr -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CJmpBuf -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CLLong -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CLong -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CPtrdiff -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CSChar -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CSUSeconds -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CShort -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CSigAtomic -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CSize -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CTime -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CUChar -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CUInt -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CUIntMax -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CUIntPtr -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CULLong -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CULong -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CUSeconds -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CUShort -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Foreign.C.Types.CWchar -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Stack.Types.CallStack -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Types.Char -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Data.Complex.Complex a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall k k1 (f :: k -> *) (g :: k1 -> k) (a :: k1). Control.DeepSeq.NFData (f (g a)) => Control.DeepSeq.NFData (Data.Functor.Compose.Compose f g a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall k a (b :: k). Control.DeepSeq.NFData a => Control.DeepSeq.NFData (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Types.Double -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData (GHC.Internal.Data.Ord.Down a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData (GHC.Internal.Data.Semigroup.Internal.Dual a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a b. (Control.DeepSeq.NFData a, Control.DeepSeq.NFData b) => Control.DeepSeq.NFData (GHC.Internal.Data.Either.Either a b) -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.IO.Exception.ExitCode -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Fingerprint.Type.Fingerprint -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Data.Semigroup.First a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData (GHC.Internal.Data.Monoid.First a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall k (a :: k). Control.DeepSeq.NFData (Data.Fixed.Fixed a) -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Types.Float -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData (GHC.Internal.Ptr.FunPtr a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData (GHC.Internal.IORef.IORef a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Types.Int -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Int.Int16 -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Int.Int32 -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Int.Int64 -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Int.Int8 -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Num.Integer.Integer -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Data.Semigroup.Last a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData (GHC.Internal.Data.Monoid.Last a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData [a] -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData (GHC.Internal.MVar.MVar a) -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.IO.MaskingState -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Data.Semigroup.Max a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData (GHC.Internal.Maybe.Maybe a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Data.Semigroup.Min a) -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Types.Module -- Defined in ‘Control.DeepSeq’
instance [safe] forall s. Control.DeepSeq.NFData (Data.Array.Byte.MutableByteArray s) -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Num.Natural.Natural -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData (GHC.Internal.Base.NonEmpty a) -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Types.Ordering -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData (GHC.Internal.Data.Semigroup.Internal.Product a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall k (f :: k -> *) (a :: k) (g :: k -> *). (Control.DeepSeq.NFData (f a), Control.DeepSeq.NFData (g a)) => Control.DeepSeq.NFData (Data.Functor.Product.Product f g a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall k (a :: k). Control.DeepSeq.NFData (GHC.Internal.Data.Proxy.Proxy a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData (GHC.Internal.Ptr.Ptr a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData (GHC.Internal.Real.Ratio a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall s a. Control.DeepSeq.NFData (GHC.Internal.STRef.STRef s a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Solo a) -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Data.Typeable.TypeRep -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Stack.Types.SrcLoc -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData (GHC.Internal.StableName.StableName a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData (GHC.Internal.Data.Semigroup.Internal.Sum a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall k (f :: k -> *) (a :: k) (g :: k -> *). (Control.DeepSeq.NFData (f a), Control.DeepSeq.NFData (g a)) => Control.DeepSeq.NFData (Data.Functor.Sum.Sum f g a) -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Conc.Sync.ThreadId -- Defined in ‘Control.DeepSeq’
instance [safe] forall a b. (Control.DeepSeq.NFData a, Control.DeepSeq.NFData b) => Control.DeepSeq.NFData (a, b) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a1 a2 a3. (Control.DeepSeq.NFData a1, Control.DeepSeq.NFData a2, Control.DeepSeq.NFData a3) => Control.DeepSeq.NFData (a1, a2, a3) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a1 a2 a3 a4. (Control.DeepSeq.NFData a1, Control.DeepSeq.NFData a2, Control.DeepSeq.NFData a3, Control.DeepSeq.NFData a4) => Control.DeepSeq.NFData (a1, a2, a3, a4) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a1 a2 a3 a4 a5. (Control.DeepSeq.NFData a1, Control.DeepSeq.NFData a2, Control.DeepSeq.NFData a3, Control.DeepSeq.NFData a4, Control.DeepSeq.NFData a5) => Control.DeepSeq.NFData (a1, a2, a3, a4, a5) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a1 a2 a3 a4 a5 a6. (Control.DeepSeq.NFData a1, Control.DeepSeq.NFData a2, Control.DeepSeq.NFData a3, Control.DeepSeq.NFData a4, Control.DeepSeq.NFData a5, Control.DeepSeq.NFData a6) => Control.DeepSeq.NFData (a1, a2, a3, a4, a5, a6) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a1 a2 a3 a4 a5 a6 a7. (Control.DeepSeq.NFData a1, Control.DeepSeq.NFData a2, Control.DeepSeq.NFData a3, Control.DeepSeq.NFData a4, Control.DeepSeq.NFData a5, Control.DeepSeq.NFData a6, Control.DeepSeq.NFData a7) => Control.DeepSeq.NFData (a1, a2, a3, a4, a5, a6, a7) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a1 a2 a3 a4 a5 a6 a7 a8. (Control.DeepSeq.NFData a1, Control.DeepSeq.NFData a2, Control.DeepSeq.NFData a3, Control.DeepSeq.NFData a4, Control.DeepSeq.NFData a5, Control.DeepSeq.NFData a6, Control.DeepSeq.NFData a7, Control.DeepSeq.NFData a8) => Control.DeepSeq.NFData (a1, a2, a3, a4, a5, a6, a7, a8) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a1 a2 a3 a4 a5 a6 a7 a8 a9. (Control.DeepSeq.NFData a1, Control.DeepSeq.NFData a2, Control.DeepSeq.NFData a3, Control.DeepSeq.NFData a4, Control.DeepSeq.NFData a5, Control.DeepSeq.NFData a6, Control.DeepSeq.NFData a7, Control.DeepSeq.NFData a8, Control.DeepSeq.NFData a9) => Control.DeepSeq.NFData (a1, a2, a3, a4, a5, a6, a7, a8, a9) -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Types.TyCon -- Defined in ‘Control.DeepSeq’
instance [safe] forall k (a :: k). Control.DeepSeq.NFData (ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.TypeRep a) -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Data.Unique.Unique -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData () -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Data.Version.Version -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Base.Void -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Types.Word -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Word.Word16 -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Word.Word32 -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Word.Word64 -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData GHC.Internal.Word.Word8 -- Defined in ‘Control.DeepSeq’
instance [safe] forall m. Control.DeepSeq.NFData m => Control.DeepSeq.NFData (Data.Semigroup.WrappedMonoid m) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData (GHC.Internal.Functor.ZipList.ZipList a) -- Defined in ‘Control.DeepSeq’
instance forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Data.Set.Internal.Set a) -- Defined in ‘Data.Set.Internal’
instance Control.DeepSeq.NFData Distribution.Compiler.CompilerFlavor -- Defined in ‘Distribution.Compiler’
instance Control.DeepSeq.NFData Distribution.Compiler.CompilerId -- Defined in ‘Distribution.Compiler’
instance forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Distribution.Compiler.PerCompilerFlavor a) -- Defined in ‘Distribution.Compiler’
instance [safe] Control.DeepSeq.NFData Distribution.Parsec.Error.PError -- Defined in ‘Distribution.Parsec.Error’
instance [safe] Control.DeepSeq.NFData Distribution.Parsec.Warning.PWarnType -- Defined in ‘Distribution.Parsec.Warning’
instance [safe] Control.DeepSeq.NFData Distribution.Parsec.Warning.PWarning -- Defined in ‘Distribution.Parsec.Warning’
instance Control.DeepSeq.NFData Distribution.Types.AbiDependency.AbiDependency -- Defined in ‘Distribution.Types.AbiDependency’
instance Control.DeepSeq.NFData Distribution.Types.ExposedModule.ExposedModule -- Defined in ‘Distribution.Types.ExposedModule’
instance Control.DeepSeq.NFData Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -- Defined in ‘Distribution.Types.InstalledPackageInfo’
instance Control.DeepSeq.NFData Distribution.License.License -- Defined in ‘Distribution.License’
instance Control.DeepSeq.NFData Distribution.Types.AbiHash.AbiHash -- Defined in ‘Distribution.Types.AbiHash’
instance Control.DeepSeq.NFData Distribution.Types.ComponentId.ComponentId -- Defined in ‘Distribution.Types.ComponentId’
instance Control.DeepSeq.NFData Distribution.Types.Dependency.Dependency -- Defined in ‘Distribution.Types.Dependency’
instance Control.DeepSeq.NFData Distribution.Types.Module.Module -- Defined in ‘Distribution.Types.Module’
instance Control.DeepSeq.NFData Distribution.Types.PackageId.PackageIdentifier -- Defined in ‘Distribution.Types.PackageId’
instance Control.DeepSeq.NFData Distribution.Types.PackageName.PackageName -- Defined in ‘Distribution.Types.PackageName’
instance Control.DeepSeq.NFData Distribution.Types.PkgconfigName.PkgconfigName -- Defined in ‘Distribution.Types.PkgconfigName’
instance Control.DeepSeq.NFData Distribution.Types.Version.Version -- Defined in ‘Distribution.Types.Version’
instance Control.DeepSeq.NFData Distribution.ModuleName.ModuleName -- Defined in ‘Distribution.ModuleName’
instance Control.DeepSeq.NFData Distribution.Types.ConfVar.ConfVar -- Defined in ‘Distribution.Types.ConfVar’
instance Control.DeepSeq.NFData Distribution.Types.SourceRepo.KnownRepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance Control.DeepSeq.NFData Distribution.Types.SourceRepo.RepoKind -- Defined in ‘Distribution.Types.SourceRepo’
instance Control.DeepSeq.NFData Distribution.Types.SourceRepo.RepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance Control.DeepSeq.NFData Distribution.Types.SourceRepo.SourceRepo -- Defined in ‘Distribution.Types.SourceRepo’
instance Control.DeepSeq.NFData Distribution.Types.Benchmark.Benchmark -- Defined in ‘Distribution.Types.Benchmark’
instance Control.DeepSeq.NFData Distribution.Types.BenchmarkInterface.BenchmarkInterface -- Defined in ‘Distribution.Types.BenchmarkInterface’
instance Control.DeepSeq.NFData Distribution.Types.BenchmarkType.BenchmarkType -- Defined in ‘Distribution.Types.BenchmarkType’
instance Control.DeepSeq.NFData Distribution.Types.BuildInfo.BuildInfo -- Defined in ‘Distribution.Types.BuildInfo’
instance Control.DeepSeq.NFData Distribution.Types.BuildType.BuildType -- Defined in ‘Distribution.Types.BuildType’
instance [safe] forall c. Control.DeepSeq.NFData c => Control.DeepSeq.NFData (Distribution.Types.Condition.Condition c) -- Defined in ‘Distribution.Types.Condition’
instance [safe] forall v c a. (Control.DeepSeq.NFData v, Control.DeepSeq.NFData c, Control.DeepSeq.NFData a) => Control.DeepSeq.NFData (Distribution.Types.CondTree.CondBranch v c a) -- Defined in ‘Distribution.Types.CondTree’
instance [safe] forall v c a. (Control.DeepSeq.NFData v, Control.DeepSeq.NFData c, Control.DeepSeq.NFData a) => Control.DeepSeq.NFData (Distribution.Types.CondTree.CondTree v c a) -- Defined in ‘Distribution.Types.CondTree’
instance Control.DeepSeq.NFData Distribution.Types.ModuleRenaming.ModuleRenaming -- Defined in ‘Distribution.Types.ModuleRenaming’
instance Control.DeepSeq.NFData Distribution.Types.ExeDependency.ExeDependency -- Defined in ‘Distribution.Types.ExeDependency’
instance Control.DeepSeq.NFData Distribution.Types.Executable.Executable -- Defined in ‘Distribution.Types.Executable’
instance Control.DeepSeq.NFData Distribution.Types.ExecutableScope.ExecutableScope -- Defined in ‘Distribution.Types.ExecutableScope’
instance Control.DeepSeq.NFData Distribution.Types.Flag.FlagAssignment -- Defined in ‘Distribution.Types.Flag’
instance Control.DeepSeq.NFData Distribution.Types.Flag.FlagName -- Defined in ‘Distribution.Types.Flag’
instance Control.DeepSeq.NFData Distribution.Types.Flag.PackageFlag -- Defined in ‘Distribution.Types.Flag’
instance Control.DeepSeq.NFData Distribution.Types.ForeignLib.ForeignLib -- Defined in ‘Distribution.Types.ForeignLib’
instance Control.DeepSeq.NFData Distribution.Types.ForeignLib.LibVersionInfo -- Defined in ‘Distribution.Types.ForeignLib’
instance Control.DeepSeq.NFData Distribution.Types.ForeignLibType.ForeignLibType -- Defined in ‘Distribution.Types.ForeignLibType’
instance Control.DeepSeq.NFData Distribution.Types.ForeignLibOption.ForeignLibOption -- Defined in ‘Distribution.Types.ForeignLibOption’
instance Control.DeepSeq.NFData Distribution.Types.GenericPackageDescription.GenericPackageDescription -- Defined in ‘Distribution.Types.GenericPackageDescription’
instance Control.DeepSeq.NFData Distribution.Types.IncludeRenaming.IncludeRenaming -- Defined in ‘Distribution.Types.IncludeRenaming’
instance Control.DeepSeq.NFData Distribution.Types.LibraryName.LibraryName -- Defined in ‘Distribution.Types.LibraryName’
instance Control.DeepSeq.NFData Distribution.Types.LegacyExeDependency.LegacyExeDependency -- Defined in ‘Distribution.Types.LegacyExeDependency’
instance Control.DeepSeq.NFData Distribution.Types.Library.Library -- Defined in ‘Distribution.Types.Library’
instance Control.DeepSeq.NFData Distribution.Types.LibraryVisibility.LibraryVisibility -- Defined in ‘Distribution.Types.LibraryVisibility’
instance Control.DeepSeq.NFData Distribution.Types.Mixin.Mixin -- Defined in ‘Distribution.Types.Mixin’
instance Control.DeepSeq.NFData Distribution.Types.ModuleReexport.ModuleReexport -- Defined in ‘Distribution.Types.ModuleReexport’
instance Control.DeepSeq.NFData Distribution.Types.PackageDescription.PackageDescription -- Defined in ‘Distribution.Types.PackageDescription’
instance Control.DeepSeq.NFData Distribution.Types.PkgconfigVersionRange.PkgconfigVersionRange -- Defined in ‘Distribution.Types.PkgconfigVersionRange’
instance Control.DeepSeq.NFData Distribution.Types.PkgconfigDependency.PkgconfigDependency -- Defined in ‘Distribution.Types.PkgconfigDependency’
instance Control.DeepSeq.NFData Distribution.Types.PkgconfigVersion.PkgconfigVersion -- Defined in ‘Distribution.Types.PkgconfigVersion’
instance Control.DeepSeq.NFData Distribution.Types.SetupBuildInfo.SetupBuildInfo -- Defined in ‘Distribution.Types.SetupBuildInfo’
instance Control.DeepSeq.NFData Distribution.Types.TestSuite.TestSuite -- Defined in ‘Distribution.Types.TestSuite’
instance Control.DeepSeq.NFData Distribution.Types.TestSuiteInterface.TestSuiteInterface -- Defined in ‘Distribution.Types.TestSuiteInterface’
instance Control.DeepSeq.NFData Distribution.Types.TestType.TestType -- Defined in ‘Distribution.Types.TestType’
instance Control.DeepSeq.NFData Distribution.Types.UnqualComponentName.UnqualComponentName -- Defined in ‘Distribution.Types.UnqualComponentName’
instance [safe] Control.DeepSeq.NFData Distribution.Parsec.Position.Position -- Defined in ‘Distribution.Parsec.Position’
instance Control.DeepSeq.NFData Distribution.SPDX.LicenseId.LicenseId -- Defined in ‘Distribution.SPDX.LicenseId’
instance Control.DeepSeq.NFData Distribution.SPDX.LicenseExceptionId.LicenseExceptionId -- Defined in ‘Distribution.SPDX.LicenseExceptionId’
instance Control.DeepSeq.NFData Distribution.SPDX.LicenseExpression.LicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance Control.DeepSeq.NFData Distribution.SPDX.LicenseExpression.SimpleLicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance Control.DeepSeq.NFData Distribution.SPDX.License.License -- Defined in ‘Distribution.SPDX.License’
instance Control.DeepSeq.NFData Distribution.SPDX.LicenseReference.LicenseRef -- Defined in ‘Distribution.SPDX.LicenseReference’
instance Control.DeepSeq.NFData Language.Haskell.Extension.Extension -- Defined in ‘Language.Haskell.Extension’
instance Control.DeepSeq.NFData Language.Haskell.Extension.KnownExtension -- Defined in ‘Language.Haskell.Extension’
instance Control.DeepSeq.NFData Language.Haskell.Extension.Language -- Defined in ‘Language.Haskell.Extension’
instance Control.DeepSeq.NFData Distribution.Types.VersionRange.Internal.VersionRange -- Defined in ‘Distribution.Types.VersionRange.Internal’
instance [safe] Control.DeepSeq.NFData Distribution.Utils.IOData.IOData -- Defined in ‘Distribution.Utils.IOData’
instance Control.DeepSeq.NFData Distribution.System.Arch -- Defined in ‘Distribution.System’
instance Control.DeepSeq.NFData Distribution.System.OS -- Defined in ‘Distribution.System’
instance Control.DeepSeq.NFData Distribution.System.Platform -- Defined in ‘Distribution.System’
instance Control.DeepSeq.NFData Distribution.Types.MungedPackageId.MungedPackageId -- Defined in ‘Distribution.Types.MungedPackageId’
instance Control.DeepSeq.NFData Distribution.Types.MungedPackageName.MungedPackageName -- Defined in ‘Distribution.Types.MungedPackageName’
instance Control.DeepSeq.NFData Distribution.Types.PackageVersionConstraint.PackageVersionConstraint -- Defined in ‘Distribution.Types.PackageVersionConstraint’
instance forall (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute) from (to :: Distribution.Utils.Path.FileOrDir). Control.DeepSeq.NFData (Distribution.Utils.Path.SymbolicPathX allowAbsolute from to) -- Defined in ‘Distribution.Utils.Path’
instance Control.DeepSeq.NFData Distribution.Utils.ShortText.ShortText -- Defined in ‘Distribution.Utils.ShortText’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData1 (Data.Semigroup.Arg a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData1 (GHC.Internal.Arr.Array a) -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 GHC.Internal.Data.Ord.Down -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 GHC.Internal.Data.Semigroup.Internal.Dual -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData1 (GHC.Internal.Data.Either.Either a) -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 Data.Semigroup.First -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 GHC.Internal.Data.Monoid.First -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 GHC.Internal.Ptr.FunPtr -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 GHC.Internal.IORef.IORef -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 GHC.Internal.Data.Functor.Identity.Identity -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 Data.Semigroup.Last -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 GHC.Internal.Data.Monoid.Last -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 [] -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 GHC.Internal.MVar.MVar -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 Data.Semigroup.Max -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 GHC.Internal.Maybe.Maybe -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 Data.Semigroup.Min -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 GHC.Internal.Base.NonEmpty -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 GHC.Internal.Data.Semigroup.Internal.Product -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 GHC.Internal.Ptr.Ptr -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 GHC.Internal.Real.Ratio -- Defined in ‘Control.DeepSeq’
instance [safe] forall s. Control.DeepSeq.NFData1 (GHC.Internal.STRef.STRef s) -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 Solo -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 GHC.Internal.StableName.StableName -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 GHC.Internal.Data.Semigroup.Internal.Sum -- Defined in ‘Control.DeepSeq’
instance [safe] forall a. Control.DeepSeq.NFData a => Control.DeepSeq.NFData1 ((,) a) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a1 a2. (Control.DeepSeq.NFData a1, Control.DeepSeq.NFData a2) => Control.DeepSeq.NFData1 ((,,) a1 a2) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a1 a2 a3. (Control.DeepSeq.NFData a1, Control.DeepSeq.NFData a2, Control.DeepSeq.NFData a3) => Control.DeepSeq.NFData1 ((,,,) a1 a2 a3) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a1 a2 a3 a4. (Control.DeepSeq.NFData a1, Control.DeepSeq.NFData a2, Control.DeepSeq.NFData a3, Control.DeepSeq.NFData a4) => Control.DeepSeq.NFData1 ((,,,,) a1 a2 a3 a4) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a1 a2 a3 a4 a5. (Control.DeepSeq.NFData a1, Control.DeepSeq.NFData a2, Control.DeepSeq.NFData a3, Control.DeepSeq.NFData a4, Control.DeepSeq.NFData a5) => Control.DeepSeq.NFData1 ((,,,,,) a1 a2 a3 a4 a5) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a1 a2 a3 a4 a5 a6. (Control.DeepSeq.NFData a1, Control.DeepSeq.NFData a2, Control.DeepSeq.NFData a3, Control.DeepSeq.NFData a4, Control.DeepSeq.NFData a5, Control.DeepSeq.NFData a6) => Control.DeepSeq.NFData1 ((,,,,,,) a1 a2 a3 a4 a5 a6) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a1 a2 a3 a4 a5 a6 a7. (Control.DeepSeq.NFData a1, Control.DeepSeq.NFData a2, Control.DeepSeq.NFData a3, Control.DeepSeq.NFData a4, Control.DeepSeq.NFData a5, Control.DeepSeq.NFData a6, Control.DeepSeq.NFData a7) => Control.DeepSeq.NFData1 ((,,,,,,,) a1 a2 a3 a4 a5 a6 a7) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a1 a2 a3 a4 a5 a6 a7 a8. (Control.DeepSeq.NFData a1, Control.DeepSeq.NFData a2, Control.DeepSeq.NFData a3, Control.DeepSeq.NFData a4, Control.DeepSeq.NFData a5, Control.DeepSeq.NFData a6, Control.DeepSeq.NFData a7, Control.DeepSeq.NFData a8) => Control.DeepSeq.NFData1 ((,,,,,,,,) a1 a2 a3 a4 a5 a6 a7 a8) -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 Data.Semigroup.WrappedMonoid -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData1 GHC.Internal.Functor.ZipList.ZipList -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData2 Data.Semigroup.Arg -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData2 GHC.Internal.Arr.Array -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData2 GHC.Internal.Data.Either.Either -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData2 GHC.Internal.STRef.STRef -- Defined in ‘Control.DeepSeq’
instance [safe] Control.DeepSeq.NFData2 (,) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a1. Control.DeepSeq.NFData a1 => Control.DeepSeq.NFData2 ((,,) a1) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a1 a2. (Control.DeepSeq.NFData a1, Control.DeepSeq.NFData a2) => Control.DeepSeq.NFData2 ((,,,) a1 a2) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a1 a2 a3. (Control.DeepSeq.NFData a1, Control.DeepSeq.NFData a2, Control.DeepSeq.NFData a3) => Control.DeepSeq.NFData2 ((,,,,) a1 a2 a3) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a1 a2 a3 a4. (Control.DeepSeq.NFData a1, Control.DeepSeq.NFData a2, Control.DeepSeq.NFData a3, Control.DeepSeq.NFData a4) => Control.DeepSeq.NFData2 ((,,,,,) a1 a2 a3 a4) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a1 a2 a3 a4 a5. (Control.DeepSeq.NFData a1, Control.DeepSeq.NFData a2, Control.DeepSeq.NFData a3, Control.DeepSeq.NFData a4, Control.DeepSeq.NFData a5) => Control.DeepSeq.NFData2 ((,,,,,,) a1 a2 a3 a4 a5) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a1 a2 a3 a4 a5 a6. (Control.DeepSeq.NFData a1, Control.DeepSeq.NFData a2, Control.DeepSeq.NFData a3, Control.DeepSeq.NFData a4, Control.DeepSeq.NFData a5, Control.DeepSeq.NFData a6) => Control.DeepSeq.NFData2 ((,,,,,,,) a1 a2 a3 a4 a5 a6) -- Defined in ‘Control.DeepSeq’
instance [safe] forall a1 a2 a3 a4 a5 a6 a7. (Control.DeepSeq.NFData a1, Control.DeepSeq.NFData a2, Control.DeepSeq.NFData a3, Control.DeepSeq.NFData a4, Control.DeepSeq.NFData a5, Control.DeepSeq.NFData a6, Control.DeepSeq.NFData a7) => Control.DeepSeq.NFData2 ((,,,,,,,,) a1 a2 a3 a4 a5 a6 a7) -- Defined in ‘Control.DeepSeq’
instance GHC.Internal.Base.Alternative Data.Binary.Get.Internal.Get -- Defined in ‘Data.Binary.Get.Internal’
instance GHC.Internal.Base.Alternative GHC.Types.IO -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.Alternative [] -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.Alternative GHC.Internal.Maybe.Maybe -- Defined in ‘GHC.Internal.Base’
instance forall (a :: * -> * -> *) b. (GHC.Internal.Control.Arrow.ArrowZero a, GHC.Internal.Control.Arrow.ArrowPlus a) => GHC.Internal.Base.Alternative (Control.Applicative.WrappedArrow a b) -- Defined in ‘Control.Applicative’
instance forall (m :: * -> *). GHC.Internal.Base.MonadPlus m => GHC.Internal.Base.Alternative (Control.Applicative.WrappedMonad m) -- Defined in ‘Control.Applicative’
instance GHC.Internal.Base.Alternative GHC.Internal.Text.ParserCombinators.ReadP.P -- Defined in ‘GHC.Internal.Text.ParserCombinators.ReadP’
instance GHC.Internal.Base.Alternative GHC.Internal.Text.ParserCombinators.ReadP.ReadP -- Defined in ‘GHC.Internal.Text.ParserCombinators.ReadP’
instance forall (a :: * -> * -> *). GHC.Internal.Control.Arrow.ArrowPlus a => GHC.Internal.Base.Alternative (GHC.Internal.Control.Arrow.ArrowMonad a) -- Defined in ‘GHC.Internal.Control.Arrow’
instance forall (m :: * -> *) a. GHC.Internal.Base.Alternative m => GHC.Internal.Base.Alternative (GHC.Internal.Control.Arrow.Kleisli m a) -- Defined in ‘GHC.Internal.Control.Arrow’
instance [safe] GHC.Internal.Base.Alternative Distribution.Types.Condition.Condition -- Defined in ‘Distribution.Types.Condition’
instance GHC.Internal.Base.Alternative Distribution.Parsec.ParsecParser -- Defined in ‘Distribution.Parsec’
instance GHC.Internal.Base.Alternative Distribution.Simple.BuildTarget.Match -- Defined in ‘Distribution.Simple.BuildTarget’
instance [safe] forall fail step. GHC.Internal.Base.Monoid fail => GHC.Internal.Base.Alternative (Distribution.Utils.Progress.Progress step fail) -- Defined in ‘Distribution.Utils.Progress’
instance GHC.Internal.Base.Applicative Data.Binary.Get.Internal.Get -- Defined in ‘Data.Binary.Get.Internal’
instance [safe] GHC.Internal.Base.Applicative Data.Binary.Put.PutM -- Defined in ‘Data.Binary.Put’
instance GHC.Internal.Base.Applicative GHC.Types.IO -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.Applicative [] -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.Applicative GHC.Internal.Maybe.Maybe -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.Applicative GHC.Internal.Base.NonEmpty -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.Applicative Solo -- Defined in ‘GHC.Internal.Base’
instance forall a. GHC.Internal.Base.Monoid a => GHC.Internal.Base.Applicative ((,) a) -- Defined in ‘GHC.Internal.Base’
instance forall a b. (GHC.Internal.Base.Monoid a, GHC.Internal.Base.Monoid b) => GHC.Internal.Base.Applicative ((,,) a b) -- Defined in ‘GHC.Internal.Base’
instance forall a b c. (GHC.Internal.Base.Monoid a, GHC.Internal.Base.Monoid b, GHC.Internal.Base.Monoid c) => GHC.Internal.Base.Applicative ((,,,) a b c) -- Defined in ‘GHC.Internal.Base’
instance forall (a :: * -> * -> *) b. GHC.Internal.Control.Arrow.Arrow a => GHC.Internal.Base.Applicative (Control.Applicative.WrappedArrow a b) -- Defined in ‘Control.Applicative’
instance forall (m :: * -> *). GHC.Internal.Base.Monad m => GHC.Internal.Base.Applicative (Control.Applicative.WrappedMonad m) -- Defined in ‘Control.Applicative’
instance [safe] forall s. GHC.Internal.Base.Applicative (Data.Graph.SetM s) -- Defined in ‘Data.Graph’
instance forall e. GHC.Internal.Base.Applicative (GHC.Internal.Data.Either.Either e) -- Defined in ‘GHC.Internal.Data.Either’
instance GHC.Internal.Base.Applicative GHC.Internal.Generics.Par1 -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Base.Applicative GHC.Internal.Data.Functor.Identity.Identity -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance forall (f :: * -> *) k x y. (GHC.Internal.Base.Monad f, GHC.Internal.Base.Applicative f) => GHC.Internal.Base.Applicative (Data.Map.Internal.WhenMatched f k x y) -- Defined in ‘Data.Map.Internal’
instance forall (f :: * -> *) k x. (GHC.Internal.Base.Applicative f, GHC.Internal.Base.Monad f) => GHC.Internal.Base.Applicative (Data.Map.Internal.WhenMissing f k x) -- Defined in ‘Data.Map.Internal’
instance GHC.Internal.Base.Applicative GHC.Internal.Text.ParserCombinators.ReadP.P -- Defined in ‘GHC.Internal.Text.ParserCombinators.ReadP’
instance GHC.Internal.Base.Applicative GHC.Internal.Text.ParserCombinators.ReadP.ReadP -- Defined in ‘GHC.Internal.Text.ParserCombinators.ReadP’
instance GHC.Internal.Base.Applicative GHC.Internal.Data.Ord.Down -- Defined in ‘GHC.Internal.Data.Ord’
instance forall (a :: * -> * -> *). GHC.Internal.Control.Arrow.Arrow a => GHC.Internal.Base.Applicative (GHC.Internal.Control.Arrow.ArrowMonad a) -- Defined in ‘GHC.Internal.Control.Arrow’
instance forall (m :: * -> *) a. GHC.Internal.Base.Applicative m => GHC.Internal.Base.Applicative (GHC.Internal.Control.Arrow.Kleisli m a) -- Defined in ‘GHC.Internal.Control.Arrow’
instance GHC.Internal.Base.Applicative GHC.Internal.Data.Semigroup.Internal.Dual -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Internal.Base.Applicative GHC.Internal.Data.Semigroup.Internal.Product -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Internal.Base.Applicative GHC.Internal.Data.Semigroup.Internal.Sum -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall s. GHC.Internal.Base.Applicative (Distribution.FieldGrammar.Parsec.ParsecFieldGrammar s) -- Defined in ‘Distribution.FieldGrammar.Parsec’
instance forall s. GHC.Internal.Base.Applicative (Distribution.FieldGrammar.Pretty.PrettyFieldGrammar s) -- Defined in ‘Distribution.FieldGrammar.Pretty’
instance forall s. GHC.Internal.Base.Applicative (Distribution.FieldGrammar.FieldDescrs.FieldDescrs s) -- Defined in ‘Distribution.FieldGrammar.FieldDescrs’
instance GHC.Internal.Base.Applicative Distribution.Fields.ParseResult.ParseResult -- Defined in ‘Distribution.Fields.ParseResult’
instance [safe] GHC.Internal.Base.Applicative Distribution.Fields.LexerMonad.Lex -- Defined in ‘Distribution.Fields.LexerMonad’
instance [safe] GHC.Internal.Base.Applicative Distribution.Types.Condition.Condition -- Defined in ‘Distribution.Types.Condition’
instance forall (m :: * -> *). GHC.Internal.Base.Applicative m => GHC.Internal.Base.Applicative (Cabal-3.15.0.0:Distribution.PackageDescription.Check.Monad.CheckM m) -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Monad’
instance GHC.Internal.Base.Applicative Distribution.Parsec.ParsecParser -- Defined in ‘Distribution.Parsec’
instance GHC.Internal.Base.Applicative Distribution.Simple.BuildTarget.Match -- Defined in ‘Distribution.Simple.BuildTarget’
instance [safe] GHC.Internal.Base.Applicative Distribution.Simple.Flag.Flag -- Defined in ‘Distribution.Simple.Flag’
instance forall (m :: * -> *). GHC.Internal.Base.Monad m => GHC.Internal.Base.Applicative (Distribution.Simple.SetupHooks.Rule.RulesT m) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Internal.Base.Applicative Distribution.Utils.LogProgress.LogProgress -- Defined in ‘Distribution.Utils.LogProgress’
instance [safe] forall (m :: * -> *) s. GHC.Internal.Base.Monad m => GHC.Internal.Base.Applicative (Distribution.Utils.MapAccum.StateM s m) -- Defined in ‘Distribution.Utils.MapAccum’
instance [safe] forall step fail. GHC.Internal.Base.Applicative (Distribution.Utils.Progress.Progress step fail) -- Defined in ‘Distribution.Utils.Progress’
instance GHC.Internal.Base.Functor Data.Binary.Get.Internal.Decoder -- Defined in ‘Data.Binary.Get.Internal’
instance GHC.Internal.Base.Functor Data.Binary.Get.Internal.Get -- Defined in ‘Data.Binary.Get.Internal’
instance [safe] GHC.Internal.Base.Functor Data.Binary.Put.PutM -- Defined in ‘Data.Binary.Put’
instance GHC.Internal.Base.Functor GHC.Types.IO -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.Functor [] -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.Functor GHC.Internal.Maybe.Maybe -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.Functor GHC.Internal.Base.NonEmpty -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.Functor Solo -- Defined in ‘GHC.Internal.Base’
instance forall a. GHC.Internal.Base.Functor ((,) a) -- Defined in ‘GHC.Internal.Base’
instance forall a b. GHC.Internal.Base.Functor ((,,) a b) -- Defined in ‘GHC.Internal.Base’
instance forall a b c. GHC.Internal.Base.Functor ((,,,) a b c) -- Defined in ‘GHC.Internal.Base’
instance forall a b c d. GHC.Internal.Base.Functor ((,,,,) a b c d) -- Defined in ‘GHC.Internal.Base’
instance forall a b c d e. GHC.Internal.Base.Functor ((,,,,,) a b c d e) -- Defined in ‘GHC.Internal.Base’
instance forall a b c d e f. GHC.Internal.Base.Functor ((,,,,,,) a b c d e f) -- Defined in ‘GHC.Internal.Base’
instance forall (a :: * -> * -> *) b. GHC.Internal.Control.Arrow.Arrow a => GHC.Internal.Base.Functor (Control.Applicative.WrappedArrow a b) -- Defined in ‘Control.Applicative’
instance forall (m :: * -> *). GHC.Internal.Base.Monad m => GHC.Internal.Base.Functor (Control.Applicative.WrappedMonad m) -- Defined in ‘Control.Applicative’
instance forall k. GHC.Internal.Base.Functor (Distribution.Compat.Graph.Node k) -- Defined in ‘Distribution.Compat.Graph’
instance [safe] GHC.Internal.Base.Functor Data.Graph.SCC -- Defined in ‘Data.Graph’
instance [safe] forall s. GHC.Internal.Base.Functor (Data.Graph.SetM s) -- Defined in ‘Data.Graph’
instance [safe] forall a b. GHC.Internal.Base.Functor (Distribution.Compat.Lens.Pretext a b) -- Defined in ‘Distribution.Compat.Lens’
instance forall a. GHC.Internal.Base.Functor (GHC.Internal.Data.Either.Either a) -- Defined in ‘GHC.Internal.Data.Either’
instance GHC.Internal.Base.Functor GHC.Internal.Generics.Par1 -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Base.Functor GHC.Internal.Data.Functor.Identity.Identity -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance forall k. GHC.Internal.Base.Functor (Data.Map.Internal.Map k) -- Defined in ‘Data.Map.Internal’
instance forall (f :: * -> *) k x y. GHC.Internal.Base.Functor f => GHC.Internal.Base.Functor (Data.Map.Internal.WhenMatched f k x y) -- Defined in ‘Data.Map.Internal’
instance forall (f :: * -> *) k x. (GHC.Internal.Base.Applicative f, GHC.Internal.Base.Monad f) => GHC.Internal.Base.Functor (Data.Map.Internal.WhenMissing f k x) -- Defined in ‘Data.Map.Internal’
instance GHC.Internal.Base.Functor GHC.Internal.Text.ParserCombinators.ReadP.P -- Defined in ‘GHC.Internal.Text.ParserCombinators.ReadP’
instance GHC.Internal.Base.Functor GHC.Internal.Text.ParserCombinators.ReadP.ReadP -- Defined in ‘GHC.Internal.Text.ParserCombinators.ReadP’
instance GHC.Internal.Base.Functor GHC.Internal.Data.Ord.Down -- Defined in ‘GHC.Internal.Data.Ord’
instance forall (a :: * -> * -> *). GHC.Internal.Control.Arrow.Arrow a => GHC.Internal.Base.Functor (GHC.Internal.Control.Arrow.ArrowMonad a) -- Defined in ‘GHC.Internal.Control.Arrow’
instance forall (m :: * -> *) a. GHC.Internal.Base.Functor m => GHC.Internal.Base.Functor (GHC.Internal.Control.Arrow.Kleisli m a) -- Defined in ‘GHC.Internal.Control.Arrow’
instance GHC.Internal.Base.Functor Distribution.Compat.Semigroup.Last' -- Defined in ‘Distribution.Compat.Semigroup’
instance GHC.Internal.Base.Functor Distribution.Compat.Semigroup.Option' -- Defined in ‘Distribution.Compat.Semigroup’
instance GHC.Internal.Base.Functor GHC.Internal.Data.Semigroup.Internal.Dual -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Internal.Base.Functor GHC.Internal.Data.Semigroup.Internal.Product -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Internal.Base.Functor GHC.Internal.Data.Semigroup.Internal.Sum -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Internal.Base.Functor Distribution.Compiler.PerCompilerFlavor -- Defined in ‘Distribution.Compiler’
instance GHC.Internal.Base.Functor Distribution.FieldGrammar.Parsec.NamelessField -- Defined in ‘Distribution.FieldGrammar.Parsec’
instance forall s. GHC.Internal.Base.Functor (Distribution.FieldGrammar.Parsec.ParsecFieldGrammar s) -- Defined in ‘Distribution.FieldGrammar.Parsec’
instance GHC.Internal.Base.Functor Distribution.FieldGrammar.Parsec.Section -- Defined in ‘Distribution.FieldGrammar.Parsec’
instance forall s. GHC.Internal.Base.Functor (Distribution.FieldGrammar.Pretty.PrettyFieldGrammar s) -- Defined in ‘Distribution.FieldGrammar.Pretty’
instance forall s. GHC.Internal.Base.Functor (Distribution.FieldGrammar.FieldDescrs.FieldDescrs s) -- Defined in ‘Distribution.FieldGrammar.FieldDescrs’
instance GHC.Internal.Base.Functor Distribution.Fields.Pretty.PrettyField -- Defined in ‘Distribution.Fields.Pretty’
instance GHC.Internal.Base.Functor Distribution.Fields.Field.Field -- Defined in ‘Distribution.Fields.Field’
instance GHC.Internal.Base.Functor Distribution.Fields.Field.FieldLine -- Defined in ‘Distribution.Fields.Field’
instance GHC.Internal.Base.Functor Distribution.Fields.Field.Name -- Defined in ‘Distribution.Fields.Field’
instance GHC.Internal.Base.Functor Distribution.Fields.Field.SectionArg -- Defined in ‘Distribution.Fields.Field’
instance GHC.Internal.Base.Functor Distribution.Fields.ParseResult.ParseResult -- Defined in ‘Distribution.Fields.ParseResult’
instance [safe] GHC.Internal.Base.Functor Distribution.Fields.LexerMonad.Lex -- Defined in ‘Distribution.Fields.LexerMonad’
instance [safe] GHC.Internal.Base.Functor Distribution.Types.Condition.Condition -- Defined in ‘Distribution.Types.Condition’
instance [safe] forall v c. GHC.Internal.Base.Functor (Distribution.Types.CondTree.CondBranch v c) -- Defined in ‘Distribution.Types.CondTree’
instance [safe] forall v c. GHC.Internal.Base.Functor (Distribution.Types.CondTree.CondTree v c) -- Defined in ‘Distribution.Types.CondTree’
instance forall (m :: * -> *). GHC.Internal.Base.Functor m => GHC.Internal.Base.Functor (Cabal-3.15.0.0:Distribution.PackageDescription.Check.Monad.CheckM m) -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Monad’
instance GHC.Internal.Base.Functor Distribution.Parsec.ParsecParser -- Defined in ‘Distribution.Parsec’
instance GHC.Internal.Base.Functor Distribution.ReadE.ReadE -- Defined in ‘Distribution.ReadE’
instance GHC.Internal.Base.Functor Distribution.Simple.Compiler.PackageDBX -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Internal.Base.Functor Distribution.Types.VersionRange.Internal.VersionRangeF -- Defined in ‘Distribution.Types.VersionRange.Internal’
instance GHC.Internal.Base.Functor Distribution.Simple.BuildTarget.Match -- Defined in ‘Distribution.Simple.BuildTarget’
instance GHC.Internal.Base.Functor Distribution.Simple.Command.CommandParse -- Defined in ‘Distribution.Simple.Command’
instance [safe] GHC.Internal.Base.Functor Distribution.Simple.Flag.Flag -- Defined in ‘Distribution.Simple.Flag’
instance GHC.Internal.Base.Functor Distribution.Simple.Glob.GlobResult -- Defined in ‘Distribution.Simple.Glob’
instance GHC.Internal.Base.Functor Distribution.Simple.InstallDirs.InstallDirs -- Defined in ‘Distribution.Simple.InstallDirs’
instance forall (m :: * -> *). GHC.Internal.Base.Functor m => GHC.Internal.Base.Functor (Distribution.Simple.SetupHooks.Rule.RulesT m) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Internal.Base.Functor Distribution.Types.AnnotatedId.AnnotatedId -- Defined in ‘Distribution.Types.AnnotatedId’
instance GHC.Internal.Base.Functor Distribution.Utils.LogProgress.LogProgress -- Defined in ‘Distribution.Utils.LogProgress’
instance [safe] forall (m :: * -> *) s. GHC.Internal.Base.Functor m => GHC.Internal.Base.Functor (Distribution.Utils.MapAccum.StateM s m) -- Defined in ‘Distribution.Utils.MapAccum’
instance [safe] forall step fail. GHC.Internal.Base.Functor (Distribution.Utils.Progress.Progress step fail) -- Defined in ‘Distribution.Utils.Progress’
instance GHC.Internal.Base.Monad Data.Binary.Get.Internal.Get -- Defined in ‘Data.Binary.Get.Internal’
instance [safe] GHC.Internal.Base.Monad Data.Binary.Put.PutM -- Defined in ‘Data.Binary.Put’
instance GHC.Internal.Base.Monad GHC.Types.IO -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.Monad [] -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.Monad GHC.Internal.Maybe.Maybe -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.Monad GHC.Internal.Base.NonEmpty -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.Monad Solo -- Defined in ‘GHC.Internal.Base’
instance forall a. GHC.Internal.Base.Monoid a => GHC.Internal.Base.Monad ((,) a) -- Defined in ‘GHC.Internal.Base’
instance forall a b. (GHC.Internal.Base.Monoid a, GHC.Internal.Base.Monoid b) => GHC.Internal.Base.Monad ((,,) a b) -- Defined in ‘GHC.Internal.Base’
instance forall a b c. (GHC.Internal.Base.Monoid a, GHC.Internal.Base.Monoid b, GHC.Internal.Base.Monoid c) => GHC.Internal.Base.Monad ((,,,) a b c) -- Defined in ‘GHC.Internal.Base’
instance forall (m :: * -> *). GHC.Internal.Base.Monad m => GHC.Internal.Base.Monad (Control.Applicative.WrappedMonad m) -- Defined in ‘Control.Applicative’
instance [safe] forall s. GHC.Internal.Base.Monad (Data.Graph.SetM s) -- Defined in ‘Data.Graph’
instance forall e. GHC.Internal.Base.Monad (GHC.Internal.Data.Either.Either e) -- Defined in ‘GHC.Internal.Data.Either’
instance GHC.Internal.Base.Monad GHC.Internal.Generics.Par1 -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Base.Monad GHC.Internal.Data.Functor.Identity.Identity -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance forall (f :: * -> *) k x y. (GHC.Internal.Base.Monad f, GHC.Internal.Base.Applicative f) => GHC.Internal.Base.Monad (Data.Map.Internal.WhenMatched f k x y) -- Defined in ‘Data.Map.Internal’
instance forall (f :: * -> *) k x. (GHC.Internal.Base.Applicative f, GHC.Internal.Base.Monad f) => GHC.Internal.Base.Monad (Data.Map.Internal.WhenMissing f k x) -- Defined in ‘Data.Map.Internal’
instance GHC.Internal.Base.Monad GHC.Internal.Text.ParserCombinators.ReadP.P -- Defined in ‘GHC.Internal.Text.ParserCombinators.ReadP’
instance GHC.Internal.Base.Monad GHC.Internal.Text.ParserCombinators.ReadP.ReadP -- Defined in ‘GHC.Internal.Text.ParserCombinators.ReadP’
instance GHC.Internal.Base.Monad GHC.Internal.Data.Ord.Down -- Defined in ‘GHC.Internal.Data.Ord’
instance forall (a :: * -> * -> *). GHC.Internal.Control.Arrow.ArrowApply a => GHC.Internal.Base.Monad (GHC.Internal.Control.Arrow.ArrowMonad a) -- Defined in ‘GHC.Internal.Control.Arrow’
instance forall (m :: * -> *) a. GHC.Internal.Base.Monad m => GHC.Internal.Base.Monad (GHC.Internal.Control.Arrow.Kleisli m a) -- Defined in ‘GHC.Internal.Control.Arrow’
instance GHC.Internal.Base.Monad GHC.Internal.Data.Semigroup.Internal.Dual -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Internal.Base.Monad GHC.Internal.Data.Semigroup.Internal.Product -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Internal.Base.Monad GHC.Internal.Data.Semigroup.Internal.Sum -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Internal.Base.Monad Distribution.Fields.ParseResult.ParseResult -- Defined in ‘Distribution.Fields.ParseResult’
instance [safe] GHC.Internal.Base.Monad Distribution.Fields.LexerMonad.Lex -- Defined in ‘Distribution.Fields.LexerMonad’
instance [safe] GHC.Internal.Base.Monad Distribution.Types.Condition.Condition -- Defined in ‘Distribution.Types.Condition’
instance forall (m :: * -> *). GHC.Internal.Base.Monad m => GHC.Internal.Base.Monad (Cabal-3.15.0.0:Distribution.PackageDescription.Check.Monad.CheckM m) -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Monad’
instance GHC.Internal.Base.Monad Distribution.Parsec.ParsecParser -- Defined in ‘Distribution.Parsec’
instance GHC.Internal.Base.Monad Distribution.Simple.BuildTarget.Match -- Defined in ‘Distribution.Simple.BuildTarget’
instance forall (m :: * -> *). GHC.Internal.Base.Monad m => GHC.Internal.Base.Monad (Distribution.Simple.SetupHooks.Rule.RulesT m) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Internal.Base.Monad Distribution.Utils.LogProgress.LogProgress -- Defined in ‘Distribution.Utils.LogProgress’
instance [safe] forall step fail. GHC.Internal.Base.Monad (Distribution.Utils.Progress.Progress step fail) -- Defined in ‘Distribution.Utils.Progress’
instance GHC.Internal.Base.MonadPlus Data.Binary.Get.Internal.Get -- Defined in ‘Data.Binary.Get.Internal’
instance GHC.Internal.Base.MonadPlus GHC.Types.IO -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.MonadPlus [] -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.MonadPlus GHC.Internal.Maybe.Maybe -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.MonadPlus GHC.Internal.Text.ParserCombinators.ReadP.P -- Defined in ‘GHC.Internal.Text.ParserCombinators.ReadP’
instance GHC.Internal.Base.MonadPlus GHC.Internal.Text.ParserCombinators.ReadP.ReadP -- Defined in ‘GHC.Internal.Text.ParserCombinators.ReadP’
instance forall (a :: * -> * -> *). (GHC.Internal.Control.Arrow.ArrowApply a, GHC.Internal.Control.Arrow.ArrowPlus a) => GHC.Internal.Base.MonadPlus (GHC.Internal.Control.Arrow.ArrowMonad a) -- Defined in ‘GHC.Internal.Control.Arrow’
instance forall (m :: * -> *) a. GHC.Internal.Base.MonadPlus m => GHC.Internal.Base.MonadPlus (GHC.Internal.Control.Arrow.Kleisli m a) -- Defined in ‘GHC.Internal.Control.Arrow’
instance [safe] GHC.Internal.Base.MonadPlus Distribution.Types.Condition.Condition -- Defined in ‘Distribution.Types.Condition’
instance GHC.Internal.Base.MonadPlus Distribution.Parsec.ParsecParser -- Defined in ‘Distribution.Parsec’
instance GHC.Internal.Base.MonadPlus Distribution.Simple.BuildTarget.Match -- Defined in ‘Distribution.Simple.BuildTarget’
instance [safe] GHC.Internal.Base.Monoid (Data.Binary.Put.PutM ()) -- Defined in ‘Data.Binary.Put’
instance forall a. GHC.Internal.Base.Monoid a => GHC.Internal.Base.Monoid (GHC.Types.IO a) -- Defined in ‘GHC.Internal.Base’
instance forall a. GHC.Internal.Base.Monoid [a] -- Defined in ‘GHC.Internal.Base’
instance forall a. GHC.Internal.Base.Semigroup a => GHC.Internal.Base.Monoid (GHC.Internal.Maybe.Maybe a) -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.Monoid GHC.Types.Ordering -- Defined in ‘GHC.Internal.Base’
instance forall a. GHC.Internal.Base.Monoid a => GHC.Internal.Base.Monoid (Solo a) -- Defined in ‘GHC.Internal.Base’
instance forall a b. (GHC.Internal.Base.Monoid a, GHC.Internal.Base.Monoid b) => GHC.Internal.Base.Monoid (a, b) -- Defined in ‘GHC.Internal.Base’
instance forall a b c. (GHC.Internal.Base.Monoid a, GHC.Internal.Base.Monoid b, GHC.Internal.Base.Monoid c) => GHC.Internal.Base.Monoid (a, b, c) -- Defined in ‘GHC.Internal.Base’
instance forall a b c d. (GHC.Internal.Base.Monoid a, GHC.Internal.Base.Monoid b, GHC.Internal.Base.Monoid c, GHC.Internal.Base.Monoid d) => GHC.Internal.Base.Monoid (a, b, c, d) -- Defined in ‘GHC.Internal.Base’
instance forall a b c d e. (GHC.Internal.Base.Monoid a, GHC.Internal.Base.Monoid b, GHC.Internal.Base.Monoid c, GHC.Internal.Base.Monoid d, GHC.Internal.Base.Monoid e) => GHC.Internal.Base.Monoid (a, b, c, d, e) -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.Monoid () -- Defined in ‘GHC.Internal.Base’
instance [safe] forall a. GHC.Internal.Base.Monoid (Distribution.Compat.DList.DList a) -- Defined in ‘Distribution.Compat.DList’
instance [safe] GHC.Internal.Base.Monoid Text.PrettyPrint.HughesPJ.Doc -- Defined in ‘Text.PrettyPrint.HughesPJ’
instance forall a k (b :: k). GHC.Internal.Base.Monoid a => GHC.Internal.Base.Monoid (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.Functor.Const’
instance forall k (f :: k -> *) (p :: k) (g :: k -> *). (GHC.Internal.Base.Monoid (f p), GHC.Internal.Base.Monoid (g p)) => GHC.Internal.Base.Monoid ((GHC.Internal.Generics.:*:) f g p) -- Defined in ‘GHC.Internal.Generics’
instance forall k2 k1 (f :: k2 -> *) (g :: k1 -> k2) (p :: k1). GHC.Internal.Base.Monoid (f (g p)) => GHC.Internal.Base.Monoid ((GHC.Internal.Generics.:.:) f g p) -- Defined in ‘GHC.Internal.Generics’
instance forall a. (GHC.Internal.Generics.Generic a, GHC.Internal.Base.Monoid (GHC.Internal.Generics.Rep a ())) => GHC.Internal.Base.Monoid (GHC.Internal.Generics.Generically a) -- Defined in ‘GHC.Internal.Generics’
instance forall k c i (p :: k). GHC.Internal.Base.Monoid c => GHC.Internal.Base.Monoid (GHC.Internal.Generics.K1 i c p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (f :: k -> *) (p :: k) i (c :: GHC.Internal.Generics.Meta). GHC.Internal.Base.Monoid (f p) => GHC.Internal.Base.Monoid (GHC.Internal.Generics.M1 i c f p) -- Defined in ‘GHC.Internal.Generics’
instance forall p. GHC.Internal.Base.Monoid p => GHC.Internal.Base.Monoid (GHC.Internal.Generics.Par1 p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (f :: k -> *) (p :: k). GHC.Internal.Base.Monoid (f p) => GHC.Internal.Base.Monoid (GHC.Internal.Generics.Rec1 f p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Internal.Base.Monoid (GHC.Internal.Generics.U1 p) -- Defined in ‘GHC.Internal.Generics’
instance forall a. GHC.Internal.Base.Monoid a => GHC.Internal.Base.Monoid (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance forall k v. GHC.Classes.Ord k => GHC.Internal.Base.Monoid (Data.Map.Internal.Map k v) -- Defined in ‘Data.Map.Internal’
instance forall k (s :: k). GHC.Internal.Base.Monoid (GHC.Internal.Data.Proxy.Proxy s) -- Defined in ‘GHC.Internal.Data.Proxy’
instance forall a. GHC.Internal.Base.Monoid (Data.Set.Internal.MergeSet a) -- Defined in ‘Data.Set.Internal’
instance forall a. GHC.Classes.Ord a => GHC.Internal.Base.Monoid (Data.Set.Internal.Set a) -- Defined in ‘Data.Set.Internal’
instance forall a. GHC.Internal.Base.Monoid a => GHC.Internal.Base.Monoid (GHC.Internal.Data.Ord.Down a) -- Defined in ‘GHC.Internal.Data.Ord’
instance forall a. GHC.Internal.Base.Semigroup a => GHC.Internal.Base.Monoid (Distribution.Compat.Semigroup.Option' a) -- Defined in ‘Distribution.Compat.Semigroup’
instance GHC.Internal.Base.Monoid GHC.Internal.Data.Semigroup.Internal.All -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Internal.Base.Monoid GHC.Internal.Data.Semigroup.Internal.Any -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Base.Monoid a => GHC.Internal.Base.Monoid (GHC.Internal.Data.Semigroup.Internal.Dual a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Base.Monoid (GHC.Internal.Data.Semigroup.Internal.Endo a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Num.Num a => GHC.Internal.Base.Monoid (GHC.Internal.Data.Semigroup.Internal.Product a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Num.Num a => GHC.Internal.Base.Monoid (GHC.Internal.Data.Semigroup.Internal.Sum a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. (GHC.Internal.Base.Semigroup a, GHC.Internal.Base.Monoid a) => GHC.Internal.Base.Monoid (Distribution.Compiler.PerCompilerFlavor a) -- Defined in ‘Distribution.Compiler’
instance GHC.Internal.Base.Monoid Distribution.Types.Benchmark.Benchmark -- Defined in ‘Distribution.Types.Benchmark’
instance GHC.Internal.Base.Monoid Distribution.Types.BenchmarkInterface.BenchmarkInterface -- Defined in ‘Distribution.Types.BenchmarkInterface’
instance GHC.Internal.Base.Monoid Distribution.Types.BuildInfo.BuildInfo -- Defined in ‘Distribution.Types.BuildInfo’
instance [safe] forall a. GHC.Internal.Base.Monoid (Distribution.Types.Condition.Condition a) -- Defined in ‘Distribution.Types.Condition’
instance [safe] forall a c v. (GHC.Internal.Base.Semigroup a, GHC.Internal.Base.Semigroup c, GHC.Internal.Base.Monoid a, GHC.Internal.Base.Monoid c) => GHC.Internal.Base.Monoid (Distribution.Types.CondTree.CondTree v c a) -- Defined in ‘Distribution.Types.CondTree’
instance GHC.Internal.Base.Monoid Distribution.Types.Executable.Executable -- Defined in ‘Distribution.Types.Executable’
instance GHC.Internal.Base.Monoid Distribution.Types.ExecutableScope.ExecutableScope -- Defined in ‘Distribution.Types.ExecutableScope’
instance GHC.Internal.Base.Monoid Distribution.Types.Flag.FlagAssignment -- Defined in ‘Distribution.Types.Flag’
instance GHC.Internal.Base.Monoid Distribution.Types.ForeignLib.ForeignLib -- Defined in ‘Distribution.Types.ForeignLib’
instance GHC.Internal.Base.Monoid Distribution.Types.ForeignLibType.ForeignLibType -- Defined in ‘Distribution.Types.ForeignLibType’
instance GHC.Internal.Base.Monoid Distribution.Types.Library.Library -- Defined in ‘Distribution.Types.Library’
instance GHC.Internal.Base.Monoid Distribution.Types.LibraryVisibility.LibraryVisibility -- Defined in ‘Distribution.Types.LibraryVisibility’
instance GHC.Internal.Base.Monoid Distribution.Types.SetupBuildInfo.SetupBuildInfo -- Defined in ‘Distribution.Types.SetupBuildInfo’
instance GHC.Internal.Base.Monoid Distribution.Types.TestSuite.TestSuite -- Defined in ‘Distribution.Types.TestSuite’
instance GHC.Internal.Base.Monoid Distribution.Types.TestSuiteInterface.TestSuiteInterface -- Defined in ‘Distribution.Types.TestSuiteInterface’
instance GHC.Internal.Base.Monoid Distribution.Types.UnqualComponentName.UnqualComponentName -- Defined in ‘Distribution.Types.UnqualComponentName’
instance GHC.Internal.Base.Monoid Distribution.PackageDescription.Configuration.DepTestRslt -- Defined in ‘Distribution.PackageDescription.Configuration’
instance GHC.Internal.Base.Monoid Distribution.PackageDescription.Configuration.PDTagged -- Defined in ‘Distribution.PackageDescription.Configuration’
instance GHC.Internal.Base.Monoid Cabal-3.15.0.0:Distribution.Simple.Setup.Common.CommonSetupFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Common’
instance [safe] GHC.Internal.Base.Monoid Distribution.Simple.CCompiler.CDialect -- Defined in ‘Distribution.Simple.CCompiler’
instance [safe] forall a. GHC.Internal.Base.Monoid (Distribution.Simple.Flag.Flag a) -- Defined in ‘Distribution.Simple.Flag’
instance GHC.Internal.Base.Monoid Distribution.Simple.Haddock.Directory -- Defined in ‘Distribution.Simple.Haddock’
instance GHC.Internal.Base.Monoid Distribution.Simple.Haddock.HaddockArgs -- Defined in ‘Distribution.Simple.Haddock’
instance GHC.Internal.Base.Monoid Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock’
instance GHC.Internal.Base.Monoid Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockProjectFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock’
instance forall dir. (GHC.Internal.Base.Semigroup dir, GHC.Internal.Base.Monoid dir) => GHC.Internal.Base.Monoid (Distribution.Simple.InstallDirs.InstallDirs dir) -- Defined in ‘Distribution.Simple.InstallDirs’
instance GHC.Internal.Base.Monoid (Distribution.Simple.PackageIndex.PackageIndex Distribution.Types.InstalledPackageInfo.InstalledPackageInfo) -- Defined in ‘Distribution.Simple.PackageIndex’
instance GHC.Internal.Base.Monoid Distribution.Simple.Program.GHC.GhcOptions -- Defined in ‘Distribution.Simple.Program.GHC’
instance GHC.Internal.Base.Monoid Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Test’
instance GHC.Internal.Base.Monoid Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestShowDetails -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Test’
instance GHC.Internal.Base.Monoid Cabal-3.15.0.0:Distribution.Simple.Setup.Benchmark.BenchmarkFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Benchmark’
instance GHC.Internal.Base.Monoid Cabal-3.15.0.0:Distribution.Simple.Setup.Build.BuildFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Build’
instance GHC.Internal.Base.Monoid Cabal-3.15.0.0:Distribution.Simple.Setup.Clean.CleanFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Clean’
instance GHC.Internal.Base.Monoid Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Config’
instance GHC.Internal.Base.Monoid Cabal-3.15.0.0:Distribution.Simple.Setup.Copy.CopyFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Copy’
instance GHC.Internal.Base.Monoid Cabal-3.15.0.0:Distribution.Simple.Setup.Global.GlobalFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Global’
instance GHC.Internal.Base.Monoid Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour.HscolourFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour’
instance GHC.Internal.Base.Monoid Cabal-3.15.0.0:Distribution.Simple.Setup.Install.InstallFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Install’
instance GHC.Internal.Base.Monoid Cabal-3.15.0.0:Distribution.Simple.Setup.Register.RegisterFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Register’
instance GHC.Internal.Base.Monoid Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Repl’
instance GHC.Internal.Base.Monoid Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplOptions -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Repl’
instance GHC.Internal.Base.Monoid Cabal-3.15.0.0:Distribution.Simple.Setup.SDist.SDistFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.SDist’
instance GHC.Internal.Base.Monoid Distribution.Simple.SetupHooks.Internal.BuildHooks -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Base.Monoid Distribution.Simple.SetupHooks.Internal.ConfigureHooks -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Base.Monoid Distribution.Simple.SetupHooks.Internal.InstallHooks -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Base.Monoid Distribution.Simple.SetupHooks.Internal.SetupHooks -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance forall env. GHC.Internal.Base.Monoid (Distribution.Simple.SetupHooks.Rule.Rules env) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Internal.Base.Monoid Distribution.Types.DependencyMap.DependencyMap -- Defined in ‘Distribution.Types.DependencyMap’
instance forall a. GHC.Classes.Ord a => GHC.Internal.Base.Monoid (Distribution.Utils.NubList.NubList a) -- Defined in ‘Distribution.Utils.NubList’
instance forall a. GHC.Classes.Ord a => GHC.Internal.Base.Monoid (Distribution.Utils.NubList.NubListR a) -- Defined in ‘Distribution.Utils.NubList’
instance GHC.Internal.Base.Monoid Distribution.Utils.ShortText.ShortText -- Defined in ‘Distribution.Utils.ShortText’
instance [safe] GHC.Internal.Base.Semigroup (Data.Binary.Put.PutM ()) -- Defined in ‘Data.Binary.Put’
instance forall a. GHC.Internal.Base.Semigroup a => GHC.Internal.Base.Semigroup (GHC.Types.IO a) -- Defined in ‘GHC.Internal.Base’
instance forall a. GHC.Internal.Base.Semigroup [a] -- Defined in ‘GHC.Internal.Base’
instance forall a. GHC.Internal.Base.Semigroup a => GHC.Internal.Base.Semigroup (GHC.Internal.Maybe.Maybe a) -- Defined in ‘GHC.Internal.Base’
instance forall a. GHC.Internal.Base.Semigroup (GHC.Internal.Base.NonEmpty a) -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.Semigroup GHC.Types.Ordering -- Defined in ‘GHC.Internal.Base’
instance forall a. GHC.Internal.Base.Semigroup a => GHC.Internal.Base.Semigroup (Solo a) -- Defined in ‘GHC.Internal.Base’
instance forall a b. (GHC.Internal.Base.Semigroup a, GHC.Internal.Base.Semigroup b) => GHC.Internal.Base.Semigroup (a, b) -- Defined in ‘GHC.Internal.Base’
instance forall a b c. (GHC.Internal.Base.Semigroup a, GHC.Internal.Base.Semigroup b, GHC.Internal.Base.Semigroup c) => GHC.Internal.Base.Semigroup (a, b, c) -- Defined in ‘GHC.Internal.Base’
instance forall a b c d. (GHC.Internal.Base.Semigroup a, GHC.Internal.Base.Semigroup b, GHC.Internal.Base.Semigroup c, GHC.Internal.Base.Semigroup d) => GHC.Internal.Base.Semigroup (a, b, c, d) -- Defined in ‘GHC.Internal.Base’
instance forall a b c d e. (GHC.Internal.Base.Semigroup a, GHC.Internal.Base.Semigroup b, GHC.Internal.Base.Semigroup c, GHC.Internal.Base.Semigroup d, GHC.Internal.Base.Semigroup e) => GHC.Internal.Base.Semigroup (a, b, c, d, e) -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.Semigroup () -- Defined in ‘GHC.Internal.Base’
instance GHC.Internal.Base.Semigroup GHC.Internal.Base.Void -- Defined in ‘GHC.Internal.Base’
instance [safe] forall a. GHC.Internal.Base.Semigroup (Distribution.Compat.DList.DList a) -- Defined in ‘Distribution.Compat.DList’
instance forall a. GHC.Classes.Ord a => GHC.Internal.Base.Semigroup (Distribution.Compat.NonEmptySet.NonEmptySet a) -- Defined in ‘Distribution.Compat.NonEmptySet’
instance [safe] GHC.Internal.Base.Semigroup Text.PrettyPrint.HughesPJ.Doc -- Defined in ‘Text.PrettyPrint.HughesPJ’
instance forall a k (b :: k). GHC.Internal.Base.Semigroup a => GHC.Internal.Base.Semigroup (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.Functor.Const’
instance forall a b. GHC.Internal.Base.Semigroup (GHC.Internal.Data.Either.Either a b) -- Defined in ‘GHC.Internal.Data.Either’
instance forall k (f :: k -> *) (p :: k) (g :: k -> *). (GHC.Internal.Base.Semigroup (f p), GHC.Internal.Base.Semigroup (g p)) => GHC.Internal.Base.Semigroup ((GHC.Internal.Generics.:*:) f g p) -- Defined in ‘GHC.Internal.Generics’
instance forall k2 k1 (f :: k2 -> *) (g :: k1 -> k2) (p :: k1). GHC.Internal.Base.Semigroup (f (g p)) => GHC.Internal.Base.Semigroup ((GHC.Internal.Generics.:.:) f g p) -- Defined in ‘GHC.Internal.Generics’
instance forall a. (GHC.Internal.Generics.Generic a, GHC.Internal.Base.Semigroup (GHC.Internal.Generics.Rep a ())) => GHC.Internal.Base.Semigroup (GHC.Internal.Generics.Generically a) -- Defined in ‘GHC.Internal.Generics’
instance forall k c i (p :: k). GHC.Internal.Base.Semigroup c => GHC.Internal.Base.Semigroup (GHC.Internal.Generics.K1 i c p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (f :: k -> *) (p :: k) i (c :: GHC.Internal.Generics.Meta). GHC.Internal.Base.Semigroup (f p) => GHC.Internal.Base.Semigroup (GHC.Internal.Generics.M1 i c f p) -- Defined in ‘GHC.Internal.Generics’
instance forall p. GHC.Internal.Base.Semigroup p => GHC.Internal.Base.Semigroup (GHC.Internal.Generics.Par1 p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (f :: k -> *) (p :: k). GHC.Internal.Base.Semigroup (f p) => GHC.Internal.Base.Semigroup (GHC.Internal.Generics.Rec1 f p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Internal.Base.Semigroup (GHC.Internal.Generics.U1 p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Internal.Base.Semigroup (GHC.Internal.Generics.V1 p) -- Defined in ‘GHC.Internal.Generics’
instance forall a. GHC.Internal.Base.Semigroup a => GHC.Internal.Base.Semigroup (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance forall k v. GHC.Classes.Ord k => GHC.Internal.Base.Semigroup (Data.Map.Internal.Map k v) -- Defined in ‘Data.Map.Internal’
instance forall k (s :: k). GHC.Internal.Base.Semigroup (GHC.Internal.Data.Proxy.Proxy s) -- Defined in ‘GHC.Internal.Data.Proxy’
instance forall a. GHC.Classes.Ord a => GHC.Internal.Base.Semigroup (Data.Set.Internal.Intersection a) -- Defined in ‘Data.Set.Internal’
instance forall a. GHC.Internal.Base.Semigroup (Data.Set.Internal.MergeSet a) -- Defined in ‘Data.Set.Internal’
instance forall a. GHC.Classes.Ord a => GHC.Internal.Base.Semigroup (Data.Set.Internal.Set a) -- Defined in ‘Data.Set.Internal’
instance forall a. GHC.Internal.Base.Semigroup a => GHC.Internal.Base.Semigroup (GHC.Internal.Data.Ord.Down a) -- Defined in ‘GHC.Internal.Data.Ord’
instance forall a. GHC.Internal.Base.Semigroup (Distribution.Compat.Semigroup.First' a) -- Defined in ‘Distribution.Compat.Semigroup’
instance forall a. GHC.Internal.Base.Semigroup (Distribution.Compat.Semigroup.Last' a) -- Defined in ‘Distribution.Compat.Semigroup’
instance forall a. GHC.Internal.Base.Semigroup a => GHC.Internal.Base.Semigroup (Distribution.Compat.Semigroup.Option' a) -- Defined in ‘Distribution.Compat.Semigroup’
instance GHC.Internal.Base.Semigroup GHC.Internal.Data.Semigroup.Internal.All -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Internal.Base.Semigroup GHC.Internal.Data.Semigroup.Internal.Any -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Base.Semigroup a => GHC.Internal.Base.Semigroup (GHC.Internal.Data.Semigroup.Internal.Dual a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Base.Semigroup (GHC.Internal.Data.Semigroup.Internal.Endo a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Num.Num a => GHC.Internal.Base.Semigroup (GHC.Internal.Data.Semigroup.Internal.Product a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Num.Num a => GHC.Internal.Base.Semigroup (GHC.Internal.Data.Semigroup.Internal.Sum a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Base.Semigroup a => GHC.Internal.Base.Semigroup (Distribution.Compiler.PerCompilerFlavor a) -- Defined in ‘Distribution.Compiler’
instance GHC.Internal.Base.Semigroup Distribution.Fields.Pretty.Margin -- Defined in ‘Distribution.Fields.Pretty’
instance GHC.Internal.Base.Semigroup Distribution.Types.Benchmark.Benchmark -- Defined in ‘Distribution.Types.Benchmark’
instance GHC.Internal.Base.Semigroup Distribution.Types.BenchmarkInterface.BenchmarkInterface -- Defined in ‘Distribution.Types.BenchmarkInterface’
instance GHC.Internal.Base.Semigroup Distribution.Types.BuildInfo.BuildInfo -- Defined in ‘Distribution.Types.BuildInfo’
instance [safe] forall a. GHC.Internal.Base.Semigroup (Distribution.Types.Condition.Condition a) -- Defined in ‘Distribution.Types.Condition’
instance [safe] forall a c v. (GHC.Internal.Base.Semigroup a, GHC.Internal.Base.Semigroup c) => GHC.Internal.Base.Semigroup (Distribution.Types.CondTree.CondTree v c a) -- Defined in ‘Distribution.Types.CondTree’
instance GHC.Internal.Base.Semigroup Distribution.Types.Executable.Executable -- Defined in ‘Distribution.Types.Executable’
instance GHC.Internal.Base.Semigroup Distribution.Types.ExecutableScope.ExecutableScope -- Defined in ‘Distribution.Types.ExecutableScope’
instance GHC.Internal.Base.Semigroup Distribution.Types.Flag.FlagAssignment -- Defined in ‘Distribution.Types.Flag’
instance GHC.Internal.Base.Semigroup Distribution.Types.ForeignLib.ForeignLib -- Defined in ‘Distribution.Types.ForeignLib’
instance GHC.Internal.Base.Semigroup Distribution.Types.ForeignLibType.ForeignLibType -- Defined in ‘Distribution.Types.ForeignLibType’
instance GHC.Internal.Base.Semigroup Distribution.Types.Library.Library -- Defined in ‘Distribution.Types.Library’
instance GHC.Internal.Base.Semigroup Distribution.Types.LibraryVisibility.LibraryVisibility -- Defined in ‘Distribution.Types.LibraryVisibility’
instance GHC.Internal.Base.Semigroup Distribution.Types.SetupBuildInfo.SetupBuildInfo -- Defined in ‘Distribution.Types.SetupBuildInfo’
instance GHC.Internal.Base.Semigroup Distribution.Types.TestSuite.TestSuite -- Defined in ‘Distribution.Types.TestSuite’
instance GHC.Internal.Base.Semigroup Distribution.Types.TestSuiteInterface.TestSuiteInterface -- Defined in ‘Distribution.Types.TestSuiteInterface’
instance GHC.Internal.Base.Semigroup Distribution.Types.UnqualComponentName.UnqualComponentName -- Defined in ‘Distribution.Types.UnqualComponentName’
instance GHC.Internal.Base.Semigroup Distribution.PackageDescription.Configuration.DepTestRslt -- Defined in ‘Distribution.PackageDescription.Configuration’
instance GHC.Internal.Base.Semigroup Distribution.PackageDescription.Configuration.PDTagged -- Defined in ‘Distribution.PackageDescription.Configuration’
instance GHC.Internal.Base.Semigroup Cabal-3.15.0.0:Distribution.Simple.Setup.Common.CommonSetupFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Common’
instance [safe] GHC.Internal.Base.Semigroup Distribution.Simple.CCompiler.CDialect -- Defined in ‘Distribution.Simple.CCompiler’
instance [safe] forall a. GHC.Internal.Base.Semigroup (Distribution.Simple.Flag.Flag a) -- Defined in ‘Distribution.Simple.Flag’
instance GHC.Internal.Base.Semigroup Distribution.Simple.Haddock.Directory -- Defined in ‘Distribution.Simple.Haddock’
instance GHC.Internal.Base.Semigroup Distribution.Simple.Haddock.HaddockArgs -- Defined in ‘Distribution.Simple.Haddock’
instance GHC.Internal.Base.Semigroup Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock’
instance GHC.Internal.Base.Semigroup Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockProjectFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock’
instance forall dir. GHC.Internal.Base.Semigroup dir => GHC.Internal.Base.Semigroup (Distribution.Simple.InstallDirs.InstallDirs dir) -- Defined in ‘Distribution.Simple.InstallDirs’
instance GHC.Internal.Base.Semigroup Distribution.Types.Component.Component -- Defined in ‘Distribution.Types.Component’
instance GHC.Internal.Base.Semigroup (Distribution.Simple.PackageIndex.PackageIndex Distribution.Types.InstalledPackageInfo.InstalledPackageInfo) -- Defined in ‘Distribution.Simple.PackageIndex’
instance GHC.Internal.Base.Semigroup Distribution.Simple.Program.GHC.GhcOptions -- Defined in ‘Distribution.Simple.Program.GHC’
instance GHC.Internal.Base.Semigroup Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Test’
instance GHC.Internal.Base.Semigroup Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestShowDetails -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Test’
instance GHC.Internal.Base.Semigroup Cabal-3.15.0.0:Distribution.Simple.Setup.Benchmark.BenchmarkFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Benchmark’
instance GHC.Internal.Base.Semigroup Cabal-3.15.0.0:Distribution.Simple.Setup.Build.BuildFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Build’
instance GHC.Internal.Base.Semigroup Cabal-3.15.0.0:Distribution.Simple.Setup.Clean.CleanFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Clean’
instance GHC.Internal.Base.Semigroup Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Config’
instance GHC.Internal.Base.Semigroup Cabal-3.15.0.0:Distribution.Simple.Setup.Copy.CopyFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Copy’
instance GHC.Internal.Base.Semigroup Cabal-3.15.0.0:Distribution.Simple.Setup.Global.GlobalFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Global’
instance GHC.Internal.Base.Semigroup Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour.HscolourFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour’
instance GHC.Internal.Base.Semigroup Cabal-3.15.0.0:Distribution.Simple.Setup.Install.InstallFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Install’
instance GHC.Internal.Base.Semigroup Cabal-3.15.0.0:Distribution.Simple.Setup.Register.RegisterFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Register’
instance GHC.Internal.Base.Semigroup Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Repl’
instance GHC.Internal.Base.Semigroup Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplOptions -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Repl’
instance GHC.Internal.Base.Semigroup Cabal-3.15.0.0:Distribution.Simple.Setup.SDist.SDistFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.SDist’
instance GHC.Internal.Base.Semigroup Distribution.Simple.SetupHooks.Internal.BuildHooks -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Base.Semigroup Distribution.Simple.SetupHooks.Internal.ComponentDiff -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Base.Semigroup Distribution.Simple.SetupHooks.Internal.ConfigureHooks -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Base.Semigroup Distribution.Simple.SetupHooks.Internal.InstallHooks -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Base.Semigroup Distribution.Simple.SetupHooks.Internal.PreConfComponentSemigroup -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Base.Semigroup Distribution.Simple.SetupHooks.Internal.PreConfPkgSemigroup -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Base.Semigroup Distribution.Simple.SetupHooks.Internal.SetupHooks -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance forall env. GHC.Internal.Base.Semigroup (Distribution.Simple.SetupHooks.Rule.Rules env) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Internal.Base.Semigroup Distribution.Types.DependencyMap.DependencyMap -- Defined in ‘Distribution.Types.DependencyMap’
instance forall a. GHC.Classes.Ord a => GHC.Internal.Base.Semigroup (Distribution.Utils.NubList.NubList a) -- Defined in ‘Distribution.Utils.NubList’
instance forall a. GHC.Classes.Ord a => GHC.Internal.Base.Semigroup (Distribution.Utils.NubList.NubListR a) -- Defined in ‘Distribution.Utils.NubList’
instance GHC.Internal.Base.Semigroup Distribution.Utils.ShortText.ShortText -- Defined in ‘Distribution.Utils.ShortText’
instance GHC.Internal.Bits.Bits GHC.Internal.Word.Word16 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Bits.Bits GHC.Internal.Word.Word32 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Bits.Bits GHC.Internal.Word.Word64 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Bits.Bits GHC.Internal.Word.Word8 -- Defined in ‘GHC.Internal.Word’
instance forall a k (b :: k). GHC.Internal.Bits.Bits a => GHC.Internal.Bits.Bits (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.Functor.Const’
instance forall a. GHC.Internal.Bits.Bits a => GHC.Internal.Bits.Bits (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance GHC.Internal.Bits.Bits GHC.Internal.Int.Int16 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Bits.Bits GHC.Internal.Int.Int32 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Bits.Bits GHC.Internal.Int.Int64 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Bits.Bits GHC.Internal.Int.Int8 -- Defined in ‘GHC.Internal.Int’
instance forall a. GHC.Internal.Bits.Bits a => GHC.Internal.Bits.Bits (GHC.Internal.Data.Ord.Down a) -- Defined in ‘GHC.Internal.Data.Ord’
instance GHC.Internal.Bits.FiniteBits GHC.Internal.Word.Word16 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Bits.FiniteBits GHC.Internal.Word.Word32 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Bits.FiniteBits GHC.Internal.Word.Word64 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Bits.FiniteBits GHC.Internal.Word.Word8 -- Defined in ‘GHC.Internal.Word’
instance forall a k (b :: k). GHC.Internal.Bits.FiniteBits a => GHC.Internal.Bits.FiniteBits (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.Functor.Const’
instance forall a. GHC.Internal.Bits.FiniteBits a => GHC.Internal.Bits.FiniteBits (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance GHC.Internal.Bits.FiniteBits GHC.Internal.Int.Int16 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Bits.FiniteBits GHC.Internal.Int.Int32 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Bits.FiniteBits GHC.Internal.Int.Int64 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Bits.FiniteBits GHC.Internal.Int.Int8 -- Defined in ‘GHC.Internal.Int’
instance forall a. GHC.Internal.Bits.FiniteBits a => GHC.Internal.Bits.FiniteBits (GHC.Internal.Data.Ord.Down a) -- Defined in ‘GHC.Internal.Data.Ord’
instance forall (m :: * -> *). GHC.Internal.Base.Monad m => GHC.Internal.Control.Arrow.Arrow (GHC.Internal.Control.Arrow.Kleisli m) -- Defined in ‘GHC.Internal.Control.Arrow’
instance forall (m :: * -> *). GHC.Internal.Base.Monad m => GHC.Internal.Control.Arrow.ArrowApply (GHC.Internal.Control.Arrow.Kleisli m) -- Defined in ‘GHC.Internal.Control.Arrow’
instance forall (m :: * -> *). GHC.Internal.Base.Monad m => GHC.Internal.Control.Arrow.ArrowChoice (GHC.Internal.Control.Arrow.Kleisli m) -- Defined in ‘GHC.Internal.Control.Arrow’
instance forall (m :: * -> *). GHC.Internal.Control.Monad.Fix.MonadFix m => GHC.Internal.Control.Arrow.ArrowLoop (GHC.Internal.Control.Arrow.Kleisli m) -- Defined in ‘GHC.Internal.Control.Arrow’
instance forall (m :: * -> *). GHC.Internal.Base.MonadPlus m => GHC.Internal.Control.Arrow.ArrowPlus (GHC.Internal.Control.Arrow.Kleisli m) -- Defined in ‘GHC.Internal.Control.Arrow’
instance forall (m :: * -> *). GHC.Internal.Base.MonadPlus m => GHC.Internal.Control.Arrow.ArrowZero (GHC.Internal.Control.Arrow.Kleisli m) -- Defined in ‘GHC.Internal.Control.Arrow’
instance GHC.Internal.Control.Monad.Fail.MonadFail Data.Binary.Get.Internal.Get -- Defined in ‘Data.Binary.Get.Internal’
instance GHC.Internal.Control.Monad.Fail.MonadFail GHC.Types.IO -- Defined in ‘GHC.Internal.Control.Monad.Fail’
instance GHC.Internal.Control.Monad.Fail.MonadFail [] -- Defined in ‘GHC.Internal.Control.Monad.Fail’
instance GHC.Internal.Control.Monad.Fail.MonadFail GHC.Internal.Maybe.Maybe -- Defined in ‘GHC.Internal.Control.Monad.Fail’
instance GHC.Internal.Control.Monad.Fail.MonadFail GHC.Internal.Text.ParserCombinators.ReadP.P -- Defined in ‘GHC.Internal.Text.ParserCombinators.ReadP’
instance GHC.Internal.Control.Monad.Fail.MonadFail GHC.Internal.Text.ParserCombinators.ReadP.ReadP -- Defined in ‘GHC.Internal.Text.ParserCombinators.ReadP’
instance GHC.Internal.Control.Monad.Fail.MonadFail Distribution.Parsec.ParsecParser -- Defined in ‘Distribution.Parsec’
instance GHC.Internal.Control.Monad.Fix.MonadFix GHC.Internal.Data.Functor.Identity.Identity -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance forall (m :: * -> *). GHC.Internal.Control.Monad.Fix.MonadFix m => GHC.Internal.Control.Monad.Fix.MonadFix (Distribution.Simple.SetupHooks.Rule.RulesT m) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Internal.Data.Data.Data Distribution.Backpack.OpenModule -- Defined in ‘Distribution.Backpack’
instance GHC.Internal.Data.Data.Data Distribution.Backpack.OpenUnitId -- Defined in ‘Distribution.Backpack’
instance GHC.Internal.Data.Data.Data Distribution.Types.UnitId.DefUnitId -- Defined in ‘Distribution.Types.UnitId’
instance GHC.Internal.Data.Data.Data Distribution.Types.UnitId.UnitId -- Defined in ‘Distribution.Types.UnitId’
instance [safe] GHC.Internal.Data.Data.Data Distribution.CabalSpecVersion.CabalSpecVersion -- Defined in ‘Distribution.CabalSpecVersion’
instance forall (a :: * -> * -> *) b c. (ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable a, ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable b, ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable c, GHC.Internal.Data.Data.Data (a b c)) => GHC.Internal.Data.Data.Data (Control.Applicative.WrappedArrow a b c) -- Defined in ‘Control.Applicative’
instance forall (m :: * -> *) a. (ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable m, ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable a, GHC.Internal.Data.Data.Data (m a)) => GHC.Internal.Data.Data.Data (Control.Applicative.WrappedMonad m a) -- Defined in ‘Control.Applicative’
instance [safe] forall vertex. GHC.Internal.Data.Data.Data vertex => GHC.Internal.Data.Data.Data (Data.Graph.SCC vertex) -- Defined in ‘Data.Graph’
instance forall a. (GHC.Internal.Data.Data.Data a, GHC.Classes.Ord a) => GHC.Internal.Data.Data.Data (Distribution.Compat.NonEmptySet.NonEmptySet a) -- Defined in ‘Distribution.Compat.NonEmptySet’
instance forall i j (a :: i) (b :: j). (ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable i, ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable j, ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable a, ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable b, a ~~ b) => GHC.Internal.Data.Data.Data (a GHC.Internal.Data.Type.Equality.:~~: b) -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Internal.Data.Semigroup.Internal.All -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Internal.Data.Semigroup.Internal.Any -- Defined in ‘GHC.Internal.Data.Data’
instance forall a b. (GHC.Internal.Data.Data.Data a, GHC.Internal.Data.Data.Data b, GHC.Internal.Ix.Ix a) => GHC.Internal.Data.Data.Data (GHC.Internal.Arr.Array a b) -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Internal.Generics.Associativity -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Types.Bool -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Types.Char -- Defined in ‘GHC.Internal.Data.Data’
instance forall k a (b :: k). (ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable k, GHC.Internal.Data.Data.Data a, ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable b) => GHC.Internal.Data.Data.Data (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.Data’
instance forall a. GHC.Internal.Data.Data.Data a => GHC.Internal.Data.Data.Data (GHC.Internal.Foreign.C.ConstPtr.ConstPtr a) -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Internal.Generics.DecidedStrictness -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Types.Double -- Defined in ‘GHC.Internal.Data.Data’
instance forall a. GHC.Internal.Data.Data.Data a => GHC.Internal.Data.Data.Data (GHC.Internal.Data.Ord.Down a) -- Defined in ‘GHC.Internal.Data.Data’
instance forall a. GHC.Internal.Data.Data.Data a => GHC.Internal.Data.Data.Data (GHC.Internal.Data.Semigroup.Internal.Dual a) -- Defined in ‘GHC.Internal.Data.Data’
instance forall a b. (GHC.Internal.Data.Data.Data a, GHC.Internal.Data.Data.Data b) => GHC.Internal.Data.Data.Data (GHC.Internal.Data.Either.Either a b) -- Defined in ‘GHC.Internal.Data.Data’
instance forall a. GHC.Internal.Data.Data.Data a => GHC.Internal.Data.Data.Data (GHC.Internal.Data.Monoid.First a) -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Internal.Generics.Fixity -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Types.Float -- Defined in ‘GHC.Internal.Data.Data’
instance forall a. GHC.Internal.Data.Data.Data a => GHC.Internal.Data.Data.Data (GHC.Internal.ForeignPtr.ForeignPtr a) -- Defined in ‘GHC.Internal.Data.Data’
instance forall a. GHC.Internal.Data.Data.Data a => GHC.Internal.Data.Data.Data (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Types.Int -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Internal.Int.Int16 -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Internal.Int.Int32 -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Internal.Int.Int64 -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Internal.Int.Int8 -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Internal.Foreign.Ptr.IntPtr -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Num.Integer.Integer -- Defined in ‘GHC.Internal.Data.Data’
instance forall a. GHC.Internal.Data.Data.Data a => GHC.Internal.Data.Data.Data (GHC.Internal.Data.Monoid.Last a) -- Defined in ‘GHC.Internal.Data.Data’
instance forall a. GHC.Internal.Data.Data.Data a => GHC.Internal.Data.Data.Data [a] -- Defined in ‘GHC.Internal.Data.Data’
instance forall a. GHC.Internal.Data.Data.Data a => GHC.Internal.Data.Data.Data (GHC.Internal.Maybe.Maybe a) -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Num.Natural.Natural -- Defined in ‘GHC.Internal.Data.Data’
instance forall a. GHC.Internal.Data.Data.Data a => GHC.Internal.Data.Data.Data (GHC.Internal.Base.NonEmpty a) -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Types.Ordering -- Defined in ‘GHC.Internal.Data.Data’
instance forall p. GHC.Internal.Data.Data.Data p => GHC.Internal.Data.Data.Data (GHC.Internal.Generics.Par1 p) -- Defined in ‘GHC.Internal.Data.Data’
instance forall a. GHC.Internal.Data.Data.Data a => GHC.Internal.Data.Data.Data (GHC.Internal.Data.Semigroup.Internal.Product a) -- Defined in ‘GHC.Internal.Data.Data’
instance forall a. GHC.Internal.Data.Data.Data a => GHC.Internal.Data.Data.Data (GHC.Internal.Ptr.Ptr a) -- Defined in ‘GHC.Internal.Data.Data’
instance forall a. (GHC.Internal.Data.Data.Data a, GHC.Internal.Real.Integral a) => GHC.Internal.Data.Data.Data (GHC.Internal.Real.Ratio a) -- Defined in ‘GHC.Internal.Data.Data’
instance forall a. GHC.Internal.Data.Data.Data a => GHC.Internal.Data.Data.Data (Solo a) -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Internal.Generics.SourceStrictness -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Internal.Generics.SourceUnpackedness -- Defined in ‘GHC.Internal.Data.Data’
instance forall a. GHC.Internal.Data.Data.Data a => GHC.Internal.Data.Data.Data (GHC.Internal.Data.Semigroup.Internal.Sum a) -- Defined in ‘GHC.Internal.Data.Data’
instance forall a b. (GHC.Internal.Data.Data.Data a, GHC.Internal.Data.Data.Data b) => GHC.Internal.Data.Data.Data (a, b) -- Defined in ‘GHC.Internal.Data.Data’
instance forall a b c. (GHC.Internal.Data.Data.Data a, GHC.Internal.Data.Data.Data b, GHC.Internal.Data.Data.Data c) => GHC.Internal.Data.Data.Data (a, b, c) -- Defined in ‘GHC.Internal.Data.Data’
instance forall a b c d. (GHC.Internal.Data.Data.Data a, GHC.Internal.Data.Data.Data b, GHC.Internal.Data.Data.Data c, GHC.Internal.Data.Data.Data d) => GHC.Internal.Data.Data.Data (a, b, c, d) -- Defined in ‘GHC.Internal.Data.Data’
instance forall a b c d e. (GHC.Internal.Data.Data.Data a, GHC.Internal.Data.Data.Data b, GHC.Internal.Data.Data.Data c, GHC.Internal.Data.Data.Data d, GHC.Internal.Data.Data.Data e) => GHC.Internal.Data.Data.Data (a, b, c, d, e) -- Defined in ‘GHC.Internal.Data.Data’
instance forall a b c d e f. (GHC.Internal.Data.Data.Data a, GHC.Internal.Data.Data.Data b, GHC.Internal.Data.Data.Data c, GHC.Internal.Data.Data.Data d, GHC.Internal.Data.Data.Data e, GHC.Internal.Data.Data.Data f) => GHC.Internal.Data.Data.Data (a, b, c, d, e, f) -- Defined in ‘GHC.Internal.Data.Data’
instance forall a b c d e f g. (GHC.Internal.Data.Data.Data a, GHC.Internal.Data.Data.Data b, GHC.Internal.Data.Data.Data c, GHC.Internal.Data.Data.Data d, GHC.Internal.Data.Data.Data e, GHC.Internal.Data.Data.Data f, GHC.Internal.Data.Data.Data g) => GHC.Internal.Data.Data.Data (a, b, c, d, e, f, g) -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data () -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Internal.Data.Version.Version -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Internal.Base.Void -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Types.Word -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Internal.Word.Word16 -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Internal.Word.Word32 -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Internal.Word.Word64 -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Internal.Word.Word8 -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Data.Data.Data GHC.Internal.Foreign.Ptr.WordPtr -- Defined in ‘GHC.Internal.Data.Data’
instance forall k a. (GHC.Internal.Data.Data.Data k, GHC.Internal.Data.Data.Data a, GHC.Classes.Ord k) => GHC.Internal.Data.Data.Data (Data.Map.Internal.Map k a) -- Defined in ‘Data.Map.Internal’
instance forall a. (GHC.Internal.Data.Data.Data a, GHC.Classes.Ord a) => GHC.Internal.Data.Data.Data (Data.Set.Internal.Set a) -- Defined in ‘Data.Set.Internal’
instance GHC.Internal.Data.Data.Data Distribution.Compiler.CompilerFlavor -- Defined in ‘Distribution.Compiler’
instance forall v. GHC.Internal.Data.Data.Data v => GHC.Internal.Data.Data.Data (Distribution.Compiler.PerCompilerFlavor v) -- Defined in ‘Distribution.Compiler’
instance GHC.Internal.Data.Data.Data Distribution.License.License -- Defined in ‘Distribution.License’
instance GHC.Internal.Data.Data.Data Distribution.Types.ComponentId.ComponentId -- Defined in ‘Distribution.Types.ComponentId’
instance GHC.Internal.Data.Data.Data Distribution.Types.Dependency.Dependency -- Defined in ‘Distribution.Types.Dependency’
instance GHC.Internal.Data.Data.Data Distribution.Types.Module.Module -- Defined in ‘Distribution.Types.Module’
instance GHC.Internal.Data.Data.Data Distribution.Types.PackageId.PackageIdentifier -- Defined in ‘Distribution.Types.PackageId’
instance GHC.Internal.Data.Data.Data Distribution.Types.PackageName.PackageName -- Defined in ‘Distribution.Types.PackageName’
instance GHC.Internal.Data.Data.Data Distribution.Types.PkgconfigName.PkgconfigName -- Defined in ‘Distribution.Types.PkgconfigName’
instance GHC.Internal.Data.Data.Data Distribution.Types.Version.Version -- Defined in ‘Distribution.Types.Version’
instance GHC.Internal.Data.Data.Data Distribution.ModuleName.ModuleName -- Defined in ‘Distribution.ModuleName’
instance GHC.Internal.Data.Data.Data Distribution.Types.ConfVar.ConfVar -- Defined in ‘Distribution.Types.ConfVar’
instance GHC.Internal.Data.Data.Data Distribution.Types.SourceRepo.KnownRepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Internal.Data.Data.Data Distribution.Types.SourceRepo.RepoKind -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Internal.Data.Data.Data Distribution.Types.SourceRepo.RepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Internal.Data.Data.Data Distribution.Types.SourceRepo.SourceRepo -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Internal.Data.Data.Data Distribution.Types.Benchmark.Benchmark -- Defined in ‘Distribution.Types.Benchmark’
instance GHC.Internal.Data.Data.Data Distribution.Types.BenchmarkInterface.BenchmarkInterface -- Defined in ‘Distribution.Types.BenchmarkInterface’
instance GHC.Internal.Data.Data.Data Distribution.Types.BenchmarkType.BenchmarkType -- Defined in ‘Distribution.Types.BenchmarkType’
instance GHC.Internal.Data.Data.Data Distribution.Types.BuildInfo.BuildInfo -- Defined in ‘Distribution.Types.BuildInfo’
instance GHC.Internal.Data.Data.Data Distribution.Types.BuildType.BuildType -- Defined in ‘Distribution.Types.BuildType’
instance [safe] forall c. GHC.Internal.Data.Data.Data c => GHC.Internal.Data.Data.Data (Distribution.Types.Condition.Condition c) -- Defined in ‘Distribution.Types.Condition’
instance [safe] forall v c a. (GHC.Internal.Data.Data.Data v, GHC.Internal.Data.Data.Data c, GHC.Internal.Data.Data.Data a) => GHC.Internal.Data.Data.Data (Distribution.Types.CondTree.CondBranch v c a) -- Defined in ‘Distribution.Types.CondTree’
instance [safe] forall v c a. (GHC.Internal.Data.Data.Data v, GHC.Internal.Data.Data.Data a, GHC.Internal.Data.Data.Data c) => GHC.Internal.Data.Data.Data (Distribution.Types.CondTree.CondTree v c a) -- Defined in ‘Distribution.Types.CondTree’
instance GHC.Internal.Data.Data.Data Distribution.Types.ModuleRenaming.ModuleRenaming -- Defined in ‘Distribution.Types.ModuleRenaming’
instance GHC.Internal.Data.Data.Data Distribution.Types.ExeDependency.ExeDependency -- Defined in ‘Distribution.Types.ExeDependency’
instance GHC.Internal.Data.Data.Data Distribution.Types.Executable.Executable -- Defined in ‘Distribution.Types.Executable’
instance GHC.Internal.Data.Data.Data Distribution.Types.ExecutableScope.ExecutableScope -- Defined in ‘Distribution.Types.ExecutableScope’
instance GHC.Internal.Data.Data.Data Distribution.Types.Flag.FlagName -- Defined in ‘Distribution.Types.Flag’
instance GHC.Internal.Data.Data.Data Distribution.Types.Flag.PackageFlag -- Defined in ‘Distribution.Types.Flag’
instance GHC.Internal.Data.Data.Data Distribution.Types.ForeignLib.ForeignLib -- Defined in ‘Distribution.Types.ForeignLib’
instance GHC.Internal.Data.Data.Data Distribution.Types.ForeignLib.LibVersionInfo -- Defined in ‘Distribution.Types.ForeignLib’
instance GHC.Internal.Data.Data.Data Distribution.Types.ForeignLibType.ForeignLibType -- Defined in ‘Distribution.Types.ForeignLibType’
instance GHC.Internal.Data.Data.Data Distribution.Types.ForeignLibOption.ForeignLibOption -- Defined in ‘Distribution.Types.ForeignLibOption’
instance GHC.Internal.Data.Data.Data Distribution.Types.GenericPackageDescription.GenericPackageDescription -- Defined in ‘Distribution.Types.GenericPackageDescription’
instance GHC.Internal.Data.Data.Data Distribution.Types.IncludeRenaming.IncludeRenaming -- Defined in ‘Distribution.Types.IncludeRenaming’
instance GHC.Internal.Data.Data.Data Distribution.Types.LibraryName.LibraryName -- Defined in ‘Distribution.Types.LibraryName’
instance GHC.Internal.Data.Data.Data Distribution.Types.LegacyExeDependency.LegacyExeDependency -- Defined in ‘Distribution.Types.LegacyExeDependency’
instance GHC.Internal.Data.Data.Data Distribution.Types.Library.Library -- Defined in ‘Distribution.Types.Library’
instance GHC.Internal.Data.Data.Data Distribution.Types.LibraryVisibility.LibraryVisibility -- Defined in ‘Distribution.Types.LibraryVisibility’
instance GHC.Internal.Data.Data.Data Distribution.Types.Mixin.Mixin -- Defined in ‘Distribution.Types.Mixin’
instance GHC.Internal.Data.Data.Data Distribution.Types.ModuleReexport.ModuleReexport -- Defined in ‘Distribution.Types.ModuleReexport’
instance GHC.Internal.Data.Data.Data Distribution.Types.PackageDescription.PackageDescription -- Defined in ‘Distribution.Types.PackageDescription’
instance GHC.Internal.Data.Data.Data Distribution.Types.PkgconfigVersionRange.PkgconfigVersionRange -- Defined in ‘Distribution.Types.PkgconfigVersionRange’
instance GHC.Internal.Data.Data.Data Distribution.Types.PkgconfigDependency.PkgconfigDependency -- Defined in ‘Distribution.Types.PkgconfigDependency’
instance GHC.Internal.Data.Data.Data Distribution.Types.PkgconfigVersion.PkgconfigVersion -- Defined in ‘Distribution.Types.PkgconfigVersion’
instance GHC.Internal.Data.Data.Data Distribution.Types.SetupBuildInfo.SetupBuildInfo -- Defined in ‘Distribution.Types.SetupBuildInfo’
instance GHC.Internal.Data.Data.Data Distribution.Types.TestSuite.TestSuite -- Defined in ‘Distribution.Types.TestSuite’
instance GHC.Internal.Data.Data.Data Distribution.Types.TestSuiteInterface.TestSuiteInterface -- Defined in ‘Distribution.Types.TestSuiteInterface’
instance GHC.Internal.Data.Data.Data Distribution.Types.TestType.TestType -- Defined in ‘Distribution.Types.TestType’
instance GHC.Internal.Data.Data.Data Distribution.Types.UnqualComponentName.UnqualComponentName -- Defined in ‘Distribution.Types.UnqualComponentName’
instance GHC.Internal.Data.Data.Data Distribution.SPDX.LicenseId.LicenseId -- Defined in ‘Distribution.SPDX.LicenseId’
instance GHC.Internal.Data.Data.Data Distribution.SPDX.LicenseExceptionId.LicenseExceptionId -- Defined in ‘Distribution.SPDX.LicenseExceptionId’
instance GHC.Internal.Data.Data.Data Distribution.SPDX.LicenseExpression.LicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance GHC.Internal.Data.Data.Data Distribution.SPDX.LicenseExpression.SimpleLicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance GHC.Internal.Data.Data.Data Distribution.SPDX.License.License -- Defined in ‘Distribution.SPDX.License’
instance GHC.Internal.Data.Data.Data Distribution.SPDX.LicenseReference.LicenseRef -- Defined in ‘Distribution.SPDX.LicenseReference’
instance GHC.Internal.Data.Data.Data Language.Haskell.Extension.Extension -- Defined in ‘Language.Haskell.Extension’
instance GHC.Internal.Data.Data.Data Language.Haskell.Extension.KnownExtension -- Defined in ‘Language.Haskell.Extension’
instance GHC.Internal.Data.Data.Data Language.Haskell.Extension.Language -- Defined in ‘Language.Haskell.Extension’
instance GHC.Internal.Data.Data.Data Distribution.Types.VersionRange.Internal.VersionRange -- Defined in ‘Distribution.Types.VersionRange.Internal’
instance forall a. GHC.Internal.Data.Data.Data a => GHC.Internal.Data.Data.Data (Distribution.Types.VersionRange.Internal.VersionRangeF a) -- Defined in ‘Distribution.Types.VersionRange.Internal’
instance GHC.Internal.Data.Data.Data Distribution.System.Arch -- Defined in ‘Distribution.System’
instance GHC.Internal.Data.Data.Data Distribution.System.OS -- Defined in ‘Distribution.System’
instance GHC.Internal.Data.Data.Data Distribution.System.Platform -- Defined in ‘Distribution.System’
instance GHC.Internal.Data.Data.Data Distribution.Types.MungedPackageId.MungedPackageId -- Defined in ‘Distribution.Types.MungedPackageId’
instance GHC.Internal.Data.Data.Data Distribution.Types.MungedPackageName.MungedPackageName -- Defined in ‘Distribution.Types.MungedPackageName’
instance GHC.Internal.Data.Data.Data Distribution.Types.PackageVersionConstraint.PackageVersionConstraint -- Defined in ‘Distribution.Types.PackageVersionConstraint’
instance forall (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute) from (to :: Distribution.Utils.Path.FileOrDir). (ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable from, ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable allowAbsolute, ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.Typeable to) => GHC.Internal.Data.Data.Data (Distribution.Utils.Path.SymbolicPathX allowAbsolute from to) -- Defined in ‘Distribution.Utils.Path’
instance GHC.Internal.Data.Data.Data Distribution.Utils.ShortText.ShortText -- Defined in ‘Distribution.Utils.ShortText’
instance GHC.Internal.Data.Foldable.Foldable Distribution.Compat.Graph.Graph -- Defined in ‘Distribution.Compat.Graph’
instance [safe] GHC.Internal.Data.Foldable.Foldable Data.Graph.SCC -- Defined in ‘Data.Graph’
instance GHC.Internal.Data.Foldable.Foldable Distribution.Compat.NonEmptySet.NonEmptySet -- Defined in ‘Distribution.Compat.NonEmptySet’
instance forall i. GHC.Internal.Data.Foldable.Foldable (GHC.Internal.Arr.Array i) -- Defined in ‘GHC.Internal.Data.Foldable’
instance GHC.Internal.Data.Foldable.Foldable GHC.Internal.Data.Ord.Down -- Defined in ‘GHC.Internal.Data.Foldable’
instance GHC.Internal.Data.Foldable.Foldable GHC.Internal.Data.Semigroup.Internal.Dual -- Defined in ‘GHC.Internal.Data.Foldable’
instance forall a. GHC.Internal.Data.Foldable.Foldable (GHC.Internal.Data.Either.Either a) -- Defined in ‘GHC.Internal.Data.Foldable’
instance GHC.Internal.Data.Foldable.Foldable GHC.Internal.Data.Monoid.First -- Defined in ‘GHC.Internal.Data.Foldable’
instance GHC.Internal.Data.Foldable.Foldable GHC.Internal.Data.Monoid.Last -- Defined in ‘GHC.Internal.Data.Foldable’
instance GHC.Internal.Data.Foldable.Foldable [] -- Defined in ‘GHC.Internal.Data.Foldable’
instance GHC.Internal.Data.Foldable.Foldable GHC.Internal.Maybe.Maybe -- Defined in ‘GHC.Internal.Data.Foldable’
instance GHC.Internal.Data.Foldable.Foldable GHC.Internal.Base.NonEmpty -- Defined in ‘GHC.Internal.Data.Foldable’
instance GHC.Internal.Data.Foldable.Foldable GHC.Internal.Generics.Par1 -- Defined in ‘GHC.Internal.Data.Foldable’
instance GHC.Internal.Data.Foldable.Foldable GHC.Internal.Data.Semigroup.Internal.Product -- Defined in ‘GHC.Internal.Data.Foldable’
instance GHC.Internal.Data.Foldable.Foldable Solo -- Defined in ‘GHC.Internal.Data.Foldable’
instance GHC.Internal.Data.Foldable.Foldable GHC.Internal.Data.Semigroup.Internal.Sum -- Defined in ‘GHC.Internal.Data.Foldable’
instance forall a. GHC.Internal.Data.Foldable.Foldable ((,) a) -- Defined in ‘GHC.Internal.Data.Foldable’
instance GHC.Internal.Data.Foldable.Foldable GHC.Internal.Data.Functor.Identity.Identity -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance forall k. GHC.Internal.Data.Foldable.Foldable (Data.Map.Internal.Map k) -- Defined in ‘Data.Map.Internal’
instance GHC.Internal.Data.Foldable.Foldable Data.Set.Internal.Set -- Defined in ‘Data.Set.Internal’
instance GHC.Internal.Data.Foldable.Foldable Distribution.Compiler.PerCompilerFlavor -- Defined in ‘Distribution.Compiler’
instance GHC.Internal.Data.Foldable.Foldable Distribution.Fields.Pretty.PrettyField -- Defined in ‘Distribution.Fields.Pretty’
instance GHC.Internal.Data.Foldable.Foldable Distribution.Fields.Field.Field -- Defined in ‘Distribution.Fields.Field’
instance GHC.Internal.Data.Foldable.Foldable Distribution.Fields.Field.FieldLine -- Defined in ‘Distribution.Fields.Field’
instance GHC.Internal.Data.Foldable.Foldable Distribution.Fields.Field.Name -- Defined in ‘Distribution.Fields.Field’
instance GHC.Internal.Data.Foldable.Foldable Distribution.Fields.Field.SectionArg -- Defined in ‘Distribution.Fields.Field’
instance [safe] GHC.Internal.Data.Foldable.Foldable Distribution.Types.Condition.Condition -- Defined in ‘Distribution.Types.Condition’
instance [safe] forall v c. GHC.Internal.Data.Foldable.Foldable (Distribution.Types.CondTree.CondBranch v c) -- Defined in ‘Distribution.Types.CondTree’
instance [safe] forall v c. GHC.Internal.Data.Foldable.Foldable (Distribution.Types.CondTree.CondTree v c) -- Defined in ‘Distribution.Types.CondTree’
instance GHC.Internal.Data.Foldable.Foldable Distribution.Simple.Compiler.PackageDBX -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Internal.Data.Foldable.Foldable Distribution.Types.VersionRange.Internal.VersionRangeF -- Defined in ‘Distribution.Types.VersionRange.Internal’
instance [safe] GHC.Internal.Data.Foldable.Foldable Distribution.Simple.Flag.Flag -- Defined in ‘Distribution.Simple.Flag’
instance GHC.Internal.Data.String.IsString Distribution.Types.UnitId.UnitId -- Defined in ‘Distribution.Types.UnitId’
instance [safe] GHC.Internal.Data.String.IsString Text.PrettyPrint.HughesPJ.Doc -- Defined in ‘Text.PrettyPrint.HughesPJ’
instance forall a k (b :: k). GHC.Internal.Data.String.IsString a => GHC.Internal.Data.String.IsString (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.String’
instance forall a. GHC.Internal.Data.String.IsString a => GHC.Internal.Data.String.IsString (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.String’
instance forall a. (a ~ GHC.Types.Char) => GHC.Internal.Data.String.IsString [a] -- Defined in ‘GHC.Internal.Data.String’
instance GHC.Internal.Data.String.IsString Distribution.Types.AbiHash.AbiHash -- Defined in ‘Distribution.Types.AbiHash’
instance GHC.Internal.Data.String.IsString Distribution.Types.ComponentId.ComponentId -- Defined in ‘Distribution.Types.ComponentId’
instance GHC.Internal.Data.String.IsString Distribution.Types.PackageName.PackageName -- Defined in ‘Distribution.Types.PackageName’
instance GHC.Internal.Data.String.IsString Distribution.Types.PkgconfigName.PkgconfigName -- Defined in ‘Distribution.Types.PkgconfigName’
instance GHC.Internal.Data.String.IsString Distribution.ModuleName.ModuleName -- Defined in ‘Distribution.ModuleName’
instance GHC.Internal.Data.String.IsString Distribution.Types.Flag.FlagName -- Defined in ‘Distribution.Types.Flag’
instance GHC.Internal.Data.String.IsString Distribution.Types.UnqualComponentName.UnqualComponentName -- Defined in ‘Distribution.Types.UnqualComponentName’
instance GHC.Internal.Data.String.IsString Distribution.Simple.PreProcess.Types.Suffix -- Defined in ‘Distribution.Simple.PreProcess.Types’
instance GHC.Internal.Data.String.IsString Distribution.Utils.ShortText.ShortText -- Defined in ‘Distribution.Utils.ShortText’
instance [safe] GHC.Internal.Data.Traversable.Traversable Data.Graph.SCC -- Defined in ‘Data.Graph’
instance forall k. GHC.Internal.Data.Traversable.Traversable (Data.Map.Internal.Map k) -- Defined in ‘Data.Map.Internal’
instance forall i. GHC.Internal.Ix.Ix i => GHC.Internal.Data.Traversable.Traversable (GHC.Internal.Arr.Array i) -- Defined in ‘GHC.Internal.Data.Traversable’
instance GHC.Internal.Data.Traversable.Traversable GHC.Internal.Data.Ord.Down -- Defined in ‘GHC.Internal.Data.Traversable’
instance GHC.Internal.Data.Traversable.Traversable GHC.Internal.Data.Semigroup.Internal.Dual -- Defined in ‘GHC.Internal.Data.Traversable’
instance forall a. GHC.Internal.Data.Traversable.Traversable (GHC.Internal.Data.Either.Either a) -- Defined in ‘GHC.Internal.Data.Traversable’
instance GHC.Internal.Data.Traversable.Traversable GHC.Internal.Data.Monoid.First -- Defined in ‘GHC.Internal.Data.Traversable’
instance GHC.Internal.Data.Traversable.Traversable GHC.Internal.Data.Functor.Identity.Identity -- Defined in ‘GHC.Internal.Data.Traversable’
instance GHC.Internal.Data.Traversable.Traversable GHC.Internal.Data.Monoid.Last -- Defined in ‘GHC.Internal.Data.Traversable’
instance GHC.Internal.Data.Traversable.Traversable [] -- Defined in ‘GHC.Internal.Data.Traversable’
instance GHC.Internal.Data.Traversable.Traversable GHC.Internal.Maybe.Maybe -- Defined in ‘GHC.Internal.Data.Traversable’
instance GHC.Internal.Data.Traversable.Traversable GHC.Internal.Base.NonEmpty -- Defined in ‘GHC.Internal.Data.Traversable’
instance GHC.Internal.Data.Traversable.Traversable GHC.Internal.Generics.Par1 -- Defined in ‘GHC.Internal.Data.Traversable’
instance GHC.Internal.Data.Traversable.Traversable GHC.Internal.Data.Semigroup.Internal.Product -- Defined in ‘GHC.Internal.Data.Traversable’
instance GHC.Internal.Data.Traversable.Traversable Solo -- Defined in ‘GHC.Internal.Data.Traversable’
instance GHC.Internal.Data.Traversable.Traversable GHC.Internal.Data.Semigroup.Internal.Sum -- Defined in ‘GHC.Internal.Data.Traversable’
instance forall a. GHC.Internal.Data.Traversable.Traversable ((,) a) -- Defined in ‘GHC.Internal.Data.Traversable’
instance GHC.Internal.Data.Traversable.Traversable Distribution.Compiler.PerCompilerFlavor -- Defined in ‘Distribution.Compiler’
instance GHC.Internal.Data.Traversable.Traversable Distribution.Fields.Pretty.PrettyField -- Defined in ‘Distribution.Fields.Pretty’
instance GHC.Internal.Data.Traversable.Traversable Distribution.Fields.Field.Field -- Defined in ‘Distribution.Fields.Field’
instance GHC.Internal.Data.Traversable.Traversable Distribution.Fields.Field.FieldLine -- Defined in ‘Distribution.Fields.Field’
instance GHC.Internal.Data.Traversable.Traversable Distribution.Fields.Field.Name -- Defined in ‘Distribution.Fields.Field’
instance GHC.Internal.Data.Traversable.Traversable Distribution.Fields.Field.SectionArg -- Defined in ‘Distribution.Fields.Field’
instance [safe] GHC.Internal.Data.Traversable.Traversable Distribution.Types.Condition.Condition -- Defined in ‘Distribution.Types.Condition’
instance [safe] forall v c. GHC.Internal.Data.Traversable.Traversable (Distribution.Types.CondTree.CondBranch v c) -- Defined in ‘Distribution.Types.CondTree’
instance [safe] forall v c. GHC.Internal.Data.Traversable.Traversable (Distribution.Types.CondTree.CondTree v c) -- Defined in ‘Distribution.Types.CondTree’
instance GHC.Internal.Data.Traversable.Traversable Distribution.Simple.Compiler.PackageDBX -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Internal.Data.Traversable.Traversable Distribution.Types.VersionRange.Internal.VersionRangeF -- Defined in ‘Distribution.Types.VersionRange.Internal’
instance [safe] GHC.Internal.Data.Traversable.Traversable Distribution.Simple.Flag.Flag -- Defined in ‘Distribution.Simple.Flag’
instance forall k. GHC.Internal.Data.Type.Equality.TestEquality ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.TypeRep -- Defined in ‘ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal’
instance [safe] GHC.Internal.Enum.Bounded Distribution.CabalSpecVersion.CabalSpecVersion -- Defined in ‘Distribution.CabalSpecVersion’
instance GHC.Internal.Enum.Bounded GHC.Internal.Word.Word16 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Enum.Bounded GHC.Internal.Word.Word32 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Enum.Bounded GHC.Internal.Word.Word64 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Enum.Bounded GHC.Internal.Word.Word8 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Enum.Bounded GHC.Types.Bool -- Defined in ‘GHC.Internal.Enum’
instance GHC.Internal.Enum.Bounded GHC.Types.Char -- Defined in ‘GHC.Internal.Enum’
instance GHC.Internal.Enum.Bounded GHC.Types.Int -- Defined in ‘GHC.Internal.Enum’
instance GHC.Internal.Enum.Bounded GHC.Types.Levity -- Defined in ‘GHC.Internal.Enum’
instance GHC.Internal.Enum.Bounded GHC.Types.Ordering -- Defined in ‘GHC.Internal.Enum’
instance forall a. GHC.Internal.Enum.Bounded a => GHC.Internal.Enum.Bounded (Solo a) -- Defined in ‘GHC.Internal.Enum’
instance forall a b c d e f g h i j. (GHC.Internal.Enum.Bounded a, GHC.Internal.Enum.Bounded b, GHC.Internal.Enum.Bounded c, GHC.Internal.Enum.Bounded d, GHC.Internal.Enum.Bounded e, GHC.Internal.Enum.Bounded f, GHC.Internal.Enum.Bounded g, GHC.Internal.Enum.Bounded h, GHC.Internal.Enum.Bounded i, GHC.Internal.Enum.Bounded j) => GHC.Internal.Enum.Bounded (a, b, c, d, e, f, g, h, i, j) -- Defined in ‘GHC.Internal.Enum’
instance forall a b c d e f g h i j k. (GHC.Internal.Enum.Bounded a, GHC.Internal.Enum.Bounded b, GHC.Internal.Enum.Bounded c, GHC.Internal.Enum.Bounded d, GHC.Internal.Enum.Bounded e, GHC.Internal.Enum.Bounded f, GHC.Internal.Enum.Bounded g, GHC.Internal.Enum.Bounded h, GHC.Internal.Enum.Bounded i, GHC.Internal.Enum.Bounded j, GHC.Internal.Enum.Bounded k) => GHC.Internal.Enum.Bounded (a, b, c, d, e, f, g, h, i, j, k) -- Defined in ‘GHC.Internal.Enum’
instance forall a b c d e f g h i j k l. (GHC.Internal.Enum.Bounded a, GHC.Internal.Enum.Bounded b, GHC.Internal.Enum.Bounded c, GHC.Internal.Enum.Bounded d, GHC.Internal.Enum.Bounded e, GHC.Internal.Enum.Bounded f, GHC.Internal.Enum.Bounded g, GHC.Internal.Enum.Bounded h, GHC.Internal.Enum.Bounded i, GHC.Internal.Enum.Bounded j, GHC.Internal.Enum.Bounded k, GHC.Internal.Enum.Bounded l) => GHC.Internal.Enum.Bounded (a, b, c, d, e, f, g, h, i, j, k, l) -- Defined in ‘GHC.Internal.Enum’
instance forall a b c d e f g h i j k l m. (GHC.Internal.Enum.Bounded a, GHC.Internal.Enum.Bounded b, GHC.Internal.Enum.Bounded c, GHC.Internal.Enum.Bounded d, GHC.Internal.Enum.Bounded e, GHC.Internal.Enum.Bounded f, GHC.Internal.Enum.Bounded g, GHC.Internal.Enum.Bounded h, GHC.Internal.Enum.Bounded i, GHC.Internal.Enum.Bounded j, GHC.Internal.Enum.Bounded k, GHC.Internal.Enum.Bounded l, GHC.Internal.Enum.Bounded m) => GHC.Internal.Enum.Bounded (a, b, c, d, e, f, g, h, i, j, k, l, m) -- Defined in ‘GHC.Internal.Enum’
instance forall a b c d e f g h i j k l m n. (GHC.Internal.Enum.Bounded a, GHC.Internal.Enum.Bounded b, GHC.Internal.Enum.Bounded c, GHC.Internal.Enum.Bounded d, GHC.Internal.Enum.Bounded e, GHC.Internal.Enum.Bounded f, GHC.Internal.Enum.Bounded g, GHC.Internal.Enum.Bounded h, GHC.Internal.Enum.Bounded i, GHC.Internal.Enum.Bounded j, GHC.Internal.Enum.Bounded k, GHC.Internal.Enum.Bounded l, GHC.Internal.Enum.Bounded m, GHC.Internal.Enum.Bounded n) => GHC.Internal.Enum.Bounded (a, b, c, d, e, f, g, h, i, j, k, l, m, n) -- Defined in ‘GHC.Internal.Enum’
instance forall a b c d e f g h i j k l m n o. (GHC.Internal.Enum.Bounded a, GHC.Internal.Enum.Bounded b, GHC.Internal.Enum.Bounded c, GHC.Internal.Enum.Bounded d, GHC.Internal.Enum.Bounded e, GHC.Internal.Enum.Bounded f, GHC.Internal.Enum.Bounded g, GHC.Internal.Enum.Bounded h, GHC.Internal.Enum.Bounded i, GHC.Internal.Enum.Bounded j, GHC.Internal.Enum.Bounded k, GHC.Internal.Enum.Bounded l, GHC.Internal.Enum.Bounded m, GHC.Internal.Enum.Bounded n, GHC.Internal.Enum.Bounded o) => GHC.Internal.Enum.Bounded (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) -- Defined in ‘GHC.Internal.Enum’
instance forall a b. (GHC.Internal.Enum.Bounded a, GHC.Internal.Enum.Bounded b) => GHC.Internal.Enum.Bounded (a, b) -- Defined in ‘GHC.Internal.Enum’
instance forall a b c. (GHC.Internal.Enum.Bounded a, GHC.Internal.Enum.Bounded b, GHC.Internal.Enum.Bounded c) => GHC.Internal.Enum.Bounded (a, b, c) -- Defined in ‘GHC.Internal.Enum’
instance forall a b c d. (GHC.Internal.Enum.Bounded a, GHC.Internal.Enum.Bounded b, GHC.Internal.Enum.Bounded c, GHC.Internal.Enum.Bounded d) => GHC.Internal.Enum.Bounded (a, b, c, d) -- Defined in ‘GHC.Internal.Enum’
instance forall a b c d e. (GHC.Internal.Enum.Bounded a, GHC.Internal.Enum.Bounded b, GHC.Internal.Enum.Bounded c, GHC.Internal.Enum.Bounded d, GHC.Internal.Enum.Bounded e) => GHC.Internal.Enum.Bounded (a, b, c, d, e) -- Defined in ‘GHC.Internal.Enum’
instance forall a b c d e f. (GHC.Internal.Enum.Bounded a, GHC.Internal.Enum.Bounded b, GHC.Internal.Enum.Bounded c, GHC.Internal.Enum.Bounded d, GHC.Internal.Enum.Bounded e, GHC.Internal.Enum.Bounded f) => GHC.Internal.Enum.Bounded (a, b, c, d, e, f) -- Defined in ‘GHC.Internal.Enum’
instance forall a b c d e f g. (GHC.Internal.Enum.Bounded a, GHC.Internal.Enum.Bounded b, GHC.Internal.Enum.Bounded c, GHC.Internal.Enum.Bounded d, GHC.Internal.Enum.Bounded e, GHC.Internal.Enum.Bounded f, GHC.Internal.Enum.Bounded g) => GHC.Internal.Enum.Bounded (a, b, c, d, e, f, g) -- Defined in ‘GHC.Internal.Enum’
instance forall a b c d e f g h. (GHC.Internal.Enum.Bounded a, GHC.Internal.Enum.Bounded b, GHC.Internal.Enum.Bounded c, GHC.Internal.Enum.Bounded d, GHC.Internal.Enum.Bounded e, GHC.Internal.Enum.Bounded f, GHC.Internal.Enum.Bounded g, GHC.Internal.Enum.Bounded h) => GHC.Internal.Enum.Bounded (a, b, c, d, e, f, g, h) -- Defined in ‘GHC.Internal.Enum’
instance forall a b c d e f g h i. (GHC.Internal.Enum.Bounded a, GHC.Internal.Enum.Bounded b, GHC.Internal.Enum.Bounded c, GHC.Internal.Enum.Bounded d, GHC.Internal.Enum.Bounded e, GHC.Internal.Enum.Bounded f, GHC.Internal.Enum.Bounded g, GHC.Internal.Enum.Bounded h, GHC.Internal.Enum.Bounded i) => GHC.Internal.Enum.Bounded (a, b, c, d, e, f, g, h, i) -- Defined in ‘GHC.Internal.Enum’
instance GHC.Internal.Enum.Bounded () -- Defined in ‘GHC.Internal.Enum’
instance GHC.Internal.Enum.Bounded GHC.Types.VecCount -- Defined in ‘GHC.Internal.Enum’
instance GHC.Internal.Enum.Bounded GHC.Types.VecElem -- Defined in ‘GHC.Internal.Enum’
instance GHC.Internal.Enum.Bounded GHC.Types.Word -- Defined in ‘GHC.Internal.Enum’
instance forall a k (b :: k). GHC.Internal.Enum.Bounded a => GHC.Internal.Enum.Bounded (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.Functor.Const’
instance GHC.Internal.Enum.Bounded GHC.Internal.Generics.Associativity -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Enum.Bounded GHC.Internal.Generics.DecidedStrictness -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Enum.Bounded GHC.Internal.Generics.SourceStrictness -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Enum.Bounded GHC.Internal.Generics.SourceUnpackedness -- Defined in ‘GHC.Internal.Generics’
instance forall a. GHC.Internal.Enum.Bounded a => GHC.Internal.Enum.Bounded (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance GHC.Internal.Enum.Bounded GHC.Internal.Int.Int16 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Enum.Bounded GHC.Internal.Int.Int32 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Enum.Bounded GHC.Internal.Int.Int64 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Enum.Bounded GHC.Internal.Int.Int8 -- Defined in ‘GHC.Internal.Int’
instance forall k (t :: k). GHC.Internal.Enum.Bounded (GHC.Internal.Data.Proxy.Proxy t) -- Defined in ‘GHC.Internal.Data.Proxy’
instance forall a. GHC.Internal.Enum.Bounded a => GHC.Internal.Enum.Bounded (GHC.Internal.Data.Ord.Down a) -- Defined in ‘GHC.Internal.Data.Ord’
instance GHC.Internal.Enum.Bounded GHC.Internal.Unicode.GeneralCategory -- Defined in ‘GHC.Internal.Unicode’
instance GHC.Internal.Enum.Bounded GHC.Internal.Data.Semigroup.Internal.All -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Internal.Enum.Bounded GHC.Internal.Data.Semigroup.Internal.Any -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Enum.Bounded a => GHC.Internal.Enum.Bounded (GHC.Internal.Data.Semigroup.Internal.Dual a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Enum.Bounded a => GHC.Internal.Enum.Bounded (GHC.Internal.Data.Semigroup.Internal.Product a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Enum.Bounded a => GHC.Internal.Enum.Bounded (GHC.Internal.Data.Semigroup.Internal.Sum a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Internal.Enum.Bounded Distribution.Compat.Time.ModTime -- Defined in ‘Distribution.Compat.Time’
instance [safe] GHC.Internal.Enum.Bounded Distribution.Parsec.Warning.PWarnType -- Defined in ‘Distribution.Parsec.Warning’
instance GHC.Internal.Enum.Bounded Distribution.Types.SourceRepo.KnownRepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Internal.Enum.Bounded Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning.CheckExplanationID -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning’
instance GHC.Internal.Enum.Bounded Distribution.SPDX.LicenseId.LicenseId -- Defined in ‘Distribution.SPDX.LicenseId’
instance GHC.Internal.Enum.Bounded Distribution.SPDX.LicenseExceptionId.LicenseExceptionId -- Defined in ‘Distribution.SPDX.LicenseExceptionId’
instance [safe] GHC.Internal.Enum.Bounded Distribution.SPDX.LicenseListVersion.LicenseListVersion -- Defined in ‘Distribution.SPDX.LicenseListVersion’
instance GHC.Internal.Enum.Bounded Language.Haskell.Extension.KnownExtension -- Defined in ‘Language.Haskell.Extension’
instance GHC.Internal.Enum.Bounded Distribution.Simple.Compiler.DebugInfoLevel -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Internal.Enum.Bounded Distribution.Simple.Compiler.OptimisationLevel -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Internal.Enum.Bounded Distribution.Simple.BuildTarget.ComponentKind -- Defined in ‘Distribution.Simple.BuildTarget’
instance [safe] forall a. GHC.Internal.Enum.Bounded a => GHC.Internal.Enum.Bounded (Distribution.Simple.Flag.Flag a) -- Defined in ‘Distribution.Simple.Flag’
instance GHC.Internal.Enum.Bounded Distribution.Simple.Hpc.Way -- Defined in ‘Distribution.Simple.Hpc’
instance GHC.Internal.Enum.Bounded Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestShowDetails -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Test’
instance [safe] GHC.Internal.Enum.Bounded Distribution.Types.DumpBuildInfo.DumpBuildInfo -- Defined in ‘Distribution.Types.DumpBuildInfo’
instance GHC.Internal.Enum.Bounded Distribution.Verbosity.Verbosity -- Defined in ‘Distribution.Verbosity’
instance [safe] GHC.Internal.Enum.Bounded Distribution.Verbosity.Internal.VerbosityFlag -- Defined in ‘Distribution.Verbosity.Internal’
instance [safe] GHC.Internal.Enum.Bounded Distribution.Verbosity.Internal.VerbosityLevel -- Defined in ‘Distribution.Verbosity.Internal’
instance [safe] GHC.Internal.Enum.Enum Distribution.CabalSpecVersion.CabalSpecVersion -- Defined in ‘Distribution.CabalSpecVersion’
instance GHC.Internal.Enum.Enum GHC.Internal.Word.Word16 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Enum.Enum GHC.Internal.Word.Word32 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Enum.Enum GHC.Internal.Word.Word64 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Enum.Enum GHC.Internal.Word.Word8 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Enum.Enum GHC.Types.Double -- Defined in ‘GHC.Internal.Float’
instance GHC.Internal.Enum.Enum GHC.Types.Float -- Defined in ‘GHC.Internal.Float’
instance forall a. GHC.Internal.Real.Integral a => GHC.Internal.Enum.Enum (GHC.Internal.Real.Ratio a) -- Defined in ‘GHC.Internal.Real’
instance GHC.Internal.Enum.Enum GHC.Types.Bool -- Defined in ‘GHC.Internal.Enum’
instance GHC.Internal.Enum.Enum GHC.Types.Char -- Defined in ‘GHC.Internal.Enum’
instance GHC.Internal.Enum.Enum GHC.Types.Int -- Defined in ‘GHC.Internal.Enum’
instance GHC.Internal.Enum.Enum GHC.Num.Integer.Integer -- Defined in ‘GHC.Internal.Enum’
instance GHC.Internal.Enum.Enum GHC.Types.Levity -- Defined in ‘GHC.Internal.Enum’
instance GHC.Internal.Enum.Enum GHC.Num.Natural.Natural -- Defined in ‘GHC.Internal.Enum’
instance GHC.Internal.Enum.Enum GHC.Types.Ordering -- Defined in ‘GHC.Internal.Enum’
instance forall a. GHC.Internal.Enum.Enum a => GHC.Internal.Enum.Enum (Solo a) -- Defined in ‘GHC.Internal.Enum’
instance GHC.Internal.Enum.Enum () -- Defined in ‘GHC.Internal.Enum’
instance GHC.Internal.Enum.Enum GHC.Types.VecCount -- Defined in ‘GHC.Internal.Enum’
instance GHC.Internal.Enum.Enum GHC.Types.VecElem -- Defined in ‘GHC.Internal.Enum’
instance GHC.Internal.Enum.Enum GHC.Types.Word -- Defined in ‘GHC.Internal.Enum’
instance forall a k (b :: k). GHC.Internal.Enum.Enum a => GHC.Internal.Enum.Enum (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.Functor.Const’
instance GHC.Internal.Enum.Enum GHC.Internal.Generics.Associativity -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Enum.Enum GHC.Internal.Generics.DecidedStrictness -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Enum.Enum GHC.Internal.Generics.SourceStrictness -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Enum.Enum GHC.Internal.Generics.SourceUnpackedness -- Defined in ‘GHC.Internal.Generics’
instance forall a. GHC.Internal.Enum.Enum a => GHC.Internal.Enum.Enum (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance GHC.Internal.Enum.Enum GHC.Internal.Int.Int16 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Enum.Enum GHC.Internal.Int.Int32 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Enum.Enum GHC.Internal.Int.Int64 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Enum.Enum GHC.Internal.Int.Int8 -- Defined in ‘GHC.Internal.Int’
instance forall k (s :: k). GHC.Internal.Enum.Enum (GHC.Internal.Data.Proxy.Proxy s) -- Defined in ‘GHC.Internal.Data.Proxy’
instance forall a. (GHC.Internal.Enum.Enum a, GHC.Internal.Enum.Bounded a, GHC.Classes.Eq a) => GHC.Internal.Enum.Enum (GHC.Internal.Data.Ord.Down a) -- Defined in ‘GHC.Internal.Data.Ord’
instance GHC.Internal.Enum.Enum GHC.Internal.Unicode.GeneralCategory -- Defined in ‘GHC.Internal.Unicode’
instance forall k (f :: k -> *) (a :: k). GHC.Internal.Enum.Enum (f a) => GHC.Internal.Enum.Enum (GHC.Internal.Data.Semigroup.Internal.Alt f a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance [safe] GHC.Internal.Enum.Enum Distribution.Parsec.Warning.PWarnType -- Defined in ‘Distribution.Parsec.Warning’
instance GHC.Internal.Enum.Enum Distribution.Types.SourceRepo.KnownRepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Internal.Enum.Enum Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning.CheckExplanationID -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning’
instance GHC.Internal.Enum.Enum Distribution.SPDX.LicenseId.LicenseId -- Defined in ‘Distribution.SPDX.LicenseId’
instance GHC.Internal.Enum.Enum Distribution.SPDX.LicenseExceptionId.LicenseExceptionId -- Defined in ‘Distribution.SPDX.LicenseExceptionId’
instance [safe] GHC.Internal.Enum.Enum Distribution.SPDX.LicenseListVersion.LicenseListVersion -- Defined in ‘Distribution.SPDX.LicenseListVersion’
instance GHC.Internal.Enum.Enum Language.Haskell.Extension.KnownExtension -- Defined in ‘Language.Haskell.Extension’
instance GHC.Internal.Enum.Enum Distribution.Simple.Compiler.DebugInfoLevel -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Internal.Enum.Enum Distribution.Simple.Compiler.OptimisationLevel -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Internal.Enum.Enum Distribution.Simple.BuildTarget.ComponentKind -- Defined in ‘Distribution.Simple.BuildTarget’
instance GHC.Internal.Enum.Enum Distribution.Simple.BuildTarget.QualLevel -- Defined in ‘Distribution.Simple.BuildTarget’
instance [safe] GHC.Internal.Enum.Enum Distribution.Simple.BuildWay.BuildWay -- Defined in ‘Distribution.Simple.BuildWay’
instance [safe] forall a. GHC.Internal.Enum.Enum a => GHC.Internal.Enum.Enum (Distribution.Simple.Flag.Flag a) -- Defined in ‘Distribution.Simple.Flag’
instance GHC.Internal.Enum.Enum Distribution.Simple.Hpc.Way -- Defined in ‘Distribution.Simple.Hpc’
instance GHC.Internal.Enum.Enum Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestShowDetails -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Test’
instance [safe] GHC.Internal.Enum.Enum Distribution.Types.DumpBuildInfo.DumpBuildInfo -- Defined in ‘Distribution.Types.DumpBuildInfo’
instance GHC.Internal.Enum.Enum Distribution.Verbosity.Verbosity -- Defined in ‘Distribution.Verbosity’
instance [safe] GHC.Internal.Enum.Enum Distribution.Verbosity.Internal.VerbosityFlag -- Defined in ‘Distribution.Verbosity.Internal’
instance [safe] GHC.Internal.Enum.Enum Distribution.Verbosity.Internal.VerbosityLevel -- Defined in ‘Distribution.Verbosity.Internal’
instance GHC.Internal.Exception.Type.Exception GHC.Internal.Exception.Type.ArithException -- Defined in ‘GHC.Internal.Exception.Type’
instance forall a. GHC.Internal.Exception.Type.Exception a => GHC.Internal.Exception.Type.Exception (GHC.Internal.Exception.Type.ExceptionWithContext a) -- Defined in ‘GHC.Internal.Exception.Type’
instance forall e. GHC.Internal.Exception.Type.Exception e => GHC.Internal.Exception.Type.Exception (GHC.Internal.Exception.Type.NoBacktrace e) -- Defined in ‘GHC.Internal.Exception.Type’
instance GHC.Internal.Exception.Type.Exception GHC.Internal.Exception.Type.SomeException -- Defined in ‘GHC.Internal.Exception.Type’
instance GHC.Internal.Exception.Type.Exception GHC.Internal.Base.Void -- Defined in ‘GHC.Internal.Exception.Type’
instance GHC.Internal.Exception.Type.Exception GHC.Internal.IO.Exception.AllocationLimitExceeded -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Exception.Type.Exception GHC.Internal.IO.Exception.ArrayException -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Exception.Type.Exception GHC.Internal.IO.Exception.AssertionFailed -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Exception.Type.Exception GHC.Internal.IO.Exception.AsyncException -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Exception.Type.Exception GHC.Internal.IO.Exception.BlockedIndefinitelyOnMVar -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Exception.Type.Exception GHC.Internal.IO.Exception.BlockedIndefinitelyOnSTM -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Exception.Type.Exception GHC.Internal.IO.Exception.CompactionFailed -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Exception.Type.Exception GHC.Internal.IO.Exception.Deadlock -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Exception.Type.Exception GHC.Internal.IO.Exception.ExitCode -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Exception.Type.Exception GHC.Internal.IO.Exception.FixIOException -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Exception.Type.Exception GHC.Internal.IO.Exception.IOException -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Exception.Type.Exception GHC.Internal.IO.Exception.SomeAsyncException -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Exception.Type.Exception Distribution.Simple.Configure.ConfigStateFileError -- Defined in ‘Distribution.Simple.Configure’
instance GHC.Internal.Exception.Type.Exception Cabal-3.15.0.0:Distribution.Simple.GHC.EnvironmentParser.ParseErrorExc -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.GHC.EnvironmentParser’
instance GHC.Internal.Exception.Type.Exception (Distribution.Simple.Utils.VerboseException Distribution.Simple.Errors.CabalException) -- Defined in ‘Distribution.Simple.Utils’
instance GHC.Internal.Float.Floating GHC.Types.Double -- Defined in ‘GHC.Internal.Float’
instance GHC.Internal.Float.Floating GHC.Types.Float -- Defined in ‘GHC.Internal.Float’
instance forall a k (b :: k). GHC.Internal.Float.Floating a => GHC.Internal.Float.Floating (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.Functor.Const’
instance forall a. GHC.Internal.Float.Floating a => GHC.Internal.Float.Floating (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance forall a. GHC.Internal.Float.Floating a => GHC.Internal.Float.Floating (GHC.Internal.Data.Ord.Down a) -- Defined in ‘GHC.Internal.Data.Ord’
instance GHC.Internal.Float.RealFloat GHC.Types.Double -- Defined in ‘GHC.Internal.Float’
instance GHC.Internal.Float.RealFloat GHC.Types.Float -- Defined in ‘GHC.Internal.Float’
instance forall a k (b :: k). GHC.Internal.Float.RealFloat a => GHC.Internal.Float.RealFloat (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.Functor.Const’
instance forall a. GHC.Internal.Float.RealFloat a => GHC.Internal.Float.RealFloat (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance forall a. GHC.Internal.Float.RealFloat a => GHC.Internal.Float.RealFloat (GHC.Internal.Data.Ord.Down a) -- Defined in ‘GHC.Internal.Data.Ord’
instance forall a k (b :: k). GHC.Internal.Foreign.Storable.Storable a => GHC.Internal.Foreign.Storable.Storable (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.Functor.Const’
instance forall a. GHC.Internal.Foreign.Storable.Storable a => GHC.Internal.Foreign.Storable.Storable (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance forall a. GHC.Internal.Foreign.Storable.Storable a => GHC.Internal.Foreign.Storable.Storable (GHC.Internal.Data.Ord.Down a) -- Defined in ‘GHC.Internal.Data.Ord’
instance forall (n :: GHC.Types.Symbol) (f :: GHC.Internal.Generics.FixityI) (r :: GHC.Types.Bool). (GHC.Internal.TypeLits.KnownSymbol n, GHC.Internal.Generics.SingI f, GHC.Internal.Generics.SingI r) => GHC.Internal.Generics.Constructor (GHC.Internal.Generics.MetaCons n f r) -- Defined in ‘GHC.Internal.Generics’
instance forall (n :: GHC.Types.Symbol) (m :: GHC.Types.Symbol) (p :: GHC.Types.Symbol) (nt :: GHC.Types.Bool). (GHC.Internal.TypeLits.KnownSymbol n, GHC.Internal.TypeLits.KnownSymbol m, GHC.Internal.TypeLits.KnownSymbol p, GHC.Internal.Generics.SingI nt) => GHC.Internal.Generics.Datatype (GHC.Internal.Generics.MetaData n m p nt) -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.Generic Distribution.Backpack.OpenModule -- Defined in ‘Distribution.Backpack’
instance GHC.Internal.Generics.Generic Distribution.Backpack.OpenUnitId -- Defined in ‘Distribution.Backpack’
instance GHC.Internal.Generics.Generic Distribution.Types.UnitId.DefUnitId -- Defined in ‘Distribution.Types.UnitId’
instance GHC.Internal.Generics.Generic Distribution.Types.UnitId.UnitId -- Defined in ‘Distribution.Types.UnitId’
instance GHC.Internal.Generics.Generic Distribution.Backpack.FullUnitId.FullUnitId -- Defined in ‘Distribution.Backpack.FullUnitId’
instance GHC.Internal.Generics.Generic Distribution.Backpack.ModuleShape.ModuleShape -- Defined in ‘Distribution.Backpack.ModuleShape’
instance GHC.Internal.Generics.Generic Distribution.Backpack.PreModuleShape.PreModuleShape -- Defined in ‘Distribution.Backpack.PreModuleShape’
instance [safe] GHC.Internal.Generics.Generic Distribution.CabalSpecVersion.CabalSpecVersion -- Defined in ‘Distribution.CabalSpecVersion’
instance forall (a :: * -> * -> *) b c. GHC.Internal.Generics.Generic (Control.Applicative.WrappedArrow a b c) -- Defined in ‘Control.Applicative’
instance forall (m :: * -> *) a. GHC.Internal.Generics.Generic (Control.Applicative.WrappedMonad m a) -- Defined in ‘Control.Applicative’
instance [safe] forall vertex. GHC.Internal.Generics.Generic (Data.Graph.SCC vertex) -- Defined in ‘Data.Graph’
instance [safe] GHC.Internal.Generics.Generic Text.PrettyPrint.HughesPJ.Doc -- Defined in ‘Text.PrettyPrint.HughesPJ’
instance forall a k (b :: k). GHC.Internal.Generics.Generic (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.Functor.Const’
instance GHC.Internal.Generics.Generic GHC.Internal.IO.Exception.ExitCode -- Defined in ‘GHC.Internal.IO.Exception’
instance forall k (f :: k -> *) (g :: k -> *) (p :: k). GHC.Internal.Generics.Generic ((GHC.Internal.Generics.:*:) f g p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (f :: k -> *) (g :: k -> *) (p :: k). GHC.Internal.Generics.Generic ((GHC.Internal.Generics.:+:) f g p) -- Defined in ‘GHC.Internal.Generics’
instance forall k2 (f :: k2 -> *) k1 (g :: k1 -> k2) (p :: k1). GHC.Internal.Generics.Generic ((GHC.Internal.Generics.:.:) f g p) -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.Generic GHC.Internal.Generics.Associativity -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.Generic GHC.Types.Bool -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.Generic GHC.Internal.Generics.DecidedStrictness -- Defined in ‘GHC.Internal.Generics’
instance forall a. GHC.Internal.Generics.Generic (GHC.Internal.Data.Ord.Down a) -- Defined in ‘GHC.Internal.Generics’
instance forall a b. GHC.Internal.Generics.Generic (GHC.Internal.Data.Either.Either a b) -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.Generic GHC.Internal.Fingerprint.Type.Fingerprint -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.Generic GHC.Internal.Generics.Fixity -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.Generic GHC.Internal.Unicode.GeneralCategory -- Defined in ‘GHC.Internal.Generics’
instance forall i c k (p :: k). GHC.Internal.Generics.Generic (GHC.Internal.Generics.K1 i c p) -- Defined in ‘GHC.Internal.Generics’
instance forall a. GHC.Internal.Generics.Generic [a] -- Defined in ‘GHC.Internal.Generics’
instance forall i (c :: GHC.Internal.Generics.Meta) k (f :: k -> *) (p :: k). GHC.Internal.Generics.Generic (GHC.Internal.Generics.M1 i c f p) -- Defined in ‘GHC.Internal.Generics’
instance forall a. GHC.Internal.Generics.Generic (GHC.Internal.Maybe.Maybe a) -- Defined in ‘GHC.Internal.Generics’
instance forall a. GHC.Internal.Generics.Generic (GHC.Internal.Base.NonEmpty a) -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.Generic GHC.Types.Ordering -- Defined in ‘GHC.Internal.Generics’
instance forall p. GHC.Internal.Generics.Generic (GHC.Internal.Generics.Par1 p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (t :: k). GHC.Internal.Generics.Generic (GHC.Internal.Data.Proxy.Proxy t) -- Defined in ‘GHC.Internal.Generics’
instance forall k (f :: k -> *) (p :: k). GHC.Internal.Generics.Generic (GHC.Internal.Generics.Rec1 f p) -- Defined in ‘GHC.Internal.Generics’
instance forall a. GHC.Internal.Generics.Generic (Solo a) -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.Generic GHC.Internal.Generics.SourceStrictness -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.Generic GHC.Internal.Generics.SourceUnpackedness -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.Generic GHC.Internal.Stack.Types.SrcLoc -- Defined in ‘GHC.Internal.Generics’
instance forall a b c d e f g h i j. GHC.Internal.Generics.Generic (a, b, c, d, e, f, g, h, i, j) -- Defined in ‘GHC.Internal.Generics’
instance forall a b c d e f g h i j k. GHC.Internal.Generics.Generic (a, b, c, d, e, f, g, h, i, j, k) -- Defined in ‘GHC.Internal.Generics’
instance forall a b c d e f g h i j k l. GHC.Internal.Generics.Generic (a, b, c, d, e, f, g, h, i, j, k, l) -- Defined in ‘GHC.Internal.Generics’
instance forall a b c d e f g h i j k l m. GHC.Internal.Generics.Generic (a, b, c, d, e, f, g, h, i, j, k, l, m) -- Defined in ‘GHC.Internal.Generics’
instance forall a b c d e f g h i j k l m n. GHC.Internal.Generics.Generic (a, b, c, d, e, f, g, h, i, j, k, l, m, n) -- Defined in ‘GHC.Internal.Generics’
instance forall a b c d e f g h i j k l m n o. GHC.Internal.Generics.Generic (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) -- Defined in ‘GHC.Internal.Generics’
instance forall a b. GHC.Internal.Generics.Generic (a, b) -- Defined in ‘GHC.Internal.Generics’
instance forall a b c. GHC.Internal.Generics.Generic (a, b, c) -- Defined in ‘GHC.Internal.Generics’
instance forall a b c d. GHC.Internal.Generics.Generic (a, b, c, d) -- Defined in ‘GHC.Internal.Generics’
instance forall a b c d e. GHC.Internal.Generics.Generic (a, b, c, d, e) -- Defined in ‘GHC.Internal.Generics’
instance forall a b c d e f. GHC.Internal.Generics.Generic (a, b, c, d, e, f) -- Defined in ‘GHC.Internal.Generics’
instance forall a b c d e f g. GHC.Internal.Generics.Generic (a, b, c, d, e, f, g) -- Defined in ‘GHC.Internal.Generics’
instance forall a b c d e f g h. GHC.Internal.Generics.Generic (a, b, c, d, e, f, g, h) -- Defined in ‘GHC.Internal.Generics’
instance forall a b c d e f g h i. GHC.Internal.Generics.Generic (a, b, c, d, e, f, g, h, i) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Internal.Generics.Generic (GHC.Internal.Generics.U1 p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Internal.Generics.Generic (GHC.Internal.Generics.URec (GHC.Internal.Ptr.Ptr ()) p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Internal.Generics.Generic (GHC.Internal.Generics.URec GHC.Types.Char p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Internal.Generics.Generic (GHC.Internal.Generics.URec GHC.Types.Double p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Internal.Generics.Generic (GHC.Internal.Generics.URec GHC.Types.Float p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Internal.Generics.Generic (GHC.Internal.Generics.URec GHC.Types.Int p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Internal.Generics.Generic (GHC.Internal.Generics.URec GHC.Types.Word p) -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.Generic () -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Internal.Generics.Generic (GHC.Internal.Generics.V1 p) -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.Generic GHC.Internal.Base.Void -- Defined in ‘GHC.Internal.Generics’
instance forall a. GHC.Internal.Generics.Generic (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance forall a b. GHC.Internal.Generics.Generic (Distribution.Utils.Structured.STuple2 a b) -- Defined in ‘Distribution.Utils.Structured’
instance forall a b c. GHC.Internal.Generics.Generic (Distribution.Utils.Structured.STuple3 a b c) -- Defined in ‘Distribution.Utils.Structured’
instance forall a b c d. GHC.Internal.Generics.Generic (Distribution.Utils.Structured.STuple4 a b c d) -- Defined in ‘Distribution.Utils.Structured’
instance forall a b c d e. GHC.Internal.Generics.Generic (Distribution.Utils.Structured.STuple5 a b c d e) -- Defined in ‘Distribution.Utils.Structured’
instance forall a b c d e f. GHC.Internal.Generics.Generic (Distribution.Utils.Structured.STuple6 a b c d e f) -- Defined in ‘Distribution.Utils.Structured’
instance forall a b c d e f g. GHC.Internal.Generics.Generic (Distribution.Utils.Structured.STuple7 a b c d e f g) -- Defined in ‘Distribution.Utils.Structured’
instance GHC.Internal.Generics.Generic Distribution.Utils.Structured.Structure -- Defined in ‘Distribution.Utils.Structured’
instance forall (m :: * -> *) a b. GHC.Internal.Generics.Generic (GHC.Internal.Control.Arrow.Kleisli m a b) -- Defined in ‘GHC.Internal.Control.Arrow’
instance forall a. GHC.Internal.Generics.Generic (Distribution.Compat.Semigroup.Last' a) -- Defined in ‘Distribution.Compat.Semigroup’
instance forall a. GHC.Internal.Generics.Generic (Distribution.Compat.Semigroup.Option' a) -- Defined in ‘Distribution.Compat.Semigroup’
instance GHC.Internal.Generics.Generic GHC.Internal.Data.Semigroup.Internal.All -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall k (f :: k -> *) (a :: k). GHC.Internal.Generics.Generic (GHC.Internal.Data.Semigroup.Internal.Alt f a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Internal.Generics.Generic GHC.Internal.Data.Semigroup.Internal.Any -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Generics.Generic (GHC.Internal.Data.Semigroup.Internal.Dual a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Generics.Generic (GHC.Internal.Data.Semigroup.Internal.Endo a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Generics.Generic (GHC.Internal.Data.Semigroup.Internal.Product a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Generics.Generic (GHC.Internal.Data.Semigroup.Internal.Sum a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Internal.Generics.Generic Distribution.Compat.Time.ModTime -- Defined in ‘Distribution.Compat.Time’
instance GHC.Internal.Generics.Generic Distribution.Compiler.AbiTag -- Defined in ‘Distribution.Compiler’
instance GHC.Internal.Generics.Generic Distribution.Compiler.CompilerFlavor -- Defined in ‘Distribution.Compiler’
instance GHC.Internal.Generics.Generic Distribution.Compiler.CompilerId -- Defined in ‘Distribution.Compiler’
instance GHC.Internal.Generics.Generic Distribution.Compiler.CompilerInfo -- Defined in ‘Distribution.Compiler’
instance forall v. GHC.Internal.Generics.Generic (Distribution.Compiler.PerCompilerFlavor v) -- Defined in ‘Distribution.Compiler’
instance [safe] GHC.Internal.Generics.Generic Distribution.Parsec.Error.PError -- Defined in ‘Distribution.Parsec.Error’
instance [safe] GHC.Internal.Generics.Generic Distribution.Parsec.Warning.PWarnType -- Defined in ‘Distribution.Parsec.Warning’
instance [safe] GHC.Internal.Generics.Generic Distribution.Parsec.Warning.PWarning -- Defined in ‘Distribution.Parsec.Warning’
instance GHC.Internal.Generics.Generic Distribution.Types.AbiDependency.AbiDependency -- Defined in ‘Distribution.Types.AbiDependency’
instance GHC.Internal.Generics.Generic Distribution.Types.ExposedModule.ExposedModule -- Defined in ‘Distribution.Types.ExposedModule’
instance GHC.Internal.Generics.Generic Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -- Defined in ‘Distribution.Types.InstalledPackageInfo’
instance GHC.Internal.Generics.Generic Distribution.License.License -- Defined in ‘Distribution.License’
instance GHC.Internal.Generics.Generic Distribution.Types.AbiHash.AbiHash -- Defined in ‘Distribution.Types.AbiHash’
instance GHC.Internal.Generics.Generic Distribution.Types.ComponentId.ComponentId -- Defined in ‘Distribution.Types.ComponentId’
instance GHC.Internal.Generics.Generic Distribution.Types.Dependency.Dependency -- Defined in ‘Distribution.Types.Dependency’
instance GHC.Internal.Generics.Generic Distribution.Types.Module.Module -- Defined in ‘Distribution.Types.Module’
instance GHC.Internal.Generics.Generic Distribution.Types.PackageId.PackageIdentifier -- Defined in ‘Distribution.Types.PackageId’
instance GHC.Internal.Generics.Generic Distribution.Types.PackageName.PackageName -- Defined in ‘Distribution.Types.PackageName’
instance GHC.Internal.Generics.Generic Distribution.Types.PkgconfigName.PkgconfigName -- Defined in ‘Distribution.Types.PkgconfigName’
instance GHC.Internal.Generics.Generic Distribution.Types.Version.Version -- Defined in ‘Distribution.Types.Version’
instance GHC.Internal.Generics.Generic Distribution.ModuleName.ModuleName -- Defined in ‘Distribution.ModuleName’
instance GHC.Internal.Generics.Generic Distribution.Types.ConfVar.ConfVar -- Defined in ‘Distribution.Types.ConfVar’
instance GHC.Internal.Generics.Generic Distribution.Types.SourceRepo.KnownRepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Internal.Generics.Generic Distribution.Types.SourceRepo.RepoKind -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Internal.Generics.Generic Distribution.Types.SourceRepo.RepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Internal.Generics.Generic Distribution.Types.SourceRepo.SourceRepo -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Internal.Generics.Generic Distribution.Types.Benchmark.Benchmark -- Defined in ‘Distribution.Types.Benchmark’
instance GHC.Internal.Generics.Generic Distribution.Types.BenchmarkInterface.BenchmarkInterface -- Defined in ‘Distribution.Types.BenchmarkInterface’
instance GHC.Internal.Generics.Generic Distribution.Types.BenchmarkType.BenchmarkType -- Defined in ‘Distribution.Types.BenchmarkType’
instance GHC.Internal.Generics.Generic Distribution.Types.BuildInfo.BuildInfo -- Defined in ‘Distribution.Types.BuildInfo’
instance GHC.Internal.Generics.Generic Distribution.Types.BuildType.BuildType -- Defined in ‘Distribution.Types.BuildType’
instance [safe] forall c. GHC.Internal.Generics.Generic (Distribution.Types.Condition.Condition c) -- Defined in ‘Distribution.Types.Condition’
instance GHC.Internal.Generics.Generic Distribution.Types.ComponentName.ComponentName -- Defined in ‘Distribution.Types.ComponentName’
instance GHC.Internal.Generics.Generic Distribution.Types.ComponentName.NotLibComponentName -- Defined in ‘Distribution.Types.ComponentName’
instance [safe] forall v c a. GHC.Internal.Generics.Generic (Distribution.Types.CondTree.CondBranch v c a) -- Defined in ‘Distribution.Types.CondTree’
instance [safe] forall v c a. GHC.Internal.Generics.Generic (Distribution.Types.CondTree.CondTree v c a) -- Defined in ‘Distribution.Types.CondTree’
instance GHC.Internal.Generics.Generic Distribution.Types.ModuleRenaming.ModuleRenaming -- Defined in ‘Distribution.Types.ModuleRenaming’
instance GHC.Internal.Generics.Generic Distribution.Types.ExeDependency.ExeDependency -- Defined in ‘Distribution.Types.ExeDependency’
instance GHC.Internal.Generics.Generic Distribution.Types.Executable.Executable -- Defined in ‘Distribution.Types.Executable’
instance GHC.Internal.Generics.Generic Distribution.Types.ExecutableScope.ExecutableScope -- Defined in ‘Distribution.Types.ExecutableScope’
instance GHC.Internal.Generics.Generic Distribution.Types.Flag.FlagAssignment -- Defined in ‘Distribution.Types.Flag’
instance GHC.Internal.Generics.Generic Distribution.Types.Flag.FlagName -- Defined in ‘Distribution.Types.Flag’
instance GHC.Internal.Generics.Generic Distribution.Types.Flag.PackageFlag -- Defined in ‘Distribution.Types.Flag’
instance GHC.Internal.Generics.Generic Distribution.Types.ForeignLib.ForeignLib -- Defined in ‘Distribution.Types.ForeignLib’
instance GHC.Internal.Generics.Generic Distribution.Types.ForeignLib.LibVersionInfo -- Defined in ‘Distribution.Types.ForeignLib’
instance GHC.Internal.Generics.Generic Distribution.Types.ForeignLibType.ForeignLibType -- Defined in ‘Distribution.Types.ForeignLibType’
instance GHC.Internal.Generics.Generic Distribution.Types.ForeignLibOption.ForeignLibOption -- Defined in ‘Distribution.Types.ForeignLibOption’
instance GHC.Internal.Generics.Generic Distribution.Types.GenericPackageDescription.GenericPackageDescription -- Defined in ‘Distribution.Types.GenericPackageDescription’
instance GHC.Internal.Generics.Generic Distribution.Types.IncludeRenaming.IncludeRenaming -- Defined in ‘Distribution.Types.IncludeRenaming’
instance GHC.Internal.Generics.Generic Distribution.Types.LibraryName.LibraryName -- Defined in ‘Distribution.Types.LibraryName’
instance GHC.Internal.Generics.Generic Distribution.Types.LegacyExeDependency.LegacyExeDependency -- Defined in ‘Distribution.Types.LegacyExeDependency’
instance GHC.Internal.Generics.Generic Distribution.Types.Library.Library -- Defined in ‘Distribution.Types.Library’
instance GHC.Internal.Generics.Generic Distribution.Types.LibraryVisibility.LibraryVisibility -- Defined in ‘Distribution.Types.LibraryVisibility’
instance GHC.Internal.Generics.Generic Distribution.Types.Mixin.Mixin -- Defined in ‘Distribution.Types.Mixin’
instance GHC.Internal.Generics.Generic Distribution.Types.ModuleReexport.ModuleReexport -- Defined in ‘Distribution.Types.ModuleReexport’
instance GHC.Internal.Generics.Generic Distribution.Types.PackageDescription.PackageDescription -- Defined in ‘Distribution.Types.PackageDescription’
instance GHC.Internal.Generics.Generic Distribution.Types.PkgconfigVersionRange.PkgconfigVersionRange -- Defined in ‘Distribution.Types.PkgconfigVersionRange’
instance GHC.Internal.Generics.Generic Distribution.Types.PkgconfigDependency.PkgconfigDependency -- Defined in ‘Distribution.Types.PkgconfigDependency’
instance GHC.Internal.Generics.Generic Distribution.Types.PkgconfigVersion.PkgconfigVersion -- Defined in ‘Distribution.Types.PkgconfigVersion’
instance GHC.Internal.Generics.Generic Distribution.Types.SetupBuildInfo.SetupBuildInfo -- Defined in ‘Distribution.Types.SetupBuildInfo’
instance GHC.Internal.Generics.Generic Distribution.Types.TestSuite.TestSuite -- Defined in ‘Distribution.Types.TestSuite’
instance GHC.Internal.Generics.Generic Distribution.Types.TestSuiteInterface.TestSuiteInterface -- Defined in ‘Distribution.Types.TestSuiteInterface’
instance GHC.Internal.Generics.Generic Distribution.Types.TestType.TestType -- Defined in ‘Distribution.Types.TestType’
instance GHC.Internal.Generics.Generic Distribution.Types.UnqualComponentName.UnqualComponentName -- Defined in ‘Distribution.Types.UnqualComponentName’
instance [safe] GHC.Internal.Generics.Generic Distribution.Parsec.Position.Position -- Defined in ‘Distribution.Parsec.Position’
instance GHC.Internal.Generics.Generic Distribution.SPDX.LicenseExceptionId.LicenseExceptionId -- Defined in ‘Distribution.SPDX.LicenseExceptionId’
instance GHC.Internal.Generics.Generic Distribution.SPDX.LicenseExpression.LicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance GHC.Internal.Generics.Generic Distribution.SPDX.LicenseExpression.SimpleLicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance GHC.Internal.Generics.Generic Distribution.SPDX.License.License -- Defined in ‘Distribution.SPDX.License’
instance GHC.Internal.Generics.Generic Distribution.SPDX.LicenseReference.LicenseRef -- Defined in ‘Distribution.SPDX.LicenseReference’
instance GHC.Internal.Generics.Generic Language.Haskell.Extension.Extension -- Defined in ‘Language.Haskell.Extension’
instance GHC.Internal.Generics.Generic Language.Haskell.Extension.KnownExtension -- Defined in ‘Language.Haskell.Extension’
instance GHC.Internal.Generics.Generic Language.Haskell.Extension.Language -- Defined in ‘Language.Haskell.Extension’
instance GHC.Internal.Generics.Generic Distribution.Simple.Compiler.Compiler -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Internal.Generics.Generic Distribution.Simple.Compiler.DebugInfoLevel -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Internal.Generics.Generic Distribution.Simple.Compiler.OptimisationLevel -- Defined in ‘Distribution.Simple.Compiler’
instance forall fp. GHC.Internal.Generics.Generic (Distribution.Simple.Compiler.PackageDBX fp) -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Internal.Generics.Generic Distribution.Simple.Compiler.ProfDetailLevel -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Internal.Generics.Generic Distribution.Types.VersionRange.Internal.VersionRange -- Defined in ‘Distribution.Types.VersionRange.Internal’
instance forall a. GHC.Internal.Generics.Generic (Distribution.Types.VersionRange.Internal.VersionRangeF a) -- Defined in ‘Distribution.Types.VersionRange.Internal’
instance GHC.Internal.Generics.Generic Distribution.Simple.Setup.BuildingWhat -- Defined in ‘Distribution.Simple.Setup’
instance GHC.Internal.Generics.Generic Distribution.Types.LocalBuildInfo.LocalBuildInfo -- Defined in ‘Distribution.Types.LocalBuildInfo’
instance GHC.Internal.Generics.Generic Distribution.Types.TargetInfo.TargetInfo -- Defined in ‘Distribution.Types.TargetInfo’
instance GHC.Internal.Generics.Generic Cabal-3.15.0.0:Distribution.Simple.Setup.Common.CommonSetupFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Common’
instance GHC.Internal.Generics.Generic Distribution.Simple.BuildTarget.BuildTarget -- Defined in ‘Distribution.Simple.BuildTarget’
instance GHC.Internal.Generics.Generic Distribution.Simple.FileMonitor.Types.FilePathRoot -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance GHC.Internal.Generics.Generic Distribution.Simple.FileMonitor.Types.MonitorFilePath -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance GHC.Internal.Generics.Generic Distribution.Simple.FileMonitor.Types.MonitorKindDir -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance GHC.Internal.Generics.Generic Distribution.Simple.FileMonitor.Types.MonitorKindFile -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance GHC.Internal.Generics.Generic Distribution.Simple.FileMonitor.Types.RootedGlob -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance GHC.Internal.Generics.Generic Distribution.Simple.Glob.Internal.Glob -- Defined in ‘Distribution.Simple.Glob.Internal’
instance GHC.Internal.Generics.Generic Distribution.Simple.Glob.Internal.GlobPiece -- Defined in ‘Distribution.Simple.Glob.Internal’
instance [safe] forall a. GHC.Internal.Generics.Generic (Distribution.Simple.Flag.Flag a) -- Defined in ‘Distribution.Simple.Flag’
instance GHC.Internal.Generics.Generic Distribution.Simple.Haddock.HaddockArgs -- Defined in ‘Distribution.Simple.Haddock’
instance GHC.Internal.Generics.Generic Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock’
instance GHC.Internal.Generics.Generic Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockProjectFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock’
instance GHC.Internal.Generics.Generic Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockTarget -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock’
instance GHC.Internal.Generics.Generic Distribution.Simple.InstallDirs.CopyDest -- Defined in ‘Distribution.Simple.InstallDirs’
instance forall dir. GHC.Internal.Generics.Generic (Distribution.Simple.InstallDirs.InstallDirs dir) -- Defined in ‘Distribution.Simple.InstallDirs’
instance GHC.Internal.Generics.Generic Distribution.Simple.InstallDirs.PathTemplate -- Defined in ‘Distribution.Simple.InstallDirs’
instance [safe] GHC.Internal.Generics.Generic Distribution.Simple.InstallDirs.Internal.PathComponent -- Defined in ‘Distribution.Simple.InstallDirs.Internal’
instance [safe] GHC.Internal.Generics.Generic Distribution.Simple.InstallDirs.Internal.PathTemplateVariable -- Defined in ‘Distribution.Simple.InstallDirs.Internal’
instance GHC.Internal.Generics.Generic Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -- Defined in ‘Distribution.Types.ComponentLocalBuildInfo’
instance GHC.Internal.Generics.Generic Distribution.Types.Component.Component -- Defined in ‘Distribution.Types.Component’
instance forall a. GHC.Internal.Generics.Generic (Distribution.Simple.PackageIndex.PackageIndex a) -- Defined in ‘Distribution.Simple.PackageIndex’
instance GHC.Internal.Generics.Generic Distribution.Simple.PreProcess.Types.Suffix -- Defined in ‘Distribution.Simple.PreProcess.Types’
instance GHC.Internal.Generics.Generic Distribution.Simple.Program.Types.ConfiguredProgram -- Defined in ‘Distribution.Simple.Program.Types’
instance GHC.Internal.Generics.Generic Distribution.Simple.Program.Types.ProgramLocation -- Defined in ‘Distribution.Simple.Program.Types’
instance GHC.Internal.Generics.Generic Distribution.Simple.Program.Types.ProgramSearchPathEntry -- Defined in ‘Distribution.Simple.Program.Types’
instance GHC.Internal.Generics.Generic Distribution.Simple.Program.GHC.GhcOptions -- Defined in ‘Distribution.Simple.Program.GHC’
instance GHC.Internal.Generics.Generic Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Test’
instance GHC.Internal.Generics.Generic Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestShowDetails -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Test’
instance GHC.Internal.Generics.Generic Cabal-3.15.0.0:Distribution.Simple.Setup.Benchmark.BenchmarkFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Benchmark’
instance GHC.Internal.Generics.Generic Cabal-3.15.0.0:Distribution.Simple.Setup.Build.BuildFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Build’
instance GHC.Internal.Generics.Generic Cabal-3.15.0.0:Distribution.Simple.Setup.Clean.CleanFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Clean’
instance GHC.Internal.Generics.Generic Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Config’
instance GHC.Internal.Generics.Generic Cabal-3.15.0.0:Distribution.Simple.Setup.Copy.CopyFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Copy’
instance [safe] GHC.Internal.Generics.Generic Distribution.Types.DumpBuildInfo.DumpBuildInfo -- Defined in ‘Distribution.Types.DumpBuildInfo’
instance GHC.Internal.Generics.Generic Cabal-3.15.0.0:Distribution.Simple.Setup.Global.GlobalFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Global’
instance GHC.Internal.Generics.Generic Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour.HscolourFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour’
instance GHC.Internal.Generics.Generic Cabal-3.15.0.0:Distribution.Simple.Setup.Install.InstallFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Install’
instance GHC.Internal.Generics.Generic Cabal-3.15.0.0:Distribution.Simple.Setup.Register.RegisterFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Register’
instance GHC.Internal.Generics.Generic Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Repl’
instance GHC.Internal.Generics.Generic Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplOptions -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Repl’
instance GHC.Internal.Generics.Generic Cabal-3.15.0.0:Distribution.Simple.Setup.SDist.SDistFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.SDist’
instance GHC.Internal.Generics.Generic Distribution.Simple.SetupHooks.Internal.InstallComponentInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Generics.Generic Distribution.Simple.SetupHooks.Internal.PostBuildComponentInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Generics.Generic Distribution.Simple.SetupHooks.Internal.PostConfPackageInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Generics.Generic Distribution.Simple.SetupHooks.Internal.PreBuildComponentInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Generics.Generic Distribution.Simple.SetupHooks.Internal.PreConfComponentInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Generics.Generic Distribution.Simple.SetupHooks.Internal.PreConfComponentOutputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Generics.Generic Distribution.Simple.SetupHooks.Internal.PreConfPackageInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Generics.Generic Distribution.Simple.SetupHooks.Internal.PreConfPackageOutputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Generics.Generic Distribution.Simple.SetupHooks.Rule.Dependency -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall (scope :: Distribution.Simple.SetupHooks.Rule.Scope) k1 (arg :: k1) k2 (res :: k2). GHC.Internal.Generics.Generic (Distribution.Simple.SetupHooks.Rule.NoCmd scope arg res) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall (scope :: Distribution.Simple.SetupHooks.Rule.Scope). GHC.Internal.Generics.Generic (Distribution.Simple.SetupHooks.Rule.RuleData scope) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Internal.Generics.Generic Distribution.Simple.SetupHooks.Rule.RuleId -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Internal.Generics.Generic Distribution.Simple.SetupHooks.Rule.RuleOutput -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Internal.Generics.Generic Distribution.Simple.SetupHooks.Rule.RulesNameSpace -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Internal.Generics.Generic Distribution.System.Arch -- Defined in ‘Distribution.System’
instance GHC.Internal.Generics.Generic Distribution.System.OS -- Defined in ‘Distribution.System’
instance GHC.Internal.Generics.Generic Distribution.System.Platform -- Defined in ‘Distribution.System’
instance GHC.Internal.Generics.Generic Distribution.Types.ComponentRequestedSpec.ComponentRequestedSpec -- Defined in ‘Distribution.Types.ComponentRequestedSpec’
instance GHC.Internal.Generics.Generic Distribution.Types.GivenComponent.GivenComponent -- Defined in ‘Distribution.Types.GivenComponent’
instance GHC.Internal.Generics.Generic Distribution.Types.GivenComponent.PromisedComponent -- Defined in ‘Distribution.Types.GivenComponent’
instance GHC.Internal.Generics.Generic Distribution.Types.LocalBuildConfig.BuildOptions -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance GHC.Internal.Generics.Generic Distribution.Types.LocalBuildConfig.ComponentBuildDescr -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance GHC.Internal.Generics.Generic Distribution.Types.LocalBuildConfig.LocalBuildConfig -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance GHC.Internal.Generics.Generic Distribution.Types.LocalBuildConfig.LocalBuildDescr -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance GHC.Internal.Generics.Generic Distribution.Types.LocalBuildConfig.PackageBuildDescr -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance GHC.Internal.Generics.Generic Distribution.Types.MungedPackageId.MungedPackageId -- Defined in ‘Distribution.Types.MungedPackageId’
instance GHC.Internal.Generics.Generic Distribution.Types.MungedPackageName.MungedPackageName -- Defined in ‘Distribution.Types.MungedPackageName’
instance GHC.Internal.Generics.Generic Distribution.Types.PackageVersionConstraint.PackageVersionConstraint -- Defined in ‘Distribution.Types.PackageVersionConstraint’
instance forall a. GHC.Internal.Generics.Generic (Distribution.Utils.NubList.NubList a) -- Defined in ‘Distribution.Utils.NubList’
instance forall (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute) from (to :: Distribution.Utils.Path.FileOrDir). GHC.Internal.Generics.Generic (Distribution.Utils.Path.SymbolicPathX allowAbsolute from to) -- Defined in ‘Distribution.Utils.Path’
instance GHC.Internal.Generics.Generic Distribution.Utils.ShortText.ShortText -- Defined in ‘Distribution.Utils.ShortText’
instance GHC.Internal.Generics.Generic Distribution.Verbosity.Verbosity -- Defined in ‘Distribution.Verbosity’
instance [safe] GHC.Internal.Generics.Generic Distribution.Verbosity.Internal.VerbosityFlag -- Defined in ‘Distribution.Verbosity.Internal’
instance [safe] GHC.Internal.Generics.Generic Distribution.Verbosity.Internal.VerbosityLevel -- Defined in ‘Distribution.Verbosity.Internal’
instance forall k a. GHC.Internal.Generics.Generic1 (GHC.Internal.Data.Functor.Const.Const a) -- Defined in ‘GHC.Internal.Data.Functor.Const’
instance forall k (f :: k -> *) (g :: k -> *). GHC.Internal.Generics.Generic1 (f GHC.Internal.Generics.:*: g) -- Defined in ‘GHC.Internal.Generics’
instance forall k (f :: k -> *) (g :: k -> *). GHC.Internal.Generics.Generic1 (f GHC.Internal.Generics.:+: g) -- Defined in ‘GHC.Internal.Generics’
instance forall k i c. GHC.Internal.Generics.Generic1 (GHC.Internal.Generics.K1 i c) -- Defined in ‘GHC.Internal.Generics’
instance forall i (c :: GHC.Internal.Generics.Meta) k (f :: k -> *). GHC.Internal.Generics.Generic1 (GHC.Internal.Generics.M1 i c f) -- Defined in ‘GHC.Internal.Generics’
instance forall k. GHC.Internal.Generics.Generic1 GHC.Internal.Data.Proxy.Proxy -- Defined in ‘GHC.Internal.Generics’
instance forall k (f :: k -> *). GHC.Internal.Generics.Generic1 (GHC.Internal.Generics.Rec1 f) -- Defined in ‘GHC.Internal.Generics’
instance forall k. GHC.Internal.Generics.Generic1 GHC.Internal.Generics.U1 -- Defined in ‘GHC.Internal.Generics’
instance forall k. GHC.Internal.Generics.Generic1 (GHC.Internal.Generics.URec (GHC.Internal.Ptr.Ptr ())) -- Defined in ‘GHC.Internal.Generics’
instance forall k. GHC.Internal.Generics.Generic1 (GHC.Internal.Generics.URec GHC.Types.Char) -- Defined in ‘GHC.Internal.Generics’
instance forall k. GHC.Internal.Generics.Generic1 (GHC.Internal.Generics.URec GHC.Types.Double) -- Defined in ‘GHC.Internal.Generics’
instance forall k. GHC.Internal.Generics.Generic1 (GHC.Internal.Generics.URec GHC.Types.Float) -- Defined in ‘GHC.Internal.Generics’
instance forall k. GHC.Internal.Generics.Generic1 (GHC.Internal.Generics.URec GHC.Types.Int) -- Defined in ‘GHC.Internal.Generics’
instance forall k. GHC.Internal.Generics.Generic1 (GHC.Internal.Generics.URec GHC.Types.Word) -- Defined in ‘GHC.Internal.Generics’
instance forall k. GHC.Internal.Generics.Generic1 GHC.Internal.Generics.V1 -- Defined in ‘GHC.Internal.Generics’
instance forall k (f :: k -> *). GHC.Internal.Generics.Generic1 (GHC.Internal.Data.Semigroup.Internal.Alt f) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall (mn :: GHC.Internal.Maybe.Maybe GHC.Types.Symbol) (su :: GHC.Internal.Generics.SourceUnpackedness) (ss :: GHC.Internal.Generics.SourceStrictness) (ds :: GHC.Internal.Generics.DecidedStrictness). (GHC.Internal.Generics.SingI mn, GHC.Internal.Generics.SingI su, GHC.Internal.Generics.SingI ss, GHC.Internal.Generics.SingI ds) => GHC.Internal.Generics.Selector (GHC.Internal.Generics.MetaSel mn su ss ds) -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingI GHC.Internal.Generics.LeftAssociative -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingI GHC.Internal.Generics.NotAssociative -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingI GHC.Internal.Generics.RightAssociative -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingI GHC.Types.False -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingI GHC.Types.True -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingI GHC.Internal.Generics.DecidedLazy -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingI GHC.Internal.Generics.DecidedStrict -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingI GHC.Internal.Generics.DecidedUnpack -- Defined in ‘GHC.Internal.Generics’
instance forall (a :: GHC.Internal.Generics.Associativity) (n :: GHC.Internal.TypeNats.Nat). (GHC.Internal.Generics.SingI a, GHC.Internal.TypeNats.KnownNat n) => GHC.Internal.Generics.SingI (GHC.Internal.Generics.InfixI a n) -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingI GHC.Internal.Generics.PrefixI -- Defined in ‘GHC.Internal.Generics’
instance forall a1 (a2 :: a1). GHC.Internal.Generics.SingI a2 => GHC.Internal.Generics.SingI (GHC.Internal.Maybe.Just a2) -- Defined in ‘GHC.Internal.Generics’
instance forall a. GHC.Internal.Generics.SingI GHC.Internal.Maybe.Nothing -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingI GHC.Internal.Generics.NoSourceStrictness -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingI GHC.Internal.Generics.SourceLazy -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingI GHC.Internal.Generics.SourceStrict -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingI GHC.Internal.Generics.NoSourceUnpackedness -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingI GHC.Internal.Generics.SourceNoUnpack -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingI GHC.Internal.Generics.SourceUnpack -- Defined in ‘GHC.Internal.Generics’
instance forall (a :: GHC.Types.Symbol). GHC.Internal.TypeLits.KnownSymbol a => GHC.Internal.Generics.SingI a -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingKind GHC.Internal.Generics.Associativity -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingKind GHC.Types.Bool -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingKind GHC.Internal.Generics.DecidedStrictness -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingKind GHC.Internal.Generics.FixityI -- Defined in ‘GHC.Internal.Generics’
instance forall a. GHC.Internal.Generics.SingKind a => GHC.Internal.Generics.SingKind (GHC.Internal.Maybe.Maybe a) -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingKind GHC.Internal.Generics.SourceStrictness -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingKind GHC.Internal.Generics.SourceUnpackedness -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Generics.SingKind GHC.Types.Symbol -- Defined in ‘GHC.Internal.Generics’
instance forall k v. GHC.Classes.Ord k => GHC.Internal.IsList.IsList (Data.Map.Internal.Map k v) -- Defined in ‘Data.Map.Internal’
instance forall a. GHC.Classes.Ord a => GHC.Internal.IsList.IsList (Data.Set.Internal.Set a) -- Defined in ‘Data.Set.Internal’
instance GHC.Internal.Ix.Ix GHC.Internal.Word.Word16 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Ix.Ix GHC.Internal.Word.Word32 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Ix.Ix GHC.Internal.Word.Word64 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Ix.Ix GHC.Internal.Word.Word8 -- Defined in ‘GHC.Internal.Word’
instance forall a k (b :: k). GHC.Internal.Ix.Ix a => GHC.Internal.Ix.Ix (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.Functor.Const’
instance GHC.Internal.Ix.Ix GHC.Internal.Generics.Associativity -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Ix.Ix GHC.Internal.Generics.DecidedStrictness -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Ix.Ix GHC.Internal.Generics.SourceStrictness -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Ix.Ix GHC.Internal.Generics.SourceUnpackedness -- Defined in ‘GHC.Internal.Generics’
instance forall a. GHC.Internal.Ix.Ix a => GHC.Internal.Ix.Ix (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance GHC.Internal.Ix.Ix GHC.Internal.Int.Int16 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Ix.Ix GHC.Internal.Int.Int32 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Ix.Ix GHC.Internal.Int.Int64 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Ix.Ix GHC.Internal.Int.Int8 -- Defined in ‘GHC.Internal.Int’
instance forall k (s :: k). GHC.Internal.Ix.Ix (GHC.Internal.Data.Proxy.Proxy s) -- Defined in ‘GHC.Internal.Data.Proxy’
instance forall a. GHC.Internal.Ix.Ix a => GHC.Internal.Ix.Ix (GHC.Internal.Data.Ord.Down a) -- Defined in ‘GHC.Internal.Data.Ord’
instance GHC.Internal.Ix.Ix GHC.Internal.Unicode.GeneralCategory -- Defined in ‘GHC.Internal.Unicode’
instance GHC.Internal.Num.Num GHC.Internal.Word.Word16 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Num.Num GHC.Internal.Word.Word32 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Num.Num GHC.Internal.Word.Word64 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Num.Num GHC.Internal.Word.Word8 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Num.Num GHC.Types.Int -- Defined in ‘GHC.Internal.Num’
instance GHC.Internal.Num.Num GHC.Num.Integer.Integer -- Defined in ‘GHC.Internal.Num’
instance GHC.Internal.Num.Num GHC.Num.Natural.Natural -- Defined in ‘GHC.Internal.Num’
instance GHC.Internal.Num.Num GHC.Types.Word -- Defined in ‘GHC.Internal.Num’
instance GHC.Internal.Num.Num GHC.Types.Double -- Defined in ‘GHC.Internal.Float’
instance GHC.Internal.Num.Num GHC.Types.Float -- Defined in ‘GHC.Internal.Float’
instance forall a. GHC.Internal.Real.Integral a => GHC.Internal.Num.Num (GHC.Internal.Real.Ratio a) -- Defined in ‘GHC.Internal.Real’
instance forall a k (b :: k). GHC.Internal.Num.Num a => GHC.Internal.Num.Num (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.Functor.Const’
instance forall a. GHC.Internal.Num.Num a => GHC.Internal.Num.Num (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance GHC.Internal.Num.Num GHC.Internal.Int.Int16 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Num.Num GHC.Internal.Int.Int32 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Num.Num GHC.Internal.Int.Int64 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Num.Num GHC.Internal.Int.Int8 -- Defined in ‘GHC.Internal.Int’
instance forall a. GHC.Internal.Num.Num a => GHC.Internal.Num.Num (GHC.Internal.Data.Ord.Down a) -- Defined in ‘GHC.Internal.Data.Ord’
instance forall k (f :: k -> *) (a :: k). GHC.Internal.Num.Num (f a) => GHC.Internal.Num.Num (GHC.Internal.Data.Semigroup.Internal.Alt f a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Num.Num a => GHC.Internal.Num.Num (GHC.Internal.Data.Semigroup.Internal.Product a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Num.Num a => GHC.Internal.Num.Num (GHC.Internal.Data.Semigroup.Internal.Sum a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Internal.Read.Read Distribution.Backpack.OpenModule -- Defined in ‘Distribution.Backpack’
instance GHC.Internal.Read.Read Distribution.Backpack.OpenUnitId -- Defined in ‘Distribution.Backpack’
instance GHC.Internal.Read.Read Distribution.Types.UnitId.DefUnitId -- Defined in ‘Distribution.Types.UnitId’
instance GHC.Internal.Read.Read Distribution.Types.UnitId.UnitId -- Defined in ‘Distribution.Types.UnitId’
instance [safe] GHC.Internal.Read.Read Distribution.CabalSpecVersion.CabalSpecVersion -- Defined in ‘Distribution.CabalSpecVersion’
instance forall a. (Distribution.Compat.Graph.IsNode a, GHC.Internal.Read.Read a, GHC.Internal.Show.Show (Distribution.Compat.Graph.Key a)) => GHC.Internal.Read.Read (Distribution.Compat.Graph.Graph a) -- Defined in ‘Distribution.Compat.Graph’
instance [safe] forall vertex. GHC.Internal.Read.Read vertex => GHC.Internal.Read.Read (Data.Graph.SCC vertex) -- Defined in ‘Data.Graph’
instance forall a. (GHC.Internal.Read.Read a, GHC.Classes.Ord a) => GHC.Internal.Read.Read (Distribution.Compat.NonEmptySet.NonEmptySet a) -- Defined in ‘Distribution.Compat.NonEmptySet’
instance forall k a (b :: k). GHC.Internal.Read.Read a => GHC.Internal.Read.Read (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.Functor.Const’
instance forall a b. (GHC.Internal.Read.Read a, GHC.Internal.Read.Read b) => GHC.Internal.Read.Read (GHC.Internal.Data.Either.Either a b) -- Defined in ‘GHC.Internal.Data.Either’
instance GHC.Internal.Read.Read GHC.Internal.IO.Exception.ExitCode -- Defined in ‘GHC.Internal.IO.Exception’
instance forall k (f :: k -> *) (g :: k -> *) (p :: k). (GHC.Internal.Read.Read (f p), GHC.Internal.Read.Read (g p)) => GHC.Internal.Read.Read ((GHC.Internal.Generics.:*:) f g p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (f :: k -> *) (g :: k -> *) (p :: k). (GHC.Internal.Read.Read (f p), GHC.Internal.Read.Read (g p)) => GHC.Internal.Read.Read ((GHC.Internal.Generics.:+:) f g p) -- Defined in ‘GHC.Internal.Generics’
instance forall k2 (f :: k2 -> *) k1 (g :: k1 -> k2) (p :: k1). GHC.Internal.Read.Read (f (g p)) => GHC.Internal.Read.Read ((GHC.Internal.Generics.:.:) f g p) -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Read.Read GHC.Internal.Generics.Associativity -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Read.Read GHC.Internal.Generics.DecidedStrictness -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Read.Read GHC.Internal.Generics.Fixity -- Defined in ‘GHC.Internal.Generics’
instance forall i c k (p :: k). GHC.Internal.Read.Read c => GHC.Internal.Read.Read (GHC.Internal.Generics.K1 i c p) -- Defined in ‘GHC.Internal.Generics’
instance forall i (c :: GHC.Internal.Generics.Meta) k (f :: k -> *) (p :: k). GHC.Internal.Read.Read (f p) => GHC.Internal.Read.Read (GHC.Internal.Generics.M1 i c f p) -- Defined in ‘GHC.Internal.Generics’
instance forall p. GHC.Internal.Read.Read p => GHC.Internal.Read.Read (GHC.Internal.Generics.Par1 p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (f :: k -> *) (p :: k). GHC.Internal.Read.Read (f p) => GHC.Internal.Read.Read (GHC.Internal.Generics.Rec1 f p) -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Read.Read GHC.Internal.Generics.SourceStrictness -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Read.Read GHC.Internal.Generics.SourceUnpackedness -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Internal.Read.Read (GHC.Internal.Generics.U1 p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Internal.Read.Read (GHC.Internal.Generics.V1 p) -- Defined in ‘GHC.Internal.Generics’
instance forall a. GHC.Internal.Read.Read a => GHC.Internal.Read.Read (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance GHC.Internal.Read.Read GHC.Internal.Int.Int16 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Read.Read GHC.Internal.Int.Int32 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Read.Read GHC.Internal.Int.Int64 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Read.Read GHC.Internal.Int.Int8 -- Defined in ‘GHC.Internal.Int’
instance forall k e. (GHC.Classes.Ord k, GHC.Internal.Read.Read k, GHC.Internal.Read.Read e) => GHC.Internal.Read.Read (Data.Map.Internal.Map k e) -- Defined in ‘Data.Map.Internal’
instance forall k (t :: k). GHC.Internal.Read.Read (GHC.Internal.Data.Proxy.Proxy t) -- Defined in ‘GHC.Internal.Data.Proxy’
instance forall a b. (GHC.Internal.Ix.Ix a, GHC.Internal.Read.Read a, GHC.Internal.Read.Read b) => GHC.Internal.Read.Read (GHC.Internal.Arr.Array a b) -- Defined in ‘GHC.Internal.Read’
instance GHC.Internal.Read.Read GHC.Types.Bool -- Defined in ‘GHC.Internal.Read’
instance GHC.Internal.Read.Read GHC.Types.Char -- Defined in ‘GHC.Internal.Read’
instance GHC.Internal.Read.Read GHC.Types.Double -- Defined in ‘GHC.Internal.Read’
instance GHC.Internal.Read.Read GHC.Types.Float -- Defined in ‘GHC.Internal.Read’
instance GHC.Internal.Read.Read GHC.Internal.Unicode.GeneralCategory -- Defined in ‘GHC.Internal.Read’
instance GHC.Internal.Read.Read GHC.Types.Int -- Defined in ‘GHC.Internal.Read’
instance GHC.Internal.Read.Read GHC.Num.Integer.Integer -- Defined in ‘GHC.Internal.Read’
instance GHC.Internal.Read.Read GHC.Internal.Text.Read.Lex.Lexeme -- Defined in ‘GHC.Internal.Read’
instance forall a. GHC.Internal.Read.Read a => GHC.Internal.Read.Read [a] -- Defined in ‘GHC.Internal.Read’
instance forall a. GHC.Internal.Read.Read a => GHC.Internal.Read.Read (GHC.Internal.Maybe.Maybe a) -- Defined in ‘GHC.Internal.Read’
instance GHC.Internal.Read.Read GHC.Num.Natural.Natural -- Defined in ‘GHC.Internal.Read’
instance forall a. GHC.Internal.Read.Read a => GHC.Internal.Read.Read (GHC.Internal.Base.NonEmpty a) -- Defined in ‘GHC.Internal.Read’
instance GHC.Internal.Read.Read GHC.Types.Ordering -- Defined in ‘GHC.Internal.Read’
instance forall a. (GHC.Internal.Real.Integral a, GHC.Internal.Read.Read a) => GHC.Internal.Read.Read (GHC.Internal.Real.Ratio a) -- Defined in ‘GHC.Internal.Read’
instance forall a. GHC.Internal.Read.Read a => GHC.Internal.Read.Read (Solo a) -- Defined in ‘GHC.Internal.Read’
instance forall a b c d e f g h i j. (GHC.Internal.Read.Read a, GHC.Internal.Read.Read b, GHC.Internal.Read.Read c, GHC.Internal.Read.Read d, GHC.Internal.Read.Read e, GHC.Internal.Read.Read f, GHC.Internal.Read.Read g, GHC.Internal.Read.Read h, GHC.Internal.Read.Read i, GHC.Internal.Read.Read j) => GHC.Internal.Read.Read (a, b, c, d, e, f, g, h, i, j) -- Defined in ‘GHC.Internal.Read’
instance forall a b c d e f g h i j k. (GHC.Internal.Read.Read a, GHC.Internal.Read.Read b, GHC.Internal.Read.Read c, GHC.Internal.Read.Read d, GHC.Internal.Read.Read e, GHC.Internal.Read.Read f, GHC.Internal.Read.Read g, GHC.Internal.Read.Read h, GHC.Internal.Read.Read i, GHC.Internal.Read.Read j, GHC.Internal.Read.Read k) => GHC.Internal.Read.Read (a, b, c, d, e, f, g, h, i, j, k) -- Defined in ‘GHC.Internal.Read’
instance forall a b c d e f g h i j k l. (GHC.Internal.Read.Read a, GHC.Internal.Read.Read b, GHC.Internal.Read.Read c, GHC.Internal.Read.Read d, GHC.Internal.Read.Read e, GHC.Internal.Read.Read f, GHC.Internal.Read.Read g, GHC.Internal.Read.Read h, GHC.Internal.Read.Read i, GHC.Internal.Read.Read j, GHC.Internal.Read.Read k, GHC.Internal.Read.Read l) => GHC.Internal.Read.Read (a, b, c, d, e, f, g, h, i, j, k, l) -- Defined in ‘GHC.Internal.Read’
instance forall a b c d e f g h i j k l m. (GHC.Internal.Read.Read a, GHC.Internal.Read.Read b, GHC.Internal.Read.Read c, GHC.Internal.Read.Read d, GHC.Internal.Read.Read e, GHC.Internal.Read.Read f, GHC.Internal.Read.Read g, GHC.Internal.Read.Read h, GHC.Internal.Read.Read i, GHC.Internal.Read.Read j, GHC.Internal.Read.Read k, GHC.Internal.Read.Read l, GHC.Internal.Read.Read m) => GHC.Internal.Read.Read (a, b, c, d, e, f, g, h, i, j, k, l, m) -- Defined in ‘GHC.Internal.Read’
instance forall a b c d e f g h i j k l m n. (GHC.Internal.Read.Read a, GHC.Internal.Read.Read b, GHC.Internal.Read.Read c, GHC.Internal.Read.Read d, GHC.Internal.Read.Read e, GHC.Internal.Read.Read f, GHC.Internal.Read.Read g, GHC.Internal.Read.Read h, GHC.Internal.Read.Read i, GHC.Internal.Read.Read j, GHC.Internal.Read.Read k, GHC.Internal.Read.Read l, GHC.Internal.Read.Read m, GHC.Internal.Read.Read n) => GHC.Internal.Read.Read (a, b, c, d, e, f, g, h, i, j, k, l, m, n) -- Defined in ‘GHC.Internal.Read’
instance forall a b c d e f g h i j k l m n o. (GHC.Internal.Read.Read a, GHC.Internal.Read.Read b, GHC.Internal.Read.Read c, GHC.Internal.Read.Read d, GHC.Internal.Read.Read e, GHC.Internal.Read.Read f, GHC.Internal.Read.Read g, GHC.Internal.Read.Read h, GHC.Internal.Read.Read i, GHC.Internal.Read.Read j, GHC.Internal.Read.Read k, GHC.Internal.Read.Read l, GHC.Internal.Read.Read m, GHC.Internal.Read.Read n, GHC.Internal.Read.Read o) => GHC.Internal.Read.Read (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) -- Defined in ‘GHC.Internal.Read’
instance forall a b. (GHC.Internal.Read.Read a, GHC.Internal.Read.Read b) => GHC.Internal.Read.Read (a, b) -- Defined in ‘GHC.Internal.Read’
instance forall a b c. (GHC.Internal.Read.Read a, GHC.Internal.Read.Read b, GHC.Internal.Read.Read c) => GHC.Internal.Read.Read (a, b, c) -- Defined in ‘GHC.Internal.Read’
instance forall a b c d. (GHC.Internal.Read.Read a, GHC.Internal.Read.Read b, GHC.Internal.Read.Read c, GHC.Internal.Read.Read d) => GHC.Internal.Read.Read (a, b, c, d) -- Defined in ‘GHC.Internal.Read’
instance forall a b c d e. (GHC.Internal.Read.Read a, GHC.Internal.Read.Read b, GHC.Internal.Read.Read c, GHC.Internal.Read.Read d, GHC.Internal.Read.Read e) => GHC.Internal.Read.Read (a, b, c, d, e) -- Defined in ‘GHC.Internal.Read’
instance forall a b c d e f. (GHC.Internal.Read.Read a, GHC.Internal.Read.Read b, GHC.Internal.Read.Read c, GHC.Internal.Read.Read d, GHC.Internal.Read.Read e, GHC.Internal.Read.Read f) => GHC.Internal.Read.Read (a, b, c, d, e, f) -- Defined in ‘GHC.Internal.Read’
instance forall a b c d e f g. (GHC.Internal.Read.Read a, GHC.Internal.Read.Read b, GHC.Internal.Read.Read c, GHC.Internal.Read.Read d, GHC.Internal.Read.Read e, GHC.Internal.Read.Read f, GHC.Internal.Read.Read g) => GHC.Internal.Read.Read (a, b, c, d, e, f, g) -- Defined in ‘GHC.Internal.Read’
instance forall a b c d e f g h. (GHC.Internal.Read.Read a, GHC.Internal.Read.Read b, GHC.Internal.Read.Read c, GHC.Internal.Read.Read d, GHC.Internal.Read.Read e, GHC.Internal.Read.Read f, GHC.Internal.Read.Read g, GHC.Internal.Read.Read h) => GHC.Internal.Read.Read (a, b, c, d, e, f, g, h) -- Defined in ‘GHC.Internal.Read’
instance forall a b c d e f g h i. (GHC.Internal.Read.Read a, GHC.Internal.Read.Read b, GHC.Internal.Read.Read c, GHC.Internal.Read.Read d, GHC.Internal.Read.Read e, GHC.Internal.Read.Read f, GHC.Internal.Read.Read g, GHC.Internal.Read.Read h, GHC.Internal.Read.Read i) => GHC.Internal.Read.Read (a, b, c, d, e, f, g, h, i) -- Defined in ‘GHC.Internal.Read’
instance GHC.Internal.Read.Read () -- Defined in ‘GHC.Internal.Read’
instance GHC.Internal.Read.Read GHC.Internal.Base.Void -- Defined in ‘GHC.Internal.Read’
instance GHC.Internal.Read.Read GHC.Types.Word -- Defined in ‘GHC.Internal.Read’
instance GHC.Internal.Read.Read GHC.Internal.Word.Word16 -- Defined in ‘GHC.Internal.Read’
instance GHC.Internal.Read.Read GHC.Internal.Word.Word32 -- Defined in ‘GHC.Internal.Read’
instance GHC.Internal.Read.Read GHC.Internal.Word.Word64 -- Defined in ‘GHC.Internal.Read’
instance GHC.Internal.Read.Read GHC.Internal.Word.Word8 -- Defined in ‘GHC.Internal.Read’
instance forall a. (GHC.Internal.Read.Read a, GHC.Classes.Ord a) => GHC.Internal.Read.Read (Data.Set.Internal.Set a) -- Defined in ‘Data.Set.Internal’
instance forall a. GHC.Internal.Read.Read a => GHC.Internal.Read.Read (GHC.Internal.Data.Ord.Down a) -- Defined in ‘GHC.Internal.Data.Ord’
instance forall a. GHC.Internal.Read.Read a => GHC.Internal.Read.Read (Distribution.Compat.Semigroup.Last' a) -- Defined in ‘Distribution.Compat.Semigroup’
instance forall a. GHC.Internal.Read.Read a => GHC.Internal.Read.Read (Distribution.Compat.Semigroup.Option' a) -- Defined in ‘Distribution.Compat.Semigroup’
instance GHC.Internal.Read.Read GHC.Internal.Data.Semigroup.Internal.All -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall k (f :: k -> *) (a :: k). GHC.Internal.Read.Read (f a) => GHC.Internal.Read.Read (GHC.Internal.Data.Semigroup.Internal.Alt f a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Internal.Read.Read GHC.Internal.Data.Semigroup.Internal.Any -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Read.Read a => GHC.Internal.Read.Read (GHC.Internal.Data.Semigroup.Internal.Dual a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Read.Read a => GHC.Internal.Read.Read (GHC.Internal.Data.Semigroup.Internal.Product a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Read.Read a => GHC.Internal.Read.Read (GHC.Internal.Data.Semigroup.Internal.Sum a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Internal.Read.Read Distribution.Compat.Time.ModTime -- Defined in ‘Distribution.Compat.Time’
instance GHC.Internal.Read.Read Distribution.Compiler.AbiTag -- Defined in ‘Distribution.Compiler’
instance GHC.Internal.Read.Read Distribution.Compiler.CompilerFlavor -- Defined in ‘Distribution.Compiler’
instance GHC.Internal.Read.Read Distribution.Compiler.CompilerId -- Defined in ‘Distribution.Compiler’
instance GHC.Internal.Read.Read Distribution.Compiler.CompilerInfo -- Defined in ‘Distribution.Compiler’
instance forall v. GHC.Internal.Read.Read v => GHC.Internal.Read.Read (Distribution.Compiler.PerCompilerFlavor v) -- Defined in ‘Distribution.Compiler’
instance GHC.Internal.Read.Read Distribution.Types.AbiDependency.AbiDependency -- Defined in ‘Distribution.Types.AbiDependency’
instance GHC.Internal.Read.Read Distribution.Types.ExposedModule.ExposedModule -- Defined in ‘Distribution.Types.ExposedModule’
instance GHC.Internal.Read.Read Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -- Defined in ‘Distribution.Types.InstalledPackageInfo’
instance GHC.Internal.Read.Read Distribution.License.License -- Defined in ‘Distribution.License’
instance GHC.Internal.Read.Read Distribution.Types.AbiHash.AbiHash -- Defined in ‘Distribution.Types.AbiHash’
instance GHC.Internal.Read.Read Distribution.Types.ComponentId.ComponentId -- Defined in ‘Distribution.Types.ComponentId’
instance GHC.Internal.Read.Read Distribution.Types.Dependency.Dependency -- Defined in ‘Distribution.Types.Dependency’
instance GHC.Internal.Read.Read Distribution.Types.Module.Module -- Defined in ‘Distribution.Types.Module’
instance GHC.Internal.Read.Read Distribution.Types.PackageId.PackageIdentifier -- Defined in ‘Distribution.Types.PackageId’
instance GHC.Internal.Read.Read Distribution.Types.PackageName.PackageName -- Defined in ‘Distribution.Types.PackageName’
instance GHC.Internal.Read.Read Distribution.Types.PkgconfigName.PkgconfigName -- Defined in ‘Distribution.Types.PkgconfigName’
instance GHC.Internal.Read.Read Distribution.Types.Version.Version -- Defined in ‘Distribution.Types.Version’
instance GHC.Internal.Read.Read Distribution.ModuleName.ModuleName -- Defined in ‘Distribution.ModuleName’
instance GHC.Internal.Read.Read Distribution.Types.SourceRepo.KnownRepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Internal.Read.Read Distribution.Types.SourceRepo.RepoKind -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Internal.Read.Read Distribution.Types.SourceRepo.RepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Internal.Read.Read Distribution.Types.SourceRepo.SourceRepo -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Internal.Read.Read Distribution.Types.Benchmark.Benchmark -- Defined in ‘Distribution.Types.Benchmark’
instance GHC.Internal.Read.Read Distribution.Types.BenchmarkInterface.BenchmarkInterface -- Defined in ‘Distribution.Types.BenchmarkInterface’
instance GHC.Internal.Read.Read Distribution.Types.BenchmarkType.BenchmarkType -- Defined in ‘Distribution.Types.BenchmarkType’
instance GHC.Internal.Read.Read Distribution.Types.BuildInfo.BuildInfo -- Defined in ‘Distribution.Types.BuildInfo’
instance GHC.Internal.Read.Read Distribution.Types.BuildType.BuildType -- Defined in ‘Distribution.Types.BuildType’
instance GHC.Internal.Read.Read Distribution.Types.ComponentName.ComponentName -- Defined in ‘Distribution.Types.ComponentName’
instance GHC.Internal.Read.Read Distribution.Types.ComponentName.NotLibComponentName -- Defined in ‘Distribution.Types.ComponentName’
instance GHC.Internal.Read.Read Distribution.Types.ModuleRenaming.ModuleRenaming -- Defined in ‘Distribution.Types.ModuleRenaming’
instance GHC.Internal.Read.Read Distribution.Types.ExeDependency.ExeDependency -- Defined in ‘Distribution.Types.ExeDependency’
instance GHC.Internal.Read.Read Distribution.Types.Executable.Executable -- Defined in ‘Distribution.Types.Executable’
instance GHC.Internal.Read.Read Distribution.Types.ExecutableScope.ExecutableScope -- Defined in ‘Distribution.Types.ExecutableScope’
instance GHC.Internal.Read.Read Distribution.Types.Flag.FlagAssignment -- Defined in ‘Distribution.Types.Flag’
instance GHC.Internal.Read.Read Distribution.Types.Flag.FlagName -- Defined in ‘Distribution.Types.Flag’
instance GHC.Internal.Read.Read Distribution.Types.ForeignLib.ForeignLib -- Defined in ‘Distribution.Types.ForeignLib’
instance GHC.Internal.Read.Read Distribution.Types.ForeignLib.LibVersionInfo -- Defined in ‘Distribution.Types.ForeignLib’
instance GHC.Internal.Read.Read Distribution.Types.ForeignLibType.ForeignLibType -- Defined in ‘Distribution.Types.ForeignLibType’
instance GHC.Internal.Read.Read Distribution.Types.ForeignLibOption.ForeignLibOption -- Defined in ‘Distribution.Types.ForeignLibOption’
instance GHC.Internal.Read.Read Distribution.Types.IncludeRenaming.IncludeRenaming -- Defined in ‘Distribution.Types.IncludeRenaming’
instance GHC.Internal.Read.Read Distribution.Types.LibraryName.LibraryName -- Defined in ‘Distribution.Types.LibraryName’
instance GHC.Internal.Read.Read Distribution.Types.LegacyExeDependency.LegacyExeDependency -- Defined in ‘Distribution.Types.LegacyExeDependency’
instance GHC.Internal.Read.Read Distribution.Types.Library.Library -- Defined in ‘Distribution.Types.Library’
instance GHC.Internal.Read.Read Distribution.Types.LibraryVisibility.LibraryVisibility -- Defined in ‘Distribution.Types.LibraryVisibility’
instance GHC.Internal.Read.Read Distribution.Types.Mixin.Mixin -- Defined in ‘Distribution.Types.Mixin’
instance GHC.Internal.Read.Read Distribution.Types.ModuleReexport.ModuleReexport -- Defined in ‘Distribution.Types.ModuleReexport’
instance GHC.Internal.Read.Read Distribution.Types.PackageDescription.PackageDescription -- Defined in ‘Distribution.Types.PackageDescription’
instance GHC.Internal.Read.Read Distribution.Types.PkgconfigVersionRange.PkgconfigVersionRange -- Defined in ‘Distribution.Types.PkgconfigVersionRange’
instance GHC.Internal.Read.Read Distribution.Types.PkgconfigDependency.PkgconfigDependency -- Defined in ‘Distribution.Types.PkgconfigDependency’
instance GHC.Internal.Read.Read Distribution.Types.PkgconfigVersion.PkgconfigVersion -- Defined in ‘Distribution.Types.PkgconfigVersion’
instance GHC.Internal.Read.Read Distribution.Types.SetupBuildInfo.SetupBuildInfo -- Defined in ‘Distribution.Types.SetupBuildInfo’
instance GHC.Internal.Read.Read Distribution.Types.TestSuite.TestSuite -- Defined in ‘Distribution.Types.TestSuite’
instance GHC.Internal.Read.Read Distribution.Types.TestSuiteInterface.TestSuiteInterface -- Defined in ‘Distribution.Types.TestSuiteInterface’
instance GHC.Internal.Read.Read Distribution.Types.TestType.TestType -- Defined in ‘Distribution.Types.TestType’
instance GHC.Internal.Read.Read Distribution.Types.UnqualComponentName.UnqualComponentName -- Defined in ‘Distribution.Types.UnqualComponentName’
instance GHC.Internal.Read.Read Distribution.SPDX.LicenseId.LicenseId -- Defined in ‘Distribution.SPDX.LicenseId’
instance GHC.Internal.Read.Read Distribution.SPDX.LicenseExceptionId.LicenseExceptionId -- Defined in ‘Distribution.SPDX.LicenseExceptionId’
instance GHC.Internal.Read.Read Distribution.SPDX.LicenseExpression.LicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance GHC.Internal.Read.Read Distribution.SPDX.LicenseExpression.SimpleLicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance GHC.Internal.Read.Read Distribution.SPDX.License.License -- Defined in ‘Distribution.SPDX.License’
instance GHC.Internal.Read.Read Distribution.SPDX.LicenseReference.LicenseRef -- Defined in ‘Distribution.SPDX.LicenseReference’
instance GHC.Internal.Read.Read Language.Haskell.Extension.Extension -- Defined in ‘Language.Haskell.Extension’
instance GHC.Internal.Read.Read Language.Haskell.Extension.KnownExtension -- Defined in ‘Language.Haskell.Extension’
instance GHC.Internal.Read.Read Language.Haskell.Extension.Language -- Defined in ‘Language.Haskell.Extension’
instance GHC.Internal.Read.Read Distribution.Simple.Compiler.Compiler -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Internal.Read.Read Distribution.Simple.Compiler.DebugInfoLevel -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Internal.Read.Read Distribution.Simple.Compiler.OptimisationLevel -- Defined in ‘Distribution.Simple.Compiler’
instance forall fp. GHC.Internal.Read.Read fp => GHC.Internal.Read.Read (Distribution.Simple.Compiler.PackageDBX fp) -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Internal.Read.Read Distribution.Simple.Compiler.ProfDetailLevel -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Internal.Read.Read Distribution.Types.VersionRange.Internal.VersionRange -- Defined in ‘Distribution.Types.VersionRange.Internal’
instance forall a. GHC.Internal.Read.Read a => GHC.Internal.Read.Read (Distribution.Types.VersionRange.Internal.VersionRangeF a) -- Defined in ‘Distribution.Types.VersionRange.Internal’
instance GHC.Internal.Read.Read Distribution.Types.LocalBuildInfo.LocalBuildInfo -- Defined in ‘Distribution.Types.LocalBuildInfo’
instance GHC.Internal.Read.Read Cabal-3.15.0.0:Distribution.Simple.Setup.Common.CommonSetupFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Common’
instance [safe] GHC.Internal.Read.Read Distribution.Simple.BuildWay.BuildWay -- Defined in ‘Distribution.Simple.BuildWay’
instance [safe] forall a. GHC.Internal.Read.Read a => GHC.Internal.Read.Read (Distribution.Simple.Flag.Flag a) -- Defined in ‘Distribution.Simple.Flag’
instance GHC.Internal.Read.Read Distribution.Simple.Haddock.Directory -- Defined in ‘Distribution.Simple.Haddock’
instance GHC.Internal.Read.Read Distribution.Simple.Hpc.Way -- Defined in ‘Distribution.Simple.Hpc’
instance forall dir. GHC.Internal.Read.Read dir => GHC.Internal.Read.Read (Distribution.Simple.InstallDirs.InstallDirs dir) -- Defined in ‘Distribution.Simple.InstallDirs’
instance GHC.Internal.Read.Read Distribution.Simple.InstallDirs.PathTemplate -- Defined in ‘Distribution.Simple.InstallDirs’
instance [safe] GHC.Internal.Read.Read Distribution.Simple.InstallDirs.Internal.PathComponent -- Defined in ‘Distribution.Simple.InstallDirs.Internal’
instance [safe] GHC.Internal.Read.Read Distribution.Simple.InstallDirs.Internal.PathTemplateVariable -- Defined in ‘Distribution.Simple.InstallDirs.Internal’
instance GHC.Internal.Read.Read Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -- Defined in ‘Distribution.Types.ComponentLocalBuildInfo’
instance GHC.Internal.Read.Read Distribution.Types.Component.Component -- Defined in ‘Distribution.Types.Component’
instance forall a. GHC.Internal.Read.Read a => GHC.Internal.Read.Read (Distribution.Simple.PackageIndex.PackageIndex a) -- Defined in ‘Distribution.Simple.PackageIndex’
instance GHC.Internal.Read.Read Distribution.Simple.Program.Types.ConfiguredProgram -- Defined in ‘Distribution.Simple.Program.Types’
instance GHC.Internal.Read.Read Distribution.Simple.Program.Types.ProgramLocation -- Defined in ‘Distribution.Simple.Program.Types’
instance GHC.Internal.Read.Read Distribution.Simple.Program.Db.ProgramDb -- Defined in ‘Distribution.Simple.Program.Db’
instance GHC.Internal.Read.Read Cabal-3.15.0.0:Distribution.Simple.Setup.Build.BuildFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Build’
instance GHC.Internal.Read.Read Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Config’
instance [safe] GHC.Internal.Read.Read Distribution.Types.DumpBuildInfo.DumpBuildInfo -- Defined in ‘Distribution.Types.DumpBuildInfo’
instance GHC.Internal.Read.Read Distribution.Simple.Test.Log.PackageLog -- Defined in ‘Distribution.Simple.Test.Log’
instance GHC.Internal.Read.Read Distribution.Simple.Test.Log.TestLogs -- Defined in ‘Distribution.Simple.Test.Log’
instance GHC.Internal.Read.Read Distribution.Simple.Test.Log.TestSuiteLog -- Defined in ‘Distribution.Simple.Test.Log’
instance GHC.Internal.Read.Read Distribution.System.Arch -- Defined in ‘Distribution.System’
instance GHC.Internal.Read.Read Distribution.System.OS -- Defined in ‘Distribution.System’
instance GHC.Internal.Read.Read Distribution.System.Platform -- Defined in ‘Distribution.System’
instance [safe] GHC.Internal.Read.Read Distribution.TestSuite.OptionDescr -- Defined in ‘Distribution.TestSuite’
instance [safe] GHC.Internal.Read.Read Distribution.TestSuite.OptionType -- Defined in ‘Distribution.TestSuite’
instance [safe] GHC.Internal.Read.Read Distribution.TestSuite.Result -- Defined in ‘Distribution.TestSuite’
instance GHC.Internal.Read.Read Distribution.Types.ComponentRequestedSpec.ComponentRequestedSpec -- Defined in ‘Distribution.Types.ComponentRequestedSpec’
instance GHC.Internal.Read.Read Distribution.Types.DependencyMap.DependencyMap -- Defined in ‘Distribution.Types.DependencyMap’
instance GHC.Internal.Read.Read Distribution.Types.GivenComponent.GivenComponent -- Defined in ‘Distribution.Types.GivenComponent’
instance GHC.Internal.Read.Read Distribution.Types.GivenComponent.PromisedComponent -- Defined in ‘Distribution.Types.GivenComponent’
instance GHC.Internal.Read.Read Distribution.Types.LocalBuildConfig.BuildOptions -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance GHC.Internal.Read.Read Distribution.Types.LocalBuildConfig.ComponentBuildDescr -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance GHC.Internal.Read.Read Distribution.Types.LocalBuildConfig.LocalBuildConfig -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance GHC.Internal.Read.Read Distribution.Types.LocalBuildConfig.LocalBuildDescr -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance GHC.Internal.Read.Read Distribution.Types.LocalBuildConfig.PackageBuildDescr -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance GHC.Internal.Read.Read Distribution.Types.MungedPackageId.MungedPackageId -- Defined in ‘Distribution.Types.MungedPackageId’
instance GHC.Internal.Read.Read Distribution.Types.MungedPackageName.MungedPackageName -- Defined in ‘Distribution.Types.MungedPackageName’
instance GHC.Internal.Read.Read Distribution.Types.PackageVersionConstraint.PackageVersionConstraint -- Defined in ‘Distribution.Types.PackageVersionConstraint’
instance forall a. (GHC.Classes.Ord a, GHC.Internal.Read.Read a) => GHC.Internal.Read.Read (Distribution.Utils.NubList.NubList a) -- Defined in ‘Distribution.Utils.NubList’
instance forall a. (GHC.Classes.Ord a, GHC.Internal.Read.Read a) => GHC.Internal.Read.Read (Distribution.Utils.NubList.NubListR a) -- Defined in ‘Distribution.Utils.NubList’
instance forall (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute) from (to :: Distribution.Utils.Path.FileOrDir). GHC.Internal.Read.Read (Distribution.Utils.Path.SymbolicPathX allowAbsolute from to) -- Defined in ‘Distribution.Utils.Path’
instance GHC.Internal.Read.Read Distribution.Utils.ShortText.ShortText -- Defined in ‘Distribution.Utils.ShortText’
instance GHC.Internal.Read.Read Distribution.Verbosity.Verbosity -- Defined in ‘Distribution.Verbosity’
instance [safe] GHC.Internal.Read.Read Distribution.Verbosity.Internal.VerbosityFlag -- Defined in ‘Distribution.Verbosity.Internal’
instance [safe] GHC.Internal.Read.Read Distribution.Verbosity.Internal.VerbosityLevel -- Defined in ‘Distribution.Verbosity.Internal’
instance GHC.Internal.Real.Fractional GHC.Types.Double -- Defined in ‘GHC.Internal.Float’
instance GHC.Internal.Real.Fractional GHC.Types.Float -- Defined in ‘GHC.Internal.Float’
instance forall a. GHC.Internal.Real.Integral a => GHC.Internal.Real.Fractional (GHC.Internal.Real.Ratio a) -- Defined in ‘GHC.Internal.Real’
instance forall a k (b :: k). GHC.Internal.Real.Fractional a => GHC.Internal.Real.Fractional (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.Functor.Const’
instance forall a. GHC.Internal.Real.Fractional a => GHC.Internal.Real.Fractional (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance forall a. GHC.Internal.Real.Fractional a => GHC.Internal.Real.Fractional (GHC.Internal.Data.Ord.Down a) -- Defined in ‘GHC.Internal.Data.Ord’
instance GHC.Internal.Real.Integral GHC.Internal.Word.Word16 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Real.Integral GHC.Internal.Word.Word32 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Real.Integral GHC.Internal.Word.Word64 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Real.Integral GHC.Internal.Word.Word8 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Real.Integral GHC.Types.Int -- Defined in ‘GHC.Internal.Real’
instance GHC.Internal.Real.Integral GHC.Num.Integer.Integer -- Defined in ‘GHC.Internal.Real’
instance GHC.Internal.Real.Integral GHC.Num.Natural.Natural -- Defined in ‘GHC.Internal.Real’
instance GHC.Internal.Real.Integral GHC.Types.Word -- Defined in ‘GHC.Internal.Real’
instance forall a k (b :: k). GHC.Internal.Real.Integral a => GHC.Internal.Real.Integral (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.Functor.Const’
instance forall a. GHC.Internal.Real.Integral a => GHC.Internal.Real.Integral (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance GHC.Internal.Real.Integral GHC.Internal.Int.Int16 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Real.Integral GHC.Internal.Int.Int32 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Real.Integral GHC.Internal.Int.Int64 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Real.Integral GHC.Internal.Int.Int8 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Real.Real GHC.Internal.Word.Word16 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Real.Real GHC.Internal.Word.Word32 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Real.Real GHC.Internal.Word.Word64 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Real.Real GHC.Internal.Word.Word8 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Real.Real GHC.Types.Double -- Defined in ‘GHC.Internal.Float’
instance GHC.Internal.Real.Real GHC.Types.Float -- Defined in ‘GHC.Internal.Float’
instance GHC.Internal.Real.Real GHC.Types.Int -- Defined in ‘GHC.Internal.Real’
instance GHC.Internal.Real.Real GHC.Num.Integer.Integer -- Defined in ‘GHC.Internal.Real’
instance GHC.Internal.Real.Real GHC.Num.Natural.Natural -- Defined in ‘GHC.Internal.Real’
instance forall a. GHC.Internal.Real.Integral a => GHC.Internal.Real.Real (GHC.Internal.Real.Ratio a) -- Defined in ‘GHC.Internal.Real’
instance GHC.Internal.Real.Real GHC.Types.Word -- Defined in ‘GHC.Internal.Real’
instance forall a k (b :: k). GHC.Internal.Real.Real a => GHC.Internal.Real.Real (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.Functor.Const’
instance forall a. GHC.Internal.Real.Real a => GHC.Internal.Real.Real (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance GHC.Internal.Real.Real GHC.Internal.Int.Int16 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Real.Real GHC.Internal.Int.Int32 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Real.Real GHC.Internal.Int.Int64 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Real.Real GHC.Internal.Int.Int8 -- Defined in ‘GHC.Internal.Int’
instance forall a. GHC.Internal.Real.Real a => GHC.Internal.Real.Real (GHC.Internal.Data.Ord.Down a) -- Defined in ‘GHC.Internal.Data.Ord’
instance GHC.Internal.Real.RealFrac GHC.Types.Double -- Defined in ‘GHC.Internal.Float’
instance GHC.Internal.Real.RealFrac GHC.Types.Float -- Defined in ‘GHC.Internal.Float’
instance forall a. GHC.Internal.Real.Integral a => GHC.Internal.Real.RealFrac (GHC.Internal.Real.Ratio a) -- Defined in ‘GHC.Internal.Real’
instance forall a k (b :: k). GHC.Internal.Real.RealFrac a => GHC.Internal.Real.RealFrac (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.Functor.Const’
instance forall a. GHC.Internal.Real.RealFrac a => GHC.Internal.Real.RealFrac (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance forall a. GHC.Internal.Real.RealFrac a => GHC.Internal.Real.RealFrac (GHC.Internal.Data.Ord.Down a) -- Defined in ‘GHC.Internal.Data.Ord’
instance GHC.Internal.Show.Show Distribution.Backpack.OpenModule -- Defined in ‘Distribution.Backpack’
instance GHC.Internal.Show.Show Distribution.Backpack.OpenUnitId -- Defined in ‘Distribution.Backpack’
instance GHC.Internal.Show.Show Distribution.Types.UnitId.DefUnitId -- Defined in ‘Distribution.Types.UnitId’
instance GHC.Internal.Show.Show Distribution.Types.UnitId.UnitId -- Defined in ‘Distribution.Types.UnitId’
instance GHC.Internal.Show.Show Distribution.Backpack.FullUnitId.FullUnitId -- Defined in ‘Distribution.Backpack.FullUnitId’
instance GHC.Internal.Show.Show Distribution.Backpack.ModuleShape.ModuleShape -- Defined in ‘Distribution.Backpack.ModuleShape’
instance GHC.Internal.Show.Show Distribution.Backpack.PreModuleShape.PreModuleShape -- Defined in ‘Distribution.Backpack.PreModuleShape’
instance [safe] GHC.Internal.Show.Show Distribution.CabalSpecVersion.CabalSpecVersion -- Defined in ‘Distribution.CabalSpecVersion’
instance [safe] GHC.Internal.Show.Show Distribution.CabalSpecVersion.HasCommonStanzas -- Defined in ‘Distribution.CabalSpecVersion’
instance [safe] GHC.Internal.Show.Show Distribution.CabalSpecVersion.HasElif -- Defined in ‘Distribution.CabalSpecVersion’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (Data.Binary.Get.Internal.Decoder a) -- Defined in ‘Data.Binary.Get.Internal’
instance GHC.Internal.Show.Show GHC.Internal.Word.Word16 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Show.Show GHC.Internal.Word.Word32 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Show.Show GHC.Internal.Word.Word64 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Show.Show GHC.Internal.Word.Word8 -- Defined in ‘GHC.Internal.Word’
instance GHC.Internal.Show.Show GHC.Internal.Exception.Type.ArithException -- Defined in ‘GHC.Internal.Exception.Type’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (GHC.Internal.Exception.Type.ExceptionWithContext a) -- Defined in ‘GHC.Internal.Exception.Type’
instance forall e. GHC.Internal.Show.Show e => GHC.Internal.Show.Show (GHC.Internal.Exception.Type.NoBacktrace e) -- Defined in ‘GHC.Internal.Exception.Type’
instance GHC.Internal.Show.Show GHC.Internal.Exception.Type.SomeException -- Defined in ‘GHC.Internal.Exception.Type’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (Distribution.Compat.Graph.Graph a) -- Defined in ‘Distribution.Compat.Graph’
instance forall k a. (GHC.Internal.Show.Show a, GHC.Internal.Show.Show k) => GHC.Internal.Show.Show (Distribution.Compat.Graph.Node k a) -- Defined in ‘Distribution.Compat.Graph’
instance [safe] forall vertex. GHC.Internal.Show.Show vertex => GHC.Internal.Show.Show (Data.Graph.SCC vertex) -- Defined in ‘Data.Graph’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (Distribution.Compat.NonEmptySet.NonEmptySet a) -- Defined in ‘Distribution.Compat.NonEmptySet’
instance GHC.Internal.Show.Show GHC.Types.Double -- Defined in ‘GHC.Internal.Float’
instance GHC.Internal.Show.Show GHC.Types.Float -- Defined in ‘GHC.Internal.Float’
instance GHC.Internal.Show.Show GHC.Internal.Real.FractionalExponentBase -- Defined in ‘GHC.Internal.Real’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (GHC.Internal.Real.Ratio a) -- Defined in ‘GHC.Internal.Real’
instance [safe] GHC.Internal.Show.Show Text.PrettyPrint.HughesPJ.Doc -- Defined in ‘Text.PrettyPrint.HughesPJ’
instance forall k a (b :: k). GHC.Internal.Show.Show a => GHC.Internal.Show.Show (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.Functor.Const’
instance GHC.Internal.Show.Show GHC.Internal.Data.Data.Constr -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Show.Show GHC.Internal.Data.Data.ConstrRep -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Show.Show GHC.Internal.Data.Data.DataRep -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Show.Show GHC.Internal.Data.Data.DataType -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Internal.Show.Show GHC.Internal.Data.Data.Fixity -- Defined in ‘GHC.Internal.Data.Data’
instance forall a b. (GHC.Internal.Show.Show a, GHC.Internal.Show.Show b) => GHC.Internal.Show.Show (GHC.Internal.Data.Either.Either a b) -- Defined in ‘GHC.Internal.Data.Either’
instance GHC.Internal.Show.Show GHC.Internal.IO.Exception.AllocationLimitExceeded -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Show.Show GHC.Internal.IO.Exception.ArrayException -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Show.Show GHC.Internal.IO.Exception.AssertionFailed -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Show.Show GHC.Internal.IO.Exception.AsyncException -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Show.Show GHC.Internal.IO.Exception.BlockedIndefinitelyOnMVar -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Show.Show GHC.Internal.IO.Exception.BlockedIndefinitelyOnSTM -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Show.Show GHC.Internal.IO.Exception.CompactionFailed -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Show.Show GHC.Internal.IO.Exception.Deadlock -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Show.Show GHC.Internal.IO.Exception.ExitCode -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Show.Show GHC.Internal.IO.Exception.FixIOException -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Show.Show GHC.Internal.IO.Exception.IOErrorType -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Show.Show GHC.Internal.IO.Exception.IOException -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Show.Show GHC.Internal.IO.Exception.SomeAsyncException -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Internal.Show.Show GHC.Internal.IO.MaskingState -- Defined in ‘GHC.Internal.IO’
instance forall k (f :: k -> *) (g :: k -> *) (p :: k). (GHC.Internal.Show.Show (f p), GHC.Internal.Show.Show (g p)) => GHC.Internal.Show.Show ((GHC.Internal.Generics.:*:) f g p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (f :: k -> *) (g :: k -> *) (p :: k). (GHC.Internal.Show.Show (f p), GHC.Internal.Show.Show (g p)) => GHC.Internal.Show.Show ((GHC.Internal.Generics.:+:) f g p) -- Defined in ‘GHC.Internal.Generics’
instance forall k2 (f :: k2 -> *) k1 (g :: k1 -> k2) (p :: k1). GHC.Internal.Show.Show (f (g p)) => GHC.Internal.Show.Show ((GHC.Internal.Generics.:.:) f g p) -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Show.Show GHC.Internal.Generics.Associativity -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Show.Show GHC.Internal.Generics.DecidedStrictness -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Show.Show GHC.Internal.Generics.Fixity -- Defined in ‘GHC.Internal.Generics’
instance forall i c k (p :: k). GHC.Internal.Show.Show c => GHC.Internal.Show.Show (GHC.Internal.Generics.K1 i c p) -- Defined in ‘GHC.Internal.Generics’
instance forall i (c :: GHC.Internal.Generics.Meta) k (f :: k -> *) (p :: k). GHC.Internal.Show.Show (f p) => GHC.Internal.Show.Show (GHC.Internal.Generics.M1 i c f p) -- Defined in ‘GHC.Internal.Generics’
instance forall p. GHC.Internal.Show.Show p => GHC.Internal.Show.Show (GHC.Internal.Generics.Par1 p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (f :: k -> *) (p :: k). GHC.Internal.Show.Show (f p) => GHC.Internal.Show.Show (GHC.Internal.Generics.Rec1 f p) -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Show.Show GHC.Internal.Generics.SourceStrictness -- Defined in ‘GHC.Internal.Generics’
instance GHC.Internal.Show.Show GHC.Internal.Generics.SourceUnpackedness -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Internal.Show.Show (GHC.Internal.Generics.U1 p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Internal.Show.Show (GHC.Internal.Generics.URec GHC.Types.Char p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Internal.Show.Show (GHC.Internal.Generics.URec GHC.Types.Double p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Internal.Show.Show (GHC.Internal.Generics.URec GHC.Types.Float p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Internal.Show.Show (GHC.Internal.Generics.URec GHC.Types.Int p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Internal.Show.Show (GHC.Internal.Generics.URec GHC.Types.Word p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Internal.Show.Show (GHC.Internal.Generics.V1 p) -- Defined in ‘GHC.Internal.Generics’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance GHC.Internal.Show.Show GHC.Internal.Int.Int16 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Show.Show GHC.Internal.Int.Int32 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Show.Show GHC.Internal.Int.Int64 -- Defined in ‘GHC.Internal.Int’
instance GHC.Internal.Show.Show GHC.Internal.Int.Int8 -- Defined in ‘GHC.Internal.Int’
instance forall k a. (GHC.Internal.Show.Show k, GHC.Internal.Show.Show a) => GHC.Internal.Show.Show (Data.Map.Internal.Map k a) -- Defined in ‘Data.Map.Internal’
instance forall k (s :: k). GHC.Internal.Show.Show (GHC.Internal.Data.Proxy.Proxy s) -- Defined in ‘GHC.Internal.Data.Proxy’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (Data.Set.Internal.Intersection a) -- Defined in ‘Data.Set.Internal’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (Data.Set.Internal.Set a) -- Defined in ‘Data.Set.Internal’
instance GHC.Internal.Show.Show GHC.Types.Bool -- Defined in ‘GHC.Internal.Show’
instance GHC.Internal.Show.Show GHC.Internal.Stack.Types.CallStack -- Defined in ‘GHC.Internal.Show’
instance GHC.Internal.Show.Show GHC.Types.Char -- Defined in ‘GHC.Internal.Show’
instance GHC.Internal.Show.Show GHC.Types.Int -- Defined in ‘GHC.Internal.Show’
instance GHC.Internal.Show.Show GHC.Num.Integer.Integer -- Defined in ‘GHC.Internal.Show’
instance GHC.Internal.Show.Show GHC.Types.KindRep -- Defined in ‘GHC.Internal.Show’
instance GHC.Internal.Show.Show GHC.Types.Levity -- Defined in ‘GHC.Internal.Show’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show [a] -- Defined in ‘GHC.Internal.Show’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (GHC.Internal.Maybe.Maybe a) -- Defined in ‘GHC.Internal.Show’
instance GHC.Internal.Show.Show GHC.Types.Module -- Defined in ‘GHC.Internal.Show’
instance GHC.Internal.Show.Show GHC.Num.Natural.Natural -- Defined in ‘GHC.Internal.Show’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (GHC.Internal.Base.NonEmpty a) -- Defined in ‘GHC.Internal.Show’
instance GHC.Internal.Show.Show GHC.Types.Ordering -- Defined in ‘GHC.Internal.Show’
instance GHC.Internal.Show.Show GHC.Types.RuntimeRep -- Defined in ‘GHC.Internal.Show’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (Solo a) -- Defined in ‘GHC.Internal.Show’
instance GHC.Internal.Show.Show GHC.Internal.Stack.Types.SrcLoc -- Defined in ‘GHC.Internal.Show’
instance GHC.Internal.Show.Show GHC.Types.TrName -- Defined in ‘GHC.Internal.Show’
instance forall a b c d e f g h i j. (GHC.Internal.Show.Show a, GHC.Internal.Show.Show b, GHC.Internal.Show.Show c, GHC.Internal.Show.Show d, GHC.Internal.Show.Show e, GHC.Internal.Show.Show f, GHC.Internal.Show.Show g, GHC.Internal.Show.Show h, GHC.Internal.Show.Show i, GHC.Internal.Show.Show j) => GHC.Internal.Show.Show (a, b, c, d, e, f, g, h, i, j) -- Defined in ‘GHC.Internal.Show’
instance forall a b c d e f g h i j k. (GHC.Internal.Show.Show a, GHC.Internal.Show.Show b, GHC.Internal.Show.Show c, GHC.Internal.Show.Show d, GHC.Internal.Show.Show e, GHC.Internal.Show.Show f, GHC.Internal.Show.Show g, GHC.Internal.Show.Show h, GHC.Internal.Show.Show i, GHC.Internal.Show.Show j, GHC.Internal.Show.Show k) => GHC.Internal.Show.Show (a, b, c, d, e, f, g, h, i, j, k) -- Defined in ‘GHC.Internal.Show’
instance forall a b c d e f g h i j k l. (GHC.Internal.Show.Show a, GHC.Internal.Show.Show b, GHC.Internal.Show.Show c, GHC.Internal.Show.Show d, GHC.Internal.Show.Show e, GHC.Internal.Show.Show f, GHC.Internal.Show.Show g, GHC.Internal.Show.Show h, GHC.Internal.Show.Show i, GHC.Internal.Show.Show j, GHC.Internal.Show.Show k, GHC.Internal.Show.Show l) => GHC.Internal.Show.Show (a, b, c, d, e, f, g, h, i, j, k, l) -- Defined in ‘GHC.Internal.Show’
instance forall a b c d e f g h i j k l m. (GHC.Internal.Show.Show a, GHC.Internal.Show.Show b, GHC.Internal.Show.Show c, GHC.Internal.Show.Show d, GHC.Internal.Show.Show e, GHC.Internal.Show.Show f, GHC.Internal.Show.Show g, GHC.Internal.Show.Show h, GHC.Internal.Show.Show i, GHC.Internal.Show.Show j, GHC.Internal.Show.Show k, GHC.Internal.Show.Show l, GHC.Internal.Show.Show m) => GHC.Internal.Show.Show (a, b, c, d, e, f, g, h, i, j, k, l, m) -- Defined in ‘GHC.Internal.Show’
instance forall a b c d e f g h i j k l m n. (GHC.Internal.Show.Show a, GHC.Internal.Show.Show b, GHC.Internal.Show.Show c, GHC.Internal.Show.Show d, GHC.Internal.Show.Show e, GHC.Internal.Show.Show f, GHC.Internal.Show.Show g, GHC.Internal.Show.Show h, GHC.Internal.Show.Show i, GHC.Internal.Show.Show j, GHC.Internal.Show.Show k, GHC.Internal.Show.Show l, GHC.Internal.Show.Show m, GHC.Internal.Show.Show n) => GHC.Internal.Show.Show (a, b, c, d, e, f, g, h, i, j, k, l, m, n) -- Defined in ‘GHC.Internal.Show’
instance forall a b c d e f g h i j k l m n o. (GHC.Internal.Show.Show a, GHC.Internal.Show.Show b, GHC.Internal.Show.Show c, GHC.Internal.Show.Show d, GHC.Internal.Show.Show e, GHC.Internal.Show.Show f, GHC.Internal.Show.Show g, GHC.Internal.Show.Show h, GHC.Internal.Show.Show i, GHC.Internal.Show.Show j, GHC.Internal.Show.Show k, GHC.Internal.Show.Show l, GHC.Internal.Show.Show m, GHC.Internal.Show.Show n, GHC.Internal.Show.Show o) => GHC.Internal.Show.Show (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) -- Defined in ‘GHC.Internal.Show’
instance forall a b. (GHC.Internal.Show.Show a, GHC.Internal.Show.Show b) => GHC.Internal.Show.Show (a, b) -- Defined in ‘GHC.Internal.Show’
instance forall a b c. (GHC.Internal.Show.Show a, GHC.Internal.Show.Show b, GHC.Internal.Show.Show c) => GHC.Internal.Show.Show (a, b, c) -- Defined in ‘GHC.Internal.Show’
instance forall a b c d. (GHC.Internal.Show.Show a, GHC.Internal.Show.Show b, GHC.Internal.Show.Show c, GHC.Internal.Show.Show d) => GHC.Internal.Show.Show (a, b, c, d) -- Defined in ‘GHC.Internal.Show’
instance forall a b c d e. (GHC.Internal.Show.Show a, GHC.Internal.Show.Show b, GHC.Internal.Show.Show c, GHC.Internal.Show.Show d, GHC.Internal.Show.Show e) => GHC.Internal.Show.Show (a, b, c, d, e) -- Defined in ‘GHC.Internal.Show’
instance forall a b c d e f. (GHC.Internal.Show.Show a, GHC.Internal.Show.Show b, GHC.Internal.Show.Show c, GHC.Internal.Show.Show d, GHC.Internal.Show.Show e, GHC.Internal.Show.Show f) => GHC.Internal.Show.Show (a, b, c, d, e, f) -- Defined in ‘GHC.Internal.Show’
instance forall a b c d e f g. (GHC.Internal.Show.Show a, GHC.Internal.Show.Show b, GHC.Internal.Show.Show c, GHC.Internal.Show.Show d, GHC.Internal.Show.Show e, GHC.Internal.Show.Show f, GHC.Internal.Show.Show g) => GHC.Internal.Show.Show (a, b, c, d, e, f, g) -- Defined in ‘GHC.Internal.Show’
instance forall a b c d e f g h. (GHC.Internal.Show.Show a, GHC.Internal.Show.Show b, GHC.Internal.Show.Show c, GHC.Internal.Show.Show d, GHC.Internal.Show.Show e, GHC.Internal.Show.Show f, GHC.Internal.Show.Show g, GHC.Internal.Show.Show h) => GHC.Internal.Show.Show (a, b, c, d, e, f, g, h) -- Defined in ‘GHC.Internal.Show’
instance forall a b c d e f g h i. (GHC.Internal.Show.Show a, GHC.Internal.Show.Show b, GHC.Internal.Show.Show c, GHC.Internal.Show.Show d, GHC.Internal.Show.Show e, GHC.Internal.Show.Show f, GHC.Internal.Show.Show g, GHC.Internal.Show.Show h, GHC.Internal.Show.Show i) => GHC.Internal.Show.Show (a, b, c, d, e, f, g, h, i) -- Defined in ‘GHC.Internal.Show’
instance GHC.Internal.Show.Show GHC.Types.TyCon -- Defined in ‘GHC.Internal.Show’
instance GHC.Internal.Show.Show GHC.Types.TypeLitSort -- Defined in ‘GHC.Internal.Show’
instance GHC.Internal.Show.Show () -- Defined in ‘GHC.Internal.Show’
instance GHC.Internal.Show.Show GHC.Types.VecCount -- Defined in ‘GHC.Internal.Show’
instance GHC.Internal.Show.Show GHC.Types.VecElem -- Defined in ‘GHC.Internal.Show’
instance GHC.Internal.Show.Show GHC.Internal.Base.Void -- Defined in ‘GHC.Internal.Show’
instance GHC.Internal.Show.Show GHC.Types.Word -- Defined in ‘GHC.Internal.Show’
instance GHC.Internal.Show.Show Distribution.Utils.Structured.Structure -- Defined in ‘Distribution.Utils.Structured’
instance GHC.Internal.Show.Show ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.SomeTypeRep -- Defined in ‘ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal’
instance forall k (a :: k). GHC.Internal.Show.Show (ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.TypeRep a) -- Defined in ‘ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (GHC.Internal.Data.Ord.Down a) -- Defined in ‘GHC.Internal.Data.Ord’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (Distribution.Compat.Semigroup.First' a) -- Defined in ‘Distribution.Compat.Semigroup’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (Distribution.Compat.Semigroup.Last' a) -- Defined in ‘Distribution.Compat.Semigroup’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (Distribution.Compat.Semigroup.Option' a) -- Defined in ‘Distribution.Compat.Semigroup’
instance GHC.Internal.Show.Show GHC.Internal.Unicode.GeneralCategory -- Defined in ‘GHC.Internal.Unicode’
instance GHC.Internal.Show.Show GHC.Internal.Data.Semigroup.Internal.All -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall k (f :: k -> *) (a :: k). GHC.Internal.Show.Show (f a) => GHC.Internal.Show.Show (GHC.Internal.Data.Semigroup.Internal.Alt f a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Internal.Show.Show GHC.Internal.Data.Semigroup.Internal.Any -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (GHC.Internal.Data.Semigroup.Internal.Dual a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (GHC.Internal.Data.Semigroup.Internal.Product a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (GHC.Internal.Data.Semigroup.Internal.Sum a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Internal.Show.Show Distribution.Compat.Time.ModTime -- Defined in ‘Distribution.Compat.Time’
instance GHC.Internal.Show.Show Distribution.Compiler.AbiTag -- Defined in ‘Distribution.Compiler’
instance GHC.Internal.Show.Show Distribution.Compiler.CompilerFlavor -- Defined in ‘Distribution.Compiler’
instance GHC.Internal.Show.Show Distribution.Compiler.CompilerId -- Defined in ‘Distribution.Compiler’
instance GHC.Internal.Show.Show Distribution.Compiler.CompilerInfo -- Defined in ‘Distribution.Compiler’
instance forall v. GHC.Internal.Show.Show v => GHC.Internal.Show.Show (Distribution.Compiler.PerCompilerFlavor v) -- Defined in ‘Distribution.Compiler’
instance GHC.Internal.Show.Show Distribution.FieldGrammar.Newtypes.SpecLicense -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance GHC.Internal.Show.Show Distribution.FieldGrammar.Newtypes.SpecVersion -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance forall ann. GHC.Internal.Show.Show ann => GHC.Internal.Show.Show (Distribution.FieldGrammar.Parsec.NamelessField ann) -- Defined in ‘Distribution.FieldGrammar.Parsec’
instance forall ann. GHC.Internal.Show.Show ann => GHC.Internal.Show.Show (Distribution.FieldGrammar.Parsec.Section ann) -- Defined in ‘Distribution.FieldGrammar.Parsec’
instance forall ann. GHC.Internal.Show.Show ann => GHC.Internal.Show.Show (Distribution.Fields.Field.Field ann) -- Defined in ‘Distribution.Fields.Field’
instance forall ann. GHC.Internal.Show.Show ann => GHC.Internal.Show.Show (Distribution.Fields.Field.FieldLine ann) -- Defined in ‘Distribution.Fields.Field’
instance forall ann. GHC.Internal.Show.Show ann => GHC.Internal.Show.Show (Distribution.Fields.Field.Name ann) -- Defined in ‘Distribution.Fields.Field’
instance forall ann. GHC.Internal.Show.Show ann => GHC.Internal.Show.Show (Distribution.Fields.Field.SectionArg ann) -- Defined in ‘Distribution.Fields.Field’
instance [safe] GHC.Internal.Show.Show Distribution.Parsec.Error.PError -- Defined in ‘Distribution.Parsec.Error’
instance [safe] GHC.Internal.Show.Show Distribution.Parsec.Warning.PWarnType -- Defined in ‘Distribution.Parsec.Warning’
instance [safe] GHC.Internal.Show.Show Distribution.Parsec.Warning.PWarning -- Defined in ‘Distribution.Parsec.Warning’
instance GHC.Internal.Show.Show Distribution.Fields.Lexer.LToken -- Defined in ‘Distribution.Fields.Lexer’
instance GHC.Internal.Show.Show Distribution.Fields.Lexer.Token -- Defined in ‘Distribution.Fields.Lexer’
instance [safe] GHC.Internal.Show.Show Distribution.Fields.LexerMonad.LexWarning -- Defined in ‘Distribution.Fields.LexerMonad’
instance [safe] GHC.Internal.Show.Show Distribution.Fields.LexerMonad.LexWarningType -- Defined in ‘Distribution.Fields.LexerMonad’
instance GHC.Internal.Show.Show Distribution.Types.AbiDependency.AbiDependency -- Defined in ‘Distribution.Types.AbiDependency’
instance GHC.Internal.Show.Show Distribution.Types.ExposedModule.ExposedModule -- Defined in ‘Distribution.Types.ExposedModule’
instance GHC.Internal.Show.Show Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -- Defined in ‘Distribution.Types.InstalledPackageInfo’
instance GHC.Internal.Show.Show Distribution.License.License -- Defined in ‘Distribution.License’
instance GHC.Internal.Show.Show Distribution.Types.AbiHash.AbiHash -- Defined in ‘Distribution.Types.AbiHash’
instance GHC.Internal.Show.Show Distribution.Types.ComponentId.ComponentId -- Defined in ‘Distribution.Types.ComponentId’
instance GHC.Internal.Show.Show Distribution.Types.Dependency.Dependency -- Defined in ‘Distribution.Types.Dependency’
instance GHC.Internal.Show.Show Distribution.Types.Module.Module -- Defined in ‘Distribution.Types.Module’
instance GHC.Internal.Show.Show Distribution.Types.PackageId.PackageIdentifier -- Defined in ‘Distribution.Types.PackageId’
instance GHC.Internal.Show.Show Distribution.Types.PackageName.PackageName -- Defined in ‘Distribution.Types.PackageName’
instance GHC.Internal.Show.Show Distribution.Types.PkgconfigName.PkgconfigName -- Defined in ‘Distribution.Types.PkgconfigName’
instance GHC.Internal.Show.Show Distribution.Types.Version.Version -- Defined in ‘Distribution.Types.Version’
instance GHC.Internal.Show.Show Distribution.ModuleName.ModuleName -- Defined in ‘Distribution.ModuleName’
instance GHC.Internal.Show.Show Distribution.Types.ConfVar.ConfVar -- Defined in ‘Distribution.Types.ConfVar’
instance GHC.Internal.Show.Show Distribution.Types.SourceRepo.KnownRepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Internal.Show.Show Distribution.Types.SourceRepo.RepoKind -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Internal.Show.Show Distribution.Types.SourceRepo.RepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Internal.Show.Show Distribution.Types.SourceRepo.SourceRepo -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Internal.Show.Show Distribution.Types.Benchmark.Benchmark -- Defined in ‘Distribution.Types.Benchmark’
instance GHC.Internal.Show.Show Distribution.Types.BenchmarkInterface.BenchmarkInterface -- Defined in ‘Distribution.Types.BenchmarkInterface’
instance GHC.Internal.Show.Show Distribution.Types.BenchmarkType.BenchmarkType -- Defined in ‘Distribution.Types.BenchmarkType’
instance GHC.Internal.Show.Show Distribution.Types.BuildInfo.BuildInfo -- Defined in ‘Distribution.Types.BuildInfo’
instance GHC.Internal.Show.Show Distribution.Types.BuildType.BuildType -- Defined in ‘Distribution.Types.BuildType’
instance [safe] forall c. GHC.Internal.Show.Show c => GHC.Internal.Show.Show (Distribution.Types.Condition.Condition c) -- Defined in ‘Distribution.Types.Condition’
instance GHC.Internal.Show.Show Distribution.Types.ComponentName.ComponentName -- Defined in ‘Distribution.Types.ComponentName’
instance GHC.Internal.Show.Show Distribution.Types.ComponentName.NotLibComponentName -- Defined in ‘Distribution.Types.ComponentName’
instance [safe] forall v c a. (GHC.Internal.Show.Show v, GHC.Internal.Show.Show a, GHC.Internal.Show.Show c) => GHC.Internal.Show.Show (Distribution.Types.CondTree.CondBranch v c a) -- Defined in ‘Distribution.Types.CondTree’
instance [safe] forall v c a. (GHC.Internal.Show.Show a, GHC.Internal.Show.Show c, GHC.Internal.Show.Show v) => GHC.Internal.Show.Show (Distribution.Types.CondTree.CondTree v c a) -- Defined in ‘Distribution.Types.CondTree’
instance GHC.Internal.Show.Show Distribution.Types.ModuleRenaming.ModuleRenaming -- Defined in ‘Distribution.Types.ModuleRenaming’
instance GHC.Internal.Show.Show Distribution.Types.ExeDependency.ExeDependency -- Defined in ‘Distribution.Types.ExeDependency’
instance GHC.Internal.Show.Show Distribution.Types.Executable.Executable -- Defined in ‘Distribution.Types.Executable’
instance GHC.Internal.Show.Show Distribution.Types.ExecutableScope.ExecutableScope -- Defined in ‘Distribution.Types.ExecutableScope’
instance GHC.Internal.Show.Show Distribution.Types.Flag.FlagAssignment -- Defined in ‘Distribution.Types.Flag’
instance GHC.Internal.Show.Show Distribution.Types.Flag.FlagName -- Defined in ‘Distribution.Types.Flag’
instance GHC.Internal.Show.Show Distribution.Types.Flag.PackageFlag -- Defined in ‘Distribution.Types.Flag’
instance GHC.Internal.Show.Show Distribution.Types.ForeignLib.ForeignLib -- Defined in ‘Distribution.Types.ForeignLib’
instance GHC.Internal.Show.Show Distribution.Types.ForeignLib.LibVersionInfo -- Defined in ‘Distribution.Types.ForeignLib’
instance GHC.Internal.Show.Show Distribution.Types.ForeignLibType.ForeignLibType -- Defined in ‘Distribution.Types.ForeignLibType’
instance GHC.Internal.Show.Show Distribution.Types.ForeignLibOption.ForeignLibOption -- Defined in ‘Distribution.Types.ForeignLibOption’
instance GHC.Internal.Show.Show Distribution.Types.GenericPackageDescription.GenericPackageDescription -- Defined in ‘Distribution.Types.GenericPackageDescription’
instance GHC.Internal.Show.Show Distribution.Types.IncludeRenaming.IncludeRenaming -- Defined in ‘Distribution.Types.IncludeRenaming’
instance GHC.Internal.Show.Show Distribution.Types.LibraryName.LibraryName -- Defined in ‘Distribution.Types.LibraryName’
instance GHC.Internal.Show.Show Distribution.Types.LegacyExeDependency.LegacyExeDependency -- Defined in ‘Distribution.Types.LegacyExeDependency’
instance GHC.Internal.Show.Show Distribution.Types.Library.Library -- Defined in ‘Distribution.Types.Library’
instance GHC.Internal.Show.Show Distribution.Types.LibraryVisibility.LibraryVisibility -- Defined in ‘Distribution.Types.LibraryVisibility’
instance GHC.Internal.Show.Show Distribution.Types.Mixin.Mixin -- Defined in ‘Distribution.Types.Mixin’
instance GHC.Internal.Show.Show Distribution.Types.ModuleReexport.ModuleReexport -- Defined in ‘Distribution.Types.ModuleReexport’
instance GHC.Internal.Show.Show Distribution.Types.PackageDescription.PackageDescription -- Defined in ‘Distribution.Types.PackageDescription’
instance GHC.Internal.Show.Show Distribution.Types.PkgconfigVersionRange.PkgconfigVersionRange -- Defined in ‘Distribution.Types.PkgconfigVersionRange’
instance GHC.Internal.Show.Show Distribution.Types.PkgconfigDependency.PkgconfigDependency -- Defined in ‘Distribution.Types.PkgconfigDependency’
instance GHC.Internal.Show.Show Distribution.Types.PkgconfigVersion.PkgconfigVersion -- Defined in ‘Distribution.Types.PkgconfigVersion’
instance GHC.Internal.Show.Show Distribution.Types.SetupBuildInfo.SetupBuildInfo -- Defined in ‘Distribution.Types.SetupBuildInfo’
instance GHC.Internal.Show.Show Distribution.Types.TestSuite.TestSuite -- Defined in ‘Distribution.Types.TestSuite’
instance GHC.Internal.Show.Show Distribution.Types.TestSuiteInterface.TestSuiteInterface -- Defined in ‘Distribution.Types.TestSuiteInterface’
instance GHC.Internal.Show.Show Distribution.Types.TestType.TestType -- Defined in ‘Distribution.Types.TestType’
instance GHC.Internal.Show.Show Distribution.Types.UnqualComponentName.UnqualComponentName -- Defined in ‘Distribution.Types.UnqualComponentName’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning.CEType -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning.CheckExplanation -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning.CheckExplanationID -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning.PackageCheck -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning.WarnLang -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (Cabal-3.15.0.0:Distribution.PackageDescription.Check.Monad.TargetAnnotation a) -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Monad’
instance GHC.Internal.Show.Show Distribution.PackageDescription.Configuration.PDTagged -- Defined in ‘Distribution.PackageDescription.Configuration’
instance GHC.Internal.Show.Show Distribution.PackageDescription.Parsec.Syntax -- Defined in ‘Distribution.PackageDescription.Parsec’
instance [safe] GHC.Internal.Show.Show Distribution.Parsec.Position.Position -- Defined in ‘Distribution.Parsec.Position’
instance GHC.Internal.Show.Show Distribution.Parsec.FieldLineStream.FieldLineStream -- Defined in ‘Distribution.Parsec.FieldLineStream’
instance GHC.Internal.Show.Show Distribution.SPDX.LicenseId.LicenseId -- Defined in ‘Distribution.SPDX.LicenseId’
instance GHC.Internal.Show.Show Distribution.SPDX.LicenseExceptionId.LicenseExceptionId -- Defined in ‘Distribution.SPDX.LicenseExceptionId’
instance GHC.Internal.Show.Show Distribution.SPDX.LicenseExpression.LicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance GHC.Internal.Show.Show Distribution.SPDX.LicenseExpression.SimpleLicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance GHC.Internal.Show.Show Distribution.SPDX.License.License -- Defined in ‘Distribution.SPDX.License’
instance [safe] GHC.Internal.Show.Show Distribution.SPDX.LicenseListVersion.LicenseListVersion -- Defined in ‘Distribution.SPDX.LicenseListVersion’
instance GHC.Internal.Show.Show Distribution.SPDX.LicenseReference.LicenseRef -- Defined in ‘Distribution.SPDX.LicenseReference’
instance GHC.Internal.Show.Show Language.Haskell.Extension.Extension -- Defined in ‘Language.Haskell.Extension’
instance GHC.Internal.Show.Show Language.Haskell.Extension.KnownExtension -- Defined in ‘Language.Haskell.Extension’
instance GHC.Internal.Show.Show Language.Haskell.Extension.Language -- Defined in ‘Language.Haskell.Extension’
instance GHC.Internal.Show.Show Distribution.Types.VersionInterval.Bound -- Defined in ‘Distribution.Types.VersionInterval’
instance GHC.Internal.Show.Show Distribution.Types.VersionInterval.LowerBound -- Defined in ‘Distribution.Types.VersionInterval’
instance GHC.Internal.Show.Show Distribution.Types.VersionInterval.UpperBound -- Defined in ‘Distribution.Types.VersionInterval’
instance GHC.Internal.Show.Show Distribution.Types.VersionInterval.VersionInterval -- Defined in ‘Distribution.Types.VersionInterval’
instance GHC.Internal.Show.Show Distribution.Types.VersionInterval.VersionIntervals -- Defined in ‘Distribution.Types.VersionInterval’
instance GHC.Internal.Show.Show Distribution.Simple.Compiler.Compiler -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Internal.Show.Show Distribution.Simple.Compiler.DebugInfoLevel -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Internal.Show.Show Distribution.Simple.Compiler.OptimisationLevel -- Defined in ‘Distribution.Simple.Compiler’
instance forall fp. GHC.Internal.Show.Show fp => GHC.Internal.Show.Show (Distribution.Simple.Compiler.PackageDBX fp) -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Internal.Show.Show Distribution.Simple.Compiler.ProfDetailLevel -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Internal.Show.Show Distribution.Types.VersionRange.Internal.VersionRange -- Defined in ‘Distribution.Types.VersionRange.Internal’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (Distribution.Types.VersionRange.Internal.VersionRangeF a) -- Defined in ‘Distribution.Types.VersionRange.Internal’
instance GHC.Internal.Show.Show Distribution.Simple.Build.AutogenFile -- Defined in ‘Distribution.Simple.Build’
instance GHC.Internal.Show.Show Distribution.Simple.Setup.BuildingWhat -- Defined in ‘Distribution.Simple.Setup’
instance GHC.Internal.Show.Show Distribution.Types.LocalBuildInfo.LocalBuildInfo -- Defined in ‘Distribution.Types.LocalBuildInfo’
instance GHC.Internal.Show.Show Distribution.Types.TargetInfo.TargetInfo -- Defined in ‘Distribution.Types.TargetInfo’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.Simple.Setup.Common.CommonSetupFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Common’
instance GHC.Internal.Show.Show Distribution.Simple.BuildTarget.BuildTarget -- Defined in ‘Distribution.Simple.BuildTarget’
instance GHC.Internal.Show.Show Distribution.Simple.BuildTarget.BuildTargetProblem -- Defined in ‘Distribution.Simple.BuildTarget’
instance GHC.Internal.Show.Show Distribution.Simple.BuildTarget.ComponentKind -- Defined in ‘Distribution.Simple.BuildTarget’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (Distribution.Simple.BuildTarget.Match a) -- Defined in ‘Distribution.Simple.BuildTarget’
instance GHC.Internal.Show.Show Distribution.Simple.BuildTarget.MatchError -- Defined in ‘Distribution.Simple.BuildTarget’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (Distribution.Simple.BuildTarget.MaybeAmbiguous a) -- Defined in ‘Distribution.Simple.BuildTarget’
instance GHC.Internal.Show.Show Distribution.Simple.BuildTarget.QualLevel -- Defined in ‘Distribution.Simple.BuildTarget’
instance GHC.Internal.Show.Show Distribution.Simple.BuildTarget.UserBuildTarget -- Defined in ‘Distribution.Simple.BuildTarget’
instance GHC.Internal.Show.Show Distribution.Simple.BuildTarget.UserBuildTargetProblem -- Defined in ‘Distribution.Simple.BuildTarget’
instance [safe] GHC.Internal.Show.Show Distribution.Simple.BuildWay.BuildWay -- Defined in ‘Distribution.Simple.BuildWay’
instance [safe] GHC.Internal.Show.Show Distribution.Simple.CCompiler.CDialect -- Defined in ‘Distribution.Simple.CCompiler’
instance GHC.Internal.Show.Show Distribution.Simple.Configure.ConfigStateFileError -- Defined in ‘Distribution.Simple.Configure’
instance GHC.Internal.Show.Show Distribution.Simple.Errors.CabalException -- Defined in ‘Distribution.Simple.Errors’
instance GHC.Internal.Show.Show Distribution.Simple.Errors.FailedDependency -- Defined in ‘Distribution.Simple.Errors’
instance GHC.Internal.Show.Show Distribution.Simple.FileMonitor.Types.FilePathRoot -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance GHC.Internal.Show.Show Distribution.Simple.FileMonitor.Types.MonitorFilePath -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance GHC.Internal.Show.Show Distribution.Simple.FileMonitor.Types.MonitorKindDir -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance GHC.Internal.Show.Show Distribution.Simple.FileMonitor.Types.MonitorKindFile -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance GHC.Internal.Show.Show Distribution.Simple.FileMonitor.Types.RootedGlob -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance GHC.Internal.Show.Show Distribution.Simple.Glob.Internal.Glob -- Defined in ‘Distribution.Simple.Glob.Internal’
instance GHC.Internal.Show.Show Distribution.Simple.Glob.Internal.GlobPiece -- Defined in ‘Distribution.Simple.Glob.Internal’
instance [safe] forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (Distribution.Simple.Flag.Flag a) -- Defined in ‘Distribution.Simple.Flag’
instance forall fp. GHC.Internal.Show.Show fp => GHC.Internal.Show.Show (Cabal-3.15.0.0:Distribution.Simple.GHC.Internal.GhcEnvironmentFileEntry fp) -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.GHC.Internal’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.Simple.GHC.EnvironmentParser.ParseErrorExc -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.GHC.EnvironmentParser’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (Distribution.Simple.Glob.GlobResult a) -- Defined in ‘Distribution.Simple.Glob’
instance GHC.Internal.Show.Show Distribution.Simple.Glob.GlobSyntaxError -- Defined in ‘Distribution.Simple.Glob’
instance GHC.Internal.Show.Show Distribution.Simple.Haddock.Directory -- Defined in ‘Distribution.Simple.Haddock’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockProjectFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockTarget -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.Visibility -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock’
instance GHC.Internal.Show.Show Distribution.Simple.Hpc.Way -- Defined in ‘Distribution.Simple.Hpc’
instance GHC.Internal.Show.Show Distribution.Simple.InstallDirs.CopyDest -- Defined in ‘Distribution.Simple.InstallDirs’
instance forall dir. GHC.Internal.Show.Show dir => GHC.Internal.Show.Show (Distribution.Simple.InstallDirs.InstallDirs dir) -- Defined in ‘Distribution.Simple.InstallDirs’
instance GHC.Internal.Show.Show Distribution.Simple.InstallDirs.PathTemplate -- Defined in ‘Distribution.Simple.InstallDirs’
instance [safe] GHC.Internal.Show.Show Distribution.Simple.InstallDirs.Internal.PathComponent -- Defined in ‘Distribution.Simple.InstallDirs.Internal’
instance [safe] GHC.Internal.Show.Show Distribution.Simple.InstallDirs.Internal.PathTemplateVariable -- Defined in ‘Distribution.Simple.InstallDirs.Internal’
instance GHC.Internal.Show.Show Distribution.Types.ComponentLocalBuildInfo.ComponentLocalBuildInfo -- Defined in ‘Distribution.Types.ComponentLocalBuildInfo’
instance GHC.Internal.Show.Show Distribution.Types.Component.Component -- Defined in ‘Distribution.Types.Component’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (Distribution.Simple.PackageIndex.PackageIndex a) -- Defined in ‘Distribution.Simple.PackageIndex’
instance GHC.Internal.Show.Show Distribution.Simple.PreProcess.Types.Suffix -- Defined in ‘Distribution.Simple.PreProcess.Types’
instance GHC.Internal.Show.Show Distribution.Simple.Program.Types.ConfiguredProgram -- Defined in ‘Distribution.Simple.Program.Types’
instance GHC.Internal.Show.Show Distribution.Simple.Program.Types.Program -- Defined in ‘Distribution.Simple.Program.Types’
instance GHC.Internal.Show.Show Distribution.Simple.Program.Types.ProgramLocation -- Defined in ‘Distribution.Simple.Program.Types’
instance GHC.Internal.Show.Show Distribution.Simple.Program.Types.ProgramSearchPathEntry -- Defined in ‘Distribution.Simple.Program.Types’
instance GHC.Internal.Show.Show Distribution.Simple.Program.Db.ProgramDb -- Defined in ‘Distribution.Simple.Program.Db’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (Distribution.Simple.Utils.VerboseException a) -- Defined in ‘Distribution.Simple.Utils’
instance GHC.Internal.Show.Show Distribution.Simple.Program.GHC.GhcDynLinkMode -- Defined in ‘Distribution.Simple.Program.GHC’
instance GHC.Internal.Show.Show Distribution.Simple.Program.GHC.GhcMode -- Defined in ‘Distribution.Simple.Program.GHC’
instance GHC.Internal.Show.Show Distribution.Simple.Program.GHC.GhcOptimisation -- Defined in ‘Distribution.Simple.Program.GHC’
instance GHC.Internal.Show.Show Distribution.Simple.Program.GHC.GhcOptions -- Defined in ‘Distribution.Simple.Program.GHC’
instance GHC.Internal.Show.Show Distribution.Simple.Program.GHC.GhcProfAuto -- Defined in ‘Distribution.Simple.Program.GHC’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Test’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestShowDetails -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Test’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.Simple.Setup.Benchmark.BenchmarkFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Benchmark’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.Simple.Setup.Build.BuildFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Build’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.Simple.Setup.Clean.CleanFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Clean’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Config’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.Simple.Setup.Copy.CopyFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Copy’
instance [safe] GHC.Internal.Show.Show Distribution.Types.DumpBuildInfo.DumpBuildInfo -- Defined in ‘Distribution.Types.DumpBuildInfo’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour.HscolourFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Hscolour’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.Simple.Setup.Install.InstallFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Install’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.Simple.Setup.Register.RegisterFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Register’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Repl’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.Simple.Setup.Repl.ReplOptions -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Repl’
instance GHC.Internal.Show.Show Cabal-3.15.0.0:Distribution.Simple.Setup.SDist.SDistFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.SDist’
instance GHC.Internal.Show.Show Distribution.Simple.SetupHooks.Errors.CannotApplyComponentDiffReason -- Defined in ‘Distribution.Simple.SetupHooks.Errors’
instance GHC.Internal.Show.Show Distribution.Simple.SetupHooks.Errors.IllegalComponentDiffReason -- Defined in ‘Distribution.Simple.SetupHooks.Errors’
instance GHC.Internal.Show.Show Distribution.Simple.SetupHooks.Errors.RulesException -- Defined in ‘Distribution.Simple.SetupHooks.Errors’
instance GHC.Internal.Show.Show Distribution.Simple.SetupHooks.Errors.SetupHooksException -- Defined in ‘Distribution.Simple.SetupHooks.Errors’
instance GHC.Internal.Show.Show Distribution.Simple.SetupHooks.Internal.ComponentDiff -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Show.Show Distribution.Simple.SetupHooks.Internal.InstallComponentInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Show.Show Distribution.Simple.SetupHooks.Internal.PostBuildComponentInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Show.Show Distribution.Simple.SetupHooks.Internal.PostConfPackageInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Show.Show Distribution.Simple.SetupHooks.Internal.PreBuildComponentInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Show.Show Distribution.Simple.SetupHooks.Internal.PreConfComponentInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Show.Show Distribution.Simple.SetupHooks.Internal.PreConfComponentOutputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Show.Show Distribution.Simple.SetupHooks.Internal.PreConfPackageInputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance GHC.Internal.Show.Show Distribution.Simple.SetupHooks.Internal.PreConfPackageOutputs -- Defined in ‘Distribution.Simple.SetupHooks.Internal’
instance forall arg res. GHC.Internal.Show.Show (Distribution.Simple.SetupHooks.Rule.CommandData Distribution.Simple.SetupHooks.Rule.User arg res) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Internal.Show.Show Distribution.Simple.SetupHooks.Rule.Dependency -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall (scope :: Distribution.Simple.SetupHooks.Rule.Scope) k (depsArg :: k) depsRes. GHC.Internal.Show.Show depsRes => GHC.Internal.Show.Show (Distribution.Simple.SetupHooks.Rule.DepsRes scope depsArg depsRes) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall depsArg depsRes. GHC.Internal.Show.Show (Distribution.Simple.SetupHooks.Rule.DynDepsCmd Distribution.Simple.SetupHooks.Rule.User depsArg depsRes) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Internal.Show.Show Distribution.Simple.SetupHooks.Rule.Location -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall (scope :: Distribution.Simple.SetupHooks.Rule.Scope) k1 (arg :: k1) k2 (res :: k2). GHC.Internal.Show.Show (Distribution.Simple.SetupHooks.Rule.NoCmd scope arg res) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall (ruleCmd :: Distribution.Simple.SetupHooks.Rule.Scope -> * -> * -> *) (deps :: Distribution.Simple.SetupHooks.Rule.Scope -> * -> * -> *). (forall arg res. GHC.Internal.Show.Show (ruleCmd Distribution.Simple.SetupHooks.Rule.User arg res), forall depsArg depsRes. GHC.Internal.Show.Show depsRes => GHC.Internal.Show.Show (deps Distribution.Simple.SetupHooks.Rule.User depsArg depsRes)) => GHC.Internal.Show.Show (Distribution.Simple.SetupHooks.Rule.RuleCommands Distribution.Simple.SetupHooks.Rule.User deps ruleCmd) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Internal.Show.Show (Distribution.Simple.SetupHooks.Rule.RuleData Distribution.Simple.SetupHooks.Rule.User) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Internal.Show.Show Distribution.Simple.SetupHooks.Rule.RuleBinary -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Internal.Show.Show Distribution.Simple.SetupHooks.Rule.RuleId -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Internal.Show.Show Distribution.Simple.SetupHooks.Rule.RuleOutput -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Internal.Show.Show Distribution.Simple.SetupHooks.Rule.RulesNameSpace -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall (scope :: Distribution.Simple.SetupHooks.Rule.Scope) arg. GHC.Internal.Show.Show arg => GHC.Internal.Show.Show (Distribution.Simple.SetupHooks.Rule.ScopedArgument scope arg) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall fnTy. GHC.Internal.Show.Show (Distribution.Simple.SetupHooks.Rule.Static Distribution.Simple.SetupHooks.Rule.System fnTy) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall fnTy. GHC.Internal.Show.Show (Distribution.Simple.SetupHooks.Rule.Static Distribution.Simple.SetupHooks.Rule.User fnTy) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Internal.Show.Show Distribution.Simple.Test.Log.PackageLog -- Defined in ‘Distribution.Simple.Test.Log’
instance GHC.Internal.Show.Show Distribution.Simple.Test.Log.TestLogs -- Defined in ‘Distribution.Simple.Test.Log’
instance GHC.Internal.Show.Show Distribution.Simple.Test.Log.TestSuiteLog -- Defined in ‘Distribution.Simple.Test.Log’
instance GHC.Internal.Show.Show Distribution.System.Arch -- Defined in ‘Distribution.System’
instance GHC.Internal.Show.Show Distribution.System.OS -- Defined in ‘Distribution.System’
instance GHC.Internal.Show.Show Distribution.System.Platform -- Defined in ‘Distribution.System’
instance [safe] GHC.Internal.Show.Show Distribution.TestSuite.OptionDescr -- Defined in ‘Distribution.TestSuite’
instance [safe] GHC.Internal.Show.Show Distribution.TestSuite.OptionType -- Defined in ‘Distribution.TestSuite’
instance [safe] GHC.Internal.Show.Show Distribution.TestSuite.Result -- Defined in ‘Distribution.TestSuite’
instance forall id. GHC.Internal.Show.Show id => GHC.Internal.Show.Show (Distribution.Types.AnnotatedId.AnnotatedId id) -- Defined in ‘Distribution.Types.AnnotatedId’
instance GHC.Internal.Show.Show Distribution.Types.ComponentRequestedSpec.ComponentRequestedSpec -- Defined in ‘Distribution.Types.ComponentRequestedSpec’
instance GHC.Internal.Show.Show Distribution.Types.DependencyMap.DependencyMap -- Defined in ‘Distribution.Types.DependencyMap’
instance GHC.Internal.Show.Show Distribution.Types.GivenComponent.GivenComponent -- Defined in ‘Distribution.Types.GivenComponent’
instance GHC.Internal.Show.Show Distribution.Types.GivenComponent.PromisedComponent -- Defined in ‘Distribution.Types.GivenComponent’
instance GHC.Internal.Show.Show Distribution.Types.LocalBuildConfig.BuildOptions -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance GHC.Internal.Show.Show Distribution.Types.LocalBuildConfig.ComponentBuildDescr -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance GHC.Internal.Show.Show Distribution.Types.LocalBuildConfig.LocalBuildConfig -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance GHC.Internal.Show.Show Distribution.Types.LocalBuildConfig.LocalBuildDescr -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance GHC.Internal.Show.Show Distribution.Types.LocalBuildConfig.PackageBuildDescr -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance GHC.Internal.Show.Show Distribution.Types.MissingDependency.MissingDependency -- Defined in ‘Distribution.Types.MissingDependency’
instance GHC.Internal.Show.Show Distribution.Types.MissingDependencyReason.MissingDependencyReason -- Defined in ‘Distribution.Types.MissingDependencyReason’
instance GHC.Internal.Show.Show Distribution.Types.MungedPackageId.MungedPackageId -- Defined in ‘Distribution.Types.MungedPackageId’
instance GHC.Internal.Show.Show Distribution.Types.MungedPackageName.MungedPackageName -- Defined in ‘Distribution.Types.MungedPackageName’
instance GHC.Internal.Show.Show Distribution.Types.PackageVersionConstraint.PackageVersionConstraint -- Defined in ‘Distribution.Types.PackageVersionConstraint’
instance [safe] forall sem. GHC.Internal.Show.Show sem => GHC.Internal.Show.Show (Distribution.Types.ParStrat.ParStratX sem) -- Defined in ‘Distribution.Types.ParStrat’
instance GHC.Internal.Show.Show Distribution.Types.VersionInterval.Legacy.Bound -- Defined in ‘Distribution.Types.VersionInterval.Legacy’
instance GHC.Internal.Show.Show Distribution.Types.VersionInterval.Legacy.LowerBound -- Defined in ‘Distribution.Types.VersionInterval.Legacy’
instance GHC.Internal.Show.Show Distribution.Types.VersionInterval.Legacy.UpperBound -- Defined in ‘Distribution.Types.VersionInterval.Legacy’
instance GHC.Internal.Show.Show Distribution.Types.VersionInterval.Legacy.VersionIntervals -- Defined in ‘Distribution.Types.VersionInterval.Legacy’
instance [safe] GHC.Internal.Show.Show Distribution.Utils.Json.Json -- Defined in ‘Distribution.Utils.Json’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (Distribution.Utils.NubList.NubList a) -- Defined in ‘Distribution.Utils.NubList’
instance forall a. GHC.Internal.Show.Show a => GHC.Internal.Show.Show (Distribution.Utils.NubList.NubListR a) -- Defined in ‘Distribution.Utils.NubList’
instance forall (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute) from (to :: Distribution.Utils.Path.FileOrDir). GHC.Internal.Show.Show (Distribution.Utils.Path.SymbolicPathX allowAbsolute from to) -- Defined in ‘Distribution.Utils.Path’
instance GHC.Internal.Show.Show Distribution.Utils.ShortText.ShortText -- Defined in ‘Distribution.Utils.ShortText’
instance GHC.Internal.Show.Show Distribution.Verbosity.Verbosity -- Defined in ‘Distribution.Verbosity’
instance [safe] GHC.Internal.Show.Show Distribution.Verbosity.Internal.VerbosityFlag -- Defined in ‘Distribution.Verbosity.Internal’
instance [safe] GHC.Internal.Show.Show Distribution.Verbosity.Internal.VerbosityLevel -- Defined in ‘Distribution.Verbosity.Internal’
instance GHC.Classes.Eq Distribution.Backpack.OpenModule -- Defined in ‘Distribution.Backpack’
instance GHC.Classes.Eq Distribution.Backpack.OpenUnitId -- Defined in ‘Distribution.Backpack’
instance GHC.Classes.Eq Distribution.Types.UnitId.DefUnitId -- Defined in ‘Distribution.Types.UnitId’
instance GHC.Classes.Eq Distribution.Types.UnitId.UnitId -- Defined in ‘Distribution.Types.UnitId’
instance GHC.Classes.Eq Distribution.Backpack.ModuleShape.ModuleShape -- Defined in ‘Distribution.Backpack.ModuleShape’
instance GHC.Classes.Eq Distribution.Backpack.PreModuleShape.PreModuleShape -- Defined in ‘Distribution.Backpack.PreModuleShape’
instance [safe] GHC.Classes.Eq Distribution.CabalSpecVersion.CabalSpecVersion -- Defined in ‘Distribution.CabalSpecVersion’
instance [safe] GHC.Classes.Eq Distribution.CabalSpecVersion.HasCommonStanzas -- Defined in ‘Distribution.CabalSpecVersion’
instance [safe] GHC.Classes.Eq Distribution.CabalSpecVersion.HasElif -- Defined in ‘Distribution.CabalSpecVersion’
instance GHC.Classes.Eq GHC.Internal.Word.Word16 -- Defined in ‘GHC.Internal.Word’
instance GHC.Classes.Eq GHC.Internal.Word.Word32 -- Defined in ‘GHC.Internal.Word’
instance GHC.Classes.Eq GHC.Internal.Word.Word64 -- Defined in ‘GHC.Internal.Word’
instance GHC.Classes.Eq GHC.Internal.Word.Word8 -- Defined in ‘GHC.Internal.Word’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq (GHC.Internal.Base.NonEmpty a) -- Defined in ‘GHC.Internal.Base’
instance GHC.Classes.Eq GHC.Internal.Base.Void -- Defined in ‘GHC.Internal.Base’
instance GHC.Classes.Eq GHC.Internal.Exception.Type.ArithException -- Defined in ‘GHC.Internal.Exception.Type’
instance forall a. (GHC.Classes.Eq (Distribution.Compat.Graph.Key a), GHC.Classes.Eq a) => GHC.Classes.Eq (Distribution.Compat.Graph.Graph a) -- Defined in ‘Distribution.Compat.Graph’
instance forall k a. (GHC.Classes.Eq a, GHC.Classes.Eq k) => GHC.Classes.Eq (Distribution.Compat.Graph.Node k a) -- Defined in ‘Distribution.Compat.Graph’
instance [safe] forall vertex. GHC.Classes.Eq vertex => GHC.Classes.Eq (Data.Graph.SCC vertex) -- Defined in ‘Data.Graph’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq (Distribution.Compat.NonEmptySet.NonEmptySet a) -- Defined in ‘Distribution.Compat.NonEmptySet’
instance GHC.Classes.Eq GHC.Types.Bool -- Defined in ‘GHC.Classes’
instance GHC.Classes.Eq GHC.Types.Char -- Defined in ‘GHC.Classes’
instance GHC.Classes.Eq GHC.Types.Double -- Defined in ‘GHC.Classes’
instance GHC.Classes.Eq GHC.Types.Float -- Defined in ‘GHC.Classes’
instance GHC.Classes.Eq GHC.Types.Int -- Defined in ‘GHC.Classes’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq [a] -- Defined in ‘GHC.Classes’
instance GHC.Classes.Eq GHC.Types.Module -- Defined in ‘GHC.Classes’
instance GHC.Classes.Eq GHC.Types.Ordering -- Defined in ‘GHC.Classes’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq (Solo a) -- Defined in ‘GHC.Classes’
instance GHC.Classes.Eq GHC.Types.TrName -- Defined in ‘GHC.Classes’
instance forall a b c d e f g h i j. (GHC.Classes.Eq a, GHC.Classes.Eq b, GHC.Classes.Eq c, GHC.Classes.Eq d, GHC.Classes.Eq e, GHC.Classes.Eq f, GHC.Classes.Eq g, GHC.Classes.Eq h, GHC.Classes.Eq i, GHC.Classes.Eq j) => GHC.Classes.Eq (a, b, c, d, e, f, g, h, i, j) -- Defined in ‘GHC.Classes’
instance forall a b c d e f g h i j k. (GHC.Classes.Eq a, GHC.Classes.Eq b, GHC.Classes.Eq c, GHC.Classes.Eq d, GHC.Classes.Eq e, GHC.Classes.Eq f, GHC.Classes.Eq g, GHC.Classes.Eq h, GHC.Classes.Eq i, GHC.Classes.Eq j, GHC.Classes.Eq k) => GHC.Classes.Eq (a, b, c, d, e, f, g, h, i, j, k) -- Defined in ‘GHC.Classes’
instance forall a b c d e f g h i j k l. (GHC.Classes.Eq a, GHC.Classes.Eq b, GHC.Classes.Eq c, GHC.Classes.Eq d, GHC.Classes.Eq e, GHC.Classes.Eq f, GHC.Classes.Eq g, GHC.Classes.Eq h, GHC.Classes.Eq i, GHC.Classes.Eq j, GHC.Classes.Eq k, GHC.Classes.Eq l) => GHC.Classes.Eq (a, b, c, d, e, f, g, h, i, j, k, l) -- Defined in ‘GHC.Classes’
instance forall a b c d e f g h i j k l m. (GHC.Classes.Eq a, GHC.Classes.Eq b, GHC.Classes.Eq c, GHC.Classes.Eq d, GHC.Classes.Eq e, GHC.Classes.Eq f, GHC.Classes.Eq g, GHC.Classes.Eq h, GHC.Classes.Eq i, GHC.Classes.Eq j, GHC.Classes.Eq k, GHC.Classes.Eq l, GHC.Classes.Eq m) => GHC.Classes.Eq (a, b, c, d, e, f, g, h, i, j, k, l, m) -- Defined in ‘GHC.Classes’
instance forall a b c d e f g h i j k l m n. (GHC.Classes.Eq a, GHC.Classes.Eq b, GHC.Classes.Eq c, GHC.Classes.Eq d, GHC.Classes.Eq e, GHC.Classes.Eq f, GHC.Classes.Eq g, GHC.Classes.Eq h, GHC.Classes.Eq i, GHC.Classes.Eq j, GHC.Classes.Eq k, GHC.Classes.Eq l, GHC.Classes.Eq m, GHC.Classes.Eq n) => GHC.Classes.Eq (a, b, c, d, e, f, g, h, i, j, k, l, m, n) -- Defined in ‘GHC.Classes’
instance forall a b c d e f g h i j k l m n o. (GHC.Classes.Eq a, GHC.Classes.Eq b, GHC.Classes.Eq c, GHC.Classes.Eq d, GHC.Classes.Eq e, GHC.Classes.Eq f, GHC.Classes.Eq g, GHC.Classes.Eq h, GHC.Classes.Eq i, GHC.Classes.Eq j, GHC.Classes.Eq k, GHC.Classes.Eq l, GHC.Classes.Eq m, GHC.Classes.Eq n, GHC.Classes.Eq o) => GHC.Classes.Eq (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) -- Defined in ‘GHC.Classes’
instance forall a b. (GHC.Classes.Eq a, GHC.Classes.Eq b) => GHC.Classes.Eq (a, b) -- Defined in ‘GHC.Classes’
instance forall a b c. (GHC.Classes.Eq a, GHC.Classes.Eq b, GHC.Classes.Eq c) => GHC.Classes.Eq (a, b, c) -- Defined in ‘GHC.Classes’
instance forall a b c d. (GHC.Classes.Eq a, GHC.Classes.Eq b, GHC.Classes.Eq c, GHC.Classes.Eq d) => GHC.Classes.Eq (a, b, c, d) -- Defined in ‘GHC.Classes’
instance forall a b c d e. (GHC.Classes.Eq a, GHC.Classes.Eq b, GHC.Classes.Eq c, GHC.Classes.Eq d, GHC.Classes.Eq e) => GHC.Classes.Eq (a, b, c, d, e) -- Defined in ‘GHC.Classes’
instance forall a b c d e f. (GHC.Classes.Eq a, GHC.Classes.Eq b, GHC.Classes.Eq c, GHC.Classes.Eq d, GHC.Classes.Eq e, GHC.Classes.Eq f) => GHC.Classes.Eq (a, b, c, d, e, f) -- Defined in ‘GHC.Classes’
instance forall a b c d e f g. (GHC.Classes.Eq a, GHC.Classes.Eq b, GHC.Classes.Eq c, GHC.Classes.Eq d, GHC.Classes.Eq e, GHC.Classes.Eq f, GHC.Classes.Eq g) => GHC.Classes.Eq (a, b, c, d, e, f, g) -- Defined in ‘GHC.Classes’
instance forall a b c d e f g h. (GHC.Classes.Eq a, GHC.Classes.Eq b, GHC.Classes.Eq c, GHC.Classes.Eq d, GHC.Classes.Eq e, GHC.Classes.Eq f, GHC.Classes.Eq g, GHC.Classes.Eq h) => GHC.Classes.Eq (a, b, c, d, e, f, g, h) -- Defined in ‘GHC.Classes’
instance forall a b c d e f g h i. (GHC.Classes.Eq a, GHC.Classes.Eq b, GHC.Classes.Eq c, GHC.Classes.Eq d, GHC.Classes.Eq e, GHC.Classes.Eq f, GHC.Classes.Eq g, GHC.Classes.Eq h, GHC.Classes.Eq i) => GHC.Classes.Eq (a, b, c, d, e, f, g, h, i) -- Defined in ‘GHC.Classes’
instance GHC.Classes.Eq GHC.Types.TyCon -- Defined in ‘GHC.Classes’
instance GHC.Classes.Eq () -- Defined in ‘GHC.Classes’
instance GHC.Classes.Eq GHC.Types.Word -- Defined in ‘GHC.Classes’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq (GHC.Internal.Real.Ratio a) -- Defined in ‘GHC.Internal.Real’
instance [safe] GHC.Classes.Eq Text.PrettyPrint.HughesPJ.Doc -- Defined in ‘Text.PrettyPrint.HughesPJ’
instance forall a k (b :: k). GHC.Classes.Eq a => GHC.Classes.Eq (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.Functor.Const’
instance GHC.Classes.Eq GHC.Internal.Data.Data.Constr -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Classes.Eq GHC.Internal.Data.Data.ConstrRep -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Classes.Eq GHC.Internal.Data.Data.DataRep -- Defined in ‘GHC.Internal.Data.Data’
instance GHC.Classes.Eq GHC.Internal.Data.Data.Fixity -- Defined in ‘GHC.Internal.Data.Data’
instance forall a b. (GHC.Classes.Eq a, GHC.Classes.Eq b) => GHC.Classes.Eq (GHC.Internal.Data.Either.Either a b) -- Defined in ‘GHC.Internal.Data.Either’
instance GHC.Classes.Eq GHC.Internal.IO.Exception.ArrayException -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Classes.Eq GHC.Internal.IO.Exception.AsyncException -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Classes.Eq GHC.Internal.IO.Exception.ExitCode -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Classes.Eq GHC.Internal.IO.Exception.IOErrorType -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Classes.Eq GHC.Internal.IO.Exception.IOException -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Classes.Eq GHC.Internal.IO.MaskingState -- Defined in ‘GHC.Internal.IO’
instance forall k (f :: k -> *) (g :: k -> *) (p :: k). (GHC.Classes.Eq (f p), GHC.Classes.Eq (g p)) => GHC.Classes.Eq ((GHC.Internal.Generics.:*:) f g p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (f :: k -> *) (g :: k -> *) (p :: k). (GHC.Classes.Eq (f p), GHC.Classes.Eq (g p)) => GHC.Classes.Eq ((GHC.Internal.Generics.:+:) f g p) -- Defined in ‘GHC.Internal.Generics’
instance forall k2 (f :: k2 -> *) k1 (g :: k1 -> k2) (p :: k1). GHC.Classes.Eq (f (g p)) => GHC.Classes.Eq ((GHC.Internal.Generics.:.:) f g p) -- Defined in ‘GHC.Internal.Generics’
instance GHC.Classes.Eq GHC.Internal.Generics.Associativity -- Defined in ‘GHC.Internal.Generics’
instance GHC.Classes.Eq GHC.Internal.Generics.DecidedStrictness -- Defined in ‘GHC.Internal.Generics’
instance GHC.Classes.Eq GHC.Internal.Generics.Fixity -- Defined in ‘GHC.Internal.Generics’
instance forall k (f :: k -> *) (a :: k). (GHC.Internal.Generics.Generic1 f, GHC.Classes.Eq (GHC.Internal.Generics.Rep1 f a)) => GHC.Classes.Eq (GHC.Internal.Generics.Generically1 f a) -- Defined in ‘GHC.Internal.Generics’
instance forall i c k (p :: k). GHC.Classes.Eq c => GHC.Classes.Eq (GHC.Internal.Generics.K1 i c p) -- Defined in ‘GHC.Internal.Generics’
instance forall i (c :: GHC.Internal.Generics.Meta) k (f :: k -> *) (p :: k). GHC.Classes.Eq (f p) => GHC.Classes.Eq (GHC.Internal.Generics.M1 i c f p) -- Defined in ‘GHC.Internal.Generics’
instance forall p. GHC.Classes.Eq p => GHC.Classes.Eq (GHC.Internal.Generics.Par1 p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (f :: k -> *) (p :: k). GHC.Classes.Eq (f p) => GHC.Classes.Eq (GHC.Internal.Generics.Rec1 f p) -- Defined in ‘GHC.Internal.Generics’
instance GHC.Classes.Eq GHC.Internal.Generics.SourceStrictness -- Defined in ‘GHC.Internal.Generics’
instance GHC.Classes.Eq GHC.Internal.Generics.SourceUnpackedness -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Classes.Eq (GHC.Internal.Generics.U1 p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Classes.Eq (GHC.Internal.Generics.URec (GHC.Internal.Ptr.Ptr ()) p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Classes.Eq (GHC.Internal.Generics.URec GHC.Types.Char p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Classes.Eq (GHC.Internal.Generics.URec GHC.Types.Double p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Classes.Eq (GHC.Internal.Generics.URec GHC.Types.Float p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Classes.Eq (GHC.Internal.Generics.URec GHC.Types.Int p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Classes.Eq (GHC.Internal.Generics.URec GHC.Types.Word p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Classes.Eq (GHC.Internal.Generics.V1 p) -- Defined in ‘GHC.Internal.Generics’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance GHC.Classes.Eq GHC.Internal.Int.Int16 -- Defined in ‘GHC.Internal.Int’
instance GHC.Classes.Eq GHC.Internal.Int.Int32 -- Defined in ‘GHC.Internal.Int’
instance GHC.Classes.Eq GHC.Internal.Int.Int64 -- Defined in ‘GHC.Internal.Int’
instance GHC.Classes.Eq GHC.Internal.Int.Int8 -- Defined in ‘GHC.Internal.Int’
instance GHC.Classes.Eq GHC.Num.Integer.Integer -- Defined in ‘GHC.Num.Integer’
instance forall k a. (GHC.Classes.Eq k, GHC.Classes.Eq a) => GHC.Classes.Eq (Data.Map.Internal.Map k a) -- Defined in ‘Data.Map.Internal’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq (GHC.Internal.Maybe.Maybe a) -- Defined in ‘GHC.Internal.Maybe’
instance forall k (s :: k). GHC.Classes.Eq (GHC.Internal.Data.Proxy.Proxy s) -- Defined in ‘GHC.Internal.Data.Proxy’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq (Data.Set.Internal.Intersection a) -- Defined in ‘Data.Set.Internal’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq (Data.Set.Internal.Set a) -- Defined in ‘Data.Set.Internal’
instance GHC.Classes.Eq Distribution.Utils.Structured.Structure -- Defined in ‘Distribution.Utils.Structured’
instance GHC.Classes.Eq ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.SomeTypeRep -- Defined in ‘ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal’
instance forall k (a :: k). GHC.Classes.Eq (ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.TypeRep a) -- Defined in ‘ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq (GHC.Internal.Data.Ord.Down a) -- Defined in ‘GHC.Internal.Data.Ord’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq (Distribution.Compat.Semigroup.First' a) -- Defined in ‘Distribution.Compat.Semigroup’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq (Distribution.Compat.Semigroup.Last' a) -- Defined in ‘Distribution.Compat.Semigroup’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq (Distribution.Compat.Semigroup.Option' a) -- Defined in ‘Distribution.Compat.Semigroup’
instance GHC.Classes.Eq GHC.Internal.Unicode.GeneralCategory -- Defined in ‘GHC.Internal.Unicode’
instance GHC.Classes.Eq GHC.Internal.Data.Semigroup.Internal.All -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall k (f :: k -> *) (a :: k). GHC.Classes.Eq (f a) => GHC.Classes.Eq (GHC.Internal.Data.Semigroup.Internal.Alt f a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Classes.Eq GHC.Internal.Data.Semigroup.Internal.Any -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq (GHC.Internal.Data.Semigroup.Internal.Dual a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq (GHC.Internal.Data.Semigroup.Internal.Product a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq (GHC.Internal.Data.Semigroup.Internal.Sum a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Classes.Eq GHC.Internal.Stack.Types.SrcLoc -- Defined in ‘GHC.Internal.Stack.Types’
instance GHC.Classes.Eq Distribution.Compat.Time.ModTime -- Defined in ‘Distribution.Compat.Time’
instance GHC.Classes.Eq Distribution.Compiler.AbiTag -- Defined in ‘Distribution.Compiler’
instance GHC.Classes.Eq Distribution.Compiler.CompilerFlavor -- Defined in ‘Distribution.Compiler’
instance GHC.Classes.Eq Distribution.Compiler.CompilerId -- Defined in ‘Distribution.Compiler’
instance forall v. GHC.Classes.Eq v => GHC.Classes.Eq (Distribution.Compiler.PerCompilerFlavor v) -- Defined in ‘Distribution.Compiler’
instance GHC.Classes.Eq Distribution.FieldGrammar.Newtypes.SpecLicense -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance GHC.Classes.Eq Distribution.FieldGrammar.Newtypes.SpecVersion -- Defined in ‘Distribution.FieldGrammar.Newtypes’
instance forall ann. GHC.Classes.Eq ann => GHC.Classes.Eq (Distribution.FieldGrammar.Parsec.NamelessField ann) -- Defined in ‘Distribution.FieldGrammar.Parsec’
instance forall ann. GHC.Classes.Eq ann => GHC.Classes.Eq (Distribution.FieldGrammar.Parsec.Section ann) -- Defined in ‘Distribution.FieldGrammar.Parsec’
instance GHC.Classes.Eq Distribution.Fields.Pretty.Margin -- Defined in ‘Distribution.Fields.Pretty’
instance forall ann. GHC.Classes.Eq ann => GHC.Classes.Eq (Distribution.Fields.Field.Field ann) -- Defined in ‘Distribution.Fields.Field’
instance forall ann. GHC.Classes.Eq ann => GHC.Classes.Eq (Distribution.Fields.Field.FieldLine ann) -- Defined in ‘Distribution.Fields.Field’
instance forall ann. GHC.Classes.Eq ann => GHC.Classes.Eq (Distribution.Fields.Field.Name ann) -- Defined in ‘Distribution.Fields.Field’
instance forall ann. GHC.Classes.Eq ann => GHC.Classes.Eq (Distribution.Fields.Field.SectionArg ann) -- Defined in ‘Distribution.Fields.Field’
instance [safe] GHC.Classes.Eq Distribution.Parsec.Warning.PWarnType -- Defined in ‘Distribution.Parsec.Warning’
instance [safe] GHC.Classes.Eq Distribution.Parsec.Warning.PWarning -- Defined in ‘Distribution.Parsec.Warning’
instance [safe] GHC.Classes.Eq Distribution.Fields.LexerMonad.LexWarningType -- Defined in ‘Distribution.Fields.LexerMonad’
instance GHC.Classes.Eq Distribution.Types.AbiDependency.AbiDependency -- Defined in ‘Distribution.Types.AbiDependency’
instance GHC.Classes.Eq Distribution.Types.ExposedModule.ExposedModule -- Defined in ‘Distribution.Types.ExposedModule’
instance GHC.Classes.Eq Distribution.Types.InstalledPackageInfo.InstalledPackageInfo -- Defined in ‘Distribution.Types.InstalledPackageInfo’
instance GHC.Classes.Eq Distribution.License.License -- Defined in ‘Distribution.License’
instance GHC.Classes.Eq Distribution.Types.AbiHash.AbiHash -- Defined in ‘Distribution.Types.AbiHash’
instance GHC.Classes.Eq Distribution.Types.ComponentId.ComponentId -- Defined in ‘Distribution.Types.ComponentId’
instance GHC.Classes.Eq Distribution.Types.Dependency.Dependency -- Defined in ‘Distribution.Types.Dependency’
instance GHC.Classes.Eq Distribution.Types.Module.Module -- Defined in ‘Distribution.Types.Module’
instance GHC.Classes.Eq Distribution.Types.PackageId.PackageIdentifier -- Defined in ‘Distribution.Types.PackageId’
instance GHC.Classes.Eq Distribution.Types.PackageName.PackageName -- Defined in ‘Distribution.Types.PackageName’
instance GHC.Classes.Eq Distribution.Types.PkgconfigName.PkgconfigName -- Defined in ‘Distribution.Types.PkgconfigName’
instance GHC.Classes.Eq Distribution.Types.Version.Version -- Defined in ‘Distribution.Types.Version’
instance GHC.Classes.Eq Distribution.ModuleName.ModuleName -- Defined in ‘Distribution.ModuleName’
instance GHC.Classes.Eq Distribution.Types.ConfVar.ConfVar -- Defined in ‘Distribution.Types.ConfVar’
instance GHC.Classes.Eq Distribution.Types.SourceRepo.KnownRepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Classes.Eq Distribution.Types.SourceRepo.RepoKind -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Classes.Eq Distribution.Types.SourceRepo.RepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Classes.Eq Distribution.Types.SourceRepo.SourceRepo -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Classes.Eq Distribution.Types.Benchmark.Benchmark -- Defined in ‘Distribution.Types.Benchmark’
instance GHC.Classes.Eq Distribution.Types.BenchmarkInterface.BenchmarkInterface -- Defined in ‘Distribution.Types.BenchmarkInterface’
instance GHC.Classes.Eq Distribution.Types.BenchmarkType.BenchmarkType -- Defined in ‘Distribution.Types.BenchmarkType’
instance GHC.Classes.Eq Distribution.Types.BuildInfo.BuildInfo -- Defined in ‘Distribution.Types.BuildInfo’
instance GHC.Classes.Eq Distribution.Types.BuildType.BuildType -- Defined in ‘Distribution.Types.BuildType’
instance [safe] forall c. GHC.Classes.Eq c => GHC.Classes.Eq (Distribution.Types.Condition.Condition c) -- Defined in ‘Distribution.Types.Condition’
instance GHC.Classes.Eq Distribution.Types.ComponentName.ComponentName -- Defined in ‘Distribution.Types.ComponentName’
instance GHC.Classes.Eq Distribution.Types.ComponentName.NotLibComponentName -- Defined in ‘Distribution.Types.ComponentName’
instance [safe] forall v c a. (GHC.Classes.Eq v, GHC.Classes.Eq a, GHC.Classes.Eq c) => GHC.Classes.Eq (Distribution.Types.CondTree.CondBranch v c a) -- Defined in ‘Distribution.Types.CondTree’
instance [safe] forall v c a. (GHC.Classes.Eq a, GHC.Classes.Eq c, GHC.Classes.Eq v) => GHC.Classes.Eq (Distribution.Types.CondTree.CondTree v c a) -- Defined in ‘Distribution.Types.CondTree’
instance GHC.Classes.Eq Distribution.Types.ModuleRenaming.ModuleRenaming -- Defined in ‘Distribution.Types.ModuleRenaming’
instance GHC.Classes.Eq Distribution.Types.ExeDependency.ExeDependency -- Defined in ‘Distribution.Types.ExeDependency’
instance GHC.Classes.Eq Distribution.Types.Executable.Executable -- Defined in ‘Distribution.Types.Executable’
instance GHC.Classes.Eq Distribution.Types.ExecutableScope.ExecutableScope -- Defined in ‘Distribution.Types.ExecutableScope’
instance GHC.Classes.Eq Distribution.Types.Flag.FlagAssignment -- Defined in ‘Distribution.Types.Flag’
instance GHC.Classes.Eq Distribution.Types.Flag.FlagName -- Defined in ‘Distribution.Types.Flag’
instance GHC.Classes.Eq Distribution.Types.Flag.PackageFlag -- Defined in ‘Distribution.Types.Flag’
instance GHC.Classes.Eq Distribution.Types.ForeignLib.ForeignLib -- Defined in ‘Distribution.Types.ForeignLib’
instance GHC.Classes.Eq Distribution.Types.ForeignLib.LibVersionInfo -- Defined in ‘Distribution.Types.ForeignLib’
instance GHC.Classes.Eq Distribution.Types.ForeignLibType.ForeignLibType -- Defined in ‘Distribution.Types.ForeignLibType’
instance GHC.Classes.Eq Distribution.Types.ForeignLibOption.ForeignLibOption -- Defined in ‘Distribution.Types.ForeignLibOption’
instance GHC.Classes.Eq Distribution.Types.GenericPackageDescription.GenericPackageDescription -- Defined in ‘Distribution.Types.GenericPackageDescription’
instance GHC.Classes.Eq Distribution.Types.IncludeRenaming.IncludeRenaming -- Defined in ‘Distribution.Types.IncludeRenaming’
instance GHC.Classes.Eq Distribution.Types.LibraryName.LibraryName -- Defined in ‘Distribution.Types.LibraryName’
instance GHC.Classes.Eq Distribution.Types.LegacyExeDependency.LegacyExeDependency -- Defined in ‘Distribution.Types.LegacyExeDependency’
instance GHC.Classes.Eq Distribution.Types.Library.Library -- Defined in ‘Distribution.Types.Library’
instance GHC.Classes.Eq Distribution.Types.LibraryVisibility.LibraryVisibility -- Defined in ‘Distribution.Types.LibraryVisibility’
instance GHC.Classes.Eq Distribution.Types.Mixin.Mixin -- Defined in ‘Distribution.Types.Mixin’
instance GHC.Classes.Eq Distribution.Types.ModuleReexport.ModuleReexport -- Defined in ‘Distribution.Types.ModuleReexport’
instance GHC.Classes.Eq Distribution.Types.PackageDescription.PackageDescription -- Defined in ‘Distribution.Types.PackageDescription’
instance GHC.Classes.Eq Distribution.Types.PkgconfigVersionRange.PkgconfigVersionRange -- Defined in ‘Distribution.Types.PkgconfigVersionRange’
instance GHC.Classes.Eq Distribution.Types.PkgconfigDependency.PkgconfigDependency -- Defined in ‘Distribution.Types.PkgconfigDependency’
instance GHC.Classes.Eq Distribution.Types.PkgconfigVersion.PkgconfigVersion -- Defined in ‘Distribution.Types.PkgconfigVersion’
instance GHC.Classes.Eq Distribution.Types.SetupBuildInfo.SetupBuildInfo -- Defined in ‘Distribution.Types.SetupBuildInfo’
instance GHC.Classes.Eq Distribution.Types.TestSuite.TestSuite -- Defined in ‘Distribution.Types.TestSuite’
instance GHC.Classes.Eq Distribution.Types.TestSuiteInterface.TestSuiteInterface -- Defined in ‘Distribution.Types.TestSuiteInterface’
instance GHC.Classes.Eq Distribution.Types.TestType.TestType -- Defined in ‘Distribution.Types.TestType’
instance GHC.Classes.Eq Distribution.Types.UnqualComponentName.UnqualComponentName -- Defined in ‘Distribution.Types.UnqualComponentName’
instance GHC.Classes.Eq Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning.CEType -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning’
instance GHC.Classes.Eq Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning.CheckExplanation -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning’
instance GHC.Classes.Eq Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning.CheckExplanationID -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning’
instance GHC.Classes.Eq Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning.PackageCheck -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning’
instance GHC.Classes.Eq Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning.WarnLang -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq (Cabal-3.15.0.0:Distribution.PackageDescription.Check.Monad.TargetAnnotation a) -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Monad’
instance GHC.Classes.Eq Distribution.PackageDescription.Parsec.Syntax -- Defined in ‘Distribution.PackageDescription.Parsec’
instance [safe] GHC.Classes.Eq Distribution.Parsec.Position.Position -- Defined in ‘Distribution.Parsec.Position’
instance GHC.Classes.Eq Distribution.SPDX.LicenseId.LicenseId -- Defined in ‘Distribution.SPDX.LicenseId’
instance GHC.Classes.Eq Distribution.SPDX.LicenseExceptionId.LicenseExceptionId -- Defined in ‘Distribution.SPDX.LicenseExceptionId’
instance GHC.Classes.Eq Distribution.SPDX.LicenseExpression.LicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance GHC.Classes.Eq Distribution.SPDX.LicenseExpression.SimpleLicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance GHC.Classes.Eq Distribution.SPDX.License.License -- Defined in ‘Distribution.SPDX.License’
instance [safe] GHC.Classes.Eq Distribution.SPDX.LicenseListVersion.LicenseListVersion -- Defined in ‘Distribution.SPDX.LicenseListVersion’
instance GHC.Classes.Eq Distribution.SPDX.LicenseReference.LicenseRef -- Defined in ‘Distribution.SPDX.LicenseReference’
instance GHC.Classes.Eq Language.Haskell.Extension.Extension -- Defined in ‘Language.Haskell.Extension’
instance GHC.Classes.Eq Language.Haskell.Extension.KnownExtension -- Defined in ‘Language.Haskell.Extension’
instance GHC.Classes.Eq Language.Haskell.Extension.Language -- Defined in ‘Language.Haskell.Extension’
instance GHC.Classes.Eq Distribution.Types.VersionInterval.Bound -- Defined in ‘Distribution.Types.VersionInterval’
instance GHC.Classes.Eq Distribution.Types.VersionInterval.LowerBound -- Defined in ‘Distribution.Types.VersionInterval’
instance GHC.Classes.Eq Distribution.Types.VersionInterval.UpperBound -- Defined in ‘Distribution.Types.VersionInterval’
instance GHC.Classes.Eq Distribution.Types.VersionInterval.VersionInterval -- Defined in ‘Distribution.Types.VersionInterval’
instance GHC.Classes.Eq Distribution.Types.VersionInterval.VersionIntervals -- Defined in ‘Distribution.Types.VersionInterval’
instance GHC.Classes.Eq Distribution.Simple.Compiler.Compiler -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Classes.Eq Distribution.Simple.Compiler.DebugInfoLevel -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Classes.Eq Distribution.Simple.Compiler.OptimisationLevel -- Defined in ‘Distribution.Simple.Compiler’
instance forall fp. GHC.Classes.Eq fp => GHC.Classes.Eq (Distribution.Simple.Compiler.PackageDBX fp) -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Classes.Eq Distribution.Simple.Compiler.ProfDetailLevel -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Classes.Eq Distribution.Types.VersionRange.Internal.VersionRange -- Defined in ‘Distribution.Types.VersionRange.Internal’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq (Distribution.Types.VersionRange.Internal.VersionRangeF a) -- Defined in ‘Distribution.Types.VersionRange.Internal’
instance GHC.Classes.Eq Distribution.Simple.Build.AutogenFile -- Defined in ‘Distribution.Simple.Build’
instance GHC.Classes.Eq Cabal-3.15.0.0:Distribution.Simple.Setup.Common.CommonSetupFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Common’
instance GHC.Classes.Eq Distribution.Simple.BuildTarget.BuildTarget -- Defined in ‘Distribution.Simple.BuildTarget’
instance GHC.Classes.Eq Distribution.Simple.BuildTarget.ComponentKind -- Defined in ‘Distribution.Simple.BuildTarget’
instance GHC.Classes.Eq Distribution.Simple.BuildTarget.MatchError -- Defined in ‘Distribution.Simple.BuildTarget’
instance GHC.Classes.Eq Distribution.Simple.BuildTarget.UserBuildTarget -- Defined in ‘Distribution.Simple.BuildTarget’
instance [safe] GHC.Classes.Eq Distribution.Simple.BuildWay.BuildWay -- Defined in ‘Distribution.Simple.BuildWay’
instance [safe] GHC.Classes.Eq Distribution.Simple.CCompiler.CDialect -- Defined in ‘Distribution.Simple.CCompiler’
instance GHC.Classes.Eq Distribution.Simple.FileMonitor.Types.FilePathRoot -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance GHC.Classes.Eq Distribution.Simple.FileMonitor.Types.MonitorFilePath -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance GHC.Classes.Eq Distribution.Simple.FileMonitor.Types.MonitorKindDir -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance GHC.Classes.Eq Distribution.Simple.FileMonitor.Types.MonitorKindFile -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance GHC.Classes.Eq Distribution.Simple.FileMonitor.Types.RootedGlob -- Defined in ‘Distribution.Simple.FileMonitor.Types’
instance GHC.Classes.Eq Distribution.Simple.Glob.Internal.Glob -- Defined in ‘Distribution.Simple.Glob.Internal’
instance GHC.Classes.Eq Distribution.Simple.Glob.Internal.GlobPiece -- Defined in ‘Distribution.Simple.Glob.Internal’
instance [safe] forall a. GHC.Classes.Eq a => GHC.Classes.Eq (Distribution.Simple.Flag.Flag a) -- Defined in ‘Distribution.Simple.Flag’
instance forall fp. GHC.Classes.Eq fp => GHC.Classes.Eq (Cabal-3.15.0.0:Distribution.Simple.GHC.Internal.GhcEnvironmentFileEntry fp) -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.GHC.Internal’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq (Distribution.Simple.Glob.GlobResult a) -- Defined in ‘Distribution.Simple.Glob’
instance GHC.Classes.Eq Distribution.Simple.Glob.GlobSyntaxError -- Defined in ‘Distribution.Simple.Glob’
instance GHC.Classes.Eq Distribution.Simple.Haddock.Directory -- Defined in ‘Distribution.Simple.Haddock’
instance GHC.Classes.Eq Distribution.Simple.Haddock.Output -- Defined in ‘Distribution.Simple.Haddock’
instance GHC.Classes.Eq Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.HaddockTarget -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock’
instance GHC.Classes.Eq Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock.Visibility -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Haddock’
instance GHC.Classes.Eq Distribution.Simple.Hpc.Way -- Defined in ‘Distribution.Simple.Hpc’
instance GHC.Classes.Eq Distribution.Simple.InstallDirs.CopyDest -- Defined in ‘Distribution.Simple.InstallDirs’
instance forall dir. GHC.Classes.Eq dir => GHC.Classes.Eq (Distribution.Simple.InstallDirs.InstallDirs dir) -- Defined in ‘Distribution.Simple.InstallDirs’
instance GHC.Classes.Eq Distribution.Simple.InstallDirs.PathTemplate -- Defined in ‘Distribution.Simple.InstallDirs’
instance [safe] GHC.Classes.Eq Distribution.Simple.InstallDirs.Internal.PathComponent -- Defined in ‘Distribution.Simple.InstallDirs.Internal’
instance [safe] GHC.Classes.Eq Distribution.Simple.InstallDirs.Internal.PathTemplateVariable -- Defined in ‘Distribution.Simple.InstallDirs.Internal’
instance GHC.Classes.Eq Distribution.Types.Component.Component -- Defined in ‘Distribution.Types.Component’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq (Distribution.Simple.PackageIndex.PackageIndex a) -- Defined in ‘Distribution.Simple.PackageIndex’
instance GHC.Classes.Eq Distribution.Simple.PreProcess.Types.Suffix -- Defined in ‘Distribution.Simple.PreProcess.Types’
instance GHC.Classes.Eq Distribution.Simple.Program.Types.ConfiguredProgram -- Defined in ‘Distribution.Simple.Program.Types’
instance GHC.Classes.Eq Distribution.Simple.Program.Types.ProgramLocation -- Defined in ‘Distribution.Simple.Program.Types’
instance GHC.Classes.Eq Distribution.Simple.Program.Types.ProgramSearchPathEntry -- Defined in ‘Distribution.Simple.Program.Types’
instance GHC.Classes.Eq Distribution.Simple.Utils.TraceWhen -- Defined in ‘Distribution.Simple.Utils’
instance GHC.Classes.Eq Distribution.Simple.Program.GHC.GhcDynLinkMode -- Defined in ‘Distribution.Simple.Program.GHC’
instance GHC.Classes.Eq Distribution.Simple.Program.GHC.GhcMode -- Defined in ‘Distribution.Simple.Program.GHC’
instance GHC.Classes.Eq Distribution.Simple.Program.GHC.GhcOptimisation -- Defined in ‘Distribution.Simple.Program.GHC’
instance GHC.Classes.Eq Distribution.Simple.Program.GHC.GhcProfAuto -- Defined in ‘Distribution.Simple.Program.GHC’
instance GHC.Classes.Eq Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestShowDetails -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Test’
instance GHC.Classes.Eq Cabal-3.15.0.0:Distribution.Simple.Setup.Config.ConfigFlags -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Config’
instance [safe] GHC.Classes.Eq Distribution.Types.DumpBuildInfo.DumpBuildInfo -- Defined in ‘Distribution.Types.DumpBuildInfo’
instance forall arg res. GHC.Classes.Eq (Distribution.Simple.SetupHooks.Rule.CommandData Distribution.Simple.SetupHooks.Rule.User arg res) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall arg res. (arg ~ Data.ByteString.Lazy.Internal.ByteString) => GHC.Classes.Eq (Distribution.Simple.SetupHooks.Rule.CommandData Distribution.Simple.SetupHooks.Rule.System arg res) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Classes.Eq Distribution.Simple.SetupHooks.Rule.Dependency -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall (scope :: Distribution.Simple.SetupHooks.Rule.Scope) k (depsArg :: k) depsRes. GHC.Classes.Eq depsRes => GHC.Classes.Eq (Distribution.Simple.SetupHooks.Rule.DepsRes scope depsArg depsRes) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall depsArg depsRes. GHC.Classes.Eq (Distribution.Simple.SetupHooks.Rule.DynDepsCmd Distribution.Simple.SetupHooks.Rule.User depsArg depsRes) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall arg depsRes. (arg ~ Data.ByteString.Lazy.Internal.ByteString, depsRes ~ Data.ByteString.Lazy.Internal.ByteString) => GHC.Classes.Eq (Distribution.Simple.SetupHooks.Rule.DynDepsCmd Distribution.Simple.SetupHooks.Rule.System arg depsRes) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Classes.Eq Distribution.Simple.SetupHooks.Rule.Location -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall (scope :: Distribution.Simple.SetupHooks.Rule.Scope) k1 (arg :: k1) k2 (res :: k2). GHC.Classes.Eq (Distribution.Simple.SetupHooks.Rule.NoCmd scope arg res) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall (ruleCmd :: Distribution.Simple.SetupHooks.Rule.Scope -> * -> * -> *) (deps :: Distribution.Simple.SetupHooks.Rule.Scope -> * -> * -> *). (forall arg res. GHC.Classes.Eq (ruleCmd Distribution.Simple.SetupHooks.Rule.User arg res), forall depsArg depsRes. GHC.Classes.Eq depsRes => GHC.Classes.Eq (deps Distribution.Simple.SetupHooks.Rule.User depsArg depsRes)) => GHC.Classes.Eq (Distribution.Simple.SetupHooks.Rule.RuleCommands Distribution.Simple.SetupHooks.Rule.User deps ruleCmd) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall (ruleCmd :: Distribution.Simple.SetupHooks.Rule.Scope -> * -> * -> *) (deps :: Distribution.Simple.SetupHooks.Rule.Scope -> * -> * -> *). (forall res. GHC.Classes.Eq (ruleCmd Distribution.Simple.SetupHooks.Rule.System Data.ByteString.Lazy.Internal.ByteString res), GHC.Classes.Eq (deps Distribution.Simple.SetupHooks.Rule.System Data.ByteString.Lazy.Internal.ByteString Data.ByteString.Lazy.Internal.ByteString)) => GHC.Classes.Eq (Distribution.Simple.SetupHooks.Rule.RuleCommands Distribution.Simple.SetupHooks.Rule.System deps ruleCmd) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Classes.Eq (Distribution.Simple.SetupHooks.Rule.RuleData Distribution.Simple.SetupHooks.Rule.User) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Classes.Eq (Distribution.Simple.SetupHooks.Rule.RuleData Distribution.Simple.SetupHooks.Rule.System) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Classes.Eq Distribution.Simple.SetupHooks.Rule.RuleId -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Classes.Eq Distribution.Simple.SetupHooks.Rule.RuleOutput -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Classes.Eq Distribution.Simple.SetupHooks.Rule.RulesNameSpace -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall (scope :: Distribution.Simple.SetupHooks.Rule.Scope) arg. GHC.Classes.Eq arg => GHC.Classes.Eq (Distribution.Simple.SetupHooks.Rule.ScopedArgument scope arg) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall fnTy. GHC.Classes.Eq (Distribution.Simple.SetupHooks.Rule.Static Distribution.Simple.SetupHooks.Rule.System fnTy) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall fnTy. GHC.Classes.Eq (Distribution.Simple.SetupHooks.Rule.Static Distribution.Simple.SetupHooks.Rule.User fnTy) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Classes.Eq Distribution.Simple.Test.Log.PackageLog -- Defined in ‘Distribution.Simple.Test.Log’
instance GHC.Classes.Eq Distribution.Simple.Test.Log.TestLogs -- Defined in ‘Distribution.Simple.Test.Log’
instance GHC.Classes.Eq Distribution.Simple.Test.Log.TestSuiteLog -- Defined in ‘Distribution.Simple.Test.Log’
instance GHC.Classes.Eq Distribution.System.Arch -- Defined in ‘Distribution.System’
instance GHC.Classes.Eq Distribution.System.OS -- Defined in ‘Distribution.System’
instance GHC.Classes.Eq Distribution.System.Platform -- Defined in ‘Distribution.System’
instance [safe] GHC.Classes.Eq Distribution.TestSuite.OptionDescr -- Defined in ‘Distribution.TestSuite’
instance [safe] GHC.Classes.Eq Distribution.TestSuite.OptionType -- Defined in ‘Distribution.TestSuite’
instance [safe] GHC.Classes.Eq Distribution.TestSuite.Result -- Defined in ‘Distribution.TestSuite’
instance forall id. GHC.Classes.Eq id => GHC.Classes.Eq (Distribution.Types.AnnotatedId.AnnotatedId id) -- Defined in ‘Distribution.Types.AnnotatedId’
instance GHC.Classes.Eq Distribution.Types.ComponentRequestedSpec.ComponentRequestedSpec -- Defined in ‘Distribution.Types.ComponentRequestedSpec’
instance GHC.Classes.Eq Distribution.Types.DependencyMap.DependencyMap -- Defined in ‘Distribution.Types.DependencyMap’
instance GHC.Classes.Eq Distribution.Types.GivenComponent.GivenComponent -- Defined in ‘Distribution.Types.GivenComponent’
instance GHC.Classes.Eq Distribution.Types.GivenComponent.PromisedComponent -- Defined in ‘Distribution.Types.GivenComponent’
instance GHC.Classes.Eq Distribution.Types.LocalBuildConfig.BuildOptions -- Defined in ‘Distribution.Types.LocalBuildConfig’
instance GHC.Classes.Eq Distribution.Types.MungedPackageId.MungedPackageId -- Defined in ‘Distribution.Types.MungedPackageId’
instance GHC.Classes.Eq Distribution.Types.MungedPackageName.MungedPackageName -- Defined in ‘Distribution.Types.MungedPackageName’
instance GHC.Classes.Eq Distribution.Types.PackageVersionConstraint.PackageVersionConstraint -- Defined in ‘Distribution.Types.PackageVersionConstraint’
instance GHC.Classes.Eq Distribution.Types.VersionInterval.Legacy.Bound -- Defined in ‘Distribution.Types.VersionInterval.Legacy’
instance GHC.Classes.Eq Distribution.Types.VersionInterval.Legacy.LowerBound -- Defined in ‘Distribution.Types.VersionInterval.Legacy’
instance GHC.Classes.Eq Distribution.Types.VersionInterval.Legacy.UpperBound -- Defined in ‘Distribution.Types.VersionInterval.Legacy’
instance GHC.Classes.Eq Distribution.Types.VersionInterval.Legacy.VersionIntervals -- Defined in ‘Distribution.Types.VersionInterval.Legacy’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq (Distribution.Utils.NubList.NubList a) -- Defined in ‘Distribution.Utils.NubList’
instance forall a. GHC.Classes.Eq a => GHC.Classes.Eq (Distribution.Utils.NubList.NubListR a) -- Defined in ‘Distribution.Utils.NubList’
instance forall (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute) from (to :: Distribution.Utils.Path.FileOrDir). GHC.Classes.Eq (Distribution.Utils.Path.SymbolicPathX allowAbsolute from to) -- Defined in ‘Distribution.Utils.Path’
instance GHC.Classes.Eq Distribution.Utils.ShortText.ShortText -- Defined in ‘Distribution.Utils.ShortText’
instance GHC.Classes.Eq Distribution.Verbosity.Verbosity -- Defined in ‘Distribution.Verbosity’
instance [safe] GHC.Classes.Eq Distribution.Verbosity.Internal.VerbosityFlag -- Defined in ‘Distribution.Verbosity.Internal’
instance [safe] GHC.Classes.Eq Distribution.Verbosity.Internal.VerbosityLevel -- Defined in ‘Distribution.Verbosity.Internal’
instance GHC.Classes.Ord Distribution.Backpack.OpenModule -- Defined in ‘Distribution.Backpack’
instance GHC.Classes.Ord Distribution.Backpack.OpenUnitId -- Defined in ‘Distribution.Backpack’
instance GHC.Classes.Ord Distribution.Types.UnitId.DefUnitId -- Defined in ‘Distribution.Types.UnitId’
instance GHC.Classes.Ord Distribution.Types.UnitId.UnitId -- Defined in ‘Distribution.Types.UnitId’
instance [safe] GHC.Classes.Ord Distribution.CabalSpecVersion.CabalSpecVersion -- Defined in ‘Distribution.CabalSpecVersion’
instance GHC.Classes.Ord GHC.Internal.Word.Word16 -- Defined in ‘GHC.Internal.Word’
instance GHC.Classes.Ord GHC.Internal.Word.Word32 -- Defined in ‘GHC.Internal.Word’
instance GHC.Classes.Ord GHC.Internal.Word.Word64 -- Defined in ‘GHC.Internal.Word’
instance GHC.Classes.Ord GHC.Internal.Word.Word8 -- Defined in ‘GHC.Internal.Word’
instance forall a. GHC.Classes.Ord a => GHC.Classes.Ord (GHC.Internal.Base.NonEmpty a) -- Defined in ‘GHC.Internal.Base’
instance GHC.Classes.Ord GHC.Internal.Base.Void -- Defined in ‘GHC.Internal.Base’
instance GHC.Classes.Ord GHC.Internal.Exception.Type.ArithException -- Defined in ‘GHC.Internal.Exception.Type’
instance forall a. GHC.Classes.Ord a => GHC.Classes.Ord (Distribution.Compat.NonEmptySet.NonEmptySet a) -- Defined in ‘Distribution.Compat.NonEmptySet’
instance GHC.Classes.Ord GHC.Types.Bool -- Defined in ‘GHC.Classes’
instance GHC.Classes.Ord GHC.Types.Char -- Defined in ‘GHC.Classes’
instance GHC.Classes.Ord GHC.Types.Double -- Defined in ‘GHC.Classes’
instance GHC.Classes.Ord GHC.Types.Float -- Defined in ‘GHC.Classes’
instance GHC.Classes.Ord GHC.Types.Int -- Defined in ‘GHC.Classes’
instance forall a. GHC.Classes.Ord a => GHC.Classes.Ord [a] -- Defined in ‘GHC.Classes’
instance GHC.Classes.Ord GHC.Types.Ordering -- Defined in ‘GHC.Classes’
instance forall a. GHC.Classes.Ord a => GHC.Classes.Ord (Solo a) -- Defined in ‘GHC.Classes’
instance forall a b c d e f g h i j. (GHC.Classes.Ord a, GHC.Classes.Ord b, GHC.Classes.Ord c, GHC.Classes.Ord d, GHC.Classes.Ord e, GHC.Classes.Ord f, GHC.Classes.Ord g, GHC.Classes.Ord h, GHC.Classes.Ord i, GHC.Classes.Ord j) => GHC.Classes.Ord (a, b, c, d, e, f, g, h, i, j) -- Defined in ‘GHC.Classes’
instance forall a b c d e f g h i j k. (GHC.Classes.Ord a, GHC.Classes.Ord b, GHC.Classes.Ord c, GHC.Classes.Ord d, GHC.Classes.Ord e, GHC.Classes.Ord f, GHC.Classes.Ord g, GHC.Classes.Ord h, GHC.Classes.Ord i, GHC.Classes.Ord j, GHC.Classes.Ord k) => GHC.Classes.Ord (a, b, c, d, e, f, g, h, i, j, k) -- Defined in ‘GHC.Classes’
instance forall a b c d e f g h i j k l. (GHC.Classes.Ord a, GHC.Classes.Ord b, GHC.Classes.Ord c, GHC.Classes.Ord d, GHC.Classes.Ord e, GHC.Classes.Ord f, GHC.Classes.Ord g, GHC.Classes.Ord h, GHC.Classes.Ord i, GHC.Classes.Ord j, GHC.Classes.Ord k, GHC.Classes.Ord l) => GHC.Classes.Ord (a, b, c, d, e, f, g, h, i, j, k, l) -- Defined in ‘GHC.Classes’
instance forall a b c d e f g h i j k l m. (GHC.Classes.Ord a, GHC.Classes.Ord b, GHC.Classes.Ord c, GHC.Classes.Ord d, GHC.Classes.Ord e, GHC.Classes.Ord f, GHC.Classes.Ord g, GHC.Classes.Ord h, GHC.Classes.Ord i, GHC.Classes.Ord j, GHC.Classes.Ord k, GHC.Classes.Ord l, GHC.Classes.Ord m) => GHC.Classes.Ord (a, b, c, d, e, f, g, h, i, j, k, l, m) -- Defined in ‘GHC.Classes’
instance forall a b c d e f g h i j k l m n. (GHC.Classes.Ord a, GHC.Classes.Ord b, GHC.Classes.Ord c, GHC.Classes.Ord d, GHC.Classes.Ord e, GHC.Classes.Ord f, GHC.Classes.Ord g, GHC.Classes.Ord h, GHC.Classes.Ord i, GHC.Classes.Ord j, GHC.Classes.Ord k, GHC.Classes.Ord l, GHC.Classes.Ord m, GHC.Classes.Ord n) => GHC.Classes.Ord (a, b, c, d, e, f, g, h, i, j, k, l, m, n) -- Defined in ‘GHC.Classes’
instance forall a b c d e f g h i j k l m n o. (GHC.Classes.Ord a, GHC.Classes.Ord b, GHC.Classes.Ord c, GHC.Classes.Ord d, GHC.Classes.Ord e, GHC.Classes.Ord f, GHC.Classes.Ord g, GHC.Classes.Ord h, GHC.Classes.Ord i, GHC.Classes.Ord j, GHC.Classes.Ord k, GHC.Classes.Ord l, GHC.Classes.Ord m, GHC.Classes.Ord n, GHC.Classes.Ord o) => GHC.Classes.Ord (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) -- Defined in ‘GHC.Classes’
instance forall a b. (GHC.Classes.Ord a, GHC.Classes.Ord b) => GHC.Classes.Ord (a, b) -- Defined in ‘GHC.Classes’
instance forall a b c. (GHC.Classes.Ord a, GHC.Classes.Ord b, GHC.Classes.Ord c) => GHC.Classes.Ord (a, b, c) -- Defined in ‘GHC.Classes’
instance forall a b c d. (GHC.Classes.Ord a, GHC.Classes.Ord b, GHC.Classes.Ord c, GHC.Classes.Ord d) => GHC.Classes.Ord (a, b, c, d) -- Defined in ‘GHC.Classes’
instance forall a b c d e. (GHC.Classes.Ord a, GHC.Classes.Ord b, GHC.Classes.Ord c, GHC.Classes.Ord d, GHC.Classes.Ord e) => GHC.Classes.Ord (a, b, c, d, e) -- Defined in ‘GHC.Classes’
instance forall a b c d e f. (GHC.Classes.Ord a, GHC.Classes.Ord b, GHC.Classes.Ord c, GHC.Classes.Ord d, GHC.Classes.Ord e, GHC.Classes.Ord f) => GHC.Classes.Ord (a, b, c, d, e, f) -- Defined in ‘GHC.Classes’
instance forall a b c d e f g. (GHC.Classes.Ord a, GHC.Classes.Ord b, GHC.Classes.Ord c, GHC.Classes.Ord d, GHC.Classes.Ord e, GHC.Classes.Ord f, GHC.Classes.Ord g) => GHC.Classes.Ord (a, b, c, d, e, f, g) -- Defined in ‘GHC.Classes’
instance forall a b c d e f g h. (GHC.Classes.Ord a, GHC.Classes.Ord b, GHC.Classes.Ord c, GHC.Classes.Ord d, GHC.Classes.Ord e, GHC.Classes.Ord f, GHC.Classes.Ord g, GHC.Classes.Ord h) => GHC.Classes.Ord (a, b, c, d, e, f, g, h) -- Defined in ‘GHC.Classes’
instance forall a b c d e f g h i. (GHC.Classes.Ord a, GHC.Classes.Ord b, GHC.Classes.Ord c, GHC.Classes.Ord d, GHC.Classes.Ord e, GHC.Classes.Ord f, GHC.Classes.Ord g, GHC.Classes.Ord h, GHC.Classes.Ord i) => GHC.Classes.Ord (a, b, c, d, e, f, g, h, i) -- Defined in ‘GHC.Classes’
instance GHC.Classes.Ord GHC.Types.TyCon -- Defined in ‘GHC.Classes’
instance GHC.Classes.Ord () -- Defined in ‘GHC.Classes’
instance GHC.Classes.Ord GHC.Types.Word -- Defined in ‘GHC.Classes’
instance forall a. GHC.Internal.Real.Integral a => GHC.Classes.Ord (GHC.Internal.Real.Ratio a) -- Defined in ‘GHC.Internal.Real’
instance forall a k (b :: k). GHC.Classes.Ord a => GHC.Classes.Ord (GHC.Internal.Data.Functor.Const.Const a b) -- Defined in ‘GHC.Internal.Data.Functor.Const’
instance forall a b. (GHC.Classes.Ord a, GHC.Classes.Ord b) => GHC.Classes.Ord (GHC.Internal.Data.Either.Either a b) -- Defined in ‘GHC.Internal.Data.Either’
instance GHC.Classes.Ord GHC.Internal.IO.Exception.ArrayException -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Classes.Ord GHC.Internal.IO.Exception.AsyncException -- Defined in ‘GHC.Internal.IO.Exception’
instance GHC.Classes.Ord GHC.Internal.IO.Exception.ExitCode -- Defined in ‘GHC.Internal.IO.Exception’
instance forall k (f :: k -> *) (g :: k -> *) (p :: k). (GHC.Classes.Ord (f p), GHC.Classes.Ord (g p)) => GHC.Classes.Ord ((GHC.Internal.Generics.:*:) f g p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (f :: k -> *) (g :: k -> *) (p :: k). (GHC.Classes.Ord (f p), GHC.Classes.Ord (g p)) => GHC.Classes.Ord ((GHC.Internal.Generics.:+:) f g p) -- Defined in ‘GHC.Internal.Generics’
instance forall k2 (f :: k2 -> *) k1 (g :: k1 -> k2) (p :: k1). GHC.Classes.Ord (f (g p)) => GHC.Classes.Ord ((GHC.Internal.Generics.:.:) f g p) -- Defined in ‘GHC.Internal.Generics’
instance GHC.Classes.Ord GHC.Internal.Generics.Associativity -- Defined in ‘GHC.Internal.Generics’
instance GHC.Classes.Ord GHC.Internal.Generics.DecidedStrictness -- Defined in ‘GHC.Internal.Generics’
instance GHC.Classes.Ord GHC.Internal.Generics.Fixity -- Defined in ‘GHC.Internal.Generics’
instance forall k (f :: k -> *) (a :: k). (GHC.Internal.Generics.Generic1 f, GHC.Classes.Ord (GHC.Internal.Generics.Rep1 f a)) => GHC.Classes.Ord (GHC.Internal.Generics.Generically1 f a) -- Defined in ‘GHC.Internal.Generics’
instance forall i c k (p :: k). GHC.Classes.Ord c => GHC.Classes.Ord (GHC.Internal.Generics.K1 i c p) -- Defined in ‘GHC.Internal.Generics’
instance forall i (c :: GHC.Internal.Generics.Meta) k (f :: k -> *) (p :: k). GHC.Classes.Ord (f p) => GHC.Classes.Ord (GHC.Internal.Generics.M1 i c f p) -- Defined in ‘GHC.Internal.Generics’
instance forall p. GHC.Classes.Ord p => GHC.Classes.Ord (GHC.Internal.Generics.Par1 p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (f :: k -> *) (p :: k). GHC.Classes.Ord (f p) => GHC.Classes.Ord (GHC.Internal.Generics.Rec1 f p) -- Defined in ‘GHC.Internal.Generics’
instance GHC.Classes.Ord GHC.Internal.Generics.SourceStrictness -- Defined in ‘GHC.Internal.Generics’
instance GHC.Classes.Ord GHC.Internal.Generics.SourceUnpackedness -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Classes.Ord (GHC.Internal.Generics.U1 p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Classes.Ord (GHC.Internal.Generics.URec (GHC.Internal.Ptr.Ptr ()) p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Classes.Ord (GHC.Internal.Generics.URec GHC.Types.Char p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Classes.Ord (GHC.Internal.Generics.URec GHC.Types.Double p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Classes.Ord (GHC.Internal.Generics.URec GHC.Types.Float p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Classes.Ord (GHC.Internal.Generics.URec GHC.Types.Int p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Classes.Ord (GHC.Internal.Generics.URec GHC.Types.Word p) -- Defined in ‘GHC.Internal.Generics’
instance forall k (p :: k). GHC.Classes.Ord (GHC.Internal.Generics.V1 p) -- Defined in ‘GHC.Internal.Generics’
instance forall a. GHC.Classes.Ord a => GHC.Classes.Ord (GHC.Internal.Data.Functor.Identity.Identity a) -- Defined in ‘GHC.Internal.Data.Functor.Identity’
instance GHC.Classes.Ord GHC.Internal.Int.Int16 -- Defined in ‘GHC.Internal.Int’
instance GHC.Classes.Ord GHC.Internal.Int.Int32 -- Defined in ‘GHC.Internal.Int’
instance GHC.Classes.Ord GHC.Internal.Int.Int64 -- Defined in ‘GHC.Internal.Int’
instance GHC.Classes.Ord GHC.Internal.Int.Int8 -- Defined in ‘GHC.Internal.Int’
instance GHC.Classes.Ord GHC.Num.Integer.Integer -- Defined in ‘GHC.Num.Integer’
instance forall k v. (GHC.Classes.Ord k, GHC.Classes.Ord v) => GHC.Classes.Ord (Data.Map.Internal.Map k v) -- Defined in ‘Data.Map.Internal’
instance forall a. GHC.Classes.Ord a => GHC.Classes.Ord (GHC.Internal.Maybe.Maybe a) -- Defined in ‘GHC.Internal.Maybe’
instance forall k (s :: k). GHC.Classes.Ord (GHC.Internal.Data.Proxy.Proxy s) -- Defined in ‘GHC.Internal.Data.Proxy’
instance forall a. GHC.Classes.Ord a => GHC.Classes.Ord (Data.Set.Internal.Intersection a) -- Defined in ‘Data.Set.Internal’
instance forall a. GHC.Classes.Ord a => GHC.Classes.Ord (Data.Set.Internal.Set a) -- Defined in ‘Data.Set.Internal’
instance GHC.Classes.Ord Distribution.Utils.Structured.Structure -- Defined in ‘Distribution.Utils.Structured’
instance GHC.Classes.Ord ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.SomeTypeRep -- Defined in ‘ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal’
instance forall k (a :: k). GHC.Classes.Ord (ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal.TypeRep a) -- Defined in ‘ghc-internal-9.1001.0:GHC.Internal.Data.Typeable.Internal’
instance forall a. GHC.Classes.Ord a => GHC.Classes.Ord (GHC.Internal.Data.Ord.Down a) -- Defined in ‘GHC.Internal.Data.Ord’
instance forall a. GHC.Classes.Ord a => GHC.Classes.Ord (Distribution.Compat.Semigroup.First' a) -- Defined in ‘Distribution.Compat.Semigroup’
instance forall a. GHC.Classes.Ord a => GHC.Classes.Ord (Distribution.Compat.Semigroup.Last' a) -- Defined in ‘Distribution.Compat.Semigroup’
instance forall a. GHC.Classes.Ord a => GHC.Classes.Ord (Distribution.Compat.Semigroup.Option' a) -- Defined in ‘Distribution.Compat.Semigroup’
instance GHC.Classes.Ord GHC.Internal.Unicode.GeneralCategory -- Defined in ‘GHC.Internal.Unicode’
instance GHC.Classes.Ord GHC.Internal.Data.Semigroup.Internal.All -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall k (f :: k -> *) (a :: k). GHC.Classes.Ord (f a) => GHC.Classes.Ord (GHC.Internal.Data.Semigroup.Internal.Alt f a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Classes.Ord GHC.Internal.Data.Semigroup.Internal.Any -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Classes.Ord a => GHC.Classes.Ord (GHC.Internal.Data.Semigroup.Internal.Dual a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Classes.Ord a => GHC.Classes.Ord (GHC.Internal.Data.Semigroup.Internal.Product a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance forall a. GHC.Classes.Ord a => GHC.Classes.Ord (GHC.Internal.Data.Semigroup.Internal.Sum a) -- Defined in ‘GHC.Internal.Data.Semigroup.Internal’
instance GHC.Classes.Ord Distribution.Compat.Time.ModTime -- Defined in ‘Distribution.Compat.Time’
instance GHC.Classes.Ord Distribution.Compiler.CompilerFlavor -- Defined in ‘Distribution.Compiler’
instance GHC.Classes.Ord Distribution.Compiler.CompilerId -- Defined in ‘Distribution.Compiler’
instance forall v. GHC.Classes.Ord v => GHC.Classes.Ord (Distribution.Compiler.PerCompilerFlavor v) -- Defined in ‘Distribution.Compiler’
instance forall ann. GHC.Classes.Ord ann => GHC.Classes.Ord (Distribution.Fields.Field.Field ann) -- Defined in ‘Distribution.Fields.Field’
instance forall ann. GHC.Classes.Ord ann => GHC.Classes.Ord (Distribution.Fields.Field.FieldLine ann) -- Defined in ‘Distribution.Fields.Field’
instance forall ann. GHC.Classes.Ord ann => GHC.Classes.Ord (Distribution.Fields.Field.Name ann) -- Defined in ‘Distribution.Fields.Field’
instance forall ann. GHC.Classes.Ord ann => GHC.Classes.Ord (Distribution.Fields.Field.SectionArg ann) -- Defined in ‘Distribution.Fields.Field’
instance [safe] GHC.Classes.Ord Distribution.Parsec.Warning.PWarnType -- Defined in ‘Distribution.Parsec.Warning’
instance [safe] GHC.Classes.Ord Distribution.Parsec.Warning.PWarning -- Defined in ‘Distribution.Parsec.Warning’
instance [safe] GHC.Classes.Ord Distribution.Fields.LexerMonad.LexWarningType -- Defined in ‘Distribution.Fields.LexerMonad’
instance GHC.Classes.Ord Distribution.License.License -- Defined in ‘Distribution.License’
instance GHC.Classes.Ord Distribution.Types.ComponentId.ComponentId -- Defined in ‘Distribution.Types.ComponentId’
instance GHC.Classes.Ord Distribution.Types.Dependency.Dependency -- Defined in ‘Distribution.Types.Dependency’
instance GHC.Classes.Ord Distribution.Types.Module.Module -- Defined in ‘Distribution.Types.Module’
instance GHC.Classes.Ord Distribution.Types.PackageId.PackageIdentifier -- Defined in ‘Distribution.Types.PackageId’
instance GHC.Classes.Ord Distribution.Types.PackageName.PackageName -- Defined in ‘Distribution.Types.PackageName’
instance GHC.Classes.Ord Distribution.Types.PkgconfigName.PkgconfigName -- Defined in ‘Distribution.Types.PkgconfigName’
instance GHC.Classes.Ord Distribution.Types.Version.Version -- Defined in ‘Distribution.Types.Version’
instance GHC.Classes.Ord Distribution.ModuleName.ModuleName -- Defined in ‘Distribution.ModuleName’
instance GHC.Classes.Ord Distribution.Types.SourceRepo.KnownRepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Classes.Ord Distribution.Types.SourceRepo.RepoKind -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Classes.Ord Distribution.Types.SourceRepo.RepoType -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Classes.Ord Distribution.Types.SourceRepo.SourceRepo -- Defined in ‘Distribution.Types.SourceRepo’
instance GHC.Classes.Ord Distribution.Types.Benchmark.Benchmark -- Defined in ‘Distribution.Types.Benchmark’
instance GHC.Classes.Ord Distribution.Types.BenchmarkInterface.BenchmarkInterface -- Defined in ‘Distribution.Types.BenchmarkInterface’
instance GHC.Classes.Ord Distribution.Types.BenchmarkType.BenchmarkType -- Defined in ‘Distribution.Types.BenchmarkType’
instance GHC.Classes.Ord Distribution.Types.BuildInfo.BuildInfo -- Defined in ‘Distribution.Types.BuildInfo’
instance GHC.Classes.Ord Distribution.Types.BuildType.BuildType -- Defined in ‘Distribution.Types.BuildType’
instance GHC.Classes.Ord Distribution.Types.ComponentName.ComponentName -- Defined in ‘Distribution.Types.ComponentName’
instance GHC.Classes.Ord Distribution.Types.ComponentName.NotLibComponentName -- Defined in ‘Distribution.Types.ComponentName’
instance GHC.Classes.Ord Distribution.Types.ModuleRenaming.ModuleRenaming -- Defined in ‘Distribution.Types.ModuleRenaming’
instance GHC.Classes.Ord Distribution.Types.ExeDependency.ExeDependency -- Defined in ‘Distribution.Types.ExeDependency’
instance GHC.Classes.Ord Distribution.Types.Executable.Executable -- Defined in ‘Distribution.Types.Executable’
instance GHC.Classes.Ord Distribution.Types.ExecutableScope.ExecutableScope -- Defined in ‘Distribution.Types.ExecutableScope’
instance GHC.Classes.Ord Distribution.Types.Flag.FlagAssignment -- Defined in ‘Distribution.Types.Flag’
instance GHC.Classes.Ord Distribution.Types.Flag.FlagName -- Defined in ‘Distribution.Types.Flag’
instance GHC.Classes.Ord Distribution.Types.ForeignLib.ForeignLib -- Defined in ‘Distribution.Types.ForeignLib’
instance GHC.Classes.Ord Distribution.Types.ForeignLib.LibVersionInfo -- Defined in ‘Distribution.Types.ForeignLib’
instance GHC.Classes.Ord Distribution.Types.ForeignLibType.ForeignLibType -- Defined in ‘Distribution.Types.ForeignLibType’
instance GHC.Classes.Ord Distribution.Types.ForeignLibOption.ForeignLibOption -- Defined in ‘Distribution.Types.ForeignLibOption’
instance GHC.Classes.Ord Distribution.Types.IncludeRenaming.IncludeRenaming -- Defined in ‘Distribution.Types.IncludeRenaming’
instance GHC.Classes.Ord Distribution.Types.LibraryName.LibraryName -- Defined in ‘Distribution.Types.LibraryName’
instance GHC.Classes.Ord Distribution.Types.LegacyExeDependency.LegacyExeDependency -- Defined in ‘Distribution.Types.LegacyExeDependency’
instance GHC.Classes.Ord Distribution.Types.Library.Library -- Defined in ‘Distribution.Types.Library’
instance GHC.Classes.Ord Distribution.Types.LibraryVisibility.LibraryVisibility -- Defined in ‘Distribution.Types.LibraryVisibility’
instance GHC.Classes.Ord Distribution.Types.Mixin.Mixin -- Defined in ‘Distribution.Types.Mixin’
instance GHC.Classes.Ord Distribution.Types.ModuleReexport.ModuleReexport -- Defined in ‘Distribution.Types.ModuleReexport’
instance GHC.Classes.Ord Distribution.Types.PackageDescription.PackageDescription -- Defined in ‘Distribution.Types.PackageDescription’
instance GHC.Classes.Ord Distribution.Types.PkgconfigVersionRange.PkgconfigVersionRange -- Defined in ‘Distribution.Types.PkgconfigVersionRange’
instance GHC.Classes.Ord Distribution.Types.PkgconfigDependency.PkgconfigDependency -- Defined in ‘Distribution.Types.PkgconfigDependency’
instance GHC.Classes.Ord Distribution.Types.PkgconfigVersion.PkgconfigVersion -- Defined in ‘Distribution.Types.PkgconfigVersion’
instance GHC.Classes.Ord Distribution.Types.SetupBuildInfo.SetupBuildInfo -- Defined in ‘Distribution.Types.SetupBuildInfo’
instance GHC.Classes.Ord Distribution.Types.TestSuite.TestSuite -- Defined in ‘Distribution.Types.TestSuite’
instance GHC.Classes.Ord Distribution.Types.TestSuiteInterface.TestSuiteInterface -- Defined in ‘Distribution.Types.TestSuiteInterface’
instance GHC.Classes.Ord Distribution.Types.TestType.TestType -- Defined in ‘Distribution.Types.TestType’
instance GHC.Classes.Ord Distribution.Types.UnqualComponentName.UnqualComponentName -- Defined in ‘Distribution.Types.UnqualComponentName’
instance GHC.Classes.Ord Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning.CEType -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning’
instance GHC.Classes.Ord Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning.CheckExplanation -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning’
instance GHC.Classes.Ord Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning.CheckExplanationID -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning’
instance GHC.Classes.Ord Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning.PackageCheck -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning’
instance GHC.Classes.Ord Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning.WarnLang -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Warning’
instance forall a. GHC.Classes.Ord a => GHC.Classes.Ord (Cabal-3.15.0.0:Distribution.PackageDescription.Check.Monad.TargetAnnotation a) -- Defined in ‘Cabal-3.15.0.0:Distribution.PackageDescription.Check.Monad’
instance [safe] GHC.Classes.Ord Distribution.Parsec.Position.Position -- Defined in ‘Distribution.Parsec.Position’
instance GHC.Classes.Ord Distribution.SPDX.LicenseId.LicenseId -- Defined in ‘Distribution.SPDX.LicenseId’
instance GHC.Classes.Ord Distribution.SPDX.LicenseExceptionId.LicenseExceptionId -- Defined in ‘Distribution.SPDX.LicenseExceptionId’
instance GHC.Classes.Ord Distribution.SPDX.LicenseExpression.LicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance GHC.Classes.Ord Distribution.SPDX.LicenseExpression.SimpleLicenseExpression -- Defined in ‘Distribution.SPDX.LicenseExpression’
instance GHC.Classes.Ord Distribution.SPDX.License.License -- Defined in ‘Distribution.SPDX.License’
instance [safe] GHC.Classes.Ord Distribution.SPDX.LicenseListVersion.LicenseListVersion -- Defined in ‘Distribution.SPDX.LicenseListVersion’
instance GHC.Classes.Ord Distribution.SPDX.LicenseReference.LicenseRef -- Defined in ‘Distribution.SPDX.LicenseReference’
instance GHC.Classes.Ord Language.Haskell.Extension.Extension -- Defined in ‘Language.Haskell.Extension’
instance GHC.Classes.Ord Language.Haskell.Extension.KnownExtension -- Defined in ‘Language.Haskell.Extension’
instance GHC.Classes.Ord Language.Haskell.Extension.Language -- Defined in ‘Language.Haskell.Extension’
instance forall fp. GHC.Classes.Ord fp => GHC.Classes.Ord (Distribution.Simple.Compiler.PackageDBX fp) -- Defined in ‘Distribution.Simple.Compiler’
instance GHC.Classes.Ord Distribution.Types.VersionRange.Internal.VersionRange -- Defined in ‘Distribution.Types.VersionRange.Internal’
instance GHC.Classes.Ord Distribution.Simple.Build.AutogenFile -- Defined in ‘Distribution.Simple.Build’
instance GHC.Classes.Ord Distribution.Simple.BuildTarget.ComponentKind -- Defined in ‘Distribution.Simple.BuildTarget’
instance GHC.Classes.Ord Distribution.Simple.BuildTarget.UserBuildTarget -- Defined in ‘Distribution.Simple.BuildTarget’
instance [safe] GHC.Classes.Ord Distribution.Simple.BuildWay.BuildWay -- Defined in ‘Distribution.Simple.BuildWay’
instance forall fp. GHC.Classes.Ord fp => GHC.Classes.Ord (Cabal-3.15.0.0:Distribution.Simple.GHC.Internal.GhcEnvironmentFileEntry fp) -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.GHC.Internal’
instance forall a. GHC.Classes.Ord a => GHC.Classes.Ord (Distribution.Simple.Glob.GlobResult a) -- Defined in ‘Distribution.Simple.Glob’
instance GHC.Classes.Ord Distribution.Simple.Haddock.Directory -- Defined in ‘Distribution.Simple.Haddock’
instance GHC.Classes.Ord Distribution.Simple.InstallDirs.PathTemplate -- Defined in ‘Distribution.Simple.InstallDirs’
instance [safe] GHC.Classes.Ord Distribution.Simple.InstallDirs.Internal.PathComponent -- Defined in ‘Distribution.Simple.InstallDirs.Internal’
instance [safe] GHC.Classes.Ord Distribution.Simple.InstallDirs.Internal.PathTemplateVariable -- Defined in ‘Distribution.Simple.InstallDirs.Internal’
instance GHC.Classes.Ord Distribution.Simple.PreProcess.Types.Suffix -- Defined in ‘Distribution.Simple.PreProcess.Types’
instance GHC.Classes.Ord Cabal-3.15.0.0:Distribution.Simple.Setup.Test.TestShowDetails -- Defined in ‘Cabal-3.15.0.0:Distribution.Simple.Setup.Test’
instance [safe] GHC.Classes.Ord Distribution.Types.DumpBuildInfo.DumpBuildInfo -- Defined in ‘Distribution.Types.DumpBuildInfo’
instance GHC.Classes.Ord Distribution.Simple.SetupHooks.Rule.Dependency -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall (scope :: Distribution.Simple.SetupHooks.Rule.Scope) k (depsArg :: k) depsRes. GHC.Classes.Ord depsRes => GHC.Classes.Ord (Distribution.Simple.SetupHooks.Rule.DepsRes scope depsArg depsRes) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Classes.Ord Distribution.Simple.SetupHooks.Rule.Location -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall (scope :: Distribution.Simple.SetupHooks.Rule.Scope) k1 (arg :: k1) k2 (res :: k2). GHC.Classes.Ord (Distribution.Simple.SetupHooks.Rule.NoCmd scope arg res) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Classes.Ord Distribution.Simple.SetupHooks.Rule.RuleId -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Classes.Ord Distribution.Simple.SetupHooks.Rule.RuleOutput -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Classes.Ord Distribution.Simple.SetupHooks.Rule.RulesNameSpace -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall (scope :: Distribution.Simple.SetupHooks.Rule.Scope) arg. GHC.Classes.Ord arg => GHC.Classes.Ord (Distribution.Simple.SetupHooks.Rule.ScopedArgument scope arg) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall fnTy. GHC.Classes.Ord (Distribution.Simple.SetupHooks.Rule.Static Distribution.Simple.SetupHooks.Rule.System fnTy) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance forall fnTy. GHC.Classes.Ord (Distribution.Simple.SetupHooks.Rule.Static Distribution.Simple.SetupHooks.Rule.User fnTy) -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
instance GHC.Classes.Ord Distribution.System.Arch -- Defined in ‘Distribution.System’
instance GHC.Classes.Ord Distribution.System.OS -- Defined in ‘Distribution.System’
instance GHC.Classes.Ord Distribution.System.Platform -- Defined in ‘Distribution.System’
instance forall id. GHC.Classes.Ord id => GHC.Classes.Ord (Distribution.Types.AnnotatedId.AnnotatedId id) -- Defined in ‘Distribution.Types.AnnotatedId’
instance GHC.Classes.Ord Distribution.Types.MungedPackageId.MungedPackageId -- Defined in ‘Distribution.Types.MungedPackageId’
instance GHC.Classes.Ord Distribution.Types.MungedPackageName.MungedPackageName -- Defined in ‘Distribution.Types.MungedPackageName’
instance GHC.Classes.Ord Distribution.Types.VersionInterval.Legacy.LowerBound -- Defined in ‘Distribution.Types.VersionInterval.Legacy’
instance GHC.Classes.Ord Distribution.Types.VersionInterval.Legacy.UpperBound -- Defined in ‘Distribution.Types.VersionInterval.Legacy’
instance forall (allowAbsolute :: Distribution.Utils.Path.AllowAbsolute) from (to :: Distribution.Utils.Path.FileOrDir). GHC.Classes.Ord (Distribution.Utils.Path.SymbolicPathX allowAbsolute from to) -- Defined in ‘Distribution.Utils.Path’
instance GHC.Classes.Ord Distribution.Utils.ShortText.ShortText -- Defined in ‘Distribution.Utils.ShortText’
instance GHC.Classes.Ord Distribution.Verbosity.Verbosity -- Defined in ‘Distribution.Verbosity’
instance [safe] GHC.Classes.Ord Distribution.Verbosity.Internal.VerbosityFlag -- Defined in ‘Distribution.Verbosity.Internal’
instance [safe] GHC.Classes.Ord Distribution.Verbosity.Internal.VerbosityLevel -- Defined in ‘Distribution.Verbosity.Internal’
instance Text.Parsec.Prim.Stream Distribution.Fields.Parser.LexState' GHC.Internal.Data.Functor.Identity.Identity Distribution.Fields.Lexer.LToken -- Defined in ‘Distribution.Fields.Parser’
instance forall (m :: * -> *). GHC.Internal.Base.Monad m => Text.Parsec.Prim.Stream Distribution.Parsec.FieldLineStream.FieldLineStream m GHC.Types.Char -- Defined in ‘Distribution.Parsec.FieldLineStream’
instance [safe] forall vertex. Language.Haskell.TH.Syntax.Lift vertex => Language.Haskell.TH.Syntax.Lift (Data.Graph.SCC vertex) -- Defined in ‘Data.Graph’
instance forall k a. (Language.Haskell.TH.Syntax.Lift k, Language.Haskell.TH.Syntax.Lift a) => Language.Haskell.TH.Syntax.Lift (Data.Map.Internal.Map k a) -- Defined in ‘Data.Map.Internal’
instance forall a. Language.Haskell.TH.Syntax.Lift a => Language.Haskell.TH.Syntax.Lift (Data.Set.Internal.Set a) -- Defined in ‘Data.Set.Internal’
instance Control.Monad.Trans.Class.MonadTrans Distribution.Simple.SetupHooks.Rule.RulesT -- Defined in ‘Distribution.Simple.SetupHooks.Rule’
