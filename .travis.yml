# NB: don't set `language: haskell` here

# The following enables several GHC versions to be tested; often it's enough to test only against the last release in a major GHC version. Feel free to omit lines listings versions you don't need/want testing for.
env:
 - GHCVER=7.4.2
 - GHCVER=7.6.3
 - GHCVER=7.8.4
 - GHCVER=7.10.1
 - GHCVER=head

# Note: the distinction between `before_install` and `install` is not important.
before_install:
 - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
 - travis_retry sudo apt-get update
 - travis_retry sudo apt-get install cabal-install-1.22 ghc-$GHCVER-prof ghc-$GHCVER-dyn happy
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/1.22/bin:$PATH

install:
 - cabal update
# We intentionally do not install anything before trying to build Cabal because
# it should build with each supported GHC version out-of-the-box.

# Here starts the actual work to be performed for the package under test; any command which exits with a non-zero exit code causes the build to fail.
# Using ./dist/setup/setup here instead of cabal-install to avoid breakage
# when the build config format changed
script:
 - cd Cabal
 - mkdir -p ./dist/setup
 - cp Setup.hs ./dist/setup/setup.hs
# Should be able to build setup without extra dependencies
 - /opt/ghc/$GHCVER/bin/ghc --make -odir ./dist/setup -hidir ./dist/setup -i -i. ./dist/setup/setup.hs -o ./dist/setup/setup -Wall -Werror -threaded  # the command cabal-install would use to build setup

# Need extra dependencies for test suite
 - travis_retry git clone -b pr-base48 https://github.com/hvr/ansi-wl-pprint ../ansi-wl-pprint
 - cabal install ../ansi-wl-pprint
 - cabal install --only-dependencies --enable-tests
 - sudo /opt/ghc/$GHCVER/bin/ghc-pkg recache
 - /opt/ghc/$GHCVER/bin/ghc-pkg recache --user

 - ./dist/setup/setup configure --user --enable-tests --enable-benchmarks --ghc-option=-Werror -v2  # -v2 provides useful information for debugging
 - ./dist/setup/setup build   # this builds all libraries and executables (including tests/benchmarks)
 - ./dist/setup/setup haddock # see #2198
 - ./dist/setup/setup test --show-details=streaming
 - cabal check
 - cabal sdist   # tests that a source-distribution can be generated

# The following scriptlet checks that the resulting source distribution can be built & installed
 - function install_from_tarball {
   export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}') ;
   if [ -f "dist/$SRC_TGZ" ]; then
      cabal install "dist/$SRC_TGZ" -v2;
   else
      echo "expected 'dist/$SRC_TGZ' not found";
      exit 1;
   fi
   }
 - install_from_tarball

# Also build cabal-install.
 - cd ../cabal-install
 - cabal sandbox init
 - cabal sandbox add-source ../Cabal ../ansi-wl-pprint
 - cabal install --dependencies-only --enable-tests
 - cabal configure --enable-tests --ghc-option=-Werror
 - cabal build
 - cabal test
 - cabal check
 - cabal sdist
 - install_from_tarball

matrix:
  allow_failures:
   - env: GHCVER=head
