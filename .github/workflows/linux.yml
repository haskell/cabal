name: Linux

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types:
      - created

jobs:
  validate:
    strategy:
      matrix:
        ghc:
          - "9.2.1"
          - "9.0.2"
          - "8.10.7"
          - "8.8.4"
          - "8.6.5"
          - "8.4.4"
          - "8.2.2"
          - "8.0.2"
          - "7.10.3"
          - "7.8.4"

    name: validate ${{ matrix.ghc }}
    runs-on: ubuntu-18.04

    container:
      image: haskell:${{ matrix.ghc }}

    steps:
      - name: System info
        run: |
          uname -a

      - name: Set PATH
        run: |
          echo "$HOME/.cabal/bin" >> $GITHUB_PATH

      - name: Install cabal-plan
        run: |
          mkdir -p $HOME/.cabal/bin
          curl -sL https://github.com/haskell-hvr/cabal-plan/releases/download/v0.6.2.0/cabal-plan-0.6.2.0-x86_64-linux.xz > cabal-plan.xz
          echo "de73600b1836d3f55e32d80385acc055fd97f60eaa0ab68a755302685f5d81bc  cabal-plan.xz" | sha256sum -c -
          xz -d < cabal-plan.xz > $HOME/.cabal/bin/cabal-plan
          rm -f cabal-plan.xz
          chmod a+x $HOME/.cabal/bin/cabal-plan

      - name: Update Hackage index
        run: cabal v2-update

      # TODO revisit this
      # https://github.com/actions/checkout/issues/170
      # - uses: actions/checkout@v2
      - name: Checkout
        run: |
          echo $GITHUB_REF $GITHUB_SHA
          git clone --depth 1 https://github.com/$GITHUB_REPOSITORY.git .
          git fetch origin $GITHUB_SHA:temporary-ci-branch
          git checkout $GITHUB_SHA || (git fetch && git checkout $GITHUB_SHA)

      - name: Set flag --lib-only
        if: contains(matrix.ghc, ["8.0.2", "7.10.3", "7.8.4", "7.6.3"])
        run: echo "flags=--lib-only" >> $github_env

      - name: Set flag --solver-benchmark
        if: matrix.ghc == "8.8.4"
        run: echo "flags=--solver-benchmark" >> $github_env

      - name: Set flag --complete-hackage-tests
        if: matrix.ghc == "8.6.5"
        run: echo "flags=--complete-hackage-tests" >> $github_env

      - name: Install `nroff` for `cabal man`
        if: contains(matrix.ghc, ["8.8.4", "8.6.5"])
        run: |
          apt-get update
          apt-get install -y groff-base

      - name: Validate print-config
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ env.flags }} -s print-config

      - name: Validate print-tool-versions
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ env.flags }} -s print-tool-versions

      - name: Validate build
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ env.flags }} -s build

      - name: Validate lib-tests
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ env.flags }} -s lib-tests

      - name: Validate lib-suite
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ env.flags }} -s lib-suite

      - name: Validate cli-tests
        if: |
          !contains(matrix.ghc, ["8.0.2", "7.10.3", "7.8.4"])
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ env.flags }} -s cli-tests

      - name: Validate cli-suite
        if: |
          !contains(matrix.ghc, ["8.0.2", "7.10.3", "7.8.4"])
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ env.flags }} -s cli-suite

  validate_old:
    strategy:
      matrix:
        include:
          - ghc: "7.6.3"
            old: false
            image_tag: xenial
            extra_steps: false
          - ghc: "8.8.4"
            old: true
            image_tag: xenial
            extra_steps: true

    name: Validate old GHCs ${{ matrix.ghc }}
    runs-on: ubuntu-18.04

    container:
      image: phadej/ghc:${{ matrix.ghc }}-${{ matrix.image_tag }}

    steps:
      - name: System info
        run: |
          uname -a

      - name: Set PATH
        run: |
          echo "$HOME/.cabal/bin" >> $GITHUB_PATH

      - name: Install cabal-plan
        run: |
          mkdir -p $HOME/.cabal/bin
          curl -sL https://github.com/haskell-hvr/cabal-plan/releases/download/v0.6.2.0/cabal-plan-0.6.2.0-x86_64-linux.xz > cabal-plan.xz
          echo "de73600b1836d3f55e32d80385acc055fd97f60eaa0ab68a755302685f5d81bc  cabal-plan.xz" | sha256sum -c -
          xz -d < cabal-plan.xz > $HOME/.cabal/bin/cabal-plan
          rm -f cabal-plan.xz
          chmod a+x $HOME/.cabal/bin/cabal-plan

      - name: apt-get update
        if: matrix.old == true
        run: apt-get update

      - name: Install dynamic libraries
        if: matrix.image_tag == "xenial"
        run: apt-get install -y ghc-${{ matrix.ghc }}-dyn

      - name: Install extra compilers
        if: matrix.old == true
        run: apt-get install -y ghc-7.0.4-dyn ghc-7.2.2-dyn ghc-7.4.2-dyn

      - name: Update Hackage index
        run: cabal v2-update

      # TODO revisit this
      # https://github.com/actions/checkout/issues/170
      # - uses: actions/checkout@v2
      - name: Checkout
        run: |
          echo $GITHUB_REF $GITHUB_SHA
          git clone --depth 1 https://github.com/$GITHUB_REPOSITORY.git .
          git fetch origin $GITHUB_SHA:temporary-ci-branch
          git checkout $GITHUB_SHA || (git fetch && git checkout $GITHUB_SHA)

      - name: Validate print-config
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ env.flags }} -s print-config

      - name: Validate print-tool-versions
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ env.flags }} -s print-tool-versions

      - name: Validate build
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ env.flags }} -s build

      - name: Validate lib-tests
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ env.flags }} -s lib-tests

      - name: Validate lib-suite
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ env.flags }} -s lib-suite

      - name: Valudate lib-suite-extras --extra-hc /opt/ghc/7.0.4/bin/ghc-7.0.4
        if: matrix.extra_steps
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ env.flags }} -s lib-suite-extras --extra-hc /opt/ghc/7.0.4/bin/ghc-7.0.4

      - name: Valudate lib-suite-extras --extra-hc /opt/ghc/7.0.4/bin/ghc-7.2.2
        if: matrix.extra_steps
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ env.flags }} -s lib-suite-extras --extra-hc /opt/ghc/7.2.2/bin/ghc-7.2.2

      - name: Valudate lib-suite-extras --extra-hc /opt/ghc/7.0.4/bin/ghc-7.4.2
        if: matrix.extra_steps
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ env.flags }} -s lib-suite-extras --extra-hc /opt/ghc/7.4.2/bin/ghc-7.4.2
