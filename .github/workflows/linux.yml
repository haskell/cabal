name: Linux

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types:
      - created

jobs:
  validate:
    name: Validate ghc-${{ matrix.ghc }}

    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      matrix:
        include:
          - ghc: "9.2.1"
            cli: true
            experimental: true # work to be done
            flags: ""
          - ghc: "9.0.2"
            cli: false
            experimental: true # see #7987
            flags: "--lib-only"
          - ghc: "9.0.1"
            cli: false
            experimental: false
            flags: "--lib-only"
          - ghc: "8.10.7"
            cli: true
            experimental: false
            flags: ""
          - ghc: "8.8.4"
            cli: true
            experimental: false
            flags: "--solver-benchmarks"
          - ghc: "8.6.5"
            cli: true
            experimental: false
            flags: "--complete-hackage-tests"
          - ghc: "8.4.4"
            cli: true
            experimental: false
            flags: ""
          - ghc: "8.2.2"
            cli: true
            experimental: false
            flags: ""
          - ghc: "8.0.2"
            cli: false
            experimental: false
            flags: "--lib-only"

    steps:

      - uses: actions/checkout@v2

      - uses: haskell/actions/setup@v1
        id: setup-haskell
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: latest # default, keeping for visibility

      #  See the following link for a breakdown of the following step
      #  https://github.com/haskell/actions/issues/7#issuecomment-745697160
      - uses: actions/cache@v2
        with:
          path: |
            ${{ steps.setup-haskell.outputs.cabal-store }}
            dist-newstyle
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ matrix.ghc }}-

      # The '+exe' constraint below is important, otherwise cabal-install
      # might decide to build the library but not the executable which is
      # what we need.
      - name: Install cabal-plan
        run: |
          cd $(mktemp -d)
          cabal install cabal-plan --constraint='cabal-plan +exe'
          echo "$HOME/.cabal/bin" >> $GITHUB_PATH

      - name: Validate print-config
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ matrix.flags }} -s print-config

      - name: Validate print-tool-versions
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ matrix.flags }} -s print-tool-versions

      - name: Validate build
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ matrix.flags }} -s build

      - name: Validate lib-tests
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ matrix.flags }} -s lib-tests

      - name: Validate lib-suite
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ matrix.flags }} -s lib-suite

      - name: Validate cli-tests
        if: matrix.cli == true
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ matrix.flags }} -s cli-tests

      - name: Validate cli-suite
        if: matrix.cli == true
        run: sh validate.sh -j 2 -w ghc-${{ matrix.ghc }} -v ${{ matrix.flags }} -s cli-suite

