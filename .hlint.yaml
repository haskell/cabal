# Warnings currently triggered by your code
- ignore: {name: "Avoid NonEmpty.unzip"} # 1 hint
- ignore: {name: "Avoid lambda"} # 50 hints
- ignore: {name: "Avoid lambda using `infix`"} # 23 hints
- ignore: {name: "Eta reduce"} # 136 hints
- ignore: {name: "Evaluate"} # 10 hints
- ignore: {name: "Functor law"} # 10 hints
- ignore: {name: "Fuse concatMap/map"} # 3 hints
- ignore: {name: "Fuse foldr/map"} # 3 hints
- ignore: {name: "Hoist not"} # 16 hints
- ignore: {name: "Monoid law, left identity"} # 3 hints
- ignore: {name: "Monoid law, right identity"} # 3 hints
- ignore: {name: "Move filter"} # 4 hints
- ignore: {name: "Move guards forward"} # 4 hints
- ignore: {name: "Redundant $"} # 202 hints
- ignore: {name: "Redundant $!"} # 1 hint
- ignore: {name: "Redundant <$>"} # 18 hints
- ignore: {name: "Redundant bracket"} # 274 hints
- ignore: {name: "Redundant guard"} # 2 hints
- ignore: {name: "Redundant if"} # 6 hints
- ignore: {name: "Redundant lambda"} # 19 hints
- ignore: {name: "Redundant maybe"} # 2 hints
- ignore: {name: "Redundant multi-way if"} # 1 hint
- ignore: {name: "Redundant return"} # 10 hints
- ignore: {name: "Replace case with fromMaybe"} # 4 hints
- ignore: {name: "Replace case with maybe"} # 10 hints
- ignore: {name: "Use $>"} # 5 hints
- ignore: {name: "Use ++"} # 4 hints
- ignore: {name: "Use :"} # 28 hints
- ignore: {name: "Use <$"} # 2 hints
- ignore: {name: "Use <$>"} # 88 hints
- ignore: {name: "Use <&>"} # 16 hints
- ignore: {name: "Use <=<"} # 4 hints
- ignore: {name: "Use =<<"} # 7 hints
- ignore: {name: "Use =="} # 3 hints
- ignore: {name: "Use >=>"} # 3 hints
- ignore: {name: "Use Down"} # 3 hints
- ignore: {name: "Use bimap"} # 7 hints
- ignore: {name: "Use camelCase"} # 96 hints
- ignore: {name: "Use catMaybes"} # 4 hints
- ignore: {name: "Use concatMap"} # 2 hints
- ignore: {name: "Use const"} # 37 hints
- ignore: {name: "Use elem"} # 2 hints
- ignore: {name: "Use first"} # 5 hints
- ignore: {name: "Use fmap"} # 24 hints
- ignore: {name: "Use fold"} # 1 hint
- ignore: {name: "Use fromMaybe"} # 5 hints
- ignore: {name: "Use fst"} # 2 hints
- ignore: {name: "Use infix"} # 20 hints
- ignore: {name: "Use isAsciiLower"} # 2 hints
- ignore: {name: "Use isAsciiUpper"} # 2 hints
- ignore: {name: "Use isDigit"} # 2 hints
- ignore: {name: "Use lambda-case"} # 58 hints
- ignore: {name: "Use list comprehension"} # 19 hints
- ignore: {name: "Use list literal"} # 3 hints
- ignore: {name: "Use list literal pattern"} # 11 hints
- ignore: {name: "Use map once"} # 7 hints
- ignore: {name: "Use map with tuple-section"} # 3 hints
- ignore: {name: "Use mapMaybe"} # 13 hints
- ignore: {name: "Use max"} # 2 hints
- ignore: {name: "Use maybe"} # 8 hints
- ignore: {name: "Use newtype instead of data"} # 31 hints
- ignore: {name: "Use notElem"} # 9 hints
- ignore: {name: "Use null"} # 2 hints
- ignore: {name: "Use record patterns"} # 16 hints
- ignore: {name: "Use replicateM_"} # 2 hints
- ignore: {name: "Use rights"} # 2 hints
- ignore: {name: "Use second"} # 7 hints
- ignore: {name: "Use section"} # 18 hints
- ignore: {name: "Use tuple-section"} # 28 hints
- ignore: {name: "Use typeRep"} # 2 hints
- ignore: {name: "Use unless"} # 23 hints
- ignore: {name: "Use unwords"} # 8 hints
- ignore: {name: "Use void"} # 23 hints

- arguments:
    - --ignore-glob=Cabal-syntax/src/Distribution/Fields/Lexer.hs
    - --ignore-glob=Cabal-tests/tests/custom-setup/CabalDoctestSetup.hs
    - --ignore-glob=Cabal-tests/tests/custom-setup/IdrisSetup.hs
    - --ignore-glob=cabal-testsuite/PackageTests/BuildWays/q/app/Main.hs
    - --ignore-glob=cabal-testsuite/PackageTests/CmmSources/src/Demo.hs
    - --ignore-glob=cabal-testsuite/PackageTests/CmmSourcesDyn/src/Demo.hs
    - --ignore-glob=cabal-testsuite/PackageTests/CmmSourcesExe/src/Demo.hs
    - --ignore-glob=cabal-testsuite/PackageTests/NewBuild/CmdRun/Script/script.hs
    - --ignore-glob=cabal-testsuite/PackageTests/NewBuild/CmdRun/ScriptLiterate/script.lhs
    - --ignore-glob=cabal-testsuite/PackageTests/Regression/T5309/lib/Bio/Character/Exportable/Class.hs
    - --ignore-glob=cabal-testsuite/PackageTests/SetupHooks/SetupHooksC2HsRules/SetupHooks.hs
    - --ignore-glob=cabal-testsuite/PackageTests/SetupHooks/SetupHooksDuplicateRuleId/SetupHooks.hs
    - --ignore-glob=cabal-testsuite/PackageTests/SetupHooks/SetupHooksInvalidRuleOutputIndex/SetupHooks.hs
    - --ignore-glob=cabal-testsuite/PackageTests/SetupHooks/SetupHooksRuleOrdering/SetupHooks.hs
    - --ignore-glob=cabal-testsuite/PackageTests/SetupHooks/SetupHooksUnusedRules/SetupHooks.hs
    - --ignore-glob=cabal-testsuite/PackageTests/TemplateHaskell/dynamic/TH.hs
    - --ignore-glob=cabal-testsuite/PackageTests/TemplateHaskell/profiling/TH.hs
    - --ignore-glob=cabal-testsuite/PackageTests/TemplateHaskell/vanilla/TH.hs
    - --ignore-glob=templates/Paths_pkg.template.hs
    - --ignore-glob=templates/SPDX.LicenseExceptionId.template.hs
    - --ignore-glob=templates/SPDX.LicenseId.template.hs
    - --ignore-glob=dist-*
