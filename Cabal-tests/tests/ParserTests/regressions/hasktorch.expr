GenericPackageDescription {
  packageDescription =
  PackageDescription {
    specVersion = CabalSpecV2_2,
    package = PackageIdentifier {
      pkgName = PackageName
        "hasktorch",
      pkgVersion = mkVersion
        [0, 0, 1, 0]},
    licenseRaw = Left
      (License
        (ELicense
          (ELicenseId BSD_3_Clause)
          Nothing)),
    licenseFiles = [],
    copyright = "",
    maintainer =
    "Sam Stites <fnz@fgvgrf.vb>, Austin Huang <nhfgvau@nyhz.zvg.rqh> - cipher:ROT13",
    author = "Hasktorch dev team",
    stability = "",
    testedWith = [],
    homepage =
    "https://github.com/hasktorch/hasktorch#readme",
    pkgUrl = "",
    bugReports =
    "https://github.com/hasktorch/hasktorch/issues",
    sourceRepos = [
      SourceRepo {
        repoKind = RepoHead,
        repoType = Just
          (KnownRepoType Git),
        repoLocation = Just
          "https://github.com/hasktorch/hasktorch",
        repoModule = Nothing,
        repoBranch = Nothing,
        repoTag = Nothing,
        repoSubdir = Nothing}],
    synopsis =
    "Torch for tensors and neural networks in Haskell",
    description =
    "Hasktorch is a library for tensors and neural networks in Haskell. It is an independent open source community project which leverages the core C libraries shared by Torch and PyTorch. This library leverages @cabal v2-build@ and @backpack@. *Note that this project is in early development and should only be used by contributing developers. Expect substantial changes to the library API as it evolves. Contributions and PRs are welcome (see details on github).*",
    category =
    "Tensors, Machine Learning, AI",
    customFieldsPD = [],
    buildTypeRaw = Just Simple,
    setupBuildInfo = Nothing,
    library = Nothing,
    subLibraries = [],
    executables = [],
    foreignLibs = [],
    testSuites = [],
    benchmarks = [],
    dataFiles = [],
    dataDir = ".",
    extraSrcFiles = [],
    extraTmpFiles = [],
    extraDocFiles = []},
  gpdScannedVersion = Nothing,
  genPackageFlags = [
    MkPackageFlag {
      flagName = FlagName "cuda",
      flagDescription =
      "build with THC support",
      flagDefault = False,
      flagManual = False},
    MkPackageFlag {
      flagName = FlagName "lite",
      flagDescription =
      "only build with Double and Long support",
      flagDefault = False,
      flagManual = False}],
  condLibrary = Just
    CondNode {
      condTreeData = Library {
        libName = LMainLibName,
        exposedModules = [
          ModuleName
            "Torch.Core.Exceptions",
          ModuleName "Torch.Core.Random",
          ModuleName "Torch.Core.LogAdd"],
        reexportedModules = [
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName
              "Torch.Types.Numeric",
            moduleReexportName = ModuleName
              "Torch.Types.Numeric"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName "Torch.Long",
            moduleReexportName = ModuleName
              "Torch.Long"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName "Torch.Long.Dynamic",
            moduleReexportName = ModuleName
              "Torch.Long.Dynamic"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName "Torch.Long.Storage",
            moduleReexportName = ModuleName
              "Torch.Long.Storage"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName "Torch.Double",
            moduleReexportName = ModuleName
              "Torch.Double"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName
              "Torch.Double.Dynamic",
            moduleReexportName = ModuleName
              "Torch.Double.Dynamic"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName
              "Torch.Double.Storage",
            moduleReexportName = ModuleName
              "Torch.Double.Storage"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName "Torch.Double.NN",
            moduleReexportName = ModuleName
              "Torch.Double.NN"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName
              "Torch.Double.NN.Activation",
            moduleReexportName = ModuleName
              "Torch.Double.NN.Activation"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName
              "Torch.Double.NN.Backprop",
            moduleReexportName = ModuleName
              "Torch.Double.NN.Backprop"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName
              "Torch.Double.NN.Conv1d",
            moduleReexportName = ModuleName
              "Torch.Double.NN.Conv1d"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName
              "Torch.Double.NN.Conv2d",
            moduleReexportName = ModuleName
              "Torch.Double.NN.Conv2d"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName
              "Torch.Double.NN.Criterion",
            moduleReexportName = ModuleName
              "Torch.Double.NN.Criterion"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName
              "Torch.Double.NN.Layers",
            moduleReexportName = ModuleName
              "Torch.Double.NN.Layers"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName
              "Torch.Double.NN.Linear",
            moduleReexportName = ModuleName
              "Torch.Double.NN.Linear"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName
              "Torch.Double.NN.Math",
            moduleReexportName = ModuleName
              "Torch.Double.NN.Math"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName
              "Torch.Double.NN.Padding",
            moduleReexportName = ModuleName
              "Torch.Double.NN.Padding"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName
              "Torch.Double.NN.Pooling",
            moduleReexportName = ModuleName
              "Torch.Double.NN.Pooling"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName
              "Torch.Double.NN.Sampling",
            moduleReexportName = ModuleName
              "Torch.Double.NN.Sampling"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName
              "Torch.Double.Dynamic.NN",
            moduleReexportName = ModuleName
              "Torch.Double.Dynamic.NN"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName
              "Torch.Double.Dynamic.NN.Activation",
            moduleReexportName = ModuleName
              "Torch.Double.Dynamic.NN.Activation"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName
              "Torch.Double.Dynamic.NN.Pooling",
            moduleReexportName = ModuleName
              "Torch.Double.Dynamic.NN.Pooling"},
          ModuleReexport {
            moduleReexportOriginalPackage =
            Nothing,
            moduleReexportOriginalName =
            ModuleName
              "Torch.Double.Dynamic.NN.Criterion",
            moduleReexportName = ModuleName
              "Torch.Double.Dynamic.NN.Criterion"}],
        signatures = [],
        libExposed = True,
        libVisibility =
        LibraryVisibilityPublic,
        libBuildInfo = BuildInfo {
          buildable = True,
          buildTools = [],
          buildToolDepends = [],
          cppOptions = [],
          asmOptions = [],
          cmmOptions = [],
          ccOptions = [],
          cxxOptions = [],
          ldOptions = [],
          hsc2hsOptions = [],
          pkgconfigDepends = [],
          frameworks = [],
          extraFrameworkDirs = [],
          asmSources = [],
          cmmSources = [],
          cSources = [],
          cxxSources = [],
          jsSources = [],
          hsSourceDirs = [
            SymbolicPath "utils"],
          otherModules = [],
          virtualModules = [],
          autogenModules = [],
          defaultLanguage = Just
            Haskell2010,
          otherLanguages = [],
          defaultExtensions = [
            EnableExtension LambdaCase,
            EnableExtension DataKinds,
            EnableExtension TypeFamilies,
            EnableExtension
              TypeSynonymInstances,
            EnableExtension
              ScopedTypeVariables,
            EnableExtension
              FlexibleContexts,
            EnableExtension CPP],
          otherExtensions = [],
          oldExtensions = [],
          extraLibs = [],
          extraLibsStatic = [],
          extraGHCiLibs = [],
          extraBundledLibs = [],
          extraLibFlavours = [],
          extraDynLibFlavours = [],
          extraLibDirs = [],
          extraLibDirsStatic = [],
          includeDirs = [],
          includes = [],
          autogenIncludes = [],
          installIncludes = [],
          options = PerCompilerFlavor
            []
            [],
          profOptions = PerCompilerFlavor
            []
            [],
          sharedOptions =
          PerCompilerFlavor [] [],
          staticOptions =
          PerCompilerFlavor [] [],
          customFieldsBI = [],
          targetBuildDepends = [
            Dependency
              (PackageName "base")
              (IntersectVersionRanges
                (UnionVersionRanges
                  (ThisVersion (mkVersion [4, 7]))
                  (LaterVersion
                    (mkVersion [4, 7])))
                (EarlierVersion
                  (mkVersion [5])))
              mainLibSet,
            Dependency
              (PackageName "dimensions")
              (UnionVersionRanges
                (ThisVersion (mkVersion [1, 0]))
                (LaterVersion
                  (mkVersion [1, 0])))
              mainLibSet,
            Dependency
              (PackageName "safe-exceptions")
              (UnionVersionRanges
                (ThisVersion
                  (mkVersion [0, 1, 0]))
                (LaterVersion
                  (mkVersion [0, 1, 0])))
              mainLibSet,
            Dependency
              (PackageName "singletons")
              (UnionVersionRanges
                (ThisVersion (mkVersion [2, 2]))
                (LaterVersion
                  (mkVersion [2, 2])))
              mainLibSet,
            Dependency
              (PackageName "text")
              (UnionVersionRanges
                (ThisVersion
                  (mkVersion [1, 2, 2]))
                (LaterVersion
                  (mkVersion [1, 2, 2])))
              mainLibSet,
            Dependency
              (PackageName "hasktorch")
              (OrLaterVersion (mkVersion [0]))
              (NonEmptySet.fromNonEmpty
                (NE.fromList
                  [
                    LSubLibName
                      (UnqualComponentName
                        "hasktorch-cpu")])),
            Dependency
              (PackageName "hasktorch-ffi-th")
              (IntersectVersionRanges
                (UnionVersionRanges
                  (ThisVersion
                    (mkVersion [0, 0, 1]))
                  (LaterVersion
                    (mkVersion [0, 0, 1])))
                (EarlierVersion
                  (mkVersion [0, 0, 2])))
              mainLibSet,
            Dependency
              (PackageName
                "hasktorch-types-th")
              (IntersectVersionRanges
                (UnionVersionRanges
                  (ThisVersion
                    (mkVersion [0, 0, 1]))
                  (LaterVersion
                    (mkVersion [0, 0, 1])))
                (EarlierVersion
                  (mkVersion [0, 0, 2])))
              mainLibSet],
          mixins = []}},
      condTreeConstraints = [
        Dependency
          (PackageName "base")
          (IntersectVersionRanges
            (UnionVersionRanges
              (ThisVersion (mkVersion [4, 7]))
              (LaterVersion
                (mkVersion [4, 7])))
            (EarlierVersion
              (mkVersion [5])))
          mainLibSet,
        Dependency
          (PackageName "dimensions")
          (UnionVersionRanges
            (ThisVersion (mkVersion [1, 0]))
            (LaterVersion
              (mkVersion [1, 0])))
          mainLibSet,
        Dependency
          (PackageName "safe-exceptions")
          (UnionVersionRanges
            (ThisVersion
              (mkVersion [0, 1, 0]))
            (LaterVersion
              (mkVersion [0, 1, 0])))
          mainLibSet,
        Dependency
          (PackageName "singletons")
          (UnionVersionRanges
            (ThisVersion (mkVersion [2, 2]))
            (LaterVersion
              (mkVersion [2, 2])))
          mainLibSet,
        Dependency
          (PackageName "text")
          (UnionVersionRanges
            (ThisVersion
              (mkVersion [1, 2, 2]))
            (LaterVersion
              (mkVersion [1, 2, 2])))
          mainLibSet,
        Dependency
          (PackageName "hasktorch")
          (OrLaterVersion (mkVersion [0]))
          (NonEmptySet.fromNonEmpty
            (NE.fromList
              [
                LSubLibName
                  (UnqualComponentName
                    "hasktorch-cpu")])),
        Dependency
          (PackageName "hasktorch-ffi-th")
          (IntersectVersionRanges
            (UnionVersionRanges
              (ThisVersion
                (mkVersion [0, 0, 1]))
              (LaterVersion
                (mkVersion [0, 0, 1])))
            (EarlierVersion
              (mkVersion [0, 0, 2])))
          mainLibSet,
        Dependency
          (PackageName
            "hasktorch-types-th")
          (IntersectVersionRanges
            (UnionVersionRanges
              (ThisVersion
                (mkVersion [0, 0, 1]))
              (LaterVersion
                (mkVersion [0, 0, 1])))
            (EarlierVersion
              (mkVersion [0, 0, 2])))
          mainLibSet],
      condTreeComponents = [
        CondBranch {
          condBranchCondition =
          `CNot (Var (PackageFlag (FlagName "lite")))`,
          condBranchIfTrue = CondNode {
            condTreeData = Library {
              libName = LMainLibName,
              exposedModules = [],
              reexportedModules = [
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName "Torch.Byte",
                  moduleReexportName = ModuleName
                    "Torch.Byte"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName "Torch.Byte.Dynamic",
                  moduleReexportName = ModuleName
                    "Torch.Byte.Dynamic"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName "Torch.Byte.Storage",
                  moduleReexportName = ModuleName
                    "Torch.Byte.Storage"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName "Torch.Char",
                  moduleReexportName = ModuleName
                    "Torch.Char"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName "Torch.Char.Dynamic",
                  moduleReexportName = ModuleName
                    "Torch.Char.Dynamic"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName "Torch.Char.Storage",
                  moduleReexportName = ModuleName
                    "Torch.Char.Storage"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName "Torch.Short",
                  moduleReexportName = ModuleName
                    "Torch.Short"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Short.Dynamic",
                  moduleReexportName = ModuleName
                    "Torch.Short.Dynamic"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Short.Storage",
                  moduleReexportName = ModuleName
                    "Torch.Short.Storage"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName "Torch.Int",
                  moduleReexportName = ModuleName
                    "Torch.Int"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName "Torch.Int.Dynamic",
                  moduleReexportName = ModuleName
                    "Torch.Int.Dynamic"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName "Torch.Int.Storage",
                  moduleReexportName = ModuleName
                    "Torch.Int.Storage"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName "Torch.Float",
                  moduleReexportName = ModuleName
                    "Torch.Float"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Float.Dynamic",
                  moduleReexportName = ModuleName
                    "Torch.Float.Dynamic"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Float.Storage",
                  moduleReexportName = ModuleName
                    "Torch.Float.Storage"}],
              signatures = [],
              libExposed = True,
              libVisibility =
              LibraryVisibilityPublic,
              libBuildInfo = BuildInfo {
                buildable = True,
                buildTools = [],
                buildToolDepends = [],
                cppOptions = [],
                asmOptions = [],
                cmmOptions = [],
                ccOptions = [],
                cxxOptions = [],
                ldOptions = [],
                hsc2hsOptions = [],
                pkgconfigDepends = [],
                frameworks = [],
                extraFrameworkDirs = [],
                asmSources = [],
                cmmSources = [],
                cSources = [],
                cxxSources = [],
                jsSources = [],
                hsSourceDirs = [],
                otherModules = [],
                virtualModules = [],
                autogenModules = [],
                defaultLanguage = Nothing,
                otherLanguages = [],
                defaultExtensions = [],
                otherExtensions = [],
                oldExtensions = [],
                extraLibs = [],
                extraLibsStatic = [],
                extraGHCiLibs = [],
                extraBundledLibs = [],
                extraLibFlavours = [],
                extraDynLibFlavours = [],
                extraLibDirs = [],
                extraLibDirsStatic = [],
                includeDirs = [],
                includes = [],
                autogenIncludes = [],
                installIncludes = [],
                options = PerCompilerFlavor
                  []
                  [],
                profOptions = PerCompilerFlavor
                  []
                  [],
                sharedOptions =
                PerCompilerFlavor [] [],
                staticOptions =
                PerCompilerFlavor [] [],
                customFieldsBI = [],
                targetBuildDepends = [],
                mixins = []}},
            condTreeConstraints = [],
            condTreeComponents = []},
          condBranchIfFalse = Nothing},
        CondBranch {
          condBranchCondition =
          `Var (PackageFlag (FlagName "cuda"))`,
          condBranchIfTrue = CondNode {
            condTreeData = Library {
              libName = LMainLibName,
              exposedModules = [],
              reexportedModules = [
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName "Torch.Cuda.Long",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Long"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Cuda.Long.Dynamic",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Long.Dynamic"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Cuda.Long.Storage",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Long.Storage"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName "Torch.Cuda.Double",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Double"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Cuda.Double.Dynamic",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Double.Dynamic"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Cuda.Double.Storage",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Double.Storage"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Cuda.Double.NN",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Double.NN"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Cuda.Double.NN.Activation",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Double.NN.Activation"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Cuda.Double.NN.Backprop",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Double.NN.Backprop"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Cuda.Double.NN.Conv1d",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Double.NN.Conv1d"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Cuda.Double.NN.Conv2d",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Double.NN.Conv2d"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Cuda.Double.NN.Criterion",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Double.NN.Criterion"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Cuda.Double.NN.Layers",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Double.NN.Layers"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Cuda.Double.NN.Linear",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Double.NN.Linear"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Cuda.Double.NN.Math",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Double.NN.Math"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Cuda.Double.NN.Padding",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Double.NN.Padding"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Cuda.Double.NN.Pooling",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Double.NN.Pooling"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Cuda.Double.NN.Sampling",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Double.NN.Sampling"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Cuda.Double.Dynamic.NN",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Double.Dynamic.NN"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Cuda.Double.Dynamic.NN.Activation",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Double.Dynamic.NN.Activation"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Cuda.Double.Dynamic.NN.Pooling",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Double.Dynamic.NN.Pooling"},
                ModuleReexport {
                  moduleReexportOriginalPackage =
                  Nothing,
                  moduleReexportOriginalName =
                  ModuleName
                    "Torch.Cuda.Double.Dynamic.NN.Criterion",
                  moduleReexportName = ModuleName
                    "Torch.Cuda.Double.Dynamic.NN.Criterion"}],
              signatures = [],
              libExposed = True,
              libVisibility =
              LibraryVisibilityPublic,
              libBuildInfo = BuildInfo {
                buildable = True,
                buildTools = [],
                buildToolDepends = [],
                cppOptions = [],
                asmOptions = [],
                cmmOptions = [],
                ccOptions = [],
                cxxOptions = [],
                ldOptions = [],
                hsc2hsOptions = [],
                pkgconfigDepends = [],
                frameworks = [],
                extraFrameworkDirs = [],
                asmSources = [],
                cmmSources = [],
                cSources = [],
                cxxSources = [],
                jsSources = [],
                hsSourceDirs = [],
                otherModules = [],
                virtualModules = [],
                autogenModules = [],
                defaultLanguage = Nothing,
                otherLanguages = [],
                defaultExtensions = [],
                otherExtensions = [],
                oldExtensions = [],
                extraLibs = [],
                extraLibsStatic = [],
                extraGHCiLibs = [],
                extraBundledLibs = [],
                extraLibFlavours = [],
                extraDynLibFlavours = [],
                extraLibDirs = [],
                extraLibDirsStatic = [],
                includeDirs = [],
                includes = [],
                autogenIncludes = [],
                installIncludes = [],
                options = PerCompilerFlavor
                  []
                  [],
                profOptions = PerCompilerFlavor
                  []
                  [],
                sharedOptions =
                PerCompilerFlavor [] [],
                staticOptions =
                PerCompilerFlavor [] [],
                customFieldsBI = [],
                targetBuildDepends = [
                  Dependency
                    (PackageName "hasktorch")
                    (OrLaterVersion (mkVersion [0]))
                    (NonEmptySet.fromNonEmpty
                      (NE.fromList
                        [
                          LSubLibName
                            (UnqualComponentName
                              "hasktorch-gpu")]))],
                mixins = []}},
            condTreeConstraints = [
              Dependency
                (PackageName "hasktorch")
                (OrLaterVersion (mkVersion [0]))
                (NonEmptySet.fromNonEmpty
                  (NE.fromList
                    [
                      LSubLibName
                        (UnqualComponentName
                          "hasktorch-gpu")]))],
            condTreeComponents = [
              CondBranch {
                condBranchCondition =
                `CNot (Var (PackageFlag (FlagName "lite")))`,
                condBranchIfTrue = CondNode {
                  condTreeData = Library {
                    libName = LMainLibName,
                    exposedModules = [],
                    reexportedModules = [
                      ModuleReexport {
                        moduleReexportOriginalPackage =
                        Nothing,
                        moduleReexportOriginalName =
                        ModuleName "Torch.Cuda.Byte",
                        moduleReexportName = ModuleName
                          "Torch.Cuda.Byte"},
                      ModuleReexport {
                        moduleReexportOriginalPackage =
                        Nothing,
                        moduleReexportOriginalName =
                        ModuleName
                          "Torch.Cuda.Byte.Dynamic",
                        moduleReexportName = ModuleName
                          "Torch.Cuda.Byte.Dynamic"},
                      ModuleReexport {
                        moduleReexportOriginalPackage =
                        Nothing,
                        moduleReexportOriginalName =
                        ModuleName
                          "Torch.Cuda.Byte.Storage",
                        moduleReexportName = ModuleName
                          "Torch.Cuda.Byte.Storage"},
                      ModuleReexport {
                        moduleReexportOriginalPackage =
                        Nothing,
                        moduleReexportOriginalName =
                        ModuleName "Torch.Cuda.Char",
                        moduleReexportName = ModuleName
                          "Torch.Cuda.Char"},
                      ModuleReexport {
                        moduleReexportOriginalPackage =
                        Nothing,
                        moduleReexportOriginalName =
                        ModuleName
                          "Torch.Cuda.Char.Dynamic",
                        moduleReexportName = ModuleName
                          "Torch.Cuda.Char.Dynamic"},
                      ModuleReexport {
                        moduleReexportOriginalPackage =
                        Nothing,
                        moduleReexportOriginalName =
                        ModuleName
                          "Torch.Cuda.Char.Storage",
                        moduleReexportName = ModuleName
                          "Torch.Cuda.Char.Storage"},
                      ModuleReexport {
                        moduleReexportOriginalPackage =
                        Nothing,
                        moduleReexportOriginalName =
                        ModuleName "Torch.Cuda.Short",
                        moduleReexportName = ModuleName
                          "Torch.Cuda.Short"},
                      ModuleReexport {
                        moduleReexportOriginalPackage =
                        Nothing,
                        moduleReexportOriginalName =
                        ModuleName
                          "Torch.Cuda.Short.Dynamic",
                        moduleReexportName = ModuleName
                          "Torch.Cuda.Short.Dynamic"},
                      ModuleReexport {
                        moduleReexportOriginalPackage =
                        Nothing,
                        moduleReexportOriginalName =
                        ModuleName
                          "Torch.Cuda.Short.Storage",
                        moduleReexportName = ModuleName
                          "Torch.Cuda.Short.Storage"},
                      ModuleReexport {
                        moduleReexportOriginalPackage =
                        Nothing,
                        moduleReexportOriginalName =
                        ModuleName "Torch.Cuda.Int",
                        moduleReexportName = ModuleName
                          "Torch.Cuda.Int"},
                      ModuleReexport {
                        moduleReexportOriginalPackage =
                        Nothing,
                        moduleReexportOriginalName =
                        ModuleName
                          "Torch.Cuda.Int.Dynamic",
                        moduleReexportName = ModuleName
                          "Torch.Cuda.Int.Dynamic"},
                      ModuleReexport {
                        moduleReexportOriginalPackage =
                        Nothing,
                        moduleReexportOriginalName =
                        ModuleName
                          "Torch.Cuda.Int.Storage",
                        moduleReexportName = ModuleName
                          "Torch.Cuda.Int.Storage"},
                      ModuleReexport {
                        moduleReexportOriginalPackage =
                        Nothing,
                        moduleReexportOriginalName =
                        ModuleName "Torch.Cuda.Float",
                        moduleReexportName = ModuleName
                          "Torch.Cuda.Float"},
                      ModuleReexport {
                        moduleReexportOriginalPackage =
                        Nothing,
                        moduleReexportOriginalName =
                        ModuleName
                          "Torch.Cuda.Float.Dynamic",
                        moduleReexportName = ModuleName
                          "Torch.Cuda.Float.Dynamic"},
                      ModuleReexport {
                        moduleReexportOriginalPackage =
                        Nothing,
                        moduleReexportOriginalName =
                        ModuleName
                          "Torch.Cuda.Float.Storage",
                        moduleReexportName = ModuleName
                          "Torch.Cuda.Float.Storage"}],
                    signatures = [],
                    libExposed = True,
                    libVisibility =
                    LibraryVisibilityPublic,
                    libBuildInfo = BuildInfo {
                      buildable = True,
                      buildTools = [],
                      buildToolDepends = [],
                      cppOptions = [],
                      asmOptions = [],
                      cmmOptions = [],
                      ccOptions = [],
                      cxxOptions = [],
                      ldOptions = [],
                      hsc2hsOptions = [],
                      pkgconfigDepends = [],
                      frameworks = [],
                      extraFrameworkDirs = [],
                      asmSources = [],
                      cmmSources = [],
                      cSources = [],
                      cxxSources = [],
                      jsSources = [],
                      hsSourceDirs = [],
                      otherModules = [],
                      virtualModules = [],
                      autogenModules = [],
                      defaultLanguage = Nothing,
                      otherLanguages = [],
                      defaultExtensions = [],
                      otherExtensions = [],
                      oldExtensions = [],
                      extraLibs = [],
                      extraLibsStatic = [],
                      extraGHCiLibs = [],
                      extraBundledLibs = [],
                      extraLibFlavours = [],
                      extraDynLibFlavours = [],
                      extraLibDirs = [],
                      extraLibDirsStatic = [],
                      includeDirs = [],
                      includes = [],
                      autogenIncludes = [],
                      installIncludes = [],
                      options = PerCompilerFlavor
                        []
                        [],
                      profOptions = PerCompilerFlavor
                        []
                        [],
                      sharedOptions =
                      PerCompilerFlavor [] [],
                      staticOptions =
                      PerCompilerFlavor [] [],
                      customFieldsBI = [],
                      targetBuildDepends = [],
                      mixins = []}},
                  condTreeConstraints = [],
                  condTreeComponents = []},
                condBranchIfFalse = Nothing}]},
          condBranchIfFalse = Nothing}]},
  condSubLibraries =
  [
    _×_
      (UnqualComponentName
        "hasktorch-cpu")
      CondNode {
        condTreeData =
        Library {
          libName = LSubLibName
            (UnqualComponentName
              "hasktorch-cpu"),
          exposedModules = [
            ModuleName "Torch.Long",
            ModuleName "Torch.Long.Dynamic",
            ModuleName "Torch.Long.Storage",
            ModuleName "Torch.Double",
            ModuleName
              "Torch.Double.Dynamic",
            ModuleName
              "Torch.Double.Storage"],
          reexportedModules = [
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName "Torch.Double.NN",
              moduleReexportName = ModuleName
                "Torch.Double.NN"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Double.NN.Activation",
              moduleReexportName = ModuleName
                "Torch.Double.NN.Activation"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Double.NN.Backprop",
              moduleReexportName = ModuleName
                "Torch.Double.NN.Backprop"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Double.NN.Conv1d",
              moduleReexportName = ModuleName
                "Torch.Double.NN.Conv1d"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Double.NN.Conv2d",
              moduleReexportName = ModuleName
                "Torch.Double.NN.Conv2d"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Double.NN.Criterion",
              moduleReexportName = ModuleName
                "Torch.Double.NN.Criterion"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Double.NN.Layers",
              moduleReexportName = ModuleName
                "Torch.Double.NN.Layers"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Double.NN.Linear",
              moduleReexportName = ModuleName
                "Torch.Double.NN.Linear"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Double.NN.Math",
              moduleReexportName = ModuleName
                "Torch.Double.NN.Math"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Double.NN.Padding",
              moduleReexportName = ModuleName
                "Torch.Double.NN.Padding"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Double.NN.Pooling",
              moduleReexportName = ModuleName
                "Torch.Double.NN.Pooling"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Double.NN.Sampling",
              moduleReexportName = ModuleName
                "Torch.Double.NN.Sampling"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Double.Dynamic.NN",
              moduleReexportName = ModuleName
                "Torch.Double.Dynamic.NN"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Double.Dynamic.NN.Activation",
              moduleReexportName = ModuleName
                "Torch.Double.Dynamic.NN.Activation"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Double.Dynamic.NN.Pooling",
              moduleReexportName = ModuleName
                "Torch.Double.Dynamic.NN.Pooling"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Double.Dynamic.NN.Criterion",
              moduleReexportName = ModuleName
                "Torch.Double.Dynamic.NN.Criterion"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName "Torch.Float.NN",
              moduleReexportName = ModuleName
                "Torch.Float.NN"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Float.NN.Activation",
              moduleReexportName = ModuleName
                "Torch.Float.NN.Activation"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Float.NN.Backprop",
              moduleReexportName = ModuleName
                "Torch.Float.NN.Backprop"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Float.NN.Conv1d",
              moduleReexportName = ModuleName
                "Torch.Float.NN.Conv1d"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Float.NN.Conv2d",
              moduleReexportName = ModuleName
                "Torch.Float.NN.Conv2d"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Float.NN.Criterion",
              moduleReexportName = ModuleName
                "Torch.Float.NN.Criterion"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Float.NN.Layers",
              moduleReexportName = ModuleName
                "Torch.Float.NN.Layers"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Float.NN.Linear",
              moduleReexportName = ModuleName
                "Torch.Float.NN.Linear"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Float.NN.Math",
              moduleReexportName = ModuleName
                "Torch.Float.NN.Math"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Float.NN.Padding",
              moduleReexportName = ModuleName
                "Torch.Float.NN.Padding"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Float.NN.Pooling",
              moduleReexportName = ModuleName
                "Torch.Float.NN.Pooling"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Float.NN.Sampling",
              moduleReexportName = ModuleName
                "Torch.Float.NN.Sampling"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Float.Dynamic.NN",
              moduleReexportName = ModuleName
                "Torch.Float.Dynamic.NN"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Float.Dynamic.NN.Activation",
              moduleReexportName = ModuleName
                "Torch.Float.Dynamic.NN.Activation"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Float.Dynamic.NN.Pooling",
              moduleReexportName = ModuleName
                "Torch.Float.Dynamic.NN.Pooling"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Float.Dynamic.NN.Criterion",
              moduleReexportName = ModuleName
                "Torch.Float.Dynamic.NN.Criterion"}],
          signatures = [],
          libExposed = True,
          libVisibility =
          LibraryVisibilityPrivate,
          libBuildInfo =
          BuildInfo {
            buildable = True,
            buildTools = [],
            buildToolDepends = [],
            cppOptions = [],
            asmOptions = [],
            cmmOptions = [],
            ccOptions = [],
            cxxOptions = [],
            ldOptions = [],
            hsc2hsOptions = [],
            pkgconfigDepends = [],
            frameworks = [],
            extraFrameworkDirs = [],
            asmSources = [],
            cmmSources = [],
            cSources = [],
            cxxSources = [],
            jsSources = [],
            hsSourceDirs = [
              SymbolicPath "utils",
              SymbolicPath "src"],
            otherModules = [
              ModuleName
                "Torch.Core.Exceptions",
              ModuleName "Torch.Core.Random",
              ModuleName "Torch.Core.LogAdd"],
            virtualModules = [],
            autogenModules = [],
            defaultLanguage = Just
              Haskell2010,
            otherLanguages = [],
            defaultExtensions = [
              EnableExtension LambdaCase,
              EnableExtension DataKinds,
              EnableExtension TypeFamilies,
              EnableExtension
                TypeSynonymInstances,
              EnableExtension
                ScopedTypeVariables,
              EnableExtension
                FlexibleContexts,
              EnableExtension CPP],
            otherExtensions = [],
            oldExtensions = [],
            extraLibs = [],
            extraLibsStatic = [],
            extraGHCiLibs = [],
            extraBundledLibs = [],
            extraLibFlavours = [],
            extraDynLibFlavours = [],
            extraLibDirs = [],
            extraLibDirsStatic = [],
            includeDirs = [],
            includes = [],
            autogenIncludes = [],
            installIncludes = [],
            options = PerCompilerFlavor
              []
              [],
            profOptions = PerCompilerFlavor
              []
              [],
            sharedOptions =
            PerCompilerFlavor [] [],
            staticOptions =
            PerCompilerFlavor [] [],
            customFieldsBI = [],
            targetBuildDepends = [
              Dependency
                (PackageName "base")
                (IntersectVersionRanges
                  (UnionVersionRanges
                    (ThisVersion (mkVersion [4, 7]))
                    (LaterVersion
                      (mkVersion [4, 7])))
                  (EarlierVersion
                    (mkVersion [5])))
                mainLibSet,
              Dependency
                (PackageName
                  "hasktorch-types-th")
                (IntersectVersionRanges
                  (UnionVersionRanges
                    (ThisVersion
                      (mkVersion [0, 0, 1]))
                    (LaterVersion
                      (mkVersion [0, 0, 1])))
                  (EarlierVersion
                    (mkVersion [0, 0, 2])))
                mainLibSet,
              Dependency
                (PackageName "dimensions")
                (UnionVersionRanges
                  (ThisVersion (mkVersion [1, 0]))
                  (LaterVersion
                    (mkVersion [1, 0])))
                mainLibSet,
              Dependency
                (PackageName "hasktorch-ffi-th")
                (IntersectVersionRanges
                  (UnionVersionRanges
                    (ThisVersion
                      (mkVersion [0, 0, 1]))
                    (LaterVersion
                      (mkVersion [0, 0, 1])))
                  (EarlierVersion
                    (mkVersion [0, 0, 2])))
                mainLibSet,
              Dependency
                (PackageName
                  "hasktorch-types-th")
                (IntersectVersionRanges
                  (UnionVersionRanges
                    (ThisVersion
                      (mkVersion [0, 0, 1]))
                    (LaterVersion
                      (mkVersion [0, 0, 1])))
                  (EarlierVersion
                    (mkVersion [0, 0, 2])))
                mainLibSet,
              Dependency
                (PackageName "safe-exceptions")
                (UnionVersionRanges
                  (ThisVersion
                    (mkVersion [0, 1, 0]))
                  (LaterVersion
                    (mkVersion [0, 1, 0])))
                mainLibSet,
              Dependency
                (PackageName "singletons")
                (UnionVersionRanges
                  (ThisVersion (mkVersion [2, 2]))
                  (LaterVersion
                    (mkVersion [2, 2])))
                mainLibSet,
              Dependency
                (PackageName "text")
                (UnionVersionRanges
                  (ThisVersion
                    (mkVersion [1, 2, 2]))
                  (LaterVersion
                    (mkVersion [1, 2, 2])))
                mainLibSet,
              Dependency
                (PackageName "hasktorch")
                (OrLaterVersion (mkVersion [0]))
                (NonEmptySet.fromNonEmpty
                  (NE.fromList
                    [
                      LSubLibName
                        (UnqualComponentName
                          "hasktorch-indef-floating")])),
              Dependency
                (PackageName "hasktorch")
                (OrLaterVersion (mkVersion [0]))
                (NonEmptySet.fromNonEmpty
                  (NE.fromList
                    [
                      LSubLibName
                        (UnqualComponentName
                          "hasktorch-indef-signed")]))],
            mixins =
            [
              Mixin {
                mixinPackageName = PackageName
                  "hasktorch",
                mixinLibraryName = LSubLibName
                  (UnqualComponentName
                    "hasktorch-indef-signed"),
                mixinIncludeRenaming =
                IncludeRenaming {
                  includeProvidesRn =
                  ModuleRenaming
                    [
                      _×_
                        (ModuleName
                          "Torch.Indef.Storage")
                        (ModuleName
                          "Torch.Indef.Long.Storage"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Storage.Copy")
                        (ModuleName
                          "Torch.Indef.Long.Storage.Copy"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor")
                        (ModuleName
                          "Torch.Indef.Long.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Copy")
                        (ModuleName
                          "Torch.Indef.Long.Tensor.Copy"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Index")
                        (ModuleName
                          "Torch.Indef.Long.Tensor.Index"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Masked")
                        (ModuleName
                          "Torch.Indef.Long.Tensor.Masked"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math")
                        (ModuleName
                          "Torch.Indef.Long.Tensor.Math"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Compare")
                        (ModuleName
                          "Torch.Indef.Long.Tensor.Math.Compare"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.CompareT")
                        (ModuleName
                          "Torch.Indef.Long.Tensor.Math.CompareT"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Pairwise")
                        (ModuleName
                          "Torch.Indef.Long.Tensor.Math.Pairwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Pointwise")
                        (ModuleName
                          "Torch.Indef.Long.Tensor.Math.Pointwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Reduce")
                        (ModuleName
                          "Torch.Indef.Long.Tensor.Math.Reduce"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Scan")
                        (ModuleName
                          "Torch.Indef.Long.Tensor.Math.Scan"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Mode")
                        (ModuleName
                          "Torch.Indef.Long.Tensor.Mode"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.ScatterGather")
                        (ModuleName
                          "Torch.Indef.Long.Tensor.ScatterGather"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Sort")
                        (ModuleName
                          "Torch.Indef.Long.Tensor.Sort"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.TopK")
                        (ModuleName
                          "Torch.Indef.Long.Tensor.TopK"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor")
                        (ModuleName
                          "Torch.Indef.Long.Dynamic.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Copy")
                        (ModuleName
                          "Torch.Indef.Long.Dynamic.Tensor.Copy"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Index")
                        (ModuleName
                          "Torch.Indef.Long.Dynamic.Tensor.Index"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Masked")
                        (ModuleName
                          "Torch.Indef.Long.Dynamic.Tensor.Masked"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math")
                        (ModuleName
                          "Torch.Indef.Long.Dynamic.Tensor.Math"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Compare")
                        (ModuleName
                          "Torch.Indef.Long.Dynamic.Tensor.Math.Compare"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.CompareT")
                        (ModuleName
                          "Torch.Indef.Long.Dynamic.Tensor.Math.CompareT"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Pairwise")
                        (ModuleName
                          "Torch.Indef.Long.Dynamic.Tensor.Math.Pairwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Pointwise")
                        (ModuleName
                          "Torch.Indef.Long.Dynamic.Tensor.Math.Pointwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Reduce")
                        (ModuleName
                          "Torch.Indef.Long.Dynamic.Tensor.Math.Reduce"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Scan")
                        (ModuleName
                          "Torch.Indef.Long.Dynamic.Tensor.Math.Scan"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Mode")
                        (ModuleName
                          "Torch.Indef.Long.Dynamic.Tensor.Mode"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.ScatterGather")
                        (ModuleName
                          "Torch.Indef.Long.Dynamic.Tensor.ScatterGather"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Sort")
                        (ModuleName
                          "Torch.Indef.Long.Dynamic.Tensor.Sort"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.TopK")
                        (ModuleName
                          "Torch.Indef.Long.Dynamic.Tensor.TopK"),
                      _×_
                        (ModuleName "Torch.Indef.Types")
                        (ModuleName "Torch.Long.Types"),
                      _×_
                        (ModuleName "Torch.Indef.Index")
                        (ModuleName "Torch.Long.Index"),
                      _×_
                        (ModuleName "Torch.Indef.Mask")
                        (ModuleName "Torch.Long.Mask"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Pointwise.Signed")
                        (ModuleName
                          "Torch.Indef.Long.Tensor.Math.Pointwise.Signed"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Pointwise.Signed")
                        (ModuleName
                          "Torch.Indef.Long.Dynamic.Tensor.Math.Pointwise.Signed")],
                  includeRequiresRn =
                  ModuleRenaming
                    [
                      _×_
                        (ModuleName
                          "Torch.Sig.Index.Tensor")
                        (ModuleName
                          "Torch.FFI.TH.Long.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Index.TensorFree")
                        (ModuleName
                          "Torch.FFI.TH.Long.FreeTensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Mask.Tensor")
                        (ModuleName
                          "Torch.FFI.TH.Byte.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Mask.TensorFree")
                        (ModuleName
                          "Torch.FFI.TH.Byte.FreeTensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Mask.MathReduce")
                        (ModuleName
                          "Torch.FFI.TH.Byte.TensorMath"),
                      _×_
                        (ModuleName "Torch.Sig.State")
                        (ModuleName "Torch.Types.TH"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Types.Global")
                        (ModuleName "Torch.Types.TH"),
                      _×_
                        (ModuleName "Torch.Sig.Types")
                        (ModuleName
                          "Torch.Types.TH.Long"),
                      _×_
                        (ModuleName "Torch.Sig.Storage")
                        (ModuleName
                          "Torch.FFI.TH.Long.Storage"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Storage.Copy")
                        (ModuleName
                          "Torch.FFI.TH.Long.StorageCopy"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Storage.Memory")
                        (ModuleName
                          "Torch.FFI.TH.Long.FreeStorage"),
                      _×_
                        (ModuleName "Torch.Sig.Tensor")
                        (ModuleName
                          "Torch.FFI.TH.Long.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Copy")
                        (ModuleName
                          "Torch.FFI.TH.Long.TensorCopy"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Memory")
                        (ModuleName
                          "Torch.FFI.TH.Long.FreeTensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Index")
                        (ModuleName
                          "Torch.FFI.TH.Long.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Masked")
                        (ModuleName
                          "Torch.FFI.TH.Long.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math")
                        (ModuleName
                          "Torch.FFI.TH.Long.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Compare")
                        (ModuleName
                          "Torch.FFI.TH.Long.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.CompareT")
                        (ModuleName
                          "Torch.FFI.TH.Long.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Pairwise")
                        (ModuleName
                          "Torch.FFI.TH.Long.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Pointwise")
                        (ModuleName
                          "Torch.FFI.TH.Long.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Reduce")
                        (ModuleName
                          "Torch.FFI.TH.Long.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Scan")
                        (ModuleName
                          "Torch.FFI.TH.Long.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Mode")
                        (ModuleName
                          "Torch.FFI.TH.Long.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.ScatterGather")
                        (ModuleName
                          "Torch.FFI.TH.Long.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Sort")
                        (ModuleName
                          "Torch.FFI.TH.Long.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.TopK")
                        (ModuleName
                          "Torch.FFI.TH.Long.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Pointwise.Signed")
                        (ModuleName
                          "Torch.FFI.TH.Long.TensorMath")]}},
              Mixin {
                mixinPackageName = PackageName
                  "hasktorch",
                mixinLibraryName = LSubLibName
                  (UnqualComponentName
                    "hasktorch-indef-floating"),
                mixinIncludeRenaming =
                IncludeRenaming {
                  includeProvidesRn =
                  ModuleRenaming
                    [
                      _×_
                        (ModuleName
                          "Torch.Indef.Storage")
                        (ModuleName
                          "Torch.Indef.Double.Storage"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Storage.Copy")
                        (ModuleName
                          "Torch.Indef.Double.Storage.Copy"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor")
                        (ModuleName
                          "Torch.Indef.Double.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Copy")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Copy"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Index")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Index"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Masked")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Masked"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Compare")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math.Compare"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.CompareT")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math.CompareT"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Pairwise")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math.Pairwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Pointwise")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math.Pointwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Reduce")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math.Reduce"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Scan")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math.Scan"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Mode")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Mode"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.ScatterGather")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.ScatterGather"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Sort")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Sort"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.TopK")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.TopK"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Copy")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Copy"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Index")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Index"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Masked")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Masked"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Compare")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math.Compare"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.CompareT")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math.CompareT"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Pairwise")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math.Pairwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Pointwise")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math.Pointwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Reduce")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math.Reduce"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Scan")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math.Scan"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Mode")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Mode"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.ScatterGather")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.ScatterGather"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Sort")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Sort"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.TopK")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.TopK"),
                      _×_
                        (ModuleName "Torch.Indef.Types")
                        (ModuleName
                          "Torch.Double.Types"),
                      _×_
                        (ModuleName "Torch.Indef.Index")
                        (ModuleName
                          "Torch.Double.Index"),
                      _×_
                        (ModuleName "Torch.Indef.Mask")
                        (ModuleName
                          "Torch.Double.Mask"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Pointwise.Signed")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math.Pointwise.Signed"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Pointwise.Signed")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math.Pointwise.Signed"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Blas")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math.Blas"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Lapack")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math.Lapack"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Pointwise.Floating")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math.Pointwise.Floating"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Reduce.Floating")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math.Reduce.Floating"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Floating")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math.Floating"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Blas")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math.Blas"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Lapack")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math.Lapack"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Pointwise.Floating")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math.Pointwise.Floating"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Reduce.Floating")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math.Reduce.Floating"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Floating")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math.Floating"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Random.TH")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Random.TH"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Random.TH")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math.Random.TH"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Random.TH")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Random.TH"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Random.TH")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math.Random.TH"),
                      _×_
                        (ModuleName
                          "Torch.Undefined.Tensor.Random.THC")
                        (ModuleName
                          "Torch.Undefined.Double.Tensor.Random.THC"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Storage")
                        (ModuleName
                          "Torch.Indef.Double.Storage"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Storage.Copy")
                        (ModuleName
                          "Torch.Indef.Double.Storage.Copy"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor")
                        (ModuleName
                          "Torch.Indef.Double.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Copy")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Copy"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Index")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Index"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Masked")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Masked"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Compare")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math.Compare"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.CompareT")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math.CompareT"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Pairwise")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math.Pairwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Pointwise")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math.Pointwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Reduce")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math.Reduce"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Scan")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math.Scan"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Mode")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Mode"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.ScatterGather")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.ScatterGather"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Sort")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Sort"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.TopK")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.TopK"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Copy")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Copy"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Index")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Index"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Masked")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Masked"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Compare")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math.Compare"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.CompareT")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math.CompareT"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Pairwise")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math.Pairwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Pointwise")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math.Pointwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Reduce")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math.Reduce"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Scan")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math.Scan"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Mode")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Mode"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.ScatterGather")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.ScatterGather"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Sort")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Sort"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.TopK")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.TopK"),
                      _×_
                        (ModuleName "Torch.Indef.Types")
                        (ModuleName
                          "Torch.Double.Types"),
                      _×_
                        (ModuleName "Torch.Indef.Index")
                        (ModuleName
                          "Torch.Double.Index"),
                      _×_
                        (ModuleName "Torch.Indef.Mask")
                        (ModuleName
                          "Torch.Double.Mask"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Pointwise.Signed")
                        (ModuleName
                          "Torch.Indef.Double.Tensor.Math.Pointwise.Signed"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Pointwise.Signed")
                        (ModuleName
                          "Torch.Indef.Double.Dynamic.Tensor.Math.Pointwise.Signed"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.NN")
                        (ModuleName
                          "Torch.Double.Dynamic.NN"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.NN.Activation")
                        (ModuleName
                          "Torch.Double.Dynamic.NN.Activation"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.NN.Pooling")
                        (ModuleName
                          "Torch.Double.Dynamic.NN.Pooling"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.NN.Criterion")
                        (ModuleName
                          "Torch.Double.Dynamic.NN.Criterion"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN")
                        (ModuleName "Torch.Double.NN"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN")
                        (ModuleName "Torch.Double.NN"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Activation")
                        (ModuleName
                          "Torch.Double.NN.Activation"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Backprop")
                        (ModuleName
                          "Torch.Double.NN.Backprop"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Conv1d")
                        (ModuleName
                          "Torch.Double.NN.Conv1d"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Conv2d")
                        (ModuleName
                          "Torch.Double.NN.Conv2d"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Criterion")
                        (ModuleName
                          "Torch.Double.NN.Criterion"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Layers")
                        (ModuleName
                          "Torch.Double.NN.Layers"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Linear")
                        (ModuleName
                          "Torch.Double.NN.Linear"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Math")
                        (ModuleName
                          "Torch.Double.NN.Math"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Padding")
                        (ModuleName
                          "Torch.Double.NN.Padding"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Pooling")
                        (ModuleName
                          "Torch.Double.NN.Pooling"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Sampling")
                        (ModuleName
                          "Torch.Double.NN.Sampling")],
                  includeRequiresRn =
                  ModuleRenaming
                    [
                      _×_
                        (ModuleName
                          "Torch.Sig.Index.Tensor")
                        (ModuleName
                          "Torch.FFI.TH.Long.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Index.TensorFree")
                        (ModuleName
                          "Torch.FFI.TH.Long.FreeTensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Mask.Tensor")
                        (ModuleName
                          "Torch.FFI.TH.Byte.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Mask.TensorFree")
                        (ModuleName
                          "Torch.FFI.TH.Byte.FreeTensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Mask.MathReduce")
                        (ModuleName
                          "Torch.FFI.TH.Byte.TensorMath"),
                      _×_
                        (ModuleName "Torch.Sig.State")
                        (ModuleName "Torch.Types.TH"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Types.Global")
                        (ModuleName "Torch.Types.TH"),
                      _×_
                        (ModuleName "Torch.Sig.Types")
                        (ModuleName
                          "Torch.Types.TH.Double"),
                      _×_
                        (ModuleName "Torch.Sig.Storage")
                        (ModuleName
                          "Torch.FFI.TH.Double.Storage"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Storage.Copy")
                        (ModuleName
                          "Torch.FFI.TH.Double.StorageCopy"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Storage.Memory")
                        (ModuleName
                          "Torch.FFI.TH.Double.FreeStorage"),
                      _×_
                        (ModuleName "Torch.Sig.Tensor")
                        (ModuleName
                          "Torch.FFI.TH.Double.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Copy")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorCopy"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Memory")
                        (ModuleName
                          "Torch.FFI.TH.Double.FreeTensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Index")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Masked")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Compare")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.CompareT")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Pairwise")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Pointwise")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Reduce")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Scan")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Mode")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.ScatterGather")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Sort")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.TopK")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Pointwise.Signed")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Pointwise.Floating")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Reduce.Floating")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Floating")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Blas")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Lapack")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorLapack"),
                      _×_
                        (ModuleName "Torch.Sig.NN")
                        (ModuleName
                          "Torch.FFI.TH.NN.Double"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Types.NN")
                        (ModuleName "Torch.Types.TH"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Random.TH")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Random.TH")
                        (ModuleName
                          "Torch.FFI.TH.Double.TensorRandom"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Random.THC")
                        (ModuleName
                          "Torch.Undefined.Double.Tensor.Random.THC")]}}]}},
        condTreeConstraints = [
          Dependency
            (PackageName "base")
            (IntersectVersionRanges
              (UnionVersionRanges
                (ThisVersion (mkVersion [4, 7]))
                (LaterVersion
                  (mkVersion [4, 7])))
              (EarlierVersion
                (mkVersion [5])))
            mainLibSet,
          Dependency
            (PackageName
              "hasktorch-types-th")
            (IntersectVersionRanges
              (UnionVersionRanges
                (ThisVersion
                  (mkVersion [0, 0, 1]))
                (LaterVersion
                  (mkVersion [0, 0, 1])))
              (EarlierVersion
                (mkVersion [0, 0, 2])))
            mainLibSet,
          Dependency
            (PackageName "dimensions")
            (UnionVersionRanges
              (ThisVersion (mkVersion [1, 0]))
              (LaterVersion
                (mkVersion [1, 0])))
            mainLibSet,
          Dependency
            (PackageName "hasktorch-ffi-th")
            (IntersectVersionRanges
              (UnionVersionRanges
                (ThisVersion
                  (mkVersion [0, 0, 1]))
                (LaterVersion
                  (mkVersion [0, 0, 1])))
              (EarlierVersion
                (mkVersion [0, 0, 2])))
            mainLibSet,
          Dependency
            (PackageName
              "hasktorch-types-th")
            (IntersectVersionRanges
              (UnionVersionRanges
                (ThisVersion
                  (mkVersion [0, 0, 1]))
                (LaterVersion
                  (mkVersion [0, 0, 1])))
              (EarlierVersion
                (mkVersion [0, 0, 2])))
            mainLibSet,
          Dependency
            (PackageName "safe-exceptions")
            (UnionVersionRanges
              (ThisVersion
                (mkVersion [0, 1, 0]))
              (LaterVersion
                (mkVersion [0, 1, 0])))
            mainLibSet,
          Dependency
            (PackageName "singletons")
            (UnionVersionRanges
              (ThisVersion (mkVersion [2, 2]))
              (LaterVersion
                (mkVersion [2, 2])))
            mainLibSet,
          Dependency
            (PackageName "text")
            (UnionVersionRanges
              (ThisVersion
                (mkVersion [1, 2, 2]))
              (LaterVersion
                (mkVersion [1, 2, 2])))
            mainLibSet,
          Dependency
            (PackageName "hasktorch")
            (OrLaterVersion (mkVersion [0]))
            (NonEmptySet.fromNonEmpty
              (NE.fromList
                [
                  LSubLibName
                    (UnqualComponentName
                      "hasktorch-indef-floating")])),
          Dependency
            (PackageName "hasktorch")
            (OrLaterVersion (mkVersion [0]))
            (NonEmptySet.fromNonEmpty
              (NE.fromList
                [
                  LSubLibName
                    (UnqualComponentName
                      "hasktorch-indef-signed")]))],
        condTreeComponents =
        [
          CondBranch {
            condBranchCondition =
            `Var (PackageFlag (FlagName "lite"))`,
            condBranchIfTrue = CondNode {
              condTreeData = Library {
                libName = LSubLibName
                  (UnqualComponentName
                    "hasktorch-cpu"),
                exposedModules = [],
                reexportedModules = [],
                signatures = [],
                libExposed = True,
                libVisibility =
                LibraryVisibilityPrivate,
                libBuildInfo = BuildInfo {
                  buildable = True,
                  buildTools = [],
                  buildToolDepends = [],
                  cppOptions = [],
                  asmOptions = [],
                  cmmOptions = [],
                  ccOptions = [],
                  cxxOptions = [],
                  ldOptions = [],
                  hsc2hsOptions = [],
                  pkgconfigDepends = [],
                  frameworks = [],
                  extraFrameworkDirs = [],
                  asmSources = [],
                  cmmSources = [],
                  cSources = [],
                  cxxSources = [],
                  jsSources = [],
                  hsSourceDirs = [],
                  otherModules = [],
                  virtualModules = [],
                  autogenModules = [],
                  defaultLanguage = Nothing,
                  otherLanguages = [],
                  defaultExtensions = [],
                  otherExtensions = [],
                  oldExtensions = [],
                  extraLibs = [],
                  extraLibsStatic = [],
                  extraGHCiLibs = [],
                  extraBundledLibs = [],
                  extraLibFlavours = [],
                  extraDynLibFlavours = [],
                  extraLibDirs = [],
                  extraLibDirsStatic = [],
                  includeDirs = [],
                  includes = [],
                  autogenIncludes = [],
                  installIncludes = [],
                  options = PerCompilerFlavor
                    []
                    [],
                  profOptions = PerCompilerFlavor
                    []
                    [],
                  sharedOptions =
                  PerCompilerFlavor [] [],
                  staticOptions =
                  PerCompilerFlavor [] [],
                  customFieldsBI = [],
                  targetBuildDepends = [],
                  mixins = []}},
              condTreeConstraints = [],
              condTreeComponents = []},
            condBranchIfFalse =
            Just
              CondNode {
                condTreeData =
                Library {
                  libName = LSubLibName
                    (UnqualComponentName
                      "hasktorch-cpu"),
                  exposedModules = [
                    ModuleName "Torch.Byte",
                    ModuleName "Torch.Byte.Dynamic",
                    ModuleName "Torch.Byte.Storage",
                    ModuleName "Torch.Char",
                    ModuleName "Torch.Char.Dynamic",
                    ModuleName "Torch.Char.Storage",
                    ModuleName "Torch.Short",
                    ModuleName
                      "Torch.Short.Dynamic",
                    ModuleName
                      "Torch.Short.Storage",
                    ModuleName "Torch.Int",
                    ModuleName "Torch.Int.Dynamic",
                    ModuleName "Torch.Int.Storage",
                    ModuleName "Torch.Float",
                    ModuleName
                      "Torch.Float.Dynamic",
                    ModuleName
                      "Torch.Float.Storage"],
                  reexportedModules = [],
                  signatures = [],
                  libExposed = True,
                  libVisibility =
                  LibraryVisibilityPrivate,
                  libBuildInfo =
                  BuildInfo {
                    buildable = True,
                    buildTools = [],
                    buildToolDepends = [],
                    cppOptions = [],
                    asmOptions = [],
                    cmmOptions = [],
                    ccOptions = [],
                    cxxOptions = [],
                    ldOptions = [],
                    hsc2hsOptions = [],
                    pkgconfigDepends = [],
                    frameworks = [],
                    extraFrameworkDirs = [],
                    asmSources = [],
                    cmmSources = [],
                    cSources = [],
                    cxxSources = [],
                    jsSources = [],
                    hsSourceDirs = [],
                    otherModules = [],
                    virtualModules = [],
                    autogenModules = [],
                    defaultLanguage = Nothing,
                    otherLanguages = [],
                    defaultExtensions = [],
                    otherExtensions = [],
                    oldExtensions = [],
                    extraLibs = [],
                    extraLibsStatic = [],
                    extraGHCiLibs = [],
                    extraBundledLibs = [],
                    extraLibFlavours = [],
                    extraDynLibFlavours = [],
                    extraLibDirs = [],
                    extraLibDirsStatic = [],
                    includeDirs = [],
                    includes = [],
                    autogenIncludes = [],
                    installIncludes = [],
                    options = PerCompilerFlavor
                      []
                      [],
                    profOptions = PerCompilerFlavor
                      []
                      [],
                    sharedOptions =
                    PerCompilerFlavor [] [],
                    staticOptions =
                    PerCompilerFlavor [] [],
                    customFieldsBI = [],
                    targetBuildDepends = [
                      Dependency
                        (PackageName "hasktorch")
                        (OrLaterVersion (mkVersion [0]))
                        (NonEmptySet.fromNonEmpty
                          (NE.fromList
                            [
                              LSubLibName
                                (UnqualComponentName
                                  "hasktorch-indef-unsigned")]))],
                    mixins =
                    [
                      Mixin {
                        mixinPackageName = PackageName
                          "hasktorch",
                        mixinLibraryName = LSubLibName
                          (UnqualComponentName
                            "hasktorch-indef-unsigned"),
                        mixinIncludeRenaming =
                        IncludeRenaming {
                          includeProvidesRn =
                          ModuleRenaming
                            [
                              _×_
                                (ModuleName
                                  "Torch.Indef.Storage")
                                (ModuleName
                                  "Torch.Indef.Byte.Storage"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Storage.Copy")
                                (ModuleName
                                  "Torch.Indef.Byte.Storage.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor")
                                (ModuleName
                                  "Torch.Indef.Byte.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Copy")
                                (ModuleName
                                  "Torch.Indef.Byte.Tensor.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Index")
                                (ModuleName
                                  "Torch.Indef.Byte.Tensor.Index"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Masked")
                                (ModuleName
                                  "Torch.Indef.Byte.Tensor.Masked"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math")
                                (ModuleName
                                  "Torch.Indef.Byte.Tensor.Math"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.Indef.Byte.Tensor.Math.Compare"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.Indef.Byte.Tensor.Math.CompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.Indef.Byte.Tensor.Math.Pairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.Indef.Byte.Tensor.Math.Pointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.Indef.Byte.Tensor.Math.Reduce"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.Indef.Byte.Tensor.Math.Scan"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Mode")
                                (ModuleName
                                  "Torch.Indef.Byte.Tensor.Mode"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.Indef.Byte.Tensor.ScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Sort")
                                (ModuleName
                                  "Torch.Indef.Byte.Tensor.Sort"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.TopK")
                                (ModuleName
                                  "Torch.Indef.Byte.Tensor.TopK"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor")
                                (ModuleName
                                  "Torch.Indef.Byte.Dynamic.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Copy")
                                (ModuleName
                                  "Torch.Indef.Byte.Dynamic.Tensor.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Index")
                                (ModuleName
                                  "Torch.Indef.Byte.Dynamic.Tensor.Index"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Masked")
                                (ModuleName
                                  "Torch.Indef.Byte.Dynamic.Tensor.Masked"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math")
                                (ModuleName
                                  "Torch.Indef.Byte.Dynamic.Tensor.Math"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.Indef.Byte.Dynamic.Tensor.Math.Compare"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.Indef.Byte.Dynamic.Tensor.Math.CompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.Indef.Byte.Dynamic.Tensor.Math.Pairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.Indef.Byte.Dynamic.Tensor.Math.Pointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.Indef.Byte.Dynamic.Tensor.Math.Reduce"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.Indef.Byte.Dynamic.Tensor.Math.Scan"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Mode")
                                (ModuleName
                                  "Torch.Indef.Byte.Dynamic.Tensor.Mode"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.Indef.Byte.Dynamic.Tensor.ScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Sort")
                                (ModuleName
                                  "Torch.Indef.Byte.Dynamic.Tensor.Sort"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.TopK")
                                (ModuleName
                                  "Torch.Indef.Byte.Dynamic.Tensor.TopK"),
                              _×_
                                (ModuleName "Torch.Indef.Types")
                                (ModuleName "Torch.Byte.Types"),
                              _×_
                                (ModuleName "Torch.Indef.Index")
                                (ModuleName "Torch.Byte.Index"),
                              _×_
                                (ModuleName "Torch.Indef.Mask")
                                (ModuleName "Torch.Byte.Mask")],
                          includeRequiresRn =
                          ModuleRenaming
                            [
                              _×_
                                (ModuleName
                                  "Torch.Sig.Index.Tensor")
                                (ModuleName
                                  "Torch.FFI.TH.Long.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Index.TensorFree")
                                (ModuleName
                                  "Torch.FFI.TH.Long.FreeTensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.Tensor")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.TensorFree")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.FreeTensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.MathReduce")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.TensorMath"),
                              _×_
                                (ModuleName "Torch.Sig.State")
                                (ModuleName "Torch.Types.TH"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Types.Global")
                                (ModuleName "Torch.Types.TH"),
                              _×_
                                (ModuleName "Torch.Sig.Types")
                                (ModuleName
                                  "Torch.Types.TH.Byte"),
                              _×_
                                (ModuleName "Torch.Sig.Storage")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.Storage"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Storage.Copy")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.StorageCopy"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Storage.Memory")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.FreeStorage"),
                              _×_
                                (ModuleName "Torch.Sig.Tensor")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Copy")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.TensorCopy"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Memory")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.FreeTensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Index")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Masked")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Mode")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Sort")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.TopK")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.TensorMath")]}},
                      Mixin {
                        mixinPackageName = PackageName
                          "hasktorch",
                        mixinLibraryName = LSubLibName
                          (UnqualComponentName
                            "hasktorch-indef-unsigned"),
                        mixinIncludeRenaming =
                        IncludeRenaming {
                          includeProvidesRn =
                          ModuleRenaming
                            [
                              _×_
                                (ModuleName
                                  "Torch.Indef.Storage")
                                (ModuleName
                                  "Torch.Indef.Char.Storage"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Storage.Copy")
                                (ModuleName
                                  "Torch.Indef.Char.Storage.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor")
                                (ModuleName
                                  "Torch.Indef.Char.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Copy")
                                (ModuleName
                                  "Torch.Indef.Char.Tensor.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Index")
                                (ModuleName
                                  "Torch.Indef.Char.Tensor.Index"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Masked")
                                (ModuleName
                                  "Torch.Indef.Char.Tensor.Masked"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math")
                                (ModuleName
                                  "Torch.Indef.Char.Tensor.Math"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.Indef.Char.Tensor.Math.Compare"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.Indef.Char.Tensor.Math.CompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.Indef.Char.Tensor.Math.Pairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.Indef.Char.Tensor.Math.Pointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.Indef.Char.Tensor.Math.Reduce"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.Indef.Char.Tensor.Math.Scan"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Mode")
                                (ModuleName
                                  "Torch.Indef.Char.Tensor.Mode"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.Indef.Char.Tensor.ScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Sort")
                                (ModuleName
                                  "Torch.Indef.Char.Tensor.Sort"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.TopK")
                                (ModuleName
                                  "Torch.Indef.Char.Tensor.TopK"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor")
                                (ModuleName
                                  "Torch.Indef.Char.Dynamic.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Copy")
                                (ModuleName
                                  "Torch.Indef.Char.Dynamic.Tensor.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Index")
                                (ModuleName
                                  "Torch.Indef.Char.Dynamic.Tensor.Index"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Masked")
                                (ModuleName
                                  "Torch.Indef.Char.Dynamic.Tensor.Masked"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math")
                                (ModuleName
                                  "Torch.Indef.Char.Dynamic.Tensor.Math"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.Indef.Char.Dynamic.Tensor.Math.Compare"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.Indef.Char.Dynamic.Tensor.Math.CompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.Indef.Char.Dynamic.Tensor.Math.Pairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.Indef.Char.Dynamic.Tensor.Math.Pointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.Indef.Char.Dynamic.Tensor.Math.Reduce"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.Indef.Char.Dynamic.Tensor.Math.Scan"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Mode")
                                (ModuleName
                                  "Torch.Indef.Char.Dynamic.Tensor.Mode"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.Indef.Char.Dynamic.Tensor.ScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Sort")
                                (ModuleName
                                  "Torch.Indef.Char.Dynamic.Tensor.Sort"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.TopK")
                                (ModuleName
                                  "Torch.Indef.Char.Dynamic.Tensor.TopK"),
                              _×_
                                (ModuleName "Torch.Indef.Types")
                                (ModuleName "Torch.Char.Types"),
                              _×_
                                (ModuleName "Torch.Indef.Index")
                                (ModuleName "Torch.Char.Index"),
                              _×_
                                (ModuleName "Torch.Indef.Mask")
                                (ModuleName "Torch.Char.Mask")],
                          includeRequiresRn =
                          ModuleRenaming
                            [
                              _×_
                                (ModuleName
                                  "Torch.Sig.Index.Tensor")
                                (ModuleName
                                  "Torch.FFI.TH.Long.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Index.TensorFree")
                                (ModuleName
                                  "Torch.FFI.TH.Long.FreeTensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.Tensor")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.TensorFree")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.FreeTensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.MathReduce")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.TensorMath"),
                              _×_
                                (ModuleName "Torch.Sig.State")
                                (ModuleName "Torch.Types.TH"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Types.Global")
                                (ModuleName "Torch.Types.TH"),
                              _×_
                                (ModuleName "Torch.Sig.Types")
                                (ModuleName
                                  "Torch.Types.TH.Char"),
                              _×_
                                (ModuleName "Torch.Sig.Storage")
                                (ModuleName
                                  "Torch.FFI.TH.Char.Storage"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Storage.Copy")
                                (ModuleName
                                  "Torch.FFI.TH.Char.StorageCopy"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Storage.Memory")
                                (ModuleName
                                  "Torch.FFI.TH.Char.FreeStorage"),
                              _×_
                                (ModuleName "Torch.Sig.Tensor")
                                (ModuleName
                                  "Torch.FFI.TH.Char.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Copy")
                                (ModuleName
                                  "Torch.FFI.TH.Char.TensorCopy"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Memory")
                                (ModuleName
                                  "Torch.FFI.TH.Char.FreeTensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Index")
                                (ModuleName
                                  "Torch.FFI.TH.Char.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Masked")
                                (ModuleName
                                  "Torch.FFI.TH.Char.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math")
                                (ModuleName
                                  "Torch.FFI.TH.Char.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.FFI.TH.Char.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.FFI.TH.Char.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.FFI.TH.Char.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.FFI.TH.Char.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.FFI.TH.Char.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.FFI.TH.Char.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Mode")
                                (ModuleName
                                  "Torch.FFI.TH.Char.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.FFI.TH.Char.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Sort")
                                (ModuleName
                                  "Torch.FFI.TH.Char.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.TopK")
                                (ModuleName
                                  "Torch.FFI.TH.Char.TensorMath")]}},
                      Mixin {
                        mixinPackageName = PackageName
                          "hasktorch",
                        mixinLibraryName = LSubLibName
                          (UnqualComponentName
                            "hasktorch-indef-signed"),
                        mixinIncludeRenaming =
                        IncludeRenaming {
                          includeProvidesRn =
                          ModuleRenaming
                            [
                              _×_
                                (ModuleName
                                  "Torch.Indef.Storage")
                                (ModuleName
                                  "Torch.Indef.Short.Storage"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Storage.Copy")
                                (ModuleName
                                  "Torch.Indef.Short.Storage.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor")
                                (ModuleName
                                  "Torch.Indef.Short.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Copy")
                                (ModuleName
                                  "Torch.Indef.Short.Tensor.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Index")
                                (ModuleName
                                  "Torch.Indef.Short.Tensor.Index"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Masked")
                                (ModuleName
                                  "Torch.Indef.Short.Tensor.Masked"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math")
                                (ModuleName
                                  "Torch.Indef.Short.Tensor.Math"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.Indef.Short.Tensor.Math.Compare"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.Indef.Short.Tensor.Math.CompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.Indef.Short.Tensor.Math.Pairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.Indef.Short.Tensor.Math.Pointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.Indef.Short.Tensor.Math.Reduce"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.Indef.Short.Tensor.Math.Scan"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Mode")
                                (ModuleName
                                  "Torch.Indef.Short.Tensor.Mode"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.Indef.Short.Tensor.ScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Sort")
                                (ModuleName
                                  "Torch.Indef.Short.Tensor.Sort"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.TopK")
                                (ModuleName
                                  "Torch.Indef.Short.Tensor.TopK"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor")
                                (ModuleName
                                  "Torch.Indef.Short.Dynamic.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Copy")
                                (ModuleName
                                  "Torch.Indef.Short.Dynamic.Tensor.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Index")
                                (ModuleName
                                  "Torch.Indef.Short.Dynamic.Tensor.Index"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Masked")
                                (ModuleName
                                  "Torch.Indef.Short.Dynamic.Tensor.Masked"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math")
                                (ModuleName
                                  "Torch.Indef.Short.Dynamic.Tensor.Math"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.Indef.Short.Dynamic.Tensor.Math.Compare"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.Indef.Short.Dynamic.Tensor.Math.CompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.Indef.Short.Dynamic.Tensor.Math.Pairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.Indef.Short.Dynamic.Tensor.Math.Pointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.Indef.Short.Dynamic.Tensor.Math.Reduce"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.Indef.Short.Dynamic.Tensor.Math.Scan"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Mode")
                                (ModuleName
                                  "Torch.Indef.Short.Dynamic.Tensor.Mode"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.Indef.Short.Dynamic.Tensor.ScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Sort")
                                (ModuleName
                                  "Torch.Indef.Short.Dynamic.Tensor.Sort"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.TopK")
                                (ModuleName
                                  "Torch.Indef.Short.Dynamic.Tensor.TopK"),
                              _×_
                                (ModuleName "Torch.Indef.Types")
                                (ModuleName
                                  "Torch.Short.Types"),
                              _×_
                                (ModuleName "Torch.Indef.Index")
                                (ModuleName
                                  "Torch.Short.Index"),
                              _×_
                                (ModuleName "Torch.Indef.Mask")
                                (ModuleName "Torch.Short.Mask"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pointwise.Signed")
                                (ModuleName
                                  "Torch.Indef.Short.Tensor.Math.Pointwise.Signed"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pointwise.Signed")
                                (ModuleName
                                  "Torch.Indef.Short.Dynamic.Tensor.Math.Pointwise.Signed")],
                          includeRequiresRn =
                          ModuleRenaming
                            [
                              _×_
                                (ModuleName
                                  "Torch.Sig.Index.Tensor")
                                (ModuleName
                                  "Torch.FFI.TH.Long.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Index.TensorFree")
                                (ModuleName
                                  "Torch.FFI.TH.Long.FreeTensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.Tensor")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.TensorFree")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.FreeTensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.MathReduce")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.TensorMath"),
                              _×_
                                (ModuleName "Torch.Sig.State")
                                (ModuleName "Torch.Types.TH"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Types.Global")
                                (ModuleName "Torch.Types.TH"),
                              _×_
                                (ModuleName "Torch.Sig.Types")
                                (ModuleName
                                  "Torch.Types.TH.Short"),
                              _×_
                                (ModuleName "Torch.Sig.Storage")
                                (ModuleName
                                  "Torch.FFI.TH.Short.Storage"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Storage.Copy")
                                (ModuleName
                                  "Torch.FFI.TH.Short.StorageCopy"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Storage.Memory")
                                (ModuleName
                                  "Torch.FFI.TH.Short.FreeStorage"),
                              _×_
                                (ModuleName "Torch.Sig.Tensor")
                                (ModuleName
                                  "Torch.FFI.TH.Short.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Copy")
                                (ModuleName
                                  "Torch.FFI.TH.Short.TensorCopy"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Memory")
                                (ModuleName
                                  "Torch.FFI.TH.Short.FreeTensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Index")
                                (ModuleName
                                  "Torch.FFI.TH.Short.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Masked")
                                (ModuleName
                                  "Torch.FFI.TH.Short.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math")
                                (ModuleName
                                  "Torch.FFI.TH.Short.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.FFI.TH.Short.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.FFI.TH.Short.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.FFI.TH.Short.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.FFI.TH.Short.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.FFI.TH.Short.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.FFI.TH.Short.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Mode")
                                (ModuleName
                                  "Torch.FFI.TH.Short.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.FFI.TH.Short.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Sort")
                                (ModuleName
                                  "Torch.FFI.TH.Short.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.TopK")
                                (ModuleName
                                  "Torch.FFI.TH.Short.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pointwise.Signed")
                                (ModuleName
                                  "Torch.FFI.TH.Short.TensorMath")]}},
                      Mixin {
                        mixinPackageName = PackageName
                          "hasktorch",
                        mixinLibraryName = LSubLibName
                          (UnqualComponentName
                            "hasktorch-indef-signed"),
                        mixinIncludeRenaming =
                        IncludeRenaming {
                          includeProvidesRn =
                          ModuleRenaming
                            [
                              _×_
                                (ModuleName
                                  "Torch.Indef.Storage")
                                (ModuleName
                                  "Torch.Indef.Int.Storage"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Storage.Copy")
                                (ModuleName
                                  "Torch.Indef.Int.Storage.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor")
                                (ModuleName
                                  "Torch.Indef.Int.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Copy")
                                (ModuleName
                                  "Torch.Indef.Int.Tensor.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Index")
                                (ModuleName
                                  "Torch.Indef.Int.Tensor.Index"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Masked")
                                (ModuleName
                                  "Torch.Indef.Int.Tensor.Masked"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math")
                                (ModuleName
                                  "Torch.Indef.Int.Tensor.Math"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.Indef.Int.Tensor.Math.Compare"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.Indef.Int.Tensor.Math.CompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.Indef.Int.Tensor.Math.Pairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.Indef.Int.Tensor.Math.Pointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.Indef.Int.Tensor.Math.Reduce"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.Indef.Int.Tensor.Math.Scan"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Mode")
                                (ModuleName
                                  "Torch.Indef.Int.Tensor.Mode"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.Indef.Int.Tensor.ScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Sort")
                                (ModuleName
                                  "Torch.Indef.Int.Tensor.Sort"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.TopK")
                                (ModuleName
                                  "Torch.Indef.Int.Tensor.TopK"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor")
                                (ModuleName
                                  "Torch.Indef.Int.Dynamic.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Copy")
                                (ModuleName
                                  "Torch.Indef.Int.Dynamic.Tensor.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Index")
                                (ModuleName
                                  "Torch.Indef.Int.Dynamic.Tensor.Index"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Masked")
                                (ModuleName
                                  "Torch.Indef.Int.Dynamic.Tensor.Masked"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math")
                                (ModuleName
                                  "Torch.Indef.Int.Dynamic.Tensor.Math"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.Indef.Int.Dynamic.Tensor.Math.Compare"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.Indef.Int.Dynamic.Tensor.Math.CompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.Indef.Int.Dynamic.Tensor.Math.Pairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.Indef.Int.Dynamic.Tensor.Math.Pointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.Indef.Int.Dynamic.Tensor.Math.Reduce"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.Indef.Int.Dynamic.Tensor.Math.Scan"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Mode")
                                (ModuleName
                                  "Torch.Indef.Int.Dynamic.Tensor.Mode"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.Indef.Int.Dynamic.Tensor.ScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Sort")
                                (ModuleName
                                  "Torch.Indef.Int.Dynamic.Tensor.Sort"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.TopK")
                                (ModuleName
                                  "Torch.Indef.Int.Dynamic.Tensor.TopK"),
                              _×_
                                (ModuleName "Torch.Indef.Types")
                                (ModuleName "Torch.Int.Types"),
                              _×_
                                (ModuleName "Torch.Indef.Index")
                                (ModuleName "Torch.Int.Index"),
                              _×_
                                (ModuleName "Torch.Indef.Mask")
                                (ModuleName "Torch.Int.Mask"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pointwise.Signed")
                                (ModuleName
                                  "Torch.Indef.Int.Tensor.Math.Pointwise.Signed"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pointwise.Signed")
                                (ModuleName
                                  "Torch.Indef.Int.Dynamic.Tensor.Math.Pointwise.Signed")],
                          includeRequiresRn =
                          ModuleRenaming
                            [
                              _×_
                                (ModuleName
                                  "Torch.Sig.Index.Tensor")
                                (ModuleName
                                  "Torch.FFI.TH.Long.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Index.TensorFree")
                                (ModuleName
                                  "Torch.FFI.TH.Long.FreeTensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.Tensor")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.TensorFree")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.FreeTensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.MathReduce")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.TensorMath"),
                              _×_
                                (ModuleName "Torch.Sig.State")
                                (ModuleName "Torch.Types.TH"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Types.Global")
                                (ModuleName "Torch.Types.TH"),
                              _×_
                                (ModuleName "Torch.Sig.Types")
                                (ModuleName
                                  "Torch.Types.TH.Int"),
                              _×_
                                (ModuleName "Torch.Sig.Storage")
                                (ModuleName
                                  "Torch.FFI.TH.Int.Storage"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Storage.Copy")
                                (ModuleName
                                  "Torch.FFI.TH.Int.StorageCopy"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Storage.Memory")
                                (ModuleName
                                  "Torch.FFI.TH.Int.FreeStorage"),
                              _×_
                                (ModuleName "Torch.Sig.Tensor")
                                (ModuleName
                                  "Torch.FFI.TH.Int.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Copy")
                                (ModuleName
                                  "Torch.FFI.TH.Int.TensorCopy"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Memory")
                                (ModuleName
                                  "Torch.FFI.TH.Int.FreeTensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Index")
                                (ModuleName
                                  "Torch.FFI.TH.Int.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Masked")
                                (ModuleName
                                  "Torch.FFI.TH.Int.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math")
                                (ModuleName
                                  "Torch.FFI.TH.Int.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.FFI.TH.Int.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.FFI.TH.Int.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.FFI.TH.Int.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.FFI.TH.Int.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.FFI.TH.Int.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.FFI.TH.Int.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Mode")
                                (ModuleName
                                  "Torch.FFI.TH.Int.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.FFI.TH.Int.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Sort")
                                (ModuleName
                                  "Torch.FFI.TH.Int.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.TopK")
                                (ModuleName
                                  "Torch.FFI.TH.Int.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pointwise.Signed")
                                (ModuleName
                                  "Torch.FFI.TH.Int.TensorMath")]}},
                      Mixin {
                        mixinPackageName = PackageName
                          "hasktorch",
                        mixinLibraryName = LSubLibName
                          (UnqualComponentName
                            "hasktorch-indef-floating"),
                        mixinIncludeRenaming =
                        IncludeRenaming {
                          includeProvidesRn =
                          ModuleRenaming
                            [
                              _×_
                                (ModuleName
                                  "Torch.Indef.Storage")
                                (ModuleName
                                  "Torch.Indef.Float.Storage"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Storage.Copy")
                                (ModuleName
                                  "Torch.Indef.Float.Storage.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Copy")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Index")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Index"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Masked")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Masked"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math.Compare"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math.CompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math.Pairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math.Pointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math.Reduce"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math.Scan"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Mode")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Mode"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.ScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Sort")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Sort"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.TopK")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.TopK"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Copy")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Index")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Index"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Masked")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Masked"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math.Compare"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math.CompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math.Pairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math.Pointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math.Reduce"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math.Scan"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Mode")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Mode"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.ScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Sort")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Sort"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.TopK")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.TopK"),
                              _×_
                                (ModuleName "Torch.Indef.Types")
                                (ModuleName
                                  "Torch.Float.Types"),
                              _×_
                                (ModuleName "Torch.Indef.Index")
                                (ModuleName
                                  "Torch.Float.Index"),
                              _×_
                                (ModuleName "Torch.Indef.Mask")
                                (ModuleName "Torch.Float.Mask"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pointwise.Signed")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math.Pointwise.Signed"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pointwise.Signed")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math.Pointwise.Signed"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Blas")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math.Blas"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Lapack")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math.Lapack"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pointwise.Floating")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math.Pointwise.Floating"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Reduce.Floating")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math.Reduce.Floating"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Floating")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math.Floating"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Blas")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math.Blas"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Lapack")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math.Lapack"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pointwise.Floating")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math.Pointwise.Floating"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Reduce.Floating")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math.Reduce.Floating"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Floating")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math.Floating"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Random.TH")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Random.TH"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Random.TH")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math.Random.TH"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Random.TH")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Random.TH"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Random.TH")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math.Random.TH"),
                              _×_
                                (ModuleName
                                  "Torch.Undefined.Tensor.Random.THC")
                                (ModuleName
                                  "Torch.Undefined.Float.Tensor.Random.THC"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Storage")
                                (ModuleName
                                  "Torch.Indef.Float.Storage"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Storage.Copy")
                                (ModuleName
                                  "Torch.Indef.Float.Storage.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Copy")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Index")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Index"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Masked")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Masked"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math.Compare"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math.CompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math.Pairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math.Pointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math.Reduce"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math.Scan"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Mode")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Mode"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.ScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Sort")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Sort"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.TopK")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.TopK"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Copy")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Index")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Index"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Masked")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Masked"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math.Compare"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math.CompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math.Pairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math.Pointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math.Reduce"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math.Scan"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Mode")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Mode"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.ScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Sort")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Sort"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.TopK")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.TopK"),
                              _×_
                                (ModuleName "Torch.Indef.Types")
                                (ModuleName
                                  "Torch.Float.Types"),
                              _×_
                                (ModuleName "Torch.Indef.Index")
                                (ModuleName
                                  "Torch.Float.Index"),
                              _×_
                                (ModuleName "Torch.Indef.Mask")
                                (ModuleName "Torch.Float.Mask"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pointwise.Signed")
                                (ModuleName
                                  "Torch.Indef.Float.Tensor.Math.Pointwise.Signed"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pointwise.Signed")
                                (ModuleName
                                  "Torch.Indef.Float.Dynamic.Tensor.Math.Pointwise.Signed"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.NN")
                                (ModuleName
                                  "Torch.Float.Dynamic.NN"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.NN.Activation")
                                (ModuleName
                                  "Torch.Float.Dynamic.NN.Activation"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.NN.Pooling")
                                (ModuleName
                                  "Torch.Float.Dynamic.NN.Pooling"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.NN.Criterion")
                                (ModuleName
                                  "Torch.Float.Dynamic.NN.Criterion"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.NN")
                                (ModuleName "Torch.Float.NN"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.NN")
                                (ModuleName "Torch.Float.NN"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.NN.Activation")
                                (ModuleName
                                  "Torch.Float.NN.Activation"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.NN.Backprop")
                                (ModuleName
                                  "Torch.Float.NN.Backprop"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.NN.Conv1d")
                                (ModuleName
                                  "Torch.Float.NN.Conv1d"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.NN.Conv2d")
                                (ModuleName
                                  "Torch.Float.NN.Conv2d"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.NN.Criterion")
                                (ModuleName
                                  "Torch.Float.NN.Criterion"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.NN.Layers")
                                (ModuleName
                                  "Torch.Float.NN.Layers"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.NN.Linear")
                                (ModuleName
                                  "Torch.Float.NN.Linear"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.NN.Math")
                                (ModuleName
                                  "Torch.Float.NN.Math"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.NN.Padding")
                                (ModuleName
                                  "Torch.Float.NN.Padding"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.NN.Pooling")
                                (ModuleName
                                  "Torch.Float.NN.Pooling"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.NN.Sampling")
                                (ModuleName
                                  "Torch.Float.NN.Sampling")],
                          includeRequiresRn =
                          ModuleRenaming
                            [
                              _×_
                                (ModuleName
                                  "Torch.Sig.Index.Tensor")
                                (ModuleName
                                  "Torch.FFI.TH.Long.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Index.TensorFree")
                                (ModuleName
                                  "Torch.FFI.TH.Long.FreeTensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.Tensor")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.TensorFree")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.FreeTensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.MathReduce")
                                (ModuleName
                                  "Torch.FFI.TH.Byte.TensorMath"),
                              _×_
                                (ModuleName "Torch.Sig.State")
                                (ModuleName "Torch.Types.TH"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Types.Global")
                                (ModuleName "Torch.Types.TH"),
                              _×_
                                (ModuleName "Torch.Sig.Types")
                                (ModuleName
                                  "Torch.Types.TH.Float"),
                              _×_
                                (ModuleName "Torch.Sig.Storage")
                                (ModuleName
                                  "Torch.FFI.TH.Float.Storage"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Storage.Copy")
                                (ModuleName
                                  "Torch.FFI.TH.Float.StorageCopy"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Storage.Memory")
                                (ModuleName
                                  "Torch.FFI.TH.Float.FreeStorage"),
                              _×_
                                (ModuleName "Torch.Sig.Tensor")
                                (ModuleName
                                  "Torch.FFI.TH.Float.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Copy")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorCopy"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Memory")
                                (ModuleName
                                  "Torch.FFI.TH.Float.FreeTensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Index")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Masked")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Mode")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Sort")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.TopK")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pointwise.Signed")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pointwise.Floating")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Reduce.Floating")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Floating")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Blas")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Lapack")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorLapack"),
                              _×_
                                (ModuleName "Torch.Sig.NN")
                                (ModuleName
                                  "Torch.FFI.TH.NN.Float"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Types.NN")
                                (ModuleName "Torch.Types.TH"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Random.TH")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Random.TH")
                                (ModuleName
                                  "Torch.FFI.TH.Float.TensorRandom"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Random.THC")
                                (ModuleName
                                  "Torch.Undefined.Float.Tensor.Random.THC")]}}]}},
                condTreeConstraints = [
                  Dependency
                    (PackageName "hasktorch")
                    (OrLaterVersion (mkVersion [0]))
                    (NonEmptySet.fromNonEmpty
                      (NE.fromList
                        [
                          LSubLibName
                            (UnqualComponentName
                              "hasktorch-indef-unsigned")]))],
                condTreeComponents = []}}]},
    _×_
      (UnqualComponentName
        "hasktorch-gpu")
      CondNode {
        condTreeData =
        Library {
          libName = LSubLibName
            (UnqualComponentName
              "hasktorch-gpu"),
          exposedModules = [
            ModuleName "Torch.Cuda.Long",
            ModuleName
              "Torch.Cuda.Long.Dynamic",
            ModuleName
              "Torch.Cuda.Long.Storage",
            ModuleName "Torch.Cuda.Double",
            ModuleName
              "Torch.Cuda.Double.Dynamic",
            ModuleName
              "Torch.Cuda.Double.Storage"],
          reexportedModules = [
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Cuda.Double.NN",
              moduleReexportName = ModuleName
                "Torch.Cuda.Double.NN"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Cuda.Double.NN.Activation",
              moduleReexportName = ModuleName
                "Torch.Cuda.Double.NN.Activation"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Cuda.Double.NN.Backprop",
              moduleReexportName = ModuleName
                "Torch.Cuda.Double.NN.Backprop"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Cuda.Double.NN.Conv1d",
              moduleReexportName = ModuleName
                "Torch.Cuda.Double.NN.Conv1d"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Cuda.Double.NN.Conv2d",
              moduleReexportName = ModuleName
                "Torch.Cuda.Double.NN.Conv2d"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Cuda.Double.NN.Criterion",
              moduleReexportName = ModuleName
                "Torch.Cuda.Double.NN.Criterion"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Cuda.Double.NN.Layers",
              moduleReexportName = ModuleName
                "Torch.Cuda.Double.NN.Layers"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Cuda.Double.NN.Linear",
              moduleReexportName = ModuleName
                "Torch.Cuda.Double.NN.Linear"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Cuda.Double.NN.Math",
              moduleReexportName = ModuleName
                "Torch.Cuda.Double.NN.Math"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Cuda.Double.NN.Padding",
              moduleReexportName = ModuleName
                "Torch.Cuda.Double.NN.Padding"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Cuda.Double.NN.Pooling",
              moduleReexportName = ModuleName
                "Torch.Cuda.Double.NN.Pooling"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Cuda.Double.NN.Sampling",
              moduleReexportName = ModuleName
                "Torch.Cuda.Double.NN.Sampling"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Cuda.Double.Dynamic.NN",
              moduleReexportName = ModuleName
                "Torch.Cuda.Double.Dynamic.NN"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Cuda.Double.Dynamic.NN.Activation",
              moduleReexportName = ModuleName
                "Torch.Cuda.Double.Dynamic.NN.Activation"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Cuda.Double.Dynamic.NN.Pooling",
              moduleReexportName = ModuleName
                "Torch.Cuda.Double.Dynamic.NN.Pooling"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Cuda.Double.Dynamic.NN.Criterion",
              moduleReexportName = ModuleName
                "Torch.Cuda.Double.Dynamic.NN.Criterion"}],
          signatures = [],
          libExposed = True,
          libVisibility =
          LibraryVisibilityPrivate,
          libBuildInfo =
          BuildInfo {
            buildable = True,
            buildTools = [],
            buildToolDepends = [],
            cppOptions = [
              "-DCUDA",
              "-DHASKTORCH_INTERNAL_CUDA"],
            asmOptions = [],
            cmmOptions = [],
            ccOptions = [],
            cxxOptions = [],
            ldOptions = [],
            hsc2hsOptions = [],
            pkgconfigDepends = [],
            frameworks = [],
            extraFrameworkDirs = [],
            asmSources = [],
            cmmSources = [],
            cSources = [],
            cxxSources = [],
            jsSources = [],
            hsSourceDirs = [
              SymbolicPath "utils",
              SymbolicPath "src"],
            otherModules = [
              ModuleName
                "Torch.Core.Exceptions",
              ModuleName "Torch.Core.Random",
              ModuleName "Torch.Core.LogAdd"],
            virtualModules = [],
            autogenModules = [],
            defaultLanguage = Just
              Haskell2010,
            otherLanguages = [],
            defaultExtensions = [
              EnableExtension LambdaCase,
              EnableExtension DataKinds,
              EnableExtension TypeFamilies,
              EnableExtension
                TypeSynonymInstances,
              EnableExtension
                ScopedTypeVariables,
              EnableExtension
                FlexibleContexts,
              EnableExtension CPP],
            otherExtensions = [],
            oldExtensions = [],
            extraLibs = [],
            extraLibsStatic = [],
            extraGHCiLibs = [],
            extraBundledLibs = [],
            extraLibFlavours = [],
            extraDynLibFlavours = [],
            extraLibDirs = [],
            extraLibDirsStatic = [],
            includeDirs = [],
            includes = [],
            autogenIncludes = [],
            installIncludes = [],
            options = PerCompilerFlavor
              []
              [],
            profOptions = PerCompilerFlavor
              []
              [],
            sharedOptions =
            PerCompilerFlavor [] [],
            staticOptions =
            PerCompilerFlavor [] [],
            customFieldsBI = [],
            targetBuildDepends = [
              Dependency
                (PackageName "base")
                (IntersectVersionRanges
                  (UnionVersionRanges
                    (ThisVersion (mkVersion [4, 7]))
                    (LaterVersion
                      (mkVersion [4, 7])))
                  (EarlierVersion
                    (mkVersion [5])))
                mainLibSet,
              Dependency
                (PackageName
                  "hasktorch-types-th")
                (IntersectVersionRanges
                  (UnionVersionRanges
                    (ThisVersion
                      (mkVersion [0, 0, 1]))
                    (LaterVersion
                      (mkVersion [0, 0, 1])))
                  (EarlierVersion
                    (mkVersion [0, 0, 2])))
                mainLibSet,
              Dependency
                (PackageName "dimensions")
                (UnionVersionRanges
                  (ThisVersion (mkVersion [1, 0]))
                  (LaterVersion
                    (mkVersion [1, 0])))
                mainLibSet,
              Dependency
                (PackageName "hasktorch-ffi-th")
                (IntersectVersionRanges
                  (UnionVersionRanges
                    (ThisVersion
                      (mkVersion [0, 0, 1]))
                    (LaterVersion
                      (mkVersion [0, 0, 1])))
                  (EarlierVersion
                    (mkVersion [0, 0, 2])))
                mainLibSet,
              Dependency
                (PackageName
                  "hasktorch-types-th")
                (IntersectVersionRanges
                  (UnionVersionRanges
                    (ThisVersion
                      (mkVersion [0, 0, 1]))
                    (LaterVersion
                      (mkVersion [0, 0, 1])))
                  (EarlierVersion
                    (mkVersion [0, 0, 2])))
                mainLibSet,
              Dependency
                (PackageName "safe-exceptions")
                (UnionVersionRanges
                  (ThisVersion
                    (mkVersion [0, 1, 0]))
                  (LaterVersion
                    (mkVersion [0, 1, 0])))
                mainLibSet,
              Dependency
                (PackageName "singletons")
                (UnionVersionRanges
                  (ThisVersion (mkVersion [2, 2]))
                  (LaterVersion
                    (mkVersion [2, 2])))
                mainLibSet,
              Dependency
                (PackageName "text")
                (UnionVersionRanges
                  (ThisVersion
                    (mkVersion [1, 2, 2]))
                  (LaterVersion
                    (mkVersion [1, 2, 2])))
                mainLibSet,
              Dependency
                (PackageName "hasktorch")
                (OrLaterVersion (mkVersion [0]))
                (NonEmptySet.fromNonEmpty
                  (NE.fromList
                    [
                      LSubLibName
                        (UnqualComponentName
                          "hasktorch-indef-floating")])),
              Dependency
                (PackageName "hasktorch")
                (OrLaterVersion (mkVersion [0]))
                (NonEmptySet.fromNonEmpty
                  (NE.fromList
                    [
                      LSubLibName
                        (UnqualComponentName
                          "hasktorch-indef-signed")])),
              Dependency
                (PackageName
                  "hasktorch-ffi-thc")
                (IntersectVersionRanges
                  (UnionVersionRanges
                    (ThisVersion
                      (mkVersion [0, 0, 1]))
                    (LaterVersion
                      (mkVersion [0, 0, 1])))
                  (EarlierVersion
                    (mkVersion [0, 0, 2])))
                mainLibSet,
              Dependency
                (PackageName
                  "hasktorch-types-thc")
                (IntersectVersionRanges
                  (UnionVersionRanges
                    (ThisVersion
                      (mkVersion [0, 0, 1]))
                    (LaterVersion
                      (mkVersion [0, 0, 1])))
                  (EarlierVersion
                    (mkVersion [0, 0, 2])))
                mainLibSet],
            mixins =
            [
              Mixin {
                mixinPackageName = PackageName
                  "hasktorch",
                mixinLibraryName = LSubLibName
                  (UnqualComponentName
                    "hasktorch-indef-signed"),
                mixinIncludeRenaming =
                IncludeRenaming {
                  includeProvidesRn =
                  ModuleRenaming
                    [
                      _×_
                        (ModuleName
                          "Torch.Indef.Storage")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Storage"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Storage.Copy")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Storage.Copy"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Copy")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Tensor.Copy"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Index")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Tensor.Index"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Masked")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Tensor.Masked"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Tensor.Math"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Compare")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Tensor.Math.Compare"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.CompareT")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Tensor.Math.CompareT"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Pairwise")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Tensor.Math.Pairwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Pointwise")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Tensor.Math.Pointwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Reduce")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Tensor.Math.Reduce"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Scan")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Tensor.Math.Scan"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Mode")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Tensor.Mode"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.ScatterGather")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Tensor.ScatterGather"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Sort")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Tensor.Sort"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.TopK")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Tensor.TopK"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Dynamic.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Copy")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Dynamic.Tensor.Copy"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Index")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Dynamic.Tensor.Index"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Masked")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Dynamic.Tensor.Masked"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Dynamic.Tensor.Math"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Compare")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Dynamic.Tensor.Math.Compare"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.CompareT")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Dynamic.Tensor.Math.CompareT"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Pairwise")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Dynamic.Tensor.Math.Pairwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Pointwise")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Dynamic.Tensor.Math.Pointwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Reduce")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Dynamic.Tensor.Math.Reduce"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Scan")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Dynamic.Tensor.Math.Scan"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Mode")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Dynamic.Tensor.Mode"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.ScatterGather")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Dynamic.Tensor.ScatterGather"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Sort")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Dynamic.Tensor.Sort"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.TopK")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Dynamic.Tensor.TopK"),
                      _×_
                        (ModuleName "Torch.Indef.Types")
                        (ModuleName
                          "Torch.Cuda.Long.Types"),
                      _×_
                        (ModuleName "Torch.Indef.Index")
                        (ModuleName
                          "Torch.Cuda.Long.Index"),
                      _×_
                        (ModuleName "Torch.Indef.Mask")
                        (ModuleName
                          "Torch.Cuda.Long.Mask"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Pointwise.Signed")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Tensor.Math.Pointwise.Signed"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Pointwise.Signed")
                        (ModuleName
                          "Torch.Indef.Cuda.Long.Dynamic.Tensor.Math.Pointwise.Signed")],
                  includeRequiresRn =
                  ModuleRenaming
                    [
                      _×_
                        (ModuleName
                          "Torch.Sig.Index.Tensor")
                        (ModuleName
                          "Torch.FFI.THC.Long.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Index.TensorFree")
                        (ModuleName
                          "Torch.FFI.THC.Long.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Mask.Tensor")
                        (ModuleName
                          "Torch.FFI.THC.Byte.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Mask.TensorFree")
                        (ModuleName
                          "Torch.FFI.THC.Byte.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Mask.MathReduce")
                        (ModuleName
                          "Torch.FFI.THC.Byte.TensorMathReduce"),
                      _×_
                        (ModuleName "Torch.Sig.State")
                        (ModuleName
                          "Torch.FFI.THC.State"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Types.Global")
                        (ModuleName "Torch.Types.THC"),
                      _×_
                        (ModuleName "Torch.Sig.Types")
                        (ModuleName
                          "Torch.Types.THC.Long"),
                      _×_
                        (ModuleName "Torch.Sig.Storage")
                        (ModuleName
                          "Torch.FFI.THC.Long.Storage"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Storage.Copy")
                        (ModuleName
                          "Torch.FFI.THC.Long.StorageCopy"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Storage.Memory")
                        (ModuleName
                          "Torch.FFI.THC.Long.Storage"),
                      _×_
                        (ModuleName "Torch.Sig.Tensor")
                        (ModuleName
                          "Torch.FFI.THC.Long.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Copy")
                        (ModuleName
                          "Torch.FFI.THC.Long.TensorCopy"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Memory")
                        (ModuleName
                          "Torch.FFI.THC.Long.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Index")
                        (ModuleName
                          "Torch.FFI.THC.Long.TensorIndex"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Masked")
                        (ModuleName
                          "Torch.FFI.THC.Long.TensorMasked"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math")
                        (ModuleName
                          "Torch.FFI.THC.Long.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Compare")
                        (ModuleName
                          "Torch.FFI.THC.Long.TensorMathCompare"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.CompareT")
                        (ModuleName
                          "Torch.FFI.THC.Long.TensorMathCompareT"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Pairwise")
                        (ModuleName
                          "Torch.FFI.THC.Long.TensorMathPairwise"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Pointwise")
                        (ModuleName
                          "Torch.FFI.THC.Long.TensorMathPointwise"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Reduce")
                        (ModuleName
                          "Torch.FFI.THC.Long.TensorMathReduce"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Scan")
                        (ModuleName
                          "Torch.FFI.THC.Long.TensorMathScan"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Mode")
                        (ModuleName
                          "Torch.FFI.THC.Long.TensorMode"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.ScatterGather")
                        (ModuleName
                          "Torch.FFI.THC.Long.TensorScatterGather"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Sort")
                        (ModuleName
                          "Torch.FFI.THC.Long.TensorSort"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.TopK")
                        (ModuleName
                          "Torch.FFI.THC.Long.TensorTopK"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Pointwise.Signed")
                        (ModuleName
                          "Torch.FFI.THC.Long.TensorMathPointwise")]}},
              Mixin {
                mixinPackageName = PackageName
                  "hasktorch",
                mixinLibraryName = LSubLibName
                  (UnqualComponentName
                    "hasktorch-indef-floating"),
                mixinIncludeRenaming =
                IncludeRenaming {
                  includeProvidesRn =
                  ModuleRenaming
                    [
                      _×_
                        (ModuleName
                          "Torch.Indef.Storage")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Storage"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Storage.Copy")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Storage.Copy"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Copy")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Copy"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Index")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Index"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Masked")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Masked"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Math"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Compare")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Math.Compare"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.CompareT")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Math.CompareT"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Pairwise")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Math.Pairwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Pointwise")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Math.Pointwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Reduce")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Math.Reduce"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Scan")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Math.Scan"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Mode")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Mode"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.ScatterGather")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.ScatterGather"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Sort")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Sort"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.TopK")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.TopK"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Copy")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Copy"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Index")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Index"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Masked")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Masked"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Math"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Compare")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Math.Compare"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.CompareT")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Math.CompareT"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Pairwise")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Math.Pairwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Pointwise")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Math.Pointwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Reduce")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Math.Reduce"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Scan")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Math.Scan"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Mode")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Mode"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.ScatterGather")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.ScatterGather"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Sort")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Sort"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.TopK")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.TopK"),
                      _×_
                        (ModuleName "Torch.Indef.Types")
                        (ModuleName
                          "Torch.Cuda.Double.Types"),
                      _×_
                        (ModuleName "Torch.Indef.Index")
                        (ModuleName
                          "Torch.Cuda.Double.Index"),
                      _×_
                        (ModuleName "Torch.Indef.Mask")
                        (ModuleName
                          "Torch.Cuda.Double.Mask"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Pointwise.Signed")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Math.Pointwise.Signed"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Pointwise.Signed")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Math.Pointwise.Signed"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Blas")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Math.Blas"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Lapack")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Math.Lapack"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Pointwise.Floating")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Math.Pointwise.Floating"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Reduce.Floating")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Math.Reduce.Floating"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Floating")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Math.Floating"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Blas")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Math.Blas"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Lapack")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Math.Lapack"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Pointwise.Floating")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Math.Pointwise.Floating"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Reduce.Floating")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Math.Reduce.Floating"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Floating")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Math.Floating"),
                      _×_
                        (ModuleName
                          "Torch.Undefined.Tensor.Random.TH")
                        (ModuleName
                          "Torch.Undefined.Cuda.Double.Tensor.Random.TH"),
                      _×_
                        (ModuleName
                          "Torch.Undefined.Tensor.Math.Random.TH")
                        (ModuleName
                          "Torch.Undefined.Cuda.Double.Tensor.Math.Random.TH"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Random.THC")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Random.THC"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Random.THC")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Random.THC"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Storage")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Storage"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Storage.Copy")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Storage.Copy"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Copy")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Copy"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Index")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Index"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Masked")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Masked"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Math"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Compare")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Math.Compare"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.CompareT")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Math.CompareT"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Pairwise")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Math.Pairwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Pointwise")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Math.Pointwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Reduce")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Math.Reduce"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Scan")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Math.Scan"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Mode")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Mode"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.ScatterGather")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.ScatterGather"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Sort")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Sort"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.TopK")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.TopK"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Copy")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Copy"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Index")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Index"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Masked")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Masked"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Math"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Compare")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Math.Compare"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.CompareT")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Math.CompareT"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Pairwise")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Math.Pairwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Pointwise")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Math.Pointwise"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Reduce")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Math.Reduce"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Scan")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Math.Scan"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Mode")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Mode"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.ScatterGather")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.ScatterGather"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Sort")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Sort"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.TopK")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.TopK"),
                      _×_
                        (ModuleName "Torch.Indef.Types")
                        (ModuleName
                          "Torch.Cuda.Double.Types"),
                      _×_
                        (ModuleName "Torch.Indef.Index")
                        (ModuleName
                          "Torch.Cuda.Double.Index"),
                      _×_
                        (ModuleName "Torch.Indef.Mask")
                        (ModuleName
                          "Torch.Cuda.Double.Mask"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.Tensor.Math.Pointwise.Signed")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Tensor.Math.Pointwise.Signed"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.Tensor.Math.Pointwise.Signed")
                        (ModuleName
                          "Torch.Indef.Cuda.Double.Dynamic.Tensor.Math.Pointwise.Signed"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.NN")
                        (ModuleName
                          "Torch.Cuda.Double.Dynamic.NN"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.NN.Activation")
                        (ModuleName
                          "Torch.Cuda.Double.Dynamic.NN.Activation"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.NN.Pooling")
                        (ModuleName
                          "Torch.Cuda.Double.Dynamic.NN.Pooling"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Dynamic.NN.Criterion")
                        (ModuleName
                          "Torch.Cuda.Double.Dynamic.NN.Criterion"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN")
                        (ModuleName
                          "Torch.Cuda.Double.NN"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN")
                        (ModuleName
                          "Torch.Cuda.Double.NN"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Activation")
                        (ModuleName
                          "Torch.Cuda.Double.NN.Activation"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Backprop")
                        (ModuleName
                          "Torch.Cuda.Double.NN.Backprop"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Conv1d")
                        (ModuleName
                          "Torch.Cuda.Double.NN.Conv1d"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Conv2d")
                        (ModuleName
                          "Torch.Cuda.Double.NN.Conv2d"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Criterion")
                        (ModuleName
                          "Torch.Cuda.Double.NN.Criterion"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Layers")
                        (ModuleName
                          "Torch.Cuda.Double.NN.Layers"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Linear")
                        (ModuleName
                          "Torch.Cuda.Double.NN.Linear"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Math")
                        (ModuleName
                          "Torch.Cuda.Double.NN.Math"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Padding")
                        (ModuleName
                          "Torch.Cuda.Double.NN.Padding"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Pooling")
                        (ModuleName
                          "Torch.Cuda.Double.NN.Pooling"),
                      _×_
                        (ModuleName
                          "Torch.Indef.Static.NN.Sampling")
                        (ModuleName
                          "Torch.Cuda.Double.NN.Sampling")],
                  includeRequiresRn =
                  ModuleRenaming
                    [
                      _×_
                        (ModuleName
                          "Torch.Sig.Index.Tensor")
                        (ModuleName
                          "Torch.FFI.THC.Long.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Index.TensorFree")
                        (ModuleName
                          "Torch.FFI.THC.Long.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Mask.Tensor")
                        (ModuleName
                          "Torch.FFI.THC.Byte.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Mask.TensorFree")
                        (ModuleName
                          "Torch.FFI.THC.Byte.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Mask.MathReduce")
                        (ModuleName
                          "Torch.FFI.THC.Byte.TensorMathReduce"),
                      _×_
                        (ModuleName "Torch.Sig.State")
                        (ModuleName
                          "Torch.FFI.THC.State"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Types.Global")
                        (ModuleName "Torch.Types.THC"),
                      _×_
                        (ModuleName "Torch.Sig.Types")
                        (ModuleName
                          "Torch.Types.THC.Double"),
                      _×_
                        (ModuleName "Torch.Sig.Storage")
                        (ModuleName
                          "Torch.FFI.THC.Double.Storage"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Storage.Copy")
                        (ModuleName
                          "Torch.FFI.THC.Double.StorageCopy"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Storage.Memory")
                        (ModuleName
                          "Torch.FFI.THC.Double.Storage"),
                      _×_
                        (ModuleName "Torch.Sig.Tensor")
                        (ModuleName
                          "Torch.FFI.THC.Double.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Copy")
                        (ModuleName
                          "Torch.FFI.THC.Double.TensorCopy"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Memory")
                        (ModuleName
                          "Torch.FFI.THC.Double.Tensor"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Index")
                        (ModuleName
                          "Torch.FFI.THC.Double.TensorIndex"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Masked")
                        (ModuleName
                          "Torch.FFI.THC.Double.TensorMasked"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math")
                        (ModuleName
                          "Torch.FFI.THC.Double.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Compare")
                        (ModuleName
                          "Torch.FFI.THC.Double.TensorMathCompare"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.CompareT")
                        (ModuleName
                          "Torch.FFI.THC.Double.TensorMathCompareT"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Pairwise")
                        (ModuleName
                          "Torch.FFI.THC.Double.TensorMathPairwise"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Pointwise")
                        (ModuleName
                          "Torch.FFI.THC.Double.TensorMathPointwise"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Reduce")
                        (ModuleName
                          "Torch.FFI.THC.Double.TensorMathReduce"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Scan")
                        (ModuleName
                          "Torch.FFI.THC.Double.TensorMathScan"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Mode")
                        (ModuleName
                          "Torch.FFI.THC.Double.TensorMode"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.ScatterGather")
                        (ModuleName
                          "Torch.FFI.THC.Double.TensorScatterGather"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Sort")
                        (ModuleName
                          "Torch.FFI.THC.Double.TensorSort"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.TopK")
                        (ModuleName
                          "Torch.FFI.THC.Double.TensorTopK"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Pointwise.Signed")
                        (ModuleName
                          "Torch.FFI.THC.Double.TensorMathPointwise"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Pointwise.Floating")
                        (ModuleName
                          "Torch.FFI.THC.Double.TensorMathPointwise"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Reduce.Floating")
                        (ModuleName
                          "Torch.FFI.THC.Double.TensorMathReduce"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Floating")
                        (ModuleName
                          "Torch.FFI.THC.Double.TensorMath"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Blas")
                        (ModuleName
                          "Torch.FFI.THC.Double.TensorMathBlas"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Lapack")
                        (ModuleName
                          "Torch.FFI.THC.Double.TensorMathMagma"),
                      _×_
                        (ModuleName "Torch.Sig.NN")
                        (ModuleName
                          "Torch.FFI.THC.NN.Double"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Types.NN")
                        (ModuleName "Torch.Types.THC"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Random.TH")
                        (ModuleName
                          "Torch.Undefined.Cuda.Double.Tensor.Math.Random.TH"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Random.TH")
                        (ModuleName
                          "Torch.Undefined.Cuda.Double.Tensor.Random.TH"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Random.THC")
                        (ModuleName
                          "Torch.FFI.THC.Double.TensorRandom")]}}]}},
        condTreeConstraints = [
          Dependency
            (PackageName "base")
            (IntersectVersionRanges
              (UnionVersionRanges
                (ThisVersion (mkVersion [4, 7]))
                (LaterVersion
                  (mkVersion [4, 7])))
              (EarlierVersion
                (mkVersion [5])))
            mainLibSet,
          Dependency
            (PackageName
              "hasktorch-types-th")
            (IntersectVersionRanges
              (UnionVersionRanges
                (ThisVersion
                  (mkVersion [0, 0, 1]))
                (LaterVersion
                  (mkVersion [0, 0, 1])))
              (EarlierVersion
                (mkVersion [0, 0, 2])))
            mainLibSet,
          Dependency
            (PackageName "dimensions")
            (UnionVersionRanges
              (ThisVersion (mkVersion [1, 0]))
              (LaterVersion
                (mkVersion [1, 0])))
            mainLibSet,
          Dependency
            (PackageName "hasktorch-ffi-th")
            (IntersectVersionRanges
              (UnionVersionRanges
                (ThisVersion
                  (mkVersion [0, 0, 1]))
                (LaterVersion
                  (mkVersion [0, 0, 1])))
              (EarlierVersion
                (mkVersion [0, 0, 2])))
            mainLibSet,
          Dependency
            (PackageName
              "hasktorch-types-th")
            (IntersectVersionRanges
              (UnionVersionRanges
                (ThisVersion
                  (mkVersion [0, 0, 1]))
                (LaterVersion
                  (mkVersion [0, 0, 1])))
              (EarlierVersion
                (mkVersion [0, 0, 2])))
            mainLibSet,
          Dependency
            (PackageName "safe-exceptions")
            (UnionVersionRanges
              (ThisVersion
                (mkVersion [0, 1, 0]))
              (LaterVersion
                (mkVersion [0, 1, 0])))
            mainLibSet,
          Dependency
            (PackageName "singletons")
            (UnionVersionRanges
              (ThisVersion (mkVersion [2, 2]))
              (LaterVersion
                (mkVersion [2, 2])))
            mainLibSet,
          Dependency
            (PackageName "text")
            (UnionVersionRanges
              (ThisVersion
                (mkVersion [1, 2, 2]))
              (LaterVersion
                (mkVersion [1, 2, 2])))
            mainLibSet,
          Dependency
            (PackageName "hasktorch")
            (OrLaterVersion (mkVersion [0]))
            (NonEmptySet.fromNonEmpty
              (NE.fromList
                [
                  LSubLibName
                    (UnqualComponentName
                      "hasktorch-indef-floating")])),
          Dependency
            (PackageName "hasktorch")
            (OrLaterVersion (mkVersion [0]))
            (NonEmptySet.fromNonEmpty
              (NE.fromList
                [
                  LSubLibName
                    (UnqualComponentName
                      "hasktorch-indef-signed")])),
          Dependency
            (PackageName
              "hasktorch-ffi-thc")
            (IntersectVersionRanges
              (UnionVersionRanges
                (ThisVersion
                  (mkVersion [0, 0, 1]))
                (LaterVersion
                  (mkVersion [0, 0, 1])))
              (EarlierVersion
                (mkVersion [0, 0, 2])))
            mainLibSet,
          Dependency
            (PackageName
              "hasktorch-types-thc")
            (IntersectVersionRanges
              (UnionVersionRanges
                (ThisVersion
                  (mkVersion [0, 0, 1]))
                (LaterVersion
                  (mkVersion [0, 0, 1])))
              (EarlierVersion
                (mkVersion [0, 0, 2])))
            mainLibSet],
        condTreeComponents =
        [
          CondBranch {
            condBranchCondition =
            `Var (PackageFlag (FlagName "lite"))`,
            condBranchIfTrue = CondNode {
              condTreeData = Library {
                libName = LSubLibName
                  (UnqualComponentName
                    "hasktorch-gpu"),
                exposedModules = [],
                reexportedModules = [],
                signatures = [],
                libExposed = True,
                libVisibility =
                LibraryVisibilityPrivate,
                libBuildInfo = BuildInfo {
                  buildable = True,
                  buildTools = [],
                  buildToolDepends = [],
                  cppOptions = [],
                  asmOptions = [],
                  cmmOptions = [],
                  ccOptions = [],
                  cxxOptions = [],
                  ldOptions = [],
                  hsc2hsOptions = [],
                  pkgconfigDepends = [],
                  frameworks = [],
                  extraFrameworkDirs = [],
                  asmSources = [],
                  cmmSources = [],
                  cSources = [],
                  cxxSources = [],
                  jsSources = [],
                  hsSourceDirs = [],
                  otherModules = [],
                  virtualModules = [],
                  autogenModules = [],
                  defaultLanguage = Nothing,
                  otherLanguages = [],
                  defaultExtensions = [],
                  otherExtensions = [],
                  oldExtensions = [],
                  extraLibs = [],
                  extraLibsStatic = [],
                  extraGHCiLibs = [],
                  extraBundledLibs = [],
                  extraLibFlavours = [],
                  extraDynLibFlavours = [],
                  extraLibDirs = [],
                  extraLibDirsStatic = [],
                  includeDirs = [],
                  includes = [],
                  autogenIncludes = [],
                  installIncludes = [],
                  options = PerCompilerFlavor
                    []
                    [],
                  profOptions = PerCompilerFlavor
                    []
                    [],
                  sharedOptions =
                  PerCompilerFlavor [] [],
                  staticOptions =
                  PerCompilerFlavor [] [],
                  customFieldsBI = [],
                  targetBuildDepends = [],
                  mixins = []}},
              condTreeConstraints = [],
              condTreeComponents = []},
            condBranchIfFalse =
            Just
              CondNode {
                condTreeData =
                Library {
                  libName = LSubLibName
                    (UnqualComponentName
                      "hasktorch-gpu"),
                  exposedModules = [
                    ModuleName "Torch.Cuda.Byte",
                    ModuleName
                      "Torch.Cuda.Byte.Dynamic",
                    ModuleName
                      "Torch.Cuda.Byte.Storage",
                    ModuleName "Torch.Cuda.Char",
                    ModuleName
                      "Torch.Cuda.Char.Dynamic",
                    ModuleName
                      "Torch.Cuda.Char.Storage",
                    ModuleName "Torch.Cuda.Short",
                    ModuleName
                      "Torch.Cuda.Short.Dynamic",
                    ModuleName
                      "Torch.Cuda.Short.Storage",
                    ModuleName "Torch.Cuda.Int",
                    ModuleName
                      "Torch.Cuda.Int.Dynamic",
                    ModuleName
                      "Torch.Cuda.Int.Storage"],
                  reexportedModules = [],
                  signatures = [],
                  libExposed = True,
                  libVisibility =
                  LibraryVisibilityPrivate,
                  libBuildInfo =
                  BuildInfo {
                    buildable = True,
                    buildTools = [],
                    buildToolDepends = [],
                    cppOptions = [],
                    asmOptions = [],
                    cmmOptions = [],
                    ccOptions = [],
                    cxxOptions = [],
                    ldOptions = [],
                    hsc2hsOptions = [],
                    pkgconfigDepends = [],
                    frameworks = [],
                    extraFrameworkDirs = [],
                    asmSources = [],
                    cmmSources = [],
                    cSources = [],
                    cxxSources = [],
                    jsSources = [],
                    hsSourceDirs = [],
                    otherModules = [],
                    virtualModules = [],
                    autogenModules = [],
                    defaultLanguage = Nothing,
                    otherLanguages = [],
                    defaultExtensions = [],
                    otherExtensions = [],
                    oldExtensions = [],
                    extraLibs = [],
                    extraLibsStatic = [],
                    extraGHCiLibs = [],
                    extraBundledLibs = [],
                    extraLibFlavours = [],
                    extraDynLibFlavours = [],
                    extraLibDirs = [],
                    extraLibDirsStatic = [],
                    includeDirs = [],
                    includes = [],
                    autogenIncludes = [],
                    installIncludes = [],
                    options = PerCompilerFlavor
                      []
                      [],
                    profOptions = PerCompilerFlavor
                      []
                      [],
                    sharedOptions =
                    PerCompilerFlavor [] [],
                    staticOptions =
                    PerCompilerFlavor [] [],
                    customFieldsBI = [],
                    targetBuildDepends = [
                      Dependency
                        (PackageName "hasktorch")
                        (OrLaterVersion (mkVersion [0]))
                        (NonEmptySet.fromNonEmpty
                          (NE.fromList
                            [
                              LSubLibName
                                (UnqualComponentName
                                  "hasktorch-indef-unsigned")]))],
                    mixins =
                    [
                      Mixin {
                        mixinPackageName = PackageName
                          "hasktorch",
                        mixinLibraryName = LSubLibName
                          (UnqualComponentName
                            "hasktorch-indef-unsigned"),
                        mixinIncludeRenaming =
                        IncludeRenaming {
                          includeProvidesRn =
                          ModuleRenaming
                            [
                              _×_
                                (ModuleName
                                  "Torch.Indef.Storage")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Storage"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Storage.Copy")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Storage.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Copy")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Tensor.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Index")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Tensor.Index"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Masked")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Tensor.Masked"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Tensor.Math"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Tensor.Math.Compare"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Tensor.Math.CompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Tensor.Math.Pairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Tensor.Math.Pointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Tensor.Math.Reduce"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Tensor.Math.Scan"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Mode")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Tensor.Mode"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Tensor.ScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Sort")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Tensor.Sort"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.TopK")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Tensor.TopK"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Dynamic.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Copy")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Dynamic.Tensor.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Index")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Dynamic.Tensor.Index"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Masked")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Dynamic.Tensor.Masked"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Dynamic.Tensor.Math"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Dynamic.Tensor.Math.Compare"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Dynamic.Tensor.Math.CompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Dynamic.Tensor.Math.Pairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Dynamic.Tensor.Math.Pointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Dynamic.Tensor.Math.Reduce"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Dynamic.Tensor.Math.Scan"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Mode")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Dynamic.Tensor.Mode"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Dynamic.Tensor.ScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Sort")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Dynamic.Tensor.Sort"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.TopK")
                                (ModuleName
                                  "Torch.Indef.Cuda.Byte.Dynamic.Tensor.TopK"),
                              _×_
                                (ModuleName "Torch.Indef.Types")
                                (ModuleName
                                  "Torch.Cuda.Byte.Types"),
                              _×_
                                (ModuleName "Torch.Indef.Index")
                                (ModuleName
                                  "Torch.Cuda.Byte.Index"),
                              _×_
                                (ModuleName "Torch.Indef.Mask")
                                (ModuleName
                                  "Torch.Cuda.Byte.Mask")],
                          includeRequiresRn =
                          ModuleRenaming
                            [
                              _×_
                                (ModuleName
                                  "Torch.Sig.Index.Tensor")
                                (ModuleName
                                  "Torch.FFI.THC.Long.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Index.TensorFree")
                                (ModuleName
                                  "Torch.FFI.THC.Long.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.Tensor")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.TensorFree")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.MathReduce")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.TensorMathReduce"),
                              _×_
                                (ModuleName "Torch.Sig.State")
                                (ModuleName
                                  "Torch.FFI.THC.State"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Types.Global")
                                (ModuleName "Torch.Types.THC"),
                              _×_
                                (ModuleName "Torch.Sig.Types")
                                (ModuleName
                                  "Torch.Types.THC.Byte"),
                              _×_
                                (ModuleName "Torch.Sig.Storage")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.Storage"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Storage.Copy")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.StorageCopy"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Storage.Memory")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.Storage"),
                              _×_
                                (ModuleName "Torch.Sig.Tensor")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Copy")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.TensorCopy"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Memory")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Index")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.TensorIndex"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Masked")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.TensorMasked"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.TensorMathCompare"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.TensorMathCompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.TensorMathPairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.TensorMathPointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.TensorMathReduce"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.TensorMathScan"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Mode")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.TensorMode"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.TensorScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Sort")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.TensorSort"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.TopK")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.TensorTopK")]}},
                      Mixin {
                        mixinPackageName = PackageName
                          "hasktorch",
                        mixinLibraryName = LSubLibName
                          (UnqualComponentName
                            "hasktorch-indef-unsigned"),
                        mixinIncludeRenaming =
                        IncludeRenaming {
                          includeProvidesRn =
                          ModuleRenaming
                            [
                              _×_
                                (ModuleName
                                  "Torch.Indef.Storage")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Storage"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Storage.Copy")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Storage.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Copy")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Tensor.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Index")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Tensor.Index"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Masked")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Tensor.Masked"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Tensor.Math"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Tensor.Math.Compare"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Tensor.Math.CompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Tensor.Math.Pairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Tensor.Math.Pointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Tensor.Math.Reduce"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Tensor.Math.Scan"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Mode")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Tensor.Mode"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Tensor.ScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Sort")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Tensor.Sort"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.TopK")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Tensor.TopK"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Dynamic.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Copy")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Dynamic.Tensor.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Index")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Dynamic.Tensor.Index"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Masked")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Dynamic.Tensor.Masked"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Dynamic.Tensor.Math"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Dynamic.Tensor.Math.Compare"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Dynamic.Tensor.Math.CompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Dynamic.Tensor.Math.Pairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Dynamic.Tensor.Math.Pointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Dynamic.Tensor.Math.Reduce"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Dynamic.Tensor.Math.Scan"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Mode")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Dynamic.Tensor.Mode"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Dynamic.Tensor.ScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Sort")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Dynamic.Tensor.Sort"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.TopK")
                                (ModuleName
                                  "Torch.Indef.Cuda.Char.Dynamic.Tensor.TopK"),
                              _×_
                                (ModuleName "Torch.Indef.Types")
                                (ModuleName
                                  "Torch.Cuda.Char.Types"),
                              _×_
                                (ModuleName "Torch.Indef.Index")
                                (ModuleName
                                  "Torch.Cuda.Char.Index"),
                              _×_
                                (ModuleName "Torch.Indef.Mask")
                                (ModuleName
                                  "Torch.Cuda.Char.Mask")],
                          includeRequiresRn =
                          ModuleRenaming
                            [
                              _×_
                                (ModuleName
                                  "Torch.Sig.Index.Tensor")
                                (ModuleName
                                  "Torch.FFI.THC.Long.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Index.TensorFree")
                                (ModuleName
                                  "Torch.FFI.THC.Long.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.Tensor")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.TensorFree")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.MathReduce")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.TensorMathReduce"),
                              _×_
                                (ModuleName "Torch.Sig.State")
                                (ModuleName
                                  "Torch.FFI.THC.State"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Types.Global")
                                (ModuleName "Torch.Types.THC"),
                              _×_
                                (ModuleName "Torch.Sig.Types")
                                (ModuleName
                                  "Torch.Types.THC.Char"),
                              _×_
                                (ModuleName "Torch.Sig.Storage")
                                (ModuleName
                                  "Torch.FFI.THC.Char.Storage"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Storage.Copy")
                                (ModuleName
                                  "Torch.FFI.THC.Char.StorageCopy"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Storage.Memory")
                                (ModuleName
                                  "Torch.FFI.THC.Char.Storage"),
                              _×_
                                (ModuleName "Torch.Sig.Tensor")
                                (ModuleName
                                  "Torch.FFI.THC.Char.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Copy")
                                (ModuleName
                                  "Torch.FFI.THC.Char.TensorCopy"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Memory")
                                (ModuleName
                                  "Torch.FFI.THC.Char.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Index")
                                (ModuleName
                                  "Torch.FFI.THC.Char.TensorIndex"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Masked")
                                (ModuleName
                                  "Torch.FFI.THC.Char.TensorMasked"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math")
                                (ModuleName
                                  "Torch.FFI.THC.Char.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.FFI.THC.Char.TensorMathCompare"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.FFI.THC.Char.TensorMathCompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.FFI.THC.Char.TensorMathPairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.FFI.THC.Char.TensorMathPointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.FFI.THC.Char.TensorMathReduce"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.FFI.THC.Char.TensorMathScan"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Mode")
                                (ModuleName
                                  "Torch.FFI.THC.Char.TensorMode"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.FFI.THC.Char.TensorScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Sort")
                                (ModuleName
                                  "Torch.FFI.THC.Char.TensorSort"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.TopK")
                                (ModuleName
                                  "Torch.FFI.THC.Char.TensorTopK")]}},
                      Mixin {
                        mixinPackageName = PackageName
                          "hasktorch",
                        mixinLibraryName = LSubLibName
                          (UnqualComponentName
                            "hasktorch-indef-signed"),
                        mixinIncludeRenaming =
                        IncludeRenaming {
                          includeProvidesRn =
                          ModuleRenaming
                            [
                              _×_
                                (ModuleName
                                  "Torch.Indef.Storage")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Storage"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Storage.Copy")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Storage.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Copy")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Tensor.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Index")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Tensor.Index"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Masked")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Tensor.Masked"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Tensor.Math"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Tensor.Math.Compare"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Tensor.Math.CompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Tensor.Math.Pairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Tensor.Math.Pointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Tensor.Math.Reduce"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Tensor.Math.Scan"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Mode")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Tensor.Mode"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Tensor.ScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Sort")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Tensor.Sort"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.TopK")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Tensor.TopK"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Dynamic.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Copy")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Dynamic.Tensor.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Index")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Dynamic.Tensor.Index"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Masked")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Dynamic.Tensor.Masked"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Dynamic.Tensor.Math"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Dynamic.Tensor.Math.Compare"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Dynamic.Tensor.Math.CompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Dynamic.Tensor.Math.Pairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Dynamic.Tensor.Math.Pointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Dynamic.Tensor.Math.Reduce"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Dynamic.Tensor.Math.Scan"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Mode")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Dynamic.Tensor.Mode"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Dynamic.Tensor.ScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Sort")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Dynamic.Tensor.Sort"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.TopK")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Dynamic.Tensor.TopK"),
                              _×_
                                (ModuleName "Torch.Indef.Types")
                                (ModuleName
                                  "Torch.Cuda.Short.Types"),
                              _×_
                                (ModuleName "Torch.Indef.Index")
                                (ModuleName
                                  "Torch.Cuda.Short.Index"),
                              _×_
                                (ModuleName "Torch.Indef.Mask")
                                (ModuleName
                                  "Torch.Cuda.Short.Mask"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pointwise.Signed")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Tensor.Math.Pointwise.Signed"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pointwise.Signed")
                                (ModuleName
                                  "Torch.Indef.Cuda.Short.Dynamic.Tensor.Math.Pointwise.Signed")],
                          includeRequiresRn =
                          ModuleRenaming
                            [
                              _×_
                                (ModuleName
                                  "Torch.Sig.Index.Tensor")
                                (ModuleName
                                  "Torch.FFI.THC.Long.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Index.TensorFree")
                                (ModuleName
                                  "Torch.FFI.THC.Long.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.Tensor")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.TensorFree")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.MathReduce")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.TensorMathReduce"),
                              _×_
                                (ModuleName "Torch.Sig.State")
                                (ModuleName
                                  "Torch.FFI.THC.State"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Types.Global")
                                (ModuleName "Torch.Types.THC"),
                              _×_
                                (ModuleName "Torch.Sig.Types")
                                (ModuleName
                                  "Torch.Types.THC.Short"),
                              _×_
                                (ModuleName "Torch.Sig.Storage")
                                (ModuleName
                                  "Torch.FFI.THC.Short.Storage"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Storage.Copy")
                                (ModuleName
                                  "Torch.FFI.THC.Short.StorageCopy"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Storage.Memory")
                                (ModuleName
                                  "Torch.FFI.THC.Short.Storage"),
                              _×_
                                (ModuleName "Torch.Sig.Tensor")
                                (ModuleName
                                  "Torch.FFI.THC.Short.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Copy")
                                (ModuleName
                                  "Torch.FFI.THC.Short.TensorCopy"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Memory")
                                (ModuleName
                                  "Torch.FFI.THC.Short.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Index")
                                (ModuleName
                                  "Torch.FFI.THC.Short.TensorIndex"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Masked")
                                (ModuleName
                                  "Torch.FFI.THC.Short.TensorMasked"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math")
                                (ModuleName
                                  "Torch.FFI.THC.Short.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.FFI.THC.Short.TensorMathCompare"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.FFI.THC.Short.TensorMathCompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.FFI.THC.Short.TensorMathPairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.FFI.THC.Short.TensorMathPointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.FFI.THC.Short.TensorMathReduce"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.FFI.THC.Short.TensorMathScan"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Mode")
                                (ModuleName
                                  "Torch.FFI.THC.Short.TensorMode"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.FFI.THC.Short.TensorScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Sort")
                                (ModuleName
                                  "Torch.FFI.THC.Short.TensorSort"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.TopK")
                                (ModuleName
                                  "Torch.FFI.THC.Short.TensorTopK"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pointwise.Signed")
                                (ModuleName
                                  "Torch.FFI.THC.Short.TensorMathPointwise")]}},
                      Mixin {
                        mixinPackageName = PackageName
                          "hasktorch",
                        mixinLibraryName = LSubLibName
                          (UnqualComponentName
                            "hasktorch-indef-signed"),
                        mixinIncludeRenaming =
                        IncludeRenaming {
                          includeProvidesRn =
                          ModuleRenaming
                            [
                              _×_
                                (ModuleName
                                  "Torch.Indef.Storage")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Storage"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Storage.Copy")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Storage.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Copy")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Tensor.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Index")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Tensor.Index"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Masked")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Tensor.Masked"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Tensor.Math"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Tensor.Math.Compare"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Tensor.Math.CompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Tensor.Math.Pairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Tensor.Math.Pointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Tensor.Math.Reduce"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Tensor.Math.Scan"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Mode")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Tensor.Mode"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Tensor.ScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Sort")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Tensor.Sort"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.TopK")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Tensor.TopK"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Dynamic.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Copy")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Dynamic.Tensor.Copy"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Index")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Dynamic.Tensor.Index"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Masked")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Dynamic.Tensor.Masked"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Dynamic.Tensor.Math"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Dynamic.Tensor.Math.Compare"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Dynamic.Tensor.Math.CompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Dynamic.Tensor.Math.Pairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Dynamic.Tensor.Math.Pointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Dynamic.Tensor.Math.Reduce"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Dynamic.Tensor.Math.Scan"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Mode")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Dynamic.Tensor.Mode"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Dynamic.Tensor.ScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Sort")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Dynamic.Tensor.Sort"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.TopK")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Dynamic.Tensor.TopK"),
                              _×_
                                (ModuleName "Torch.Indef.Types")
                                (ModuleName
                                  "Torch.Cuda.Int.Types"),
                              _×_
                                (ModuleName "Torch.Indef.Index")
                                (ModuleName
                                  "Torch.Cuda.Int.Index"),
                              _×_
                                (ModuleName "Torch.Indef.Mask")
                                (ModuleName
                                  "Torch.Cuda.Int.Mask"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Static.Tensor.Math.Pointwise.Signed")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Tensor.Math.Pointwise.Signed"),
                              _×_
                                (ModuleName
                                  "Torch.Indef.Dynamic.Tensor.Math.Pointwise.Signed")
                                (ModuleName
                                  "Torch.Indef.Cuda.Int.Dynamic.Tensor.Math.Pointwise.Signed")],
                          includeRequiresRn =
                          ModuleRenaming
                            [
                              _×_
                                (ModuleName
                                  "Torch.Sig.Index.Tensor")
                                (ModuleName
                                  "Torch.FFI.THC.Long.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Index.TensorFree")
                                (ModuleName
                                  "Torch.FFI.THC.Long.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.Tensor")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.TensorFree")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Mask.MathReduce")
                                (ModuleName
                                  "Torch.FFI.THC.Byte.TensorMathReduce"),
                              _×_
                                (ModuleName "Torch.Sig.State")
                                (ModuleName
                                  "Torch.FFI.THC.State"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Types.Global")
                                (ModuleName "Torch.Types.THC"),
                              _×_
                                (ModuleName "Torch.Sig.Types")
                                (ModuleName
                                  "Torch.Types.THC.Int"),
                              _×_
                                (ModuleName "Torch.Sig.Storage")
                                (ModuleName
                                  "Torch.FFI.THC.Int.Storage"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Storage.Copy")
                                (ModuleName
                                  "Torch.FFI.THC.Int.StorageCopy"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Storage.Memory")
                                (ModuleName
                                  "Torch.FFI.THC.Int.Storage"),
                              _×_
                                (ModuleName "Torch.Sig.Tensor")
                                (ModuleName
                                  "Torch.FFI.THC.Int.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Copy")
                                (ModuleName
                                  "Torch.FFI.THC.Int.TensorCopy"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Memory")
                                (ModuleName
                                  "Torch.FFI.THC.Int.Tensor"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Index")
                                (ModuleName
                                  "Torch.FFI.THC.Int.TensorIndex"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Masked")
                                (ModuleName
                                  "Torch.FFI.THC.Int.TensorMasked"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math")
                                (ModuleName
                                  "Torch.FFI.THC.Int.TensorMath"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Compare")
                                (ModuleName
                                  "Torch.FFI.THC.Int.TensorMathCompare"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.CompareT")
                                (ModuleName
                                  "Torch.FFI.THC.Int.TensorMathCompareT"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pairwise")
                                (ModuleName
                                  "Torch.FFI.THC.Int.TensorMathPairwise"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pointwise")
                                (ModuleName
                                  "Torch.FFI.THC.Int.TensorMathPointwise"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Reduce")
                                (ModuleName
                                  "Torch.FFI.THC.Int.TensorMathReduce"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Scan")
                                (ModuleName
                                  "Torch.FFI.THC.Int.TensorMathScan"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Mode")
                                (ModuleName
                                  "Torch.FFI.THC.Int.TensorMode"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.ScatterGather")
                                (ModuleName
                                  "Torch.FFI.THC.Int.TensorScatterGather"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Sort")
                                (ModuleName
                                  "Torch.FFI.THC.Int.TensorSort"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.TopK")
                                (ModuleName
                                  "Torch.FFI.THC.Int.TensorTopK"),
                              _×_
                                (ModuleName
                                  "Torch.Sig.Tensor.Math.Pointwise.Signed")
                                (ModuleName
                                  "Torch.FFI.THC.Int.TensorMathPointwise")]}}]}},
                condTreeConstraints = [
                  Dependency
                    (PackageName "hasktorch")
                    (OrLaterVersion (mkVersion [0]))
                    (NonEmptySet.fromNonEmpty
                      (NE.fromList
                        [
                          LSubLibName
                            (UnqualComponentName
                              "hasktorch-indef-unsigned")]))],
                condTreeComponents = []}}]},
    _×_
      (UnqualComponentName
        "hasktorch-indef-unsigned")
      CondNode {
        condTreeData = Library {
          libName = LSubLibName
            (UnqualComponentName
              "hasktorch-indef-unsigned"),
          exposedModules = [],
          reexportedModules = [
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName "Torch.Indef.Index",
              moduleReexportName = ModuleName
                "Torch.Indef.Index"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName "Torch.Indef.Mask",
              moduleReexportName = ModuleName
                "Torch.Indef.Mask"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName "Torch.Indef.Types",
              moduleReexportName = ModuleName
                "Torch.Indef.Types"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Storage",
              moduleReexportName = ModuleName
                "Torch.Indef.Storage"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Storage.Copy",
              moduleReexportName = ModuleName
                "Torch.Indef.Storage.Copy"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Print",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Print"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Copy",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Copy"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Index",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Index"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Masked",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Masked"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Compare",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Compare"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.CompareT",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.CompareT"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Pairwise",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Pairwise"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Pointwise",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Pointwise"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Reduce",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Reduce"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Scan",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Scan"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Mode",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Mode"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.ScatterGather",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.ScatterGather"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Sort",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Sort"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.TopK",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.TopK"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Copy",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Copy"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Index",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Index"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Masked",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Masked"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Compare",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Compare"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.CompareT",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.CompareT"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Pairwise",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Pairwise"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Pointwise",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Pointwise"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Reduce",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Reduce"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Scan",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Scan"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Mode",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Mode"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.ScatterGather",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.ScatterGather"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Sort",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Sort"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.TopK",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.TopK"}],
          signatures = [],
          libExposed = True,
          libVisibility =
          LibraryVisibilityPrivate,
          libBuildInfo = BuildInfo {
            buildable = True,
            buildTools = [],
            buildToolDepends = [],
            cppOptions = [],
            asmOptions = [],
            cmmOptions = [],
            ccOptions = [],
            cxxOptions = [],
            ldOptions = [],
            hsc2hsOptions = [],
            pkgconfigDepends = [],
            frameworks = [],
            extraFrameworkDirs = [],
            asmSources = [],
            cmmSources = [],
            cSources = [],
            cxxSources = [],
            jsSources = [],
            hsSourceDirs = [],
            otherModules = [],
            virtualModules = [],
            autogenModules = [],
            defaultLanguage = Just
              Haskell2010,
            otherLanguages = [],
            defaultExtensions = [],
            otherExtensions = [],
            oldExtensions = [],
            extraLibs = [],
            extraLibsStatic = [],
            extraGHCiLibs = [],
            extraBundledLibs = [],
            extraLibFlavours = [],
            extraDynLibFlavours = [],
            extraLibDirs = [],
            extraLibDirsStatic = [],
            includeDirs = [],
            includes = [],
            autogenIncludes = [],
            installIncludes = [],
            options = PerCompilerFlavor
              []
              [],
            profOptions = PerCompilerFlavor
              []
              [],
            sharedOptions =
            PerCompilerFlavor [] [],
            staticOptions =
            PerCompilerFlavor [] [],
            customFieldsBI = [],
            targetBuildDepends = [
              Dependency
                (PackageName "base")
                (IntersectVersionRanges
                  (UnionVersionRanges
                    (ThisVersion (mkVersion [4, 7]))
                    (LaterVersion
                      (mkVersion [4, 7])))
                  (EarlierVersion
                    (mkVersion [5])))
                mainLibSet,
              Dependency
                (PackageName
                  "hasktorch-signatures-partial")
                (IntersectVersionRanges
                  (UnionVersionRanges
                    (ThisVersion
                      (mkVersion [0, 0, 1]))
                    (LaterVersion
                      (mkVersion [0, 0, 1])))
                  (EarlierVersion
                    (mkVersion [0, 0, 2])))
                mainLibSet,
              Dependency
                (PackageName "hasktorch-indef")
                (OrLaterVersion (mkVersion [0]))
                mainLibSet],
            mixins = [
              Mixin {
                mixinPackageName = PackageName
                  "hasktorch-indef",
                mixinLibraryName = LMainLibName,
                mixinIncludeRenaming =
                IncludeRenaming {
                  includeProvidesRn =
                  DefaultRenaming,
                  includeRequiresRn =
                  ModuleRenaming
                    [
                      _×_
                        (ModuleName "Torch.Sig.NN")
                        (ModuleName
                          "Torch.Undefined.NN"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Types.NN")
                        (ModuleName
                          "Torch.Undefined.Types.NN"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Blas")
                        (ModuleName
                          "Torch.Undefined.Tensor.Math.Blas"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Floating")
                        (ModuleName
                          "Torch.Undefined.Tensor.Math.Floating"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Lapack")
                        (ModuleName
                          "Torch.Undefined.Tensor.Math.Lapack"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Pointwise.Signed")
                        (ModuleName
                          "Torch.Undefined.Tensor.Math.Pointwise.Signed"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Pointwise.Floating")
                        (ModuleName
                          "Torch.Undefined.Tensor.Math.Pointwise.Floating"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Reduce.Floating")
                        (ModuleName
                          "Torch.Undefined.Tensor.Math.Reduce.Floating"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Random.TH")
                        (ModuleName
                          "Torch.Undefined.Tensor.Math.Random.TH"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Random.TH")
                        (ModuleName
                          "Torch.Undefined.Tensor.Random.TH"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Random.THC")
                        (ModuleName
                          "Torch.Undefined.Tensor.Random.THC")]}}]}},
        condTreeConstraints = [
          Dependency
            (PackageName "base")
            (IntersectVersionRanges
              (UnionVersionRanges
                (ThisVersion (mkVersion [4, 7]))
                (LaterVersion
                  (mkVersion [4, 7])))
              (EarlierVersion
                (mkVersion [5])))
            mainLibSet,
          Dependency
            (PackageName
              "hasktorch-signatures-partial")
            (IntersectVersionRanges
              (UnionVersionRanges
                (ThisVersion
                  (mkVersion [0, 0, 1]))
                (LaterVersion
                  (mkVersion [0, 0, 1])))
              (EarlierVersion
                (mkVersion [0, 0, 2])))
            mainLibSet,
          Dependency
            (PackageName "hasktorch-indef")
            (OrLaterVersion (mkVersion [0]))
            mainLibSet],
        condTreeComponents = []},
    _×_
      (UnqualComponentName
        "hasktorch-indef-signed")
      CondNode {
        condTreeData = Library {
          libName = LSubLibName
            (UnqualComponentName
              "hasktorch-indef-signed"),
          exposedModules = [],
          reexportedModules = [
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName "Torch.Indef.Index",
              moduleReexportName = ModuleName
                "Torch.Indef.Index"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName "Torch.Indef.Mask",
              moduleReexportName = ModuleName
                "Torch.Indef.Mask"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName "Torch.Indef.Types",
              moduleReexportName = ModuleName
                "Torch.Indef.Types"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Storage",
              moduleReexportName = ModuleName
                "Torch.Indef.Storage"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Storage.Copy",
              moduleReexportName = ModuleName
                "Torch.Indef.Storage.Copy"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Print",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Print"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Copy",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Copy"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Index",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Index"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Masked",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Masked"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Compare",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Compare"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.CompareT",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.CompareT"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Pairwise",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Pairwise"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Pointwise",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Pointwise"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Reduce",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Reduce"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Scan",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Scan"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Mode",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Mode"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.ScatterGather",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.ScatterGather"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Sort",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Sort"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.TopK",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.TopK"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Copy",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Copy"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Index",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Index"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Masked",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Masked"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Compare",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Compare"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.CompareT",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.CompareT"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Pairwise",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Pairwise"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Pointwise",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Pointwise"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Reduce",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Reduce"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Scan",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Scan"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Mode",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Mode"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.ScatterGather",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.ScatterGather"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Sort",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Sort"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.TopK",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.TopK"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Pointwise.Signed",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Pointwise.Signed"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Pointwise.Signed",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Pointwise.Signed"}],
          signatures = [],
          libExposed = True,
          libVisibility =
          LibraryVisibilityPrivate,
          libBuildInfo = BuildInfo {
            buildable = True,
            buildTools = [],
            buildToolDepends = [],
            cppOptions = [],
            asmOptions = [],
            cmmOptions = [],
            ccOptions = [],
            cxxOptions = [],
            ldOptions = [],
            hsc2hsOptions = [],
            pkgconfigDepends = [],
            frameworks = [],
            extraFrameworkDirs = [],
            asmSources = [],
            cmmSources = [],
            cSources = [],
            cxxSources = [],
            jsSources = [],
            hsSourceDirs = [],
            otherModules = [],
            virtualModules = [],
            autogenModules = [],
            defaultLanguage = Just
              Haskell2010,
            otherLanguages = [],
            defaultExtensions = [],
            otherExtensions = [],
            oldExtensions = [],
            extraLibs = [],
            extraLibsStatic = [],
            extraGHCiLibs = [],
            extraBundledLibs = [],
            extraLibFlavours = [],
            extraDynLibFlavours = [],
            extraLibDirs = [],
            extraLibDirsStatic = [],
            includeDirs = [],
            includes = [],
            autogenIncludes = [],
            installIncludes = [],
            options = PerCompilerFlavor
              []
              [],
            profOptions = PerCompilerFlavor
              []
              [],
            sharedOptions =
            PerCompilerFlavor [] [],
            staticOptions =
            PerCompilerFlavor [] [],
            customFieldsBI = [],
            targetBuildDepends = [
              Dependency
                (PackageName "base")
                (IntersectVersionRanges
                  (UnionVersionRanges
                    (ThisVersion (mkVersion [4, 7]))
                    (LaterVersion
                      (mkVersion [4, 7])))
                  (EarlierVersion
                    (mkVersion [5])))
                mainLibSet,
              Dependency
                (PackageName
                  "hasktorch-signatures-partial")
                (IntersectVersionRanges
                  (UnionVersionRanges
                    (ThisVersion
                      (mkVersion [0, 0, 1]))
                    (LaterVersion
                      (mkVersion [0, 0, 1])))
                  (EarlierVersion
                    (mkVersion [0, 0, 2])))
                mainLibSet,
              Dependency
                (PackageName "hasktorch-indef")
                (OrLaterVersion (mkVersion [0]))
                mainLibSet],
            mixins = [
              Mixin {
                mixinPackageName = PackageName
                  "hasktorch-indef",
                mixinLibraryName = LMainLibName,
                mixinIncludeRenaming =
                IncludeRenaming {
                  includeProvidesRn =
                  DefaultRenaming,
                  includeRequiresRn =
                  ModuleRenaming
                    [
                      _×_
                        (ModuleName "Torch.Sig.NN")
                        (ModuleName
                          "Torch.Undefined.NN"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Types.NN")
                        (ModuleName
                          "Torch.Undefined.Types.NN"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Blas")
                        (ModuleName
                          "Torch.Undefined.Tensor.Math.Blas"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Floating")
                        (ModuleName
                          "Torch.Undefined.Tensor.Math.Floating"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Lapack")
                        (ModuleName
                          "Torch.Undefined.Tensor.Math.Lapack"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Pointwise.Floating")
                        (ModuleName
                          "Torch.Undefined.Tensor.Math.Pointwise.Floating"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Reduce.Floating")
                        (ModuleName
                          "Torch.Undefined.Tensor.Math.Reduce.Floating"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Math.Random.TH")
                        (ModuleName
                          "Torch.Undefined.Tensor.Math.Random.TH"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Random.TH")
                        (ModuleName
                          "Torch.Undefined.Tensor.Random.TH"),
                      _×_
                        (ModuleName
                          "Torch.Sig.Tensor.Random.THC")
                        (ModuleName
                          "Torch.Undefined.Tensor.Random.THC")]}}]}},
        condTreeConstraints = [
          Dependency
            (PackageName "base")
            (IntersectVersionRanges
              (UnionVersionRanges
                (ThisVersion (mkVersion [4, 7]))
                (LaterVersion
                  (mkVersion [4, 7])))
              (EarlierVersion
                (mkVersion [5])))
            mainLibSet,
          Dependency
            (PackageName
              "hasktorch-signatures-partial")
            (IntersectVersionRanges
              (UnionVersionRanges
                (ThisVersion
                  (mkVersion [0, 0, 1]))
                (LaterVersion
                  (mkVersion [0, 0, 1])))
              (EarlierVersion
                (mkVersion [0, 0, 2])))
            mainLibSet,
          Dependency
            (PackageName "hasktorch-indef")
            (OrLaterVersion (mkVersion [0]))
            mainLibSet],
        condTreeComponents = []},
    _×_
      (UnqualComponentName
        "hasktorch-indef-floating")
      CondNode {
        condTreeData = Library {
          libName = LSubLibName
            (UnqualComponentName
              "hasktorch-indef-floating"),
          exposedModules = [],
          reexportedModules = [
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName "Torch.Indef.Index",
              moduleReexportName = ModuleName
                "Torch.Indef.Index"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName "Torch.Indef.Mask",
              moduleReexportName = ModuleName
                "Torch.Indef.Mask"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName "Torch.Indef.Types",
              moduleReexportName = ModuleName
                "Torch.Indef.Types"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Storage",
              moduleReexportName = ModuleName
                "Torch.Indef.Storage"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Storage.Copy",
              moduleReexportName = ModuleName
                "Torch.Indef.Storage.Copy"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Print",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Print"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Copy",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Copy"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Index",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Index"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Masked",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Masked"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Compare",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Compare"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.CompareT",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.CompareT"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Pairwise",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Pairwise"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Pointwise",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Pointwise"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Reduce",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Reduce"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Scan",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Scan"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Mode",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Mode"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.ScatterGather",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.ScatterGather"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Sort",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Sort"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.TopK",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.TopK"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Copy",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Copy"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Index",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Index"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Masked",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Masked"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Compare",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Compare"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.CompareT",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.CompareT"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Pairwise",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Pairwise"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Pointwise",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Pointwise"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Reduce",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Reduce"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Scan",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Scan"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Mode",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Mode"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.ScatterGather",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.ScatterGather"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Sort",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Sort"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.TopK",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.TopK"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Pointwise.Signed",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Pointwise.Signed"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Pointwise.Signed",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Pointwise.Signed"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Blas",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Blas"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Floating",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Floating"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Lapack",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Lapack"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Pointwise.Floating",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Pointwise.Floating"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Reduce.Floating",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Reduce.Floating"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Random.TH",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Random.TH"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Random.THC",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Random.THC"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Random.TH",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.Tensor.Math.Random.TH"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Blas",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Blas"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Floating",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Floating"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Lapack",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Lapack"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Pointwise.Floating",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Pointwise.Floating"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Reduce.Floating",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Reduce.Floating"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Random.TH",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Random.TH"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Random.THC",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Random.THC"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.Tensor.Math.Random.TH",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.Tensor.Math.Random.TH"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.NN",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.NN"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.NN.Activation",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.NN.Activation"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.NN.Pooling",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.NN.Pooling"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Dynamic.NN.Criterion",
              moduleReexportName = ModuleName
                "Torch.Indef.Dynamic.NN.Criterion"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.NN",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.NN"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.NN.Activation",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.NN.Activation"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.NN.Backprop",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.NN.Backprop"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.NN.Conv1d",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.NN.Conv1d"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.NN.Conv2d",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.NN.Conv2d"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.NN.Criterion",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.NN.Criterion"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.NN.Layers",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.NN.Layers"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.NN.Linear",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.NN.Linear"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.NN.Math",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.NN.Math"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.NN.Padding",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.NN.Padding"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.NN.Pooling",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.NN.Pooling"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Indef.Static.NN.Sampling",
              moduleReexportName = ModuleName
                "Torch.Indef.Static.NN.Sampling"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Undefined.Tensor.Math.Random.TH",
              moduleReexportName = ModuleName
                "Torch.Undefined.Tensor.Math.Random.TH"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Undefined.Tensor.Random.TH",
              moduleReexportName = ModuleName
                "Torch.Undefined.Tensor.Random.TH"},
            ModuleReexport {
              moduleReexportOriginalPackage =
              Nothing,
              moduleReexportOriginalName =
              ModuleName
                "Torch.Undefined.Tensor.Random.THC",
              moduleReexportName = ModuleName
                "Torch.Undefined.Tensor.Random.THC"}],
          signatures = [],
          libExposed = True,
          libVisibility =
          LibraryVisibilityPrivate,
          libBuildInfo = BuildInfo {
            buildable = True,
            buildTools = [],
            buildToolDepends = [],
            cppOptions = [],
            asmOptions = [],
            cmmOptions = [],
            ccOptions = [],
            cxxOptions = [],
            ldOptions = [],
            hsc2hsOptions = [],
            pkgconfigDepends = [],
            frameworks = [],
            extraFrameworkDirs = [],
            asmSources = [],
            cmmSources = [],
            cSources = [],
            cxxSources = [],
            jsSources = [],
            hsSourceDirs = [],
            otherModules = [],
            virtualModules = [],
            autogenModules = [],
            defaultLanguage = Just
              Haskell2010,
            otherLanguages = [],
            defaultExtensions = [],
            otherExtensions = [],
            oldExtensions = [],
            extraLibs = [],
            extraLibsStatic = [],
            extraGHCiLibs = [],
            extraBundledLibs = [],
            extraLibFlavours = [],
            extraDynLibFlavours = [],
            extraLibDirs = [],
            extraLibDirsStatic = [],
            includeDirs = [],
            includes = [],
            autogenIncludes = [],
            installIncludes = [],
            options = PerCompilerFlavor
              []
              [],
            profOptions = PerCompilerFlavor
              []
              [],
            sharedOptions =
            PerCompilerFlavor [] [],
            staticOptions =
            PerCompilerFlavor [] [],
            customFieldsBI = [],
            targetBuildDepends = [
              Dependency
                (PackageName "base")
                (IntersectVersionRanges
                  (UnionVersionRanges
                    (ThisVersion (mkVersion [4, 7]))
                    (LaterVersion
                      (mkVersion [4, 7])))
                  (EarlierVersion
                    (mkVersion [5])))
                mainLibSet,
              Dependency
                (PackageName "hasktorch-indef")
                (OrLaterVersion (mkVersion [0]))
                mainLibSet,
              Dependency
                (PackageName
                  "hasktorch-signatures-partial")
                (IntersectVersionRanges
                  (UnionVersionRanges
                    (ThisVersion
                      (mkVersion [0, 0, 1]))
                    (LaterVersion
                      (mkVersion [0, 0, 1])))
                  (EarlierVersion
                    (mkVersion [0, 0, 2])))
                mainLibSet],
            mixins = []}},
        condTreeConstraints = [
          Dependency
            (PackageName "base")
            (IntersectVersionRanges
              (UnionVersionRanges
                (ThisVersion (mkVersion [4, 7]))
                (LaterVersion
                  (mkVersion [4, 7])))
              (EarlierVersion
                (mkVersion [5])))
            mainLibSet,
          Dependency
            (PackageName "hasktorch-indef")
            (OrLaterVersion (mkVersion [0]))
            mainLibSet,
          Dependency
            (PackageName
              "hasktorch-signatures-partial")
            (IntersectVersionRanges
              (UnionVersionRanges
                (ThisVersion
                  (mkVersion [0, 0, 1]))
                (LaterVersion
                  (mkVersion [0, 0, 1])))
              (EarlierVersion
                (mkVersion [0, 0, 2])))
            mainLibSet],
        condTreeComponents = []}],
  condForeignLibs = [],
  condExecutables = [
    _×_
      (UnqualComponentName
        "isdefinite-cpu")
      CondNode {
        condTreeData = Executable {
          exeName = UnqualComponentName
            "isdefinite-cpu",
          modulePath = "Noop.hs",
          exeScope = ExecutablePublic,
          buildInfo = BuildInfo {
            buildable = True,
            buildTools = [],
            buildToolDepends = [],
            cppOptions = [],
            asmOptions = [],
            cmmOptions = [],
            ccOptions = [],
            cxxOptions = [],
            ldOptions = [],
            hsc2hsOptions = [],
            pkgconfigDepends = [],
            frameworks = [],
            extraFrameworkDirs = [],
            asmSources = [],
            cmmSources = [],
            cSources = [],
            cxxSources = [],
            jsSources = [],
            hsSourceDirs = [
              SymbolicPath "exe"],
            otherModules = [],
            virtualModules = [],
            autogenModules = [],
            defaultLanguage = Just
              Haskell2010,
            otherLanguages = [],
            defaultExtensions = [],
            otherExtensions = [],
            oldExtensions = [],
            extraLibs = [],
            extraLibsStatic = [],
            extraGHCiLibs = [],
            extraBundledLibs = [],
            extraLibFlavours = [],
            extraDynLibFlavours = [],
            extraLibDirs = [],
            extraLibDirsStatic = [],
            includeDirs = [],
            includes = [],
            autogenIncludes = [],
            installIncludes = [],
            options = PerCompilerFlavor
              []
              [],
            profOptions = PerCompilerFlavor
              []
              [],
            sharedOptions =
            PerCompilerFlavor [] [],
            staticOptions =
            PerCompilerFlavor [] [],
            customFieldsBI = [],
            targetBuildDepends = [
              Dependency
                (PackageName "base")
                (IntersectVersionRanges
                  (UnionVersionRanges
                    (ThisVersion (mkVersion [4, 7]))
                    (LaterVersion
                      (mkVersion [4, 7])))
                  (EarlierVersion
                    (mkVersion [5])))
                mainLibSet,
              Dependency
                (PackageName "hasktorch")
                (OrLaterVersion (mkVersion [0]))
                (NonEmptySet.fromNonEmpty
                  (NE.fromList
                    [
                      LSubLibName
                        (UnqualComponentName
                          "hasktorch-cpu")]))],
            mixins = []}},
        condTreeConstraints = [
          Dependency
            (PackageName "base")
            (IntersectVersionRanges
              (UnionVersionRanges
                (ThisVersion (mkVersion [4, 7]))
                (LaterVersion
                  (mkVersion [4, 7])))
              (EarlierVersion
                (mkVersion [5])))
            mainLibSet,
          Dependency
            (PackageName "hasktorch")
            (OrLaterVersion (mkVersion [0]))
            (NonEmptySet.fromNonEmpty
              (NE.fromList
                [
                  LSubLibName
                    (UnqualComponentName
                      "hasktorch-cpu")]))],
        condTreeComponents = []},
    _×_
      (UnqualComponentName
        "isdefinite-gpu")
      CondNode {
        condTreeData = Executable {
          exeName = UnqualComponentName
            "isdefinite-gpu",
          modulePath = "Noop.hs",
          exeScope = ExecutablePublic,
          buildInfo = BuildInfo {
            buildable = True,
            buildTools = [],
            buildToolDepends = [],
            cppOptions = [],
            asmOptions = [],
            cmmOptions = [],
            ccOptions = [],
            cxxOptions = [],
            ldOptions = [],
            hsc2hsOptions = [],
            pkgconfigDepends = [],
            frameworks = [],
            extraFrameworkDirs = [],
            asmSources = [],
            cmmSources = [],
            cSources = [],
            cxxSources = [],
            jsSources = [],
            hsSourceDirs = [
              SymbolicPath "exe"],
            otherModules = [],
            virtualModules = [],
            autogenModules = [],
            defaultLanguage = Just
              Haskell2010,
            otherLanguages = [],
            defaultExtensions = [],
            otherExtensions = [],
            oldExtensions = [],
            extraLibs = [],
            extraLibsStatic = [],
            extraGHCiLibs = [],
            extraBundledLibs = [],
            extraLibFlavours = [],
            extraDynLibFlavours = [],
            extraLibDirs = [],
            extraLibDirsStatic = [],
            includeDirs = [],
            includes = [],
            autogenIncludes = [],
            installIncludes = [],
            options = PerCompilerFlavor
              []
              [],
            profOptions = PerCompilerFlavor
              []
              [],
            sharedOptions =
            PerCompilerFlavor [] [],
            staticOptions =
            PerCompilerFlavor [] [],
            customFieldsBI = [],
            targetBuildDepends = [
              Dependency
                (PackageName "base")
                (IntersectVersionRanges
                  (UnionVersionRanges
                    (ThisVersion (mkVersion [4, 7]))
                    (LaterVersion
                      (mkVersion [4, 7])))
                  (EarlierVersion
                    (mkVersion [5])))
                mainLibSet,
              Dependency
                (PackageName "hasktorch")
                (OrLaterVersion (mkVersion [0]))
                (NonEmptySet.fromNonEmpty
                  (NE.fromList
                    [
                      LSubLibName
                        (UnqualComponentName
                          "hasktorch-gpu")]))],
            mixins = []}},
        condTreeConstraints = [
          Dependency
            (PackageName "base")
            (IntersectVersionRanges
              (UnionVersionRanges
                (ThisVersion (mkVersion [4, 7]))
                (LaterVersion
                  (mkVersion [4, 7])))
              (EarlierVersion
                (mkVersion [5])))
            mainLibSet,
          Dependency
            (PackageName "hasktorch")
            (OrLaterVersion (mkVersion [0]))
            (NonEmptySet.fromNonEmpty
              (NE.fromList
                [
                  LSubLibName
                    (UnqualComponentName
                      "hasktorch-gpu")]))],
        condTreeComponents = []},
    _×_
      (UnqualComponentName
        "isdefinite")
      CondNode {
        condTreeData = Executable {
          exeName = UnqualComponentName
            "isdefinite",
          modulePath = "Noop.hs",
          exeScope = ExecutablePublic,
          buildInfo = BuildInfo {
            buildable = True,
            buildTools = [],
            buildToolDepends = [],
            cppOptions = [],
            asmOptions = [],
            cmmOptions = [],
            ccOptions = [],
            cxxOptions = [],
            ldOptions = [],
            hsc2hsOptions = [],
            pkgconfigDepends = [],
            frameworks = [],
            extraFrameworkDirs = [],
            asmSources = [],
            cmmSources = [],
            cSources = [],
            cxxSources = [],
            jsSources = [],
            hsSourceDirs = [
              SymbolicPath "exe"],
            otherModules = [],
            virtualModules = [],
            autogenModules = [],
            defaultLanguage = Just
              Haskell2010,
            otherLanguages = [],
            defaultExtensions = [],
            otherExtensions = [],
            oldExtensions = [],
            extraLibs = [],
            extraLibsStatic = [],
            extraGHCiLibs = [],
            extraBundledLibs = [],
            extraLibFlavours = [],
            extraDynLibFlavours = [],
            extraLibDirs = [],
            extraLibDirsStatic = [],
            includeDirs = [],
            includes = [],
            autogenIncludes = [],
            installIncludes = [],
            options = PerCompilerFlavor
              []
              [],
            profOptions = PerCompilerFlavor
              []
              [],
            sharedOptions =
            PerCompilerFlavor [] [],
            staticOptions =
            PerCompilerFlavor [] [],
            customFieldsBI = [],
            targetBuildDepends = [
              Dependency
                (PackageName "base")
                (IntersectVersionRanges
                  (UnionVersionRanges
                    (ThisVersion (mkVersion [4, 7]))
                    (LaterVersion
                      (mkVersion [4, 7])))
                  (EarlierVersion
                    (mkVersion [5])))
                mainLibSet,
              Dependency
                (PackageName "hasktorch")
                (OrLaterVersion (mkVersion [0]))
                mainLibSet],
            mixins = []}},
        condTreeConstraints = [
          Dependency
            (PackageName "base")
            (IntersectVersionRanges
              (UnionVersionRanges
                (ThisVersion (mkVersion [4, 7]))
                (LaterVersion
                  (mkVersion [4, 7])))
              (EarlierVersion
                (mkVersion [5])))
            mainLibSet,
          Dependency
            (PackageName "hasktorch")
            (OrLaterVersion (mkVersion [0]))
            mainLibSet],
        condTreeComponents = []},
    _×_
      (UnqualComponentName "memcheck")
      CondNode {
        condTreeData = Executable {
          exeName = UnqualComponentName
            "memcheck",
          modulePath = "Memcheck.hs",
          exeScope = ExecutablePublic,
          buildInfo = BuildInfo {
            buildable = True,
            buildTools = [],
            buildToolDepends = [],
            cppOptions = [],
            asmOptions = [],
            cmmOptions = [],
            ccOptions = [],
            cxxOptions = [],
            ldOptions = [],
            hsc2hsOptions = [],
            pkgconfigDepends = [],
            frameworks = [],
            extraFrameworkDirs = [],
            asmSources = [],
            cmmSources = [],
            cSources = [],
            cxxSources = [],
            jsSources = [],
            hsSourceDirs = [
              SymbolicPath "exe"],
            otherModules = [],
            virtualModules = [],
            autogenModules = [],
            defaultLanguage = Just
              Haskell2010,
            otherLanguages = [],
            defaultExtensions = [],
            otherExtensions = [],
            oldExtensions = [],
            extraLibs = [],
            extraLibsStatic = [],
            extraGHCiLibs = [],
            extraBundledLibs = [],
            extraLibFlavours = [],
            extraDynLibFlavours = [],
            extraLibDirs = [],
            extraLibDirsStatic = [],
            includeDirs = [],
            includes = [],
            autogenIncludes = [],
            installIncludes = [],
            options = PerCompilerFlavor
              []
              [],
            profOptions = PerCompilerFlavor
              []
              [],
            sharedOptions =
            PerCompilerFlavor [] [],
            staticOptions =
            PerCompilerFlavor [] [],
            customFieldsBI = [],
            targetBuildDepends = [
              Dependency
                (PackageName "base")
                (IntersectVersionRanges
                  (UnionVersionRanges
                    (ThisVersion (mkVersion [4, 7]))
                    (LaterVersion
                      (mkVersion [4, 7])))
                  (EarlierVersion
                    (mkVersion [5])))
                mainLibSet,
              Dependency
                (PackageName "hasktorch")
                (OrLaterVersion (mkVersion [0]))
                mainLibSet],
            mixins = []}},
        condTreeConstraints = [
          Dependency
            (PackageName "base")
            (IntersectVersionRanges
              (UnionVersionRanges
                (ThisVersion (mkVersion [4, 7]))
                (LaterVersion
                  (mkVersion [4, 7])))
              (EarlierVersion
                (mkVersion [5])))
            mainLibSet,
          Dependency
            (PackageName "hasktorch")
            (OrLaterVersion (mkVersion [0]))
            mainLibSet],
        condTreeComponents = []}],
  condTestSuites = [
    _×_
      (UnqualComponentName "spec")
      CondNode {
        condTreeData = TestSuite {
          testName = UnqualComponentName
            "",
          testInterface = TestSuiteExeV10
            (mkVersion [1, 0])
            "Spec.hs",
          testBuildInfo = BuildInfo {
            buildable = True,
            buildTools = [],
            buildToolDepends = [],
            cppOptions = [],
            asmOptions = [],
            cmmOptions = [],
            ccOptions = [],
            cxxOptions = [],
            ldOptions = [],
            hsc2hsOptions = [],
            pkgconfigDepends = [],
            frameworks = [],
            extraFrameworkDirs = [],
            asmSources = [],
            cmmSources = [],
            cSources = [],
            cxxSources = [],
            jsSources = [],
            hsSourceDirs = [
              SymbolicPath "tests"],
            otherModules = [
              ModuleName "Orphans",
              ModuleName "MemorySpec",
              ModuleName "RawLapackSVDSpec",
              ModuleName
                "GarbageCollectionSpec",
              ModuleName
                "Torch.Prelude.Extras",
              ModuleName
                "Torch.Core.LogAddSpec",
              ModuleName
                "Torch.Core.RandomSpec",
              ModuleName
                "Torch.Static.NN.AbsSpec",
              ModuleName
                "Torch.Static.NN.LinearSpec"],
            virtualModules = [],
            autogenModules = [],
            defaultLanguage = Just
              Haskell2010,
            otherLanguages = [],
            defaultExtensions = [
              EnableExtension LambdaCase,
              EnableExtension DataKinds,
              EnableExtension TypeFamilies,
              EnableExtension
                TypeSynonymInstances,
              EnableExtension
                ScopedTypeVariables,
              EnableExtension
                FlexibleContexts,
              EnableExtension CPP],
            otherExtensions = [],
            oldExtensions = [],
            extraLibs = [],
            extraLibsStatic = [],
            extraGHCiLibs = [],
            extraBundledLibs = [],
            extraLibFlavours = [],
            extraDynLibFlavours = [],
            extraLibDirs = [],
            extraLibDirsStatic = [],
            includeDirs = [],
            includes = [],
            autogenIncludes = [],
            installIncludes = [],
            options = PerCompilerFlavor
              []
              [],
            profOptions = PerCompilerFlavor
              []
              [],
            sharedOptions =
            PerCompilerFlavor [] [],
            staticOptions =
            PerCompilerFlavor [] [],
            customFieldsBI = [],
            targetBuildDepends = [
              Dependency
                (PackageName "QuickCheck")
                (UnionVersionRanges
                  (ThisVersion
                    (mkVersion [2, 11]))
                  (LaterVersion
                    (mkVersion [2, 11])))
                mainLibSet,
              Dependency
                (PackageName "backprop")
                (UnionVersionRanges
                  (ThisVersion
                    (mkVersion [0, 2, 5]))
                  (LaterVersion
                    (mkVersion [0, 2, 5])))
                mainLibSet,
              Dependency
                (PackageName "base")
                (IntersectVersionRanges
                  (UnionVersionRanges
                    (ThisVersion (mkVersion [4, 7]))
                    (LaterVersion
                      (mkVersion [4, 7])))
                  (EarlierVersion
                    (mkVersion [5])))
                mainLibSet,
              Dependency
                (PackageName "dimensions")
                (UnionVersionRanges
                  (ThisVersion (mkVersion [1, 0]))
                  (LaterVersion
                    (mkVersion [1, 0])))
                mainLibSet,
              Dependency
                (PackageName
                  "ghc-typelits-natnormalise")
                (OrLaterVersion (mkVersion [0]))
                mainLibSet,
              Dependency
                (PackageName "hasktorch")
                (OrLaterVersion (mkVersion [0]))
                mainLibSet,
              Dependency
                (PackageName "hspec")
                (UnionVersionRanges
                  (ThisVersion
                    (mkVersion [2, 4, 4]))
                  (LaterVersion
                    (mkVersion [2, 4, 4])))
                mainLibSet,
              Dependency
                (PackageName "singletons")
                (UnionVersionRanges
                  (ThisVersion (mkVersion [2, 2]))
                  (LaterVersion
                    (mkVersion [2, 2])))
                mainLibSet,
              Dependency
                (PackageName "mtl")
                (UnionVersionRanges
                  (ThisVersion
                    (mkVersion [2, 2, 2]))
                  (LaterVersion
                    (mkVersion [2, 2, 2])))
                mainLibSet,
              Dependency
                (PackageName
                  "microlens-platform")
                (UnionVersionRanges
                  (ThisVersion
                    (mkVersion [0, 3, 10]))
                  (LaterVersion
                    (mkVersion [0, 3, 10])))
                mainLibSet,
              Dependency
                (PackageName "monad-loops")
                (UnionVersionRanges
                  (ThisVersion
                    (mkVersion [0, 4, 3]))
                  (LaterVersion
                    (mkVersion [0, 4, 3])))
                mainLibSet,
              Dependency
                (PackageName "time")
                (UnionVersionRanges
                  (ThisVersion
                    (mkVersion [1, 8, 0]))
                  (LaterVersion
                    (mkVersion [1, 8, 0])))
                mainLibSet,
              Dependency
                (PackageName "transformers")
                (UnionVersionRanges
                  (ThisVersion
                    (mkVersion [0, 5, 5]))
                  (LaterVersion
                    (mkVersion [0, 5, 5])))
                mainLibSet,
              Dependency
                (PackageName "generic-lens")
                (OrLaterVersion (mkVersion [0]))
                mainLibSet],
            mixins = []},
          testCodeGenerators = []},
        condTreeConstraints = [
          Dependency
            (PackageName "QuickCheck")
            (UnionVersionRanges
              (ThisVersion
                (mkVersion [2, 11]))
              (LaterVersion
                (mkVersion [2, 11])))
            mainLibSet,
          Dependency
            (PackageName "backprop")
            (UnionVersionRanges
              (ThisVersion
                (mkVersion [0, 2, 5]))
              (LaterVersion
                (mkVersion [0, 2, 5])))
            mainLibSet,
          Dependency
            (PackageName "base")
            (IntersectVersionRanges
              (UnionVersionRanges
                (ThisVersion (mkVersion [4, 7]))
                (LaterVersion
                  (mkVersion [4, 7])))
              (EarlierVersion
                (mkVersion [5])))
            mainLibSet,
          Dependency
            (PackageName "dimensions")
            (UnionVersionRanges
              (ThisVersion (mkVersion [1, 0]))
              (LaterVersion
                (mkVersion [1, 0])))
            mainLibSet,
          Dependency
            (PackageName
              "ghc-typelits-natnormalise")
            (OrLaterVersion (mkVersion [0]))
            mainLibSet,
          Dependency
            (PackageName "hasktorch")
            (OrLaterVersion (mkVersion [0]))
            mainLibSet,
          Dependency
            (PackageName "hspec")
            (UnionVersionRanges
              (ThisVersion
                (mkVersion [2, 4, 4]))
              (LaterVersion
                (mkVersion [2, 4, 4])))
            mainLibSet,
          Dependency
            (PackageName "singletons")
            (UnionVersionRanges
              (ThisVersion (mkVersion [2, 2]))
              (LaterVersion
                (mkVersion [2, 2])))
            mainLibSet,
          Dependency
            (PackageName "mtl")
            (UnionVersionRanges
              (ThisVersion
                (mkVersion [2, 2, 2]))
              (LaterVersion
                (mkVersion [2, 2, 2])))
            mainLibSet,
          Dependency
            (PackageName
              "microlens-platform")
            (UnionVersionRanges
              (ThisVersion
                (mkVersion [0, 3, 10]))
              (LaterVersion
                (mkVersion [0, 3, 10])))
            mainLibSet,
          Dependency
            (PackageName "monad-loops")
            (UnionVersionRanges
              (ThisVersion
                (mkVersion [0, 4, 3]))
              (LaterVersion
                (mkVersion [0, 4, 3])))
            mainLibSet,
          Dependency
            (PackageName "time")
            (UnionVersionRanges
              (ThisVersion
                (mkVersion [1, 8, 0]))
              (LaterVersion
                (mkVersion [1, 8, 0])))
            mainLibSet,
          Dependency
            (PackageName "transformers")
            (UnionVersionRanges
              (ThisVersion
                (mkVersion [0, 5, 5]))
              (LaterVersion
                (mkVersion [0, 5, 5])))
            mainLibSet,
          Dependency
            (PackageName "generic-lens")
            (OrLaterVersion (mkVersion [0]))
            mainLibSet],
        condTreeComponents = []}],
  condBenchmarks = []}
