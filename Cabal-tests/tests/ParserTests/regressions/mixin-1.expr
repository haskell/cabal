GenericPackageDescription {
  packageDescription =
  PackageDescription {
    specVersion = CabalSpecV2_0,
    package = PackageIdentifier {
      pkgName = PackageName "mixin",
      pkgVersion = mkVersion [0]},
    licenseRaw = Left NONE,
    licenseFiles = [],
    copyright = "",
    maintainer = "",
    author = "",
    stability = "",
    testedWith = [],
    homepage = "",
    pkgUrl = "",
    bugReports = "",
    sourceRepos = [],
    synopsis = "",
    description = "",
    category = "",
    customFieldsPD = [],
    buildTypeRaw = Just Simple,
    setupBuildInfo = Nothing,
    library = Nothing,
    subLibraries = [],
    executables = [],
    foreignLibs = [],
    testSuites = [],
    benchmarks = [],
    dataFiles = [],
    dataDir = SymbolicPath ".",
    extraSrcFiles = [],
    extraTmpFiles = [],
    extraDocFiles = []},
  gpdScannedVersion = Nothing,
  genPackageFlags = [],
  condLibrary = Nothing,
  condSubLibraries = [],
  condForeignLibs = [],
  condExecutables = [
    _×_
      (UnqualComponentName
        "str-example")
      CondNode {
        condTreeData = Executable {
          exeName = UnqualComponentName
            "str-example",
          modulePath = SymbolicPath
            "Main.hs",
          exeScope = ExecutablePublic,
          buildInfo = BuildInfo {
            buildable = True,
            buildTools = [],
            buildToolDepends = [],
            cppOptions = [],
            asmOptions = [],
            cmmOptions = [],
            ccOptions = [],
            cxxOptions = [],
            ldOptions = [],
            hsc2hsOptions = [],
            pkgconfigDepends = [],
            frameworks = [],
            extraFrameworkDirs = [],
            asmSources = [],
            cmmSources = [],
            cSources = [],
            cxxSources = [],
            jsSources = [],
            hsSourceDirs = [
              SymbolicPath "str-example"],
            otherModules = [],
            virtualModules = [],
            autogenModules = [],
            defaultLanguage = Nothing,
            otherLanguages = [],
            defaultExtensions = [],
            otherExtensions = [],
            oldExtensions = [],
            extraLibs = [],
            extraLibsStatic = [],
            extraGHCiLibs = [],
            extraBundledLibs = [],
            extraLibFlavours = [],
            extraDynLibFlavours = [],
            extraLibDirs = [],
            extraLibDirsStatic = [],
            includeDirs = [],
            includes = [],
            autogenIncludes = [],
            installIncludes = [],
            options = PerCompilerFlavor
              []
              [],
            profOptions = PerCompilerFlavor
              []
              [],
            sharedOptions =
            PerCompilerFlavor [] [],
            profSharedOptions =
            PerCompilerFlavor [] [],
            staticOptions =
            PerCompilerFlavor [] [],
            customFieldsBI = [],
            targetBuildDepends = [
              Dependency
                (PackageName "base")
                (OrLaterVersion (mkVersion [0]))
                mainLibSet,
              Dependency
                (PackageName "str-string")
                (OrLaterVersion (mkVersion [0]))
                mainLibSet,
              Dependency
                (PackageName "str-bytestring")
                (OrLaterVersion (mkVersion [0]))
                mainLibSet],
            mixins = [
              Mixin {
                mixinPackageName = PackageName
                  "str-string",
                mixinLibraryName = LMainLibName,
                mixinIncludeRenaming =
                IncludeRenaming {
                  includeProvidesRn =
                  ModuleRenaming
                    [
                      _×_
                        (ModuleName "Str")
                        (ModuleName "Str.String")],
                  includeRequiresRn =
                  DefaultRenaming}},
              Mixin {
                mixinPackageName = PackageName
                  "str-bytestring",
                mixinLibraryName = LMainLibName,
                mixinIncludeRenaming =
                IncludeRenaming {
                  includeProvidesRn =
                  ModuleRenaming
                    [
                      _×_
                        (ModuleName "Str")
                        (ModuleName "Str.ByteString")],
                  includeRequiresRn =
                  DefaultRenaming}}]}},
        condTreeConstraints = [
          Dependency
            (PackageName "base")
            (OrLaterVersion (mkVersion [0]))
            mainLibSet,
          Dependency
            (PackageName "str-string")
            (OrLaterVersion (mkVersion [0]))
            mainLibSet,
          Dependency
            (PackageName "str-bytestring")
            (OrLaterVersion (mkVersion [0]))
            mainLibSet],
        condTreeComponents = []}],
  condTestSuites = [],
  condBenchmarks = []}
