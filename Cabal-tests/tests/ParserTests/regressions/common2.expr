GenericPackageDescription {
  packageDescription =
  PackageDescription {
    specVersion = CabalSpecV2_2,
    package = PackageIdentifier {
      pkgName = PackageName "common",
      pkgVersion = mkVersion [0]},
    licenseRaw = Left NONE,
    licenseFiles = [],
    copyright = "",
    maintainer = "",
    author = "",
    stability = "",
    testedWith = [],
    homepage = "",
    pkgUrl = "",
    bugReports = "",
    sourceRepos = [
      SourceRepo {
        repoKind = RepoHead,
        repoType = Just
          (KnownRepoType Git),
        repoLocation = Just
          "https://github.com/hvr/-.git",
        repoModule = Nothing,
        repoBranch = Nothing,
        repoTag = Nothing,
        repoSubdir = Nothing}],
    synopsis =
    "Common-stanza demo demo",
    description = "",
    category = "",
    customFieldsPD = [],
    buildTypeRaw = Just Simple,
    setupBuildInfo = Nothing,
    library = Nothing,
    subLibraries = [],
    executables = [],
    foreignLibs = [],
    testSuites = [],
    benchmarks = [],
    dataFiles = [],
    dataDir = ".",
    extraSrcFiles = [],
    extraTmpFiles = [],
    extraDocFiles = []},
  gpdScannedVersion = Nothing,
  genPackageFlags = [],
  condLibrary = Just
    CondNode {
      condTreeData = Library {
        libName = LMainLibName,
        exposedModules = [
          ModuleName "ElseIf"],
        reexportedModules = [],
        signatures = [],
        libExposed = True,
        libVisibility =
        LibraryVisibilityPublic,
        libBuildInfo = BuildInfo {
          buildable = True,
          buildTools = [],
          buildToolDepends = [],
          cppOptions = [],
          asmOptions = [],
          cmmOptions = [],
          ccOptions = [],
          cxxOptions = [],
          ldOptions = [],
          hsc2hsOptions = [],
          pkgconfigDepends = [],
          frameworks = [],
          extraFrameworkDirs = [],
          asmSources = [],
          cmmSources = [],
          cSources = [],
          cxxSources = [],
          jsSources = [],
          hsSourceDirs = [],
          otherModules = [],
          virtualModules = [],
          autogenModules = [],
          defaultLanguage = Just
            Haskell2010,
          otherLanguages = [],
          defaultExtensions = [],
          otherExtensions = [],
          oldExtensions = [],
          extraLibs = [],
          extraLibsStatic = [],
          extraGHCiLibs = [],
          extraBundledLibs = [],
          extraLibFlavours = [],
          extraDynLibFlavours = [],
          extraLibDirs = [],
          extraLibDirsStatic = [],
          includeDirs = [],
          includes = [],
          autogenIncludes = [],
          installIncludes = [],
          options = PerCompilerFlavor
            []
            [],
          profOptions = PerCompilerFlavor
            []
            [],
          sharedOptions =
          PerCompilerFlavor [] [],
          staticOptions =
          PerCompilerFlavor [] [],
          customFieldsBI = [],
          targetBuildDepends = [
            Dependency
              (PackageName "base")
              (IntersectVersionRanges
                (OrLaterVersion
                  (mkVersion [4, 10]))
                (EarlierVersion
                  (mkVersion [4, 11])))
              mainLibSet,
            Dependency
              (PackageName "containers")
              (OrLaterVersion (mkVersion [0]))
              mainLibSet,
            Dependency
              (PackageName "ghc-prim")
              (OrLaterVersion (mkVersion [0]))
              mainLibSet],
          mixins = []}},
      condTreeConstraints = [
        Dependency
          (PackageName "base")
          (IntersectVersionRanges
            (OrLaterVersion
              (mkVersion [4, 10]))
            (EarlierVersion
              (mkVersion [4, 11])))
          mainLibSet,
        Dependency
          (PackageName "containers")
          (OrLaterVersion (mkVersion [0]))
          mainLibSet,
        Dependency
          (PackageName "ghc-prim")
          (OrLaterVersion (mkVersion [0]))
          mainLibSet],
      condTreeComponents = [
        CondBranch {
          condBranchCondition =
          `Var (OS Windows)`,
          condBranchIfTrue = CondNode {
            condTreeData = Library {
              libName = LMainLibName,
              exposedModules = [],
              reexportedModules = [],
              signatures = [],
              libExposed = True,
              libVisibility =
              LibraryVisibilityPublic,
              libBuildInfo = BuildInfo {
                buildable = True,
                buildTools = [],
                buildToolDepends = [],
                cppOptions = [],
                asmOptions = [],
                cmmOptions = [],
                ccOptions = [],
                cxxOptions = [],
                ldOptions = [],
                hsc2hsOptions = [],
                pkgconfigDepends = [],
                frameworks = [],
                extraFrameworkDirs = [],
                asmSources = [],
                cmmSources = [],
                cSources = [],
                cxxSources = [],
                jsSources = [],
                hsSourceDirs = [],
                otherModules = [],
                virtualModules = [],
                autogenModules = [],
                defaultLanguage = Nothing,
                otherLanguages = [],
                defaultExtensions = [],
                otherExtensions = [],
                oldExtensions = [],
                extraLibs = [],
                extraLibsStatic = [],
                extraGHCiLibs = [],
                extraBundledLibs = [],
                extraLibFlavours = [],
                extraDynLibFlavours = [],
                extraLibDirs = [],
                extraLibDirsStatic = [],
                includeDirs = [],
                includes = [],
                autogenIncludes = [],
                installIncludes = [],
                options = PerCompilerFlavor
                  []
                  [],
                profOptions = PerCompilerFlavor
                  []
                  [],
                sharedOptions =
                PerCompilerFlavor [] [],
                staticOptions =
                PerCompilerFlavor [] [],
                customFieldsBI = [],
                targetBuildDepends = [
                  Dependency
                    (PackageName "Win32")
                    (OrLaterVersion (mkVersion [0]))
                    mainLibSet],
                mixins = []}},
            condTreeConstraints = [
              Dependency
                (PackageName "Win32")
                (OrLaterVersion (mkVersion [0]))
                mainLibSet],
            condTreeComponents = []},
          condBranchIfFalse = Nothing}]},
  condSubLibraries = [
    _Ã—_
      (UnqualComponentName "internal")
      CondNode {
        condTreeData = Library {
          libName = LSubLibName
            (UnqualComponentName
              "internal"),
          exposedModules = [
            ModuleName "ElseIf2"],
          reexportedModules = [],
          signatures = [],
          libExposed = True,
          libVisibility =
          LibraryVisibilityPrivate,
          libBuildInfo = BuildInfo {
            buildable = True,
            buildTools = [],
            buildToolDepends = [],
            cppOptions = [],
            asmOptions = [],
            cmmOptions = [],
            ccOptions = [],
            cxxOptions = [],
            ldOptions = [],
            hsc2hsOptions = [],
            pkgconfigDepends = [],
            frameworks = [],
            extraFrameworkDirs = [],
            asmSources = [],
            cmmSources = [],
            cSources = [],
            cxxSources = [],
            jsSources = [],
            hsSourceDirs = [],
            otherModules = [],
            virtualModules = [],
            autogenModules = [],
            defaultLanguage = Just
              Haskell2010,
            otherLanguages = [],
            defaultExtensions = [],
            otherExtensions = [],
            oldExtensions = [],
            extraLibs = [],
            extraLibsStatic = [],
            extraGHCiLibs = [],
            extraBundledLibs = [],
            extraLibFlavours = [],
            extraDynLibFlavours = [],
            extraLibDirs = [],
            extraLibDirsStatic = [],
            includeDirs = [],
            includes = [],
            autogenIncludes = [],
            installIncludes = [],
            options = PerCompilerFlavor
              []
              [],
            profOptions = PerCompilerFlavor
              []
              [],
            sharedOptions =
            PerCompilerFlavor [] [],
            staticOptions =
            PerCompilerFlavor [] [],
            customFieldsBI = [],
            targetBuildDepends = [
              Dependency
                (PackageName "base")
                (IntersectVersionRanges
                  (OrLaterVersion
                    (mkVersion [4, 10]))
                  (EarlierVersion
                    (mkVersion [4, 11])))
                mainLibSet,
              Dependency
                (PackageName "containers")
                (OrLaterVersion (mkVersion [0]))
                mainLibSet,
              Dependency
                (PackageName "ghc-prim")
                (OrLaterVersion (mkVersion [0]))
                mainLibSet],
            mixins = []}},
        condTreeConstraints = [
          Dependency
            (PackageName "base")
            (IntersectVersionRanges
              (OrLaterVersion
                (mkVersion [4, 10]))
              (EarlierVersion
                (mkVersion [4, 11])))
            mainLibSet,
          Dependency
            (PackageName "containers")
            (OrLaterVersion (mkVersion [0]))
            mainLibSet,
          Dependency
            (PackageName "ghc-prim")
            (OrLaterVersion (mkVersion [0]))
            mainLibSet],
        condTreeComponents = [
          CondBranch {
            condBranchCondition =
            `Var (OS Windows)`,
            condBranchIfTrue = CondNode {
              condTreeData = Library {
                libName = LSubLibName
                  (UnqualComponentName
                    "internal"),
                exposedModules = [],
                reexportedModules = [],
                signatures = [],
                libExposed = True,
                libVisibility =
                LibraryVisibilityPrivate,
                libBuildInfo = BuildInfo {
                  buildable = True,
                  buildTools = [],
                  buildToolDepends = [],
                  cppOptions = [],
                  asmOptions = [],
                  cmmOptions = [],
                  ccOptions = [],
                  cxxOptions = [],
                  ldOptions = [],
                  hsc2hsOptions = [],
                  pkgconfigDepends = [],
                  frameworks = [],
                  extraFrameworkDirs = [],
                  asmSources = [],
                  cmmSources = [],
                  cSources = [],
                  cxxSources = [],
                  jsSources = [],
                  hsSourceDirs = [],
                  otherModules = [],
                  virtualModules = [],
                  autogenModules = [],
                  defaultLanguage = Nothing,
                  otherLanguages = [],
                  defaultExtensions = [],
                  otherExtensions = [],
                  oldExtensions = [],
                  extraLibs = [],
                  extraLibsStatic = [],
                  extraGHCiLibs = [],
                  extraBundledLibs = [],
                  extraLibFlavours = [],
                  extraDynLibFlavours = [],
                  extraLibDirs = [],
                  extraLibDirsStatic = [],
                  includeDirs = [],
                  includes = [],
                  autogenIncludes = [],
                  installIncludes = [],
                  options = PerCompilerFlavor
                    []
                    [],
                  profOptions = PerCompilerFlavor
                    []
                    [],
                  sharedOptions =
                  PerCompilerFlavor [] [],
                  staticOptions =
                  PerCompilerFlavor [] [],
                  customFieldsBI = [],
                  targetBuildDepends = [
                    Dependency
                      (PackageName "Win32")
                      (OrLaterVersion (mkVersion [0]))
                      mainLibSet],
                  mixins = []}},
              condTreeConstraints = [
                Dependency
                  (PackageName "Win32")
                  (OrLaterVersion (mkVersion [0]))
                  mainLibSet],
              condTreeComponents = []},
            condBranchIfFalse = Nothing}]}],
  condForeignLibs = [],
  condExecutables = [],
  condTestSuites = [
    _Ã—_
      (UnqualComponentName "tests")
      CondNode {
        condTreeData = TestSuite {
          testName = UnqualComponentName
            "",
          testInterface = TestSuiteExeV10
            (mkVersion [1, 0])
            "Tests.hs",
          testBuildInfo = BuildInfo {
            buildable = True,
            buildTools = [],
            buildToolDepends = [],
            cppOptions = [],
            asmOptions = [],
            cmmOptions = [],
            ccOptions = [],
            cxxOptions = [],
            ldOptions = [],
            hsc2hsOptions = [],
            pkgconfigDepends = [],
            frameworks = [],
            extraFrameworkDirs = [],
            asmSources = [],
            cmmSources = [],
            cSources = [],
            cxxSources = [],
            jsSources = [],
            hsSourceDirs = [],
            otherModules = [],
            virtualModules = [],
            autogenModules = [],
            defaultLanguage = Nothing,
            otherLanguages = [],
            defaultExtensions = [],
            otherExtensions = [],
            oldExtensions = [],
            extraLibs = [],
            extraLibsStatic = [],
            extraGHCiLibs = [],
            extraBundledLibs = [],
            extraLibFlavours = [],
            extraDynLibFlavours = [],
            extraLibDirs = [],
            extraLibDirsStatic = [],
            includeDirs = [],
            includes = [],
            autogenIncludes = [],
            installIncludes = [],
            options = PerCompilerFlavor
              []
              [],
            profOptions = PerCompilerFlavor
              []
              [],
            sharedOptions =
            PerCompilerFlavor [] [],
            staticOptions =
            PerCompilerFlavor [] [],
            customFieldsBI = [],
            targetBuildDepends = [
              Dependency
                (PackageName "base")
                (IntersectVersionRanges
                  (OrLaterVersion
                    (mkVersion [4, 10]))
                  (EarlierVersion
                    (mkVersion [4, 11])))
                mainLibSet,
              Dependency
                (PackageName "containers")
                (OrLaterVersion (mkVersion [0]))
                mainLibSet,
              Dependency
                (PackageName "HUnit")
                (OrLaterVersion (mkVersion [0]))
                mainLibSet],
            mixins = []},
          testCodeGenerators = []},
        condTreeConstraints = [
          Dependency
            (PackageName "base")
            (IntersectVersionRanges
              (OrLaterVersion
                (mkVersion [4, 10]))
              (EarlierVersion
                (mkVersion [4, 11])))
            mainLibSet,
          Dependency
            (PackageName "containers")
            (OrLaterVersion (mkVersion [0]))
            mainLibSet,
          Dependency
            (PackageName "HUnit")
            (OrLaterVersion (mkVersion [0]))
            mainLibSet],
        condTreeComponents = [
          CondBranch {
            condBranchCondition =
            `Var (OS Windows)`,
            condBranchIfTrue = CondNode {
              condTreeData = TestSuite {
                testName = UnqualComponentName
                  "",
                testInterface =
                TestSuiteUnsupported
                  (TestTypeUnknown
                    ""
                    (mkVersion [])),
                testBuildInfo = BuildInfo {
                  buildable = True,
                  buildTools = [],
                  buildToolDepends = [],
                  cppOptions = [],
                  asmOptions = [],
                  cmmOptions = [],
                  ccOptions = [],
                  cxxOptions = [],
                  ldOptions = [],
                  hsc2hsOptions = [],
                  pkgconfigDepends = [],
                  frameworks = [],
                  extraFrameworkDirs = [],
                  asmSources = [],
                  cmmSources = [],
                  cSources = [],
                  cxxSources = [],
                  jsSources = [],
                  hsSourceDirs = [],
                  otherModules = [],
                  virtualModules = [],
                  autogenModules = [],
                  defaultLanguage = Nothing,
                  otherLanguages = [],
                  defaultExtensions = [],
                  otherExtensions = [],
                  oldExtensions = [],
                  extraLibs = [],
                  extraLibsStatic = [],
                  extraGHCiLibs = [],
                  extraBundledLibs = [],
                  extraLibFlavours = [],
                  extraDynLibFlavours = [],
                  extraLibDirs = [],
                  extraLibDirsStatic = [],
                  includeDirs = [],
                  includes = [],
                  autogenIncludes = [],
                  installIncludes = [],
                  options = PerCompilerFlavor
                    []
                    [],
                  profOptions = PerCompilerFlavor
                    []
                    [],
                  sharedOptions =
                  PerCompilerFlavor [] [],
                  staticOptions =
                  PerCompilerFlavor [] [],
                  customFieldsBI = [],
                  targetBuildDepends = [
                    Dependency
                      (PackageName "Win32")
                      (OrLaterVersion (mkVersion [0]))
                      mainLibSet],
                  mixins = []},
                testCodeGenerators = []},
              condTreeConstraints = [
                Dependency
                  (PackageName "Win32")
                  (OrLaterVersion (mkVersion [0]))
                  mainLibSet],
              condTreeComponents = []},
            condBranchIfFalse = Nothing},
          CondBranch {
            condBranchCondition =
            `Var (OS Windows)`,
            condBranchIfTrue = CondNode {
              condTreeData = TestSuite {
                testName = UnqualComponentName
                  "",
                testInterface =
                TestSuiteUnsupported
                  (TestTypeUnknown
                    ""
                    (mkVersion [])),
                testBuildInfo = BuildInfo {
                  buildable = True,
                  buildTools = [],
                  buildToolDepends = [],
                  cppOptions = [],
                  asmOptions = [],
                  cmmOptions = [],
                  ccOptions = [],
                  cxxOptions = [],
                  ldOptions = [],
                  hsc2hsOptions = [],
                  pkgconfigDepends = [],
                  frameworks = [],
                  extraFrameworkDirs = [],
                  asmSources = [],
                  cmmSources = [],
                  cSources = [],
                  cxxSources = [],
                  jsSources = [],
                  hsSourceDirs = [],
                  otherModules = [],
                  virtualModules = [],
                  autogenModules = [],
                  defaultLanguage = Nothing,
                  otherLanguages = [],
                  defaultExtensions = [],
                  otherExtensions = [],
                  oldExtensions = [],
                  extraLibs = [],
                  extraLibsStatic = [],
                  extraGHCiLibs = [],
                  extraBundledLibs = [],
                  extraLibFlavours = [],
                  extraDynLibFlavours = [],
                  extraLibDirs = [],
                  extraLibDirsStatic = [],
                  includeDirs = [],
                  includes = [],
                  autogenIncludes = [],
                  installIncludes = [],
                  options = PerCompilerFlavor
                    []
                    [],
                  profOptions = PerCompilerFlavor
                    []
                    [],
                  sharedOptions =
                  PerCompilerFlavor [] [],
                  staticOptions =
                  PerCompilerFlavor [] [],
                  customFieldsBI = [],
                  targetBuildDepends = [
                    Dependency
                      (PackageName "Win32")
                      (OrLaterVersion (mkVersion [0]))
                      mainLibSet],
                  mixins = []},
                testCodeGenerators = []},
              condTreeConstraints = [
                Dependency
                  (PackageName "Win32")
                  (OrLaterVersion (mkVersion [0]))
                  mainLibSet],
              condTreeComponents = []},
            condBranchIfFalse = Nothing},
          CondBranch {
            condBranchCondition =
            `Var (OS Windows)`,
            condBranchIfTrue = CondNode {
              condTreeData = TestSuite {
                testName = UnqualComponentName
                  "",
                testInterface =
                TestSuiteUnsupported
                  (TestTypeUnknown
                    ""
                    (mkVersion [])),
                testBuildInfo = BuildInfo {
                  buildable = False,
                  buildTools = [],
                  buildToolDepends = [],
                  cppOptions = [],
                  asmOptions = [],
                  cmmOptions = [],
                  ccOptions = [],
                  cxxOptions = [],
                  ldOptions = [],
                  hsc2hsOptions = [],
                  pkgconfigDepends = [],
                  frameworks = [],
                  extraFrameworkDirs = [],
                  asmSources = [],
                  cmmSources = [],
                  cSources = [],
                  cxxSources = [],
                  jsSources = [],
                  hsSourceDirs = [],
                  otherModules = [],
                  virtualModules = [],
                  autogenModules = [],
                  defaultLanguage = Nothing,
                  otherLanguages = [],
                  defaultExtensions = [],
                  otherExtensions = [],
                  oldExtensions = [],
                  extraLibs = [],
                  extraLibsStatic = [],
                  extraGHCiLibs = [],
                  extraBundledLibs = [],
                  extraLibFlavours = [],
                  extraDynLibFlavours = [],
                  extraLibDirs = [],
                  extraLibDirsStatic = [],
                  includeDirs = [],
                  includes = [],
                  autogenIncludes = [],
                  installIncludes = [],
                  options = PerCompilerFlavor
                    []
                    [],
                  profOptions = PerCompilerFlavor
                    []
                    [],
                  sharedOptions =
                  PerCompilerFlavor [] [],
                  staticOptions =
                  PerCompilerFlavor [] [],
                  customFieldsBI = [],
                  targetBuildDepends = [],
                  mixins = []},
                testCodeGenerators = []},
              condTreeConstraints = [],
              condTreeComponents = []},
            condBranchIfFalse = Nothing}]}],
  condBenchmarks = []}
