Name:               cabal-install
Version:            2.1.0.0
Synopsis:           The command-line interface for Cabal and Hackage.
Description:
    The \'cabal\' command-line program simplifies the process of managing
    Haskell software by automating the fetching, configuration, compilation
    and installation of Haskell libraries and programs.
    .
    This package only provides an executable and cannot be used as a
    library (ignore the module listing below.)
homepage:           http://www.haskell.org/cabal/
bug-reports:        https://github.com/haskell/cabal/issues
License:            BSD3
License-File:       LICENSE
Author:             Cabal Development Team (see AUTHORS file)
Maintainer:         Cabal Development Team <cabal-devel@haskell.org>
Copyright:          2003-2017, Cabal Development Team
Category:           Distribution
Build-type:         Custom
Cabal-Version:      >= 1.10
Extra-Source-Files:
  README.md bash-completion/cabal bootstrap.sh changelog
  tests/README.md

  -- Generated with '../Cabal/misc/gen-extra-source-files.sh'
  -- Do NOT edit this section manually; instead, run the script.
  -- BEGIN gen-extra-source-files
  tests/IntegrationTests2/build/keep-going/cabal.project
  tests/IntegrationTests2/build/keep-going/p/P.hs
  tests/IntegrationTests2/build/keep-going/p/p.cabal
  tests/IntegrationTests2/build/keep-going/q/Q.hs
  tests/IntegrationTests2/build/keep-going/q/q.cabal
  tests/IntegrationTests2/build/setup-custom1/A.hs
  tests/IntegrationTests2/build/setup-custom1/Setup.hs
  tests/IntegrationTests2/build/setup-custom1/a.cabal
  tests/IntegrationTests2/build/setup-custom2/A.hs
  tests/IntegrationTests2/build/setup-custom2/Setup.hs
  tests/IntegrationTests2/build/setup-custom2/a.cabal
  tests/IntegrationTests2/build/setup-simple/A.hs
  tests/IntegrationTests2/build/setup-simple/Setup.hs
  tests/IntegrationTests2/build/setup-simple/a.cabal
  tests/IntegrationTests2/exception/bad-config/cabal.project
  tests/IntegrationTests2/exception/build/Main.hs
  tests/IntegrationTests2/exception/build/a.cabal
  tests/IntegrationTests2/exception/configure/a.cabal
  tests/IntegrationTests2/exception/no-pkg/empty.in
  tests/IntegrationTests2/exception/no-pkg2/cabal.project
  tests/IntegrationTests2/regression/3324/cabal.project
  tests/IntegrationTests2/regression/3324/p/P.hs
  tests/IntegrationTests2/regression/3324/p/p.cabal
  tests/IntegrationTests2/regression/3324/q/Q.hs
  tests/IntegrationTests2/regression/3324/q/q.cabal
  -- END gen-extra-source-files

source-repository head
  type:     git
  location: https://github.com/haskell/cabal/
  subdir:   cabal-install

Flag old-bytestring
  description:  Use bytestring < 0.10.2 and bytestring-builder
  default: False

Flag old-directory
  description:  Use directory < 1.2 and old-time
  default:      False

Flag network-uri
  description:  Get Network.URI from the network-uri package
  default:      True

Flag debug-expensive-assertions
  description:  Enable expensive assertions for testing or debugging
  default:      False
  manual:       True

Flag debug-conflict-sets
  description:  Add additional information to ConflictSets
  default:      False
  manual:       True

Flag debug-tracetree
  description:  Compile in support for tracetree (used to debug the solver)
  default:      False
  manual:       True

flag parsec
  description:  Use parsec parser. This requires 'Cabal' library built with its parsec flag enabled.
  default:      False
  manual:       True

flag lib
  description:  Build cabal-install as a library. Please only use this if you are a cabal-install developer.
  Default:      False
  manual:       True

library
    ghc-options:    -Wall -fwarn-tabs
    if impl(ghc >= 8.0)
        ghc-options: -Wcompat
                     -Wnoncanonical-monad-instances
                     -Wnoncanonical-monadfail-instances

    exposed-modules:
        Distribution.Client.BuildTarget
        Distribution.Client.BuildReports.Anonymous
        Distribution.Client.BuildReports.Storage
        Distribution.Client.BuildReports.Types
        Distribution.Client.BuildReports.Upload
        Distribution.Client.Check
        Distribution.Client.CmdBuild
        Distribution.Client.CmdConfigure
        Distribution.Client.CmdFreeze
        Distribution.Client.CmdHaddock
        Distribution.Client.CmdTest
        Distribution.Client.CmdRepl
        Distribution.Client.Config
        Distribution.Client.Configure
        Distribution.Client.Dependency
        Distribution.Client.Dependency.Types
        Distribution.Client.DistDirLayout
        Distribution.Client.Exec
        Distribution.Client.Fetch
        Distribution.Client.FetchUtils
        Distribution.Client.FileMonitor
        Distribution.Client.Freeze
        Distribution.Client.GenBounds
        Distribution.Client.Get
        Distribution.Client.Glob
        Distribution.Client.GlobalFlags
        Distribution.Client.GZipUtils
        Distribution.Client.Haddock
        Distribution.Client.HttpUtils
        Distribution.Client.IndexUtils
        Distribution.Client.IndexUtils.Timestamp
        Distribution.Client.Init
        Distribution.Client.Init.Heuristics
        Distribution.Client.Init.Licenses
        Distribution.Client.Init.Types
        Distribution.Client.Install
        Distribution.Client.InstallPlan
        Distribution.Client.InstallSymlink
        Distribution.Client.JobControl
        Distribution.Client.List
        Distribution.Client.Manpage
        Distribution.Client.Nix
        Distribution.Client.Outdated
        Distribution.Client.PackageHash
        Distribution.Client.PackageUtils
        Distribution.Client.ParseUtils
        Distribution.Client.ProjectBuilding
        Distribution.Client.ProjectBuilding.Types
        Distribution.Client.ProjectConfig
        Distribution.Client.ProjectConfig.Types
        Distribution.Client.ProjectConfig.Legacy
        Distribution.Client.ProjectOrchestration
        Distribution.Client.ProjectPlanning
        Distribution.Client.ProjectPlanning.Types
        Distribution.Client.ProjectPlanOutput
        Distribution.Client.RebuildMonad
        Distribution.Client.Reconfigure
        Distribution.Client.Run
        Distribution.Client.Sandbox
        Distribution.Client.Sandbox.Index
        Distribution.Client.Sandbox.PackageEnvironment
        Distribution.Client.Sandbox.Timestamp
        Distribution.Client.Sandbox.Types
        Distribution.Client.SavedFlags
        Distribution.Client.Security.DNS
        Distribution.Client.Security.HTTP
        Distribution.Client.Setup
        Distribution.Client.SetupWrapper
        Distribution.Client.SrcDist
        Distribution.Client.SolverInstallPlan
        Distribution.Client.SolverPlanIndex
        Distribution.Client.SourceFiles
        Distribution.Client.Tar
        Distribution.Client.Targets
        Distribution.Client.Types
        Distribution.Client.Update
        Distribution.Client.Upload
        Distribution.Client.Utils
        Distribution.Client.Utils.Assertion
        Distribution.Client.Utils.Json
        Distribution.Client.World
        Distribution.Client.Win32SelfUpgrade
        Distribution.Client.Compat.ExecutablePath
        Distribution.Client.Compat.FilePerms
        Distribution.Client.Compat.Prelude
        Distribution.Client.Compat.Process
        Distribution.Client.Compat.Semaphore
        Distribution.Solver.Types.ComponentDeps
        Distribution.Solver.Types.ConstraintSource
        Distribution.Solver.Types.DependencyResolver
        Distribution.Solver.Types.Flag
        Distribution.Solver.Types.InstalledPreference
        Distribution.Solver.Types.InstSolverPackage
        Distribution.Solver.Types.LabeledPackageConstraint
        Distribution.Solver.Types.OptionalStanza
        Distribution.Solver.Types.PackageConstraint
        Distribution.Solver.Types.PackageFixedDeps
        Distribution.Solver.Types.PackageIndex
        Distribution.Solver.Types.PackagePath
        Distribution.Solver.Types.PackagePreferences
        Distribution.Solver.Types.PkgConfigDb
        Distribution.Solver.Types.Progress
        Distribution.Solver.Types.ResolverPackage
        Distribution.Solver.Types.Settings
        Distribution.Solver.Types.SolverId
        Distribution.Solver.Types.SolverPackage
        Distribution.Solver.Types.SourcePackage
        Distribution.Solver.Types.Variable
        Distribution.Solver.Modular
        Distribution.Solver.Modular.Assignment
        Distribution.Solver.Modular.Builder
        Distribution.Solver.Modular.Configured
        Distribution.Solver.Modular.ConfiguredConversion
        Distribution.Solver.Modular.ConflictSet
        Distribution.Solver.Modular.Cycles
        Distribution.Solver.Modular.Dependency
        Distribution.Solver.Modular.Explore
        Distribution.Solver.Modular.Flag
        Distribution.Solver.Modular.Index
        Distribution.Solver.Modular.IndexConversion
        Distribution.Solver.Modular.Linking
        Distribution.Solver.Modular.LabeledGraph
        Distribution.Solver.Modular.Log
        Distribution.Solver.Modular.Message
        Distribution.Solver.Modular.Package
        Distribution.Solver.Modular.Preference
        Distribution.Solver.Modular.PSQ
        Distribution.Solver.Modular.RetryLog
        Distribution.Solver.Modular.Solver
        Distribution.Solver.Modular.Tree
        Distribution.Solver.Modular.Validate
        Distribution.Solver.Modular.Var
        Distribution.Solver.Modular.Version
        Distribution.Solver.Modular.WeightedPSQ
        Paths_cabal_install

    -- NOTE: when updating build-depends, don't forget to update version regexps
    -- in bootstrap.sh.
    build-depends:
        async      >= 2.0      && < 3,
        array      >= 0.4      && < 0.6,
        base       >= 4.5      && < 5,
        base16-bytestring >= 0.1.1 && < 0.2,
        binary     >= 0.5      && < 0.9,
        bytestring >= 0.9      && < 1,
        Cabal      >= 2.1      && < 2.2,
        containers >= 0.4      && < 0.6,
        cryptohash-sha256 >= 0.11 && < 0.12,
        deepseq    >= 1.3      && < 1.5,
        echo       >= 0.1.3    && < 0.2,
        edit-distance >= 0.2.2 && < 0.3,
        filepath   >= 1.3      && < 1.5,
        hashable   >= 1.0      && < 2,
        HTTP       >= 4000.1.5 && < 4000.4,
        mtl        >= 2.0      && < 3,
        pretty     >= 1.1      && < 1.2,
        random     >= 1        && < 1.2,
        stm        >= 2.0      && < 3,
        tar        >= 0.5.0.3  && < 0.6,
        time       >= 1.4      && < 1.8,
        zlib       >= 0.5.3    && < 0.7,
        hackage-security >= 0.5.2.2 && < 0.6

    if flag(old-bytestring)
      build-depends: bytestring <  0.10.2, bytestring-builder >= 0.10 && < 1
    else
      build-depends: bytestring >= 0.10.2

    if flag(old-directory)
      build-depends: directory >= 1.1 && < 1.2, old-time >= 1 && < 1.2,
                     process   >= 1.0.1.1  && < 1.1.0.2
    else
      build-depends: directory >= 1.2 && < 1.4,
                     process   >= 1.1.0.2  && < 1.6

    -- NOTE: you MUST include the network dependency even when network-uri
    -- is pulled in, otherwise the constraint solver doesn't have enough
    -- information
    if flag(network-uri)
      build-depends: network-uri >= 2.6 && < 2.7, network >= 2.6 && < 2.7
    else
      build-depends: network     >= 2.4 && < 2.6

    -- Needed for GHC.Generics before GHC 7.6
    if impl(ghc < 7.6)
      build-depends: ghc-prim >= 0.2 && < 0.3

    if os(windows)
      build-depends: Win32 >= 2 && < 3
    else
      build-depends: unix >= 2.5 && < 2.8

    if flag(debug-expensive-assertions)
      cpp-options: -DDEBUG_EXPENSIVE_ASSERTIONS

    if flag(debug-conflict-sets)
      cpp-options: -DDEBUG_CONFLICT_SETS
      build-depends: base >= 4.8

    if flag(debug-tracetree)
      cpp-options: -DDEBUG_TRACETREE
      build-depends: tracetree >= 0.1 && < 0.2

    if flag(parsec)
      cpp-options: -DCABAL_PARSEC

    if !flag(lib)
      buildable: False

    default-language: Haskell2010

executable cabal
    main-is:        Main.hs
    hs-source-dirs: main

    ghc-options:    -Wall -fwarn-tabs -rtsopts
    if impl(ghc >= 8.0)
        ghc-options: -Wcompat
                     -Wnoncanonical-monad-instances
                     -Wnoncanonical-monadfail-instances

    if flag(lib)
        build-depends:
            cabal-install,
            Cabal      >= 2.1      && < 2.2,
            base,
            directory,
            filepath
    else
        hs-source-dirs: .
        build-depends:
            async      >= 2.0      && < 3,
            array      >= 0.4      && < 0.6,
            base       >= 4.5      && < 5,
            base16-bytestring >= 0.1.1 && < 0.2,
            binary     >= 0.5      && < 0.9,
            bytestring >= 0.9      && < 1,
            Cabal      >= 2.1      && < 2.2,
            containers >= 0.4      && < 0.6,
            cryptohash-sha256 >= 0.11 && < 0.12,
            deepseq    >= 1.3      && < 1.5,
            echo       >= 0.1.3    && < 0.2,
            edit-distance >= 0.2.2 && < 0.3,
            filepath   >= 1.3      && < 1.5,
            hashable   >= 1.0      && < 2,
            HTTP       >= 4000.1.5 && < 4000.4,
            mtl        >= 2.0      && < 3,
            pretty     >= 1.1      && < 1.2,
            random     >= 1        && < 1.2,
            stm        >= 2.0      && < 3,
            tar        >= 0.5.0.3  && < 0.6,
            time       >= 1.4      && < 1.8,
            zlib       >= 0.5.3    && < 0.7,
            hackage-security >= 0.5.2.2 && < 0.6

        if flag(old-bytestring)
          build-depends: bytestring <  0.10.2, bytestring-builder >= 0.10 && < 1
        else
          build-depends: bytestring >= 0.10.2

        if flag(old-directory)
          build-depends: directory >= 1.1 && < 1.2, old-time >= 1 && < 1.2,
                         process   >= 1.0.1.1  && < 1.1.0.2
        else
          build-depends: directory >= 1.2 && < 1.4,
                         process   >= 1.1.0.2  && < 1.5

        -- NOTE: you MUST include the network dependency even when network-uri
        -- is pulled in, otherwise the constraint solver doesn't have enough
        -- information
        if flag(network-uri)
          build-depends: network-uri >= 2.6 && < 2.7, network >= 2.6 && < 2.7
        else
          build-depends: network     >= 2.4 && < 2.6

        -- Needed for GHC.Generics before GHC 7.6
        if impl(ghc < 7.6)
          build-depends: ghc-prim >= 0.2 && < 0.3

        if os(windows)
          build-depends: Win32 >= 2 && < 3
        else
          build-depends: unix >= 2.5 && < 2.8

        if flag(debug-expensive-assertions)
          cpp-options: -DDEBUG_EXPENSIVE_ASSERTIONS

        if flag(debug-conflict-sets)
          cpp-options: -DDEBUG_CONFLICT_SETS
          build-depends: base >= 4.8

        if flag(debug-tracetree)
          cpp-options: -DDEBUG_TRACETREE
          build-depends: tracetree >= 0.1 && < 0.2

        if flag(parsec)
          cpp-options: -DCABAL_PARSEC

    if !(arch(arm) && impl(ghc < 7.6))
      ghc-options: -threaded

    if flag(parsec)
      cpp-options: -DCABAL_PARSEC

    default-language: Haskell2010

-- Small, fast running tests.
Test-Suite unit-tests
  type: exitcode-stdio-1.0
  main-is: UnitTests.hs
  hs-source-dirs: tests
  ghc-options: -Wall -fwarn-tabs
  other-modules:
    UnitTests.Distribution.Client.ArbitraryInstances
    UnitTests.Distribution.Client.Targets
    UnitTests.Distribution.Client.FileMonitor
    UnitTests.Distribution.Client.Glob
    UnitTests.Distribution.Client.GZipUtils
    UnitTests.Distribution.Client.Sandbox
    UnitTests.Distribution.Client.Sandbox.Timestamp
    UnitTests.Distribution.Client.Tar
    UnitTests.Distribution.Client.UserConfig
    UnitTests.Distribution.Client.ProjectConfig
    UnitTests.Distribution.Client.JobControl
    UnitTests.Distribution.Client.IndexUtils.Timestamp
    UnitTests.Distribution.Client.InstallPlan
    UnitTests.Distribution.Solver.Modular.PSQ
    UnitTests.Distribution.Solver.Modular.RetryLog
    UnitTests.Distribution.Solver.Modular.Solver
    UnitTests.Distribution.Solver.Modular.DSL
    UnitTests.Distribution.Solver.Modular.DSL.TestCaseUtils
    UnitTests.Distribution.Solver.Modular.WeightedPSQ
    UnitTests.Options
  build-depends:
        array,
        base,
        async,
        bytestring,
        cabal-install,
        Cabal,
        containers,
        deepseq,
        mtl,
        random,
        directory,
        filepath,
        tar,
        time,
        zlib,
        network-uri,
        network,
        tasty,
        tasty-hunit,
        tasty-quickcheck,
        tagged,
        QuickCheck >= 2.8.2

  if !(arch(arm) && impl(ghc < 7.6))
    ghc-options: -threaded

  if !flag(lib)
    buildable: False

  default-language: Haskell2010

-- Tests to run with a limited stack and heap size
Test-Suite memory-usage-tests
  type: exitcode-stdio-1.0
  main-is: MemoryUsageTests.hs
  hs-source-dirs: tests
  ghc-options: -Wall -fwarn-tabs "-with-rtsopts=-M4M -K1K"
  other-modules:
    UnitTests.Distribution.Solver.Modular.DSL
    UnitTests.Distribution.Solver.Modular.DSL.TestCaseUtils
    UnitTests.Distribution.Solver.Modular.MemoryUsage
    UnitTests.Options
  build-depends:
        base,
        async,
        Cabal,
        cabal-install,
        containers,
        deepseq,
        tagged,
        tasty,
        tasty-hunit

  if !(arch(arm) && impl(ghc < 7.6))
    ghc-options: -threaded

  if !flag(lib)
    buildable: False

  default-language: Haskell2010

-- Slow solver tests
Test-Suite solver-quickcheck
  type: exitcode-stdio-1.0
  main-is: SolverQuickCheck.hs
  hs-source-dirs: tests
  ghc-options: -Wall -fwarn-tabs
  other-modules:
    UnitTests.Distribution.Solver.Modular.DSL
    UnitTests.Distribution.Solver.Modular.QuickCheck
  build-depends:
        base,
        async,
        Cabal,
        cabal-install,
        containers,
        deepseq >= 1.2,
        tasty,
        tasty-quickcheck,
        QuickCheck >= 2.8.2,
        pretty-show

  if !(arch(arm) && impl(ghc < 7.6))
    ghc-options: -threaded

  if !flag(lib)
    buildable: False

  default-language: Haskell2010

-- Integration tests that use the cabal-install code directly
-- but still build whole projects
test-suite integration-tests2
  type: exitcode-stdio-1.0
  main-is: IntegrationTests2.hs
  hs-source-dirs: tests
  ghc-options: -Wall -fwarn-tabs
  other-modules:
  build-depends:
        base,
        Cabal,
        cabal-install,
        containers,
        deepseq,
        directory,
        filepath,
        tasty,
        tasty-hunit,
        tagged

  if !flag(lib)
    buildable: False

  if !(arch(arm) && impl(ghc < 7.6))
    ghc-options: -threaded
  default-language: Haskell2010

custom-setup
  setup-depends: Cabal >= 2.1,
                 base,
                 process   >= 1.1.0.1  && < 1.6,
                 filepath   >= 1.3      && < 1.5
